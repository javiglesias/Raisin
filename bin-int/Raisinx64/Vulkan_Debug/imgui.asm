; Listing generated by Microsoft (R) Optimizing Compiler Version 19.33.31630.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?EmptyString@ImGuiTextBuffer@@2PADA		; ImGuiTextBuffer::EmptyString
PUBLIC	?GImGui@@3PEAUImGuiContext@@EA			; GImGui
_BSS	SEGMENT
?EmptyString@ImGuiTextBuffer@@2PADA DB 01H DUP (?)	; ImGuiTextBuffer::EmptyString
	ALIGN	8

?GImGui@@3PEAUImGuiContext@@EA DQ 01H DUP (?)		; GImGui
_BSS	ENDS
msvcjmc	SEGMENT
__A52B8F80_imconfig@h DB 01H
__529D0EAA_concurrencysal@h DB 01H
__7EC34687_sal@h DB 01H
__35A2D2DF_vadefs@h DB 01H
__5F022EB5_vcruntime@h DB 01H
__1B0272D9_corecrt@h DB 01H
__B9985323_float@h DB 01H
__79700276_stdarg@h DB 01H
__13F5961F_stddef@h DB 01H
__61CC25A1_errno@h DB 01H
__74AC4223_vcruntime_string@h DB 01H
__E4C945B4_corecrt_memcpy_s@h DB 01H
__8EAFF484_corecrt_memory@h DB 01H
__6490AEC5_corecrt_wstring@h DB 01H
__E8295E1E_string@h DB 01H
__19139D6C_assert@h DB 01H
__21D911DF_imgui@h DB 01H
__44420885_corecrt_stdio_config@h DB 01H
__AB601D8D_corecrt_wstdio@h DB 01H
__C1EC35D3_stdio@h DB 01H
__45DED006_corecrt_malloc@h DB 01H
__FD6DBD68_corecrt_search@h DB 01H
__E2E33A61_corecrt_wstdlib@h DB 01H
__F3D99286_limits@h DB 01H
__6E5ACABA_stdlib@h DB 01H
__BB16330F_corecrt_math@h DB 01H
__3BF2A406_math@h DB 01H
__F75BE1FA_mmintrin@h DB 01H
__FA77ED4C_malloc@h DB 01H
__DFD742E1_xmmintrin@h DB 01H
__BAB5CB2D_emmintrin@h DB 01H
__6514A3A4_pmmintrin@h DB 01H
__D5CDD026_tmmintrin@h DB 01H
__FCF6C5A5_smmintrin@h DB 01H
__99944C69_nmmintrin@h DB 01H
__4C2FB627_wmmintrin@h DB 01H
__87BBFB20_zmmintrin@h DB 01H
__B0AF59EA_immintrin@h DB 01H
__40756020_imstb_textedit@h DB 01H
__D68E48C9_imgui_internal@h DB 01H
__74484FB3_corecrt_wctype@h DB 01H
__1EC467ED_ctype@h DB 01H
__4DAFBCB9_stdint@h DB 01H
__0ED14FEE_winpackagefamily@h DB 01H
__F92EF742_winapifamily@h DB 01H
__22E515EB_sdkddkver@h DB 01H
__3F7A3B5F_excpt@h DB 01H
__29F49F40_specstrings_undef@h DB 01H
__D0F42932_specstrings_strict@h DB 01H
__F00405FD_sdv_driverspecs@h DB 01H
__173E09CA_driverspecs@h DB 01H
__9A452361_specstrings@h DB 01H
__98517906_kernelspecs@h DB 01H
__D3497022_basetsd@h DB 01H
__7FCB5136_guiddef@h DB 01H
__FF8A9E11_pshpack4@h DB 01H
__D5438902_poppack@h DB 01H
__FB07E2A3_pshpack2@h DB 01H
__F6906775_pshpack8@h DB 01H
__F9415CFA_pshpack1@h DB 01H
__E58C6F1C_apiset@h DB 01H
__A5C52262_ktmtypes@h DB 01H
__FBBA8F9D_winnt@h DB 01H
__A32D3D2C_minwindef@h DB 01H
__7D798299_windef@h DB 01H
__9AE108E9_apisetcconv@h DB 01H
__9CE53D2C_minwinbase@h DB 01H
__5D0AA210_apiquery2@h DB 01H
__4DD4E726_processenv@h DB 01H
__3575CC96_fileapi@h DB 01H
__8EA220E6_fileapifromapp@h DB 01H
__BF9B31FE_debugapi@h DB 01H
__C3AFE134_utilapiset@h DB 01H
__76F69E51_handleapi@h DB 01H
__7E63D784_errhandlingapi@h DB 01H
__FFA7003C_fibersapi@h DB 01H
__8971CECF_namedpipeapi@h DB 01H
__46C9D8A6_profileapi@h DB 01H
__98D4F0A3_heapapi@h DB 01H
__50EF2A88_ioapiset@h DB 01H
__92EA1464_synchapi@h DB 01H
__A53D8AED_interlockedapi@h DB 01H
__B506CAAF_processthreadsapi@h DB 01H
__FF735694_sysinfoapi@h DB 01H
__29589789_memoryapi@h DB 01H
__E9C7A663_enclaveapi@h DB 01H
__D035F9F7_threadpoollegacyapiset@h DB 01H
__C899130C_threadpoolapiset@h DB 01H
__E0441EE7_jobapi@h DB 01H
__CEF86838_jobapi2@h DB 01H
__35AC6B9A_wow64apiset@h DB 01H
__C8AE41A5_libloaderapi@h DB 01H
__CC9E232D_securitybaseapi@h DB 01H
__C9D0C9B8_namespaceapi@h DB 01H
__30FF9CAD_systemtopologyapi@h DB 01H
__4D358795_processtopologyapi@h DB 01H
__40446D10_securityappcontainer@h DB 01H
__3A952EDF_realtimeapiset@h DB 01H
__F4865F4B_winerror@h DB 01H
__53C1BD93_timezoneapi@h DB 01H
__1FFBEDBF_winbase@h DB 01H
__43D3FA34_wingdi@h DB 01H
__D24A7391_tvout@h DB 01H
__7713A6C8_winuser@h DB 01H
__0B345F71_datetimeapi@h DB 01H
__9AC6960C_winnls@h DB 01H
__973A40A8_stringapiset@h DB 01H
__CC46FEE2_wincontypes@h DB 01H
__97D70BE1_consoleapi@h DB 01H
__27EC5E18_consoleapi2@h DB 01H
__262E342F_consoleapi3@h DB 01H
__641DCD70_wincon@h DB 01H
__5A96C7A7_verrsrc@h DB 01H
__B69C6FF2_winver@h DB 01H
__7AEB8C37_reason@h DB 01H
__59F1A8A9_winreg@h DB 01H
__EE0E2B7F_wnnc@h DB 01H
__DCDB7054_winnetwk@h DB 01H
__81DDEDE3_stralign@h DB 01H
__2134D1B4_winsvc@h DB 01H
__11C07376_mcx@h DB 01H
__577CE3E7_ime_cmodes@h DB 01H
__1E72C31E_imm@h DB 01H
__63AA7AF5_Windows@h DB 01H
__1F7F3FD0_imgui@cpp DB 01H
msvcjmc	ENDS
CONST	SEGMENT
?GCrc32LookupTable@@3QBIB DD 00H			; GCrc32LookupTable
	DD	077073096H
	DD	0ee0e612cH
	DD	0990951baH
	DD	076dc419H
	DD	0706af48fH
	DD	0e963a535H
	DD	09e6495a3H
	DD	0edb8832H
	DD	079dcb8a4H
	DD	0e0d5e91eH
	DD	097d2d988H
	DD	09b64c2bH
	DD	07eb17cbdH
	DD	0e7b82d07H
	DD	090bf1d91H
	DD	01db71064H
	DD	06ab020f2H
	DD	0f3b97148H
	DD	084be41deH
	DD	01adad47dH
	DD	06ddde4ebH
	DD	0f4d4b551H
	DD	083d385c7H
	DD	0136c9856H
	DD	0646ba8c0H
	DD	0fd62f97aH
	DD	08a65c9ecH
	DD	014015c4fH
	DD	063066cd9H
	DD	0fa0f3d63H
	DD	08d080df5H
	DD	03b6e20c8H
	DD	04c69105eH
	DD	0d56041e4H
	DD	0a2677172H
	DD	03c03e4d1H
	DD	04b04d447H
	DD	0d20d85fdH
	DD	0a50ab56bH
	DD	035b5a8faH
	DD	042b2986cH
	DD	0dbbbc9d6H
	DD	0acbcf940H
	DD	032d86ce3H
	DD	045df5c75H
	DD	0dcd60dcfH
	DD	0abd13d59H
	DD	026d930acH
	DD	051de003aH
	DD	0c8d75180H
	DD	0bfd06116H
	DD	021b4f4b5H
	DD	056b3c423H
	DD	0cfba9599H
	DD	0b8bda50fH
	DD	02802b89eH
	DD	05f058808H
	DD	0c60cd9b2H
	DD	0b10be924H
	DD	02f6f7c87H
	DD	058684c11H
	DD	0c1611dabH
	DD	0b6662d3dH
	DD	076dc4190H
	DD	01db7106H
	DD	098d220bcH
	DD	0efd5102aH
	DD	071b18589H
	DD	06b6b51fH
	DD	09fbfe4a5H
	DD	0e8b8d433H
	DD	07807c9a2H
	DD	0f00f934H
	DD	09609a88eH
	DD	0e10e9818H
	DD	07f6a0dbbH
	DD	086d3d2dH
	DD	091646c97H
	DD	0e6635c01H
	DD	06b6b51f4H
	DD	01c6c6162H
	DD	0856530d8H
	DD	0f262004eH
	DD	06c0695edH
	DD	01b01a57bH
	DD	08208f4c1H
	DD	0f50fc457H
	DD	065b0d9c6H
	DD	012b7e950H
	DD	08bbeb8eaH
	DD	0fcb9887cH
	DD	062dd1ddfH
	DD	015da2d49H
	DD	08cd37cf3H
	DD	0fbd44c65H
	DD	04db26158H
	DD	03ab551ceH
	DD	0a3bc0074H
	DD	0d4bb30e2H
	DD	04adfa541H
	DD	03dd895d7H
	DD	0a4d1c46dH
	DD	0d3d6f4fbH
	DD	04369e96aH
	DD	0346ed9fcH
	DD	0ad678846H
	DD	0da60b8d0H
	DD	044042d73H
	DD	033031de5H
	DD	0aa0a4c5fH
	DD	0dd0d7cc9H
	DD	05005713cH
	DD	0270241aaH
	DD	0be0b1010H
	DD	0c90c2086H
	DD	05768b525H
	DD	0206f85b3H
	DD	0b966d409H
	DD	0ce61e49fH
	DD	05edef90eH
	DD	029d9c998H
	DD	0b0d09822H
	DD	0c7d7a8b4H
	DD	059b33d17H
	DD	02eb40d81H
	DD	0b7bd5c3bH
	DD	0c0ba6cadH
	DD	0edb88320H
	DD	09abfb3b6H
	DD	03b6e20cH
	DD	074b1d29aH
	DD	0ead54739H
	DD	09dd277afH
	DD	04db2615H
	DD	073dc1683H
	DD	0e3630b12H
	DD	094643b84H
	DD	0d6d6a3eH
	DD	07a6a5aa8H
	DD	0e40ecf0bH
	DD	09309ff9dH
	DD	0a00ae27H
	DD	07d079eb1H
	DD	0f00f9344H
	DD	08708a3d2H
	DD	01e01f268H
	DD	06906c2feH
	DD	0f762575dH
	DD	0806567cbH
	DD	0196c3671H
	DD	06e6b06e7H
	DD	0fed41b76H
	DD	089d32be0H
	DD	010da7a5aH
	DD	067dd4accH
	DD	0f9b9df6fH
	DD	08ebeeff9H
	DD	017b7be43H
	DD	060b08ed5H
	DD	0d6d6a3e8H
	DD	0a1d1937eH
	DD	038d8c2c4H
	DD	04fdff252H
	DD	0d1bb67f1H
	DD	0a6bc5767H
	DD	03fb506ddH
	DD	048b2364bH
	DD	0d80d2bdaH
	DD	0af0a1b4cH
	DD	036034af6H
	DD	041047a60H
	DD	0df60efc3H
	DD	0a867df55H
	DD	0316e8eefH
	DD	04669be79H
	DD	0cb61b38cH
	DD	0bc66831aH
	DD	0256fd2a0H
	DD	05268e236H
	DD	0cc0c7795H
	DD	0bb0b4703H
	DD	0220216b9H
	DD	05505262fH
	DD	0c5ba3bbeH
	DD	0b2bd0b28H
	DD	02bb45a92H
	DD	05cb36a04H
	DD	0c2d7ffa7H
	DD	0b5d0cf31H
	DD	02cd99e8bH
	DD	05bdeae1dH
	DD	09b64c2b0H
	DD	0ec63f226H
	DD	0756aa39cH
	DD	026d930aH
	DD	09c0906a9H
	DD	0eb0e363fH
	DD	072076785H
	DD	05005713H
	DD	095bf4a82H
	DD	0e2b87a14H
	DD	07bb12baeH
	DD	0cb61b38H
	DD	092d28e9bH
	DD	0e5d5be0dH
	DD	07cdcefb7H
	DD	0bdbdf21H
	DD	086d3d2d4H
	DD	0f1d4e242H
	DD	068ddb3f8H
	DD	01fda836eH
	DD	081be16cdH
	DD	0f6b9265bH
	DD	06fb077e1H
	DD	018b74777H
	DD	088085ae6H
	DD	0ff0f6a70H
	DD	066063bcaH
	DD	011010b5cH
	DD	08f659effH
	DD	0f862ae69H
	DD	0616bffd3H
	DD	0166ccf45H
	DD	0a00ae278H
	DD	0d70dd2eeH
	DD	04e048354H
	DD	03903b3c2H
	DD	0a7672661H
	DD	0d06016f7H
	DD	04969474dH
	DD	03e6e77dbH
	DD	0aed16a4aH
	DD	0d9d65adcH
	DD	040df0b66H
	DD	037d83bf0H
	DD	0a9bcae53H
	DD	0debb9ec5H
	DD	047b2cf7fH
	DD	030b5ffe9H
	DD	0bdbdf21cH
	DD	0cabac28aH
	DD	053b39330H
	DD	024b4a3a6H
	DD	0bad03605H
	DD	0cdd70693H
	DD	054de5729H
	DD	023d967bfH
	DD	0b3667a2eH
	DD	0c4614ab8H
	DD	05d681b02H
	DD	02a6f2b94H
	DD	0b40bbe37H
	DD	0c30c8ea1H
	DD	05a05df1bH
	DD	02d02ef8dH
?lengths@?1??ImTextCharFromUtf8@@YAHPEAIPEBD1@Z@4QBDB DB 01H ; `ImTextCharFromUtf8'::`2'::lengths
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	00H
?masks@?1??ImTextCharFromUtf8@@YAHPEAIPEBD1@Z@4QBHB DD 00H ; `ImTextCharFromUtf8'::`2'::masks
	DD	07fH
	DD	01fH
	DD	0fH
	DD	07H
	ORG $+4
?mins@?1??ImTextCharFromUtf8@@YAHPEAIPEBD1@Z@4QBIB DD 0400000H ; `ImTextCharFromUtf8'::`2'::mins
	DD	00H
	DD	080H
	DD	0800H
	DD	010000H
	ORG $+4
?shiftc@?1??ImTextCharFromUtf8@@YAHPEAIPEBD1@Z@4QBHB DD 00H ; `ImTextCharFromUtf8'::`2'::shiftc
	DD	012H
	DD	0cH
	DD	06H
	DD	00H
	ORG $+4
?shifte@?1??ImTextCharFromUtf8@@YAHPEAIPEBD1@Z@4QBHB DD 00H ; `ImTextCharFromUtf8'::`2'::shifte
	DD	06H
	DD	04H
	DD	02H
	DD	00H
	ORG $+4
?GStyleVarInfo@@3QBUImGuiStyleVarInfo@@B DD 08H		; GStyleVarInfo
	DD	01H
	DD	00H
	DD	08H
	DD	02H
	DD	04H
	DD	08H
	DD	01H
	DD	0cH
	DD	08H
	DD	01H
	DD	010H
	DD	08H
	DD	02H
	DD	014H
	DD	08H
	DD	02H
	DD	01cH
	DD	08H
	DD	01H
	DD	028H
	DD	08H
	DD	01H
	DD	02cH
	DD	08H
	DD	01H
	DD	030H
	DD	08H
	DD	01H
	DD	034H
	DD	08H
	DD	02H
	DD	038H
	DD	08H
	DD	01H
	DD	040H
	DD	08H
	DD	01H
	DD	044H
	DD	08H
	DD	02H
	DD	048H
	DD	08H
	DD	02H
	DD	050H
	DD	08H
	DD	01H
	DD	068H
	DD	08H
	DD	02H
	DD	058H
	DD	08H
	DD	01H
	DD	070H
	DD	08H
	DD	01H
	DD	074H
	DD	08H
	DD	01H
	DD	078H
	DD	08H
	DD	01H
	DD	07cH
	DD	08H
	DD	01H
	DD	084H
	DD	08H
	DD	02H
	DD	094H
	DD	08H
	DD	02H
	DD	09cH
CONST	ENDS
PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0ImVec2@@QEAA@XZ				; ImVec2::ImVec2
PUBLIC	??0ImVec2@@QEAA@MM@Z				; ImVec2::ImVec2
PUBLIC	??AImVec2@@QEAAAEAM_K@Z				; ImVec2::operator[]
PUBLIC	??0ImVec4@@QEAA@XZ				; ImVec4::ImVec4
PUBLIC	??0ImVec4@@QEAA@MMMM@Z				; ImVec4::ImVec4
PUBLIC	?CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z ; ImGui::CreateContext
PUBLIC	?DestroyContext@ImGui@@YAXPEAUImGuiContext@@@Z	; ImGui::DestroyContext
PUBLIC	?GetCurrentContext@ImGui@@YAPEAUImGuiContext@@XZ ; ImGui::GetCurrentContext
PUBLIC	?SetCurrentContext@ImGui@@YAXPEAUImGuiContext@@@Z ; ImGui::SetCurrentContext
PUBLIC	?GetIO@ImGui@@YAAEAUImGuiIO@@XZ			; ImGui::GetIO
PUBLIC	?GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ		; ImGui::GetStyle
PUBLIC	?NewFrame@ImGui@@YAXXZ				; ImGui::NewFrame
PUBLIC	?EndFrame@ImGui@@YAXXZ				; ImGui::EndFrame
PUBLIC	?Render@ImGui@@YAXXZ				; ImGui::Render
PUBLIC	?GetDrawData@ImGui@@YAPEAUImDrawData@@XZ	; ImGui::GetDrawData
PUBLIC	?ShowMetricsWindow@ImGui@@YAXPEA_N@Z		; ImGui::ShowMetricsWindow
PUBLIC	?GetVersion@ImGui@@YAPEBDXZ			; ImGui::GetVersion
PUBLIC	?Begin@ImGui@@YA_NPEBDPEA_NH@Z			; ImGui::Begin
PUBLIC	?End@ImGui@@YAXXZ				; ImGui::End
PUBLIC	?BeginChild@ImGui@@YA_NPEBDAEBUImVec2@@_NH@Z	; ImGui::BeginChild
PUBLIC	?BeginChild@ImGui@@YA_NIAEBUImVec2@@_NH@Z	; ImGui::BeginChild
PUBLIC	?EndChild@ImGui@@YAXXZ				; ImGui::EndChild
PUBLIC	?IsWindowAppearing@ImGui@@YA_NXZ		; ImGui::IsWindowAppearing
PUBLIC	?IsWindowCollapsed@ImGui@@YA_NXZ		; ImGui::IsWindowCollapsed
PUBLIC	?IsWindowFocused@ImGui@@YA_NH@Z			; ImGui::IsWindowFocused
PUBLIC	?IsWindowHovered@ImGui@@YA_NH@Z			; ImGui::IsWindowHovered
PUBLIC	?GetWindowDrawList@ImGui@@YAPEAUImDrawList@@XZ	; ImGui::GetWindowDrawList
PUBLIC	?GetWindowPos@ImGui@@YA?AUImVec2@@XZ		; ImGui::GetWindowPos
PUBLIC	?GetWindowSize@ImGui@@YA?AUImVec2@@XZ		; ImGui::GetWindowSize
PUBLIC	?GetWindowWidth@ImGui@@YAMXZ			; ImGui::GetWindowWidth
PUBLIC	?GetWindowHeight@ImGui@@YAMXZ			; ImGui::GetWindowHeight
PUBLIC	?SetNextWindowPos@ImGui@@YAXAEBUImVec2@@H0@Z	; ImGui::SetNextWindowPos
PUBLIC	?SetNextWindowSize@ImGui@@YAXAEBUImVec2@@H@Z	; ImGui::SetNextWindowSize
PUBLIC	?SetNextWindowSizeConstraints@ImGui@@YAXAEBUImVec2@@0P6AXPEAUImGuiSizeCallbackData@@@ZPEAX@Z ; ImGui::SetNextWindowSizeConstraints
PUBLIC	?SetNextWindowContentSize@ImGui@@YAXAEBUImVec2@@@Z ; ImGui::SetNextWindowContentSize
PUBLIC	?SetNextWindowCollapsed@ImGui@@YAX_NH@Z		; ImGui::SetNextWindowCollapsed
PUBLIC	?SetNextWindowFocus@ImGui@@YAXXZ		; ImGui::SetNextWindowFocus
PUBLIC	?SetNextWindowBgAlpha@ImGui@@YAXM@Z		; ImGui::SetNextWindowBgAlpha
PUBLIC	?SetWindowPos@ImGui@@YAXAEBUImVec2@@H@Z		; ImGui::SetWindowPos
PUBLIC	?SetWindowSize@ImGui@@YAXAEBUImVec2@@H@Z	; ImGui::SetWindowSize
PUBLIC	?SetWindowCollapsed@ImGui@@YAX_NH@Z		; ImGui::SetWindowCollapsed
PUBLIC	?SetWindowFocus@ImGui@@YAXXZ			; ImGui::SetWindowFocus
PUBLIC	?SetWindowFontScale@ImGui@@YAXM@Z		; ImGui::SetWindowFontScale
PUBLIC	?SetWindowPos@ImGui@@YAXPEBDAEBUImVec2@@H@Z	; ImGui::SetWindowPos
PUBLIC	?SetWindowSize@ImGui@@YAXPEBDAEBUImVec2@@H@Z	; ImGui::SetWindowSize
PUBLIC	?SetWindowCollapsed@ImGui@@YAXPEBD_NH@Z		; ImGui::SetWindowCollapsed
PUBLIC	?SetWindowFocus@ImGui@@YAXPEBD@Z		; ImGui::SetWindowFocus
PUBLIC	?GetContentRegionAvail@ImGui@@YA?AUImVec2@@XZ	; ImGui::GetContentRegionAvail
PUBLIC	?GetContentRegionMax@ImGui@@YA?AUImVec2@@XZ	; ImGui::GetContentRegionMax
PUBLIC	?GetWindowContentRegionMin@ImGui@@YA?AUImVec2@@XZ ; ImGui::GetWindowContentRegionMin
PUBLIC	?GetWindowContentRegionMax@ImGui@@YA?AUImVec2@@XZ ; ImGui::GetWindowContentRegionMax
PUBLIC	?GetWindowContentRegionWidth@ImGui@@YAMXZ	; ImGui::GetWindowContentRegionWidth
PUBLIC	?GetScrollX@ImGui@@YAMXZ			; ImGui::GetScrollX
PUBLIC	?GetScrollY@ImGui@@YAMXZ			; ImGui::GetScrollY
PUBLIC	?SetScrollX@ImGui@@YAXM@Z			; ImGui::SetScrollX
PUBLIC	?SetScrollY@ImGui@@YAXM@Z			; ImGui::SetScrollY
PUBLIC	?GetScrollMaxX@ImGui@@YAMXZ			; ImGui::GetScrollMaxX
PUBLIC	?GetScrollMaxY@ImGui@@YAMXZ			; ImGui::GetScrollMaxY
PUBLIC	?SetScrollHereX@ImGui@@YAXM@Z			; ImGui::SetScrollHereX
PUBLIC	?SetScrollHereY@ImGui@@YAXM@Z			; ImGui::SetScrollHereY
PUBLIC	?SetScrollFromPosX@ImGui@@YAXMM@Z		; ImGui::SetScrollFromPosX
PUBLIC	?SetScrollFromPosY@ImGui@@YAXMM@Z		; ImGui::SetScrollFromPosY
PUBLIC	?PushFont@ImGui@@YAXPEAUImFont@@@Z		; ImGui::PushFont
PUBLIC	?PopFont@ImGui@@YAXXZ				; ImGui::PopFont
PUBLIC	?PushStyleColor@ImGui@@YAXHI@Z			; ImGui::PushStyleColor
PUBLIC	?PushStyleColor@ImGui@@YAXHAEBUImVec4@@@Z	; ImGui::PushStyleColor
PUBLIC	?PopStyleColor@ImGui@@YAXH@Z			; ImGui::PopStyleColor
PUBLIC	?PushStyleVar@ImGui@@YAXHM@Z			; ImGui::PushStyleVar
PUBLIC	?PushStyleVar@ImGui@@YAXHAEBUImVec2@@@Z		; ImGui::PushStyleVar
PUBLIC	?PopStyleVar@ImGui@@YAXH@Z			; ImGui::PopStyleVar
PUBLIC	?PushAllowKeyboardFocus@ImGui@@YAX_N@Z		; ImGui::PushAllowKeyboardFocus
PUBLIC	?PopAllowKeyboardFocus@ImGui@@YAXXZ		; ImGui::PopAllowKeyboardFocus
PUBLIC	?PushButtonRepeat@ImGui@@YAX_N@Z		; ImGui::PushButtonRepeat
PUBLIC	?PopButtonRepeat@ImGui@@YAXXZ			; ImGui::PopButtonRepeat
PUBLIC	?PushItemWidth@ImGui@@YAXM@Z			; ImGui::PushItemWidth
PUBLIC	?PopItemWidth@ImGui@@YAXXZ			; ImGui::PopItemWidth
PUBLIC	?SetNextItemWidth@ImGui@@YAXM@Z			; ImGui::SetNextItemWidth
PUBLIC	?CalcItemWidth@ImGui@@YAMXZ			; ImGui::CalcItemWidth
PUBLIC	?PushTextWrapPos@ImGui@@YAXM@Z			; ImGui::PushTextWrapPos
PUBLIC	?PopTextWrapPos@ImGui@@YAXXZ			; ImGui::PopTextWrapPos
PUBLIC	?GetFont@ImGui@@YAPEAUImFont@@XZ		; ImGui::GetFont
PUBLIC	?GetFontSize@ImGui@@YAMXZ			; ImGui::GetFontSize
PUBLIC	?GetFontTexUvWhitePixel@ImGui@@YA?AUImVec2@@XZ	; ImGui::GetFontTexUvWhitePixel
PUBLIC	?GetColorU32@ImGui@@YAIHM@Z			; ImGui::GetColorU32
PUBLIC	?GetColorU32@ImGui@@YAIAEBUImVec4@@@Z		; ImGui::GetColorU32
PUBLIC	?GetColorU32@ImGui@@YAII@Z			; ImGui::GetColorU32
PUBLIC	?GetStyleColorVec4@ImGui@@YAAEBUImVec4@@H@Z	; ImGui::GetStyleColorVec4
PUBLIC	?SameLine@ImGui@@YAXMM@Z			; ImGui::SameLine
PUBLIC	?Indent@ImGui@@YAXM@Z				; ImGui::Indent
PUBLIC	?Unindent@ImGui@@YAXM@Z				; ImGui::Unindent
PUBLIC	?BeginGroup@ImGui@@YAXXZ			; ImGui::BeginGroup
PUBLIC	?EndGroup@ImGui@@YAXXZ				; ImGui::EndGroup
PUBLIC	?GetCursorPos@ImGui@@YA?AUImVec2@@XZ		; ImGui::GetCursorPos
PUBLIC	?GetCursorPosX@ImGui@@YAMXZ			; ImGui::GetCursorPosX
PUBLIC	?GetCursorPosY@ImGui@@YAMXZ			; ImGui::GetCursorPosY
PUBLIC	?SetCursorPos@ImGui@@YAXAEBUImVec2@@@Z		; ImGui::SetCursorPos
PUBLIC	?SetCursorPosX@ImGui@@YAXM@Z			; ImGui::SetCursorPosX
PUBLIC	?SetCursorPosY@ImGui@@YAXM@Z			; ImGui::SetCursorPosY
PUBLIC	?GetCursorStartPos@ImGui@@YA?AUImVec2@@XZ	; ImGui::GetCursorStartPos
PUBLIC	?GetCursorScreenPos@ImGui@@YA?AUImVec2@@XZ	; ImGui::GetCursorScreenPos
PUBLIC	?SetCursorScreenPos@ImGui@@YAXAEBUImVec2@@@Z	; ImGui::SetCursorScreenPos
PUBLIC	?GetTextLineHeight@ImGui@@YAMXZ			; ImGui::GetTextLineHeight
PUBLIC	?GetTextLineHeightWithSpacing@ImGui@@YAMXZ	; ImGui::GetTextLineHeightWithSpacing
PUBLIC	?GetFrameHeight@ImGui@@YAMXZ			; ImGui::GetFrameHeight
PUBLIC	?GetFrameHeightWithSpacing@ImGui@@YAMXZ		; ImGui::GetFrameHeightWithSpacing
PUBLIC	?PushID@ImGui@@YAXPEBD@Z			; ImGui::PushID
PUBLIC	?PushID@ImGui@@YAXPEBD0@Z			; ImGui::PushID
PUBLIC	?PushID@ImGui@@YAXPEBX@Z			; ImGui::PushID
PUBLIC	?PushID@ImGui@@YAXH@Z				; ImGui::PushID
PUBLIC	?PopID@ImGui@@YAXXZ				; ImGui::PopID
PUBLIC	?GetID@ImGui@@YAIPEBD@Z				; ImGui::GetID
PUBLIC	?GetID@ImGui@@YAIPEBD0@Z			; ImGui::GetID
PUBLIC	?GetID@ImGui@@YAIPEBX@Z				; ImGui::GetID
PUBLIC	?BeginTooltip@ImGui@@YAXXZ			; ImGui::BeginTooltip
PUBLIC	?EndTooltip@ImGui@@YAXXZ			; ImGui::EndTooltip
PUBLIC	?SetTooltip@ImGui@@YAXPEBDZZ			; ImGui::SetTooltip
PUBLIC	?SetTooltipV@ImGui@@YAXPEBDPEAD@Z		; ImGui::SetTooltipV
PUBLIC	?BeginPopup@ImGui@@YA_NPEBDH@Z			; ImGui::BeginPopup
PUBLIC	?BeginPopupModal@ImGui@@YA_NPEBDPEA_NH@Z	; ImGui::BeginPopupModal
PUBLIC	?EndPopup@ImGui@@YAXXZ				; ImGui::EndPopup
PUBLIC	?OpenPopup@ImGui@@YAXPEBDH@Z			; ImGui::OpenPopup
PUBLIC	?OpenPopup@ImGui@@YAXIH@Z			; ImGui::OpenPopup
PUBLIC	?OpenPopupOnItemClick@ImGui@@YAXPEBDH@Z		; ImGui::OpenPopupOnItemClick
PUBLIC	?CloseCurrentPopup@ImGui@@YAXXZ			; ImGui::CloseCurrentPopup
PUBLIC	?BeginPopupContextItem@ImGui@@YA_NPEBDH@Z	; ImGui::BeginPopupContextItem
PUBLIC	?BeginPopupContextWindow@ImGui@@YA_NPEBDH@Z	; ImGui::BeginPopupContextWindow
PUBLIC	?BeginPopupContextVoid@ImGui@@YA_NPEBDH@Z	; ImGui::BeginPopupContextVoid
PUBLIC	?IsPopupOpen@ImGui@@YA_NPEBDH@Z			; ImGui::IsPopupOpen
PUBLIC	?LogToTTY@ImGui@@YAXH@Z				; ImGui::LogToTTY
PUBLIC	?LogToFile@ImGui@@YAXHPEBD@Z			; ImGui::LogToFile
PUBLIC	?LogToClipboard@ImGui@@YAXH@Z			; ImGui::LogToClipboard
PUBLIC	?LogFinish@ImGui@@YAXXZ				; ImGui::LogFinish
PUBLIC	?LogButtons@ImGui@@YAXXZ			; ImGui::LogButtons
PUBLIC	?LogText@ImGui@@YAXPEBDZZ			; ImGui::LogText
PUBLIC	?LogTextV@ImGui@@YAXPEBDPEAD@Z			; ImGui::LogTextV
PUBLIC	?BeginDragDropSource@ImGui@@YA_NH@Z		; ImGui::BeginDragDropSource
PUBLIC	?SetDragDropPayload@ImGui@@YA_NPEBDPEBX_KH@Z	; ImGui::SetDragDropPayload
PUBLIC	?EndDragDropSource@ImGui@@YAXXZ			; ImGui::EndDragDropSource
PUBLIC	?BeginDragDropTarget@ImGui@@YA_NXZ		; ImGui::BeginDragDropTarget
PUBLIC	?AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z ; ImGui::AcceptDragDropPayload
PUBLIC	?EndDragDropTarget@ImGui@@YAXXZ			; ImGui::EndDragDropTarget
PUBLIC	?GetDragDropPayload@ImGui@@YAPEBUImGuiPayload@@XZ ; ImGui::GetDragDropPayload
PUBLIC	?PushClipRect@ImGui@@YAXAEBUImVec2@@0_N@Z	; ImGui::PushClipRect
PUBLIC	?PopClipRect@ImGui@@YAXXZ			; ImGui::PopClipRect
PUBLIC	?SetItemDefaultFocus@ImGui@@YAXXZ		; ImGui::SetItemDefaultFocus
PUBLIC	?SetKeyboardFocusHere@ImGui@@YAXH@Z		; ImGui::SetKeyboardFocusHere
PUBLIC	?IsItemHovered@ImGui@@YA_NH@Z			; ImGui::IsItemHovered
PUBLIC	?IsItemActive@ImGui@@YA_NXZ			; ImGui::IsItemActive
PUBLIC	?IsItemFocused@ImGui@@YA_NXZ			; ImGui::IsItemFocused
PUBLIC	?IsItemClicked@ImGui@@YA_NH@Z			; ImGui::IsItemClicked
PUBLIC	?IsItemVisible@ImGui@@YA_NXZ			; ImGui::IsItemVisible
PUBLIC	?IsItemEdited@ImGui@@YA_NXZ			; ImGui::IsItemEdited
PUBLIC	?IsItemActivated@ImGui@@YA_NXZ			; ImGui::IsItemActivated
PUBLIC	?IsItemDeactivated@ImGui@@YA_NXZ		; ImGui::IsItemDeactivated
PUBLIC	?IsItemDeactivatedAfterEdit@ImGui@@YA_NXZ	; ImGui::IsItemDeactivatedAfterEdit
PUBLIC	?IsItemToggledOpen@ImGui@@YA_NXZ		; ImGui::IsItemToggledOpen
PUBLIC	?IsAnyItemHovered@ImGui@@YA_NXZ			; ImGui::IsAnyItemHovered
PUBLIC	?IsAnyItemActive@ImGui@@YA_NXZ			; ImGui::IsAnyItemActive
PUBLIC	?IsAnyItemFocused@ImGui@@YA_NXZ			; ImGui::IsAnyItemFocused
PUBLIC	?GetItemRectMin@ImGui@@YA?AUImVec2@@XZ		; ImGui::GetItemRectMin
PUBLIC	?GetItemRectMax@ImGui@@YA?AUImVec2@@XZ		; ImGui::GetItemRectMax
PUBLIC	?GetItemRectSize@ImGui@@YA?AUImVec2@@XZ		; ImGui::GetItemRectSize
PUBLIC	?SetItemAllowOverlap@ImGui@@YAXXZ		; ImGui::SetItemAllowOverlap
PUBLIC	?GetMainViewport@ImGui@@YAPEAUImGuiViewport@@XZ	; ImGui::GetMainViewport
PUBLIC	?IsRectVisible@ImGui@@YA_NAEBUImVec2@@@Z	; ImGui::IsRectVisible
PUBLIC	?IsRectVisible@ImGui@@YA_NAEBUImVec2@@0@Z	; ImGui::IsRectVisible
PUBLIC	?GetTime@ImGui@@YANXZ				; ImGui::GetTime
PUBLIC	?GetFrameCount@ImGui@@YAHXZ			; ImGui::GetFrameCount
PUBLIC	?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@XZ ; ImGui::GetBackgroundDrawList
PUBLIC	?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@XZ ; ImGui::GetForegroundDrawList
PUBLIC	?GetDrawListSharedData@ImGui@@YAPEAUImDrawListSharedData@@XZ ; ImGui::GetDrawListSharedData
PUBLIC	?GetStyleColorName@ImGui@@YAPEBDH@Z		; ImGui::GetStyleColorName
PUBLIC	?SetStateStorage@ImGui@@YAXPEAUImGuiStorage@@@Z	; ImGui::SetStateStorage
PUBLIC	?GetStateStorage@ImGui@@YAPEAUImGuiStorage@@XZ	; ImGui::GetStateStorage
PUBLIC	?CalcListClipping@ImGui@@YAXHMPEAH0@Z		; ImGui::CalcListClipping
PUBLIC	?BeginChildFrame@ImGui@@YA_NIAEBUImVec2@@H@Z	; ImGui::BeginChildFrame
PUBLIC	?EndChildFrame@ImGui@@YAXXZ			; ImGui::EndChildFrame
PUBLIC	?CalcTextSize@ImGui@@YA?AUImVec2@@PEBD0_NM@Z	; ImGui::CalcTextSize
PUBLIC	?ColorConvertU32ToFloat4@ImGui@@YA?AUImVec4@@I@Z ; ImGui::ColorConvertU32ToFloat4
PUBLIC	?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z ; ImGui::ColorConvertFloat4ToU32
PUBLIC	?ColorConvertRGBtoHSV@ImGui@@YAXMMMAEAM00@Z	; ImGui::ColorConvertRGBtoHSV
PUBLIC	?ColorConvertHSVtoRGB@ImGui@@YAXMMMAEAM00@Z	; ImGui::ColorConvertHSVtoRGB
PUBLIC	?GetKeyIndex@ImGui@@YAHH@Z			; ImGui::GetKeyIndex
PUBLIC	?IsKeyDown@ImGui@@YA_NH@Z			; ImGui::IsKeyDown
PUBLIC	?IsKeyPressed@ImGui@@YA_NH_N@Z			; ImGui::IsKeyPressed
PUBLIC	?IsKeyReleased@ImGui@@YA_NH@Z			; ImGui::IsKeyReleased
PUBLIC	?GetKeyPressedAmount@ImGui@@YAHHMM@Z		; ImGui::GetKeyPressedAmount
PUBLIC	?CaptureKeyboardFromApp@ImGui@@YAX_N@Z		; ImGui::CaptureKeyboardFromApp
PUBLIC	?IsMouseDown@ImGui@@YA_NH@Z			; ImGui::IsMouseDown
PUBLIC	?IsMouseClicked@ImGui@@YA_NH_N@Z		; ImGui::IsMouseClicked
PUBLIC	?IsMouseReleased@ImGui@@YA_NH@Z			; ImGui::IsMouseReleased
PUBLIC	?IsMouseDoubleClicked@ImGui@@YA_NH@Z		; ImGui::IsMouseDoubleClicked
PUBLIC	?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z ; ImGui::IsMouseHoveringRect
PUBLIC	?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z	; ImGui::IsMousePosValid
PUBLIC	?IsAnyMouseDown@ImGui@@YA_NXZ			; ImGui::IsAnyMouseDown
PUBLIC	?GetMousePos@ImGui@@YA?AUImVec2@@XZ		; ImGui::GetMousePos
PUBLIC	?GetMousePosOnOpeningCurrentPopup@ImGui@@YA?AUImVec2@@XZ ; ImGui::GetMousePosOnOpeningCurrentPopup
PUBLIC	?IsMouseDragging@ImGui@@YA_NHM@Z		; ImGui::IsMouseDragging
PUBLIC	?GetMouseDragDelta@ImGui@@YA?AUImVec2@@HM@Z	; ImGui::GetMouseDragDelta
PUBLIC	?ResetMouseDragDelta@ImGui@@YAXH@Z		; ImGui::ResetMouseDragDelta
PUBLIC	?GetMouseCursor@ImGui@@YAHXZ			; ImGui::GetMouseCursor
PUBLIC	?SetMouseCursor@ImGui@@YAXH@Z			; ImGui::SetMouseCursor
PUBLIC	?CaptureMouseFromApp@ImGui@@YAX_N@Z		; ImGui::CaptureMouseFromApp
PUBLIC	?GetClipboardText@ImGui@@YAPEBDXZ		; ImGui::GetClipboardText
PUBLIC	?SetClipboardText@ImGui@@YAXPEBD@Z		; ImGui::SetClipboardText
PUBLIC	?LoadIniSettingsFromDisk@ImGui@@YAXPEBD@Z	; ImGui::LoadIniSettingsFromDisk
PUBLIC	?LoadIniSettingsFromMemory@ImGui@@YAXPEBD_K@Z	; ImGui::LoadIniSettingsFromMemory
PUBLIC	?SaveIniSettingsToDisk@ImGui@@YAXPEBD@Z		; ImGui::SaveIniSettingsToDisk
PUBLIC	?SaveIniSettingsToMemory@ImGui@@YAPEBDPEA_K@Z	; ImGui::SaveIniSettingsToMemory
PUBLIC	?DebugCheckVersionAndDataLayout@ImGui@@YA_NPEBD_K11111@Z ; ImGui::DebugCheckVersionAndDataLayout
PUBLIC	?SetAllocatorFunctions@ImGui@@YAXP6APEAX_KPEAX@ZP6AX11@Z1@Z ; ImGui::SetAllocatorFunctions
PUBLIC	?GetAllocatorFunctions@ImGui@@YAXPEAP6APEAX_KPEAX@ZPEAP6AX11@ZPEAPEAX@Z ; ImGui::GetAllocatorFunctions
PUBLIC	?MemAlloc@ImGui@@YAPEAX_K@Z			; ImGui::MemAlloc
PUBLIC	?MemFree@ImGui@@YAXPEAX@Z			; ImGui::MemFree
PUBLIC	??2@YAPEAX_KUImNewWrapper@@PEAX@Z		; operator new
PUBLIC	??3@YAXPEAXUImNewWrapper@@0@Z			; operator delete
PUBLIC	??0ImGuiStyle@@QEAA@XZ				; ImGuiStyle::ImGuiStyle
PUBLIC	?ScaleAllSizes@ImGuiStyle@@QEAAXM@Z		; ImGuiStyle::ScaleAllSizes
PUBLIC	?AddInputCharacter@ImGuiIO@@QEAAXI@Z		; ImGuiIO::AddInputCharacter
PUBLIC	?AddInputCharacterUTF16@ImGuiIO@@QEAAXG@Z	; ImGuiIO::AddInputCharacterUTF16
PUBLIC	?AddInputCharactersUTF8@ImGuiIO@@QEAAXPEBD@Z	; ImGuiIO::AddInputCharactersUTF8
PUBLIC	?ClearInputCharacters@ImGuiIO@@QEAAXXZ		; ImGuiIO::ClearInputCharacters
PUBLIC	??0?$ImVector@G@@QEAA@XZ			; ImVector<unsigned short>::ImVector<unsigned short>
PUBLIC	??1?$ImVector@G@@QEAA@XZ			; ImVector<unsigned short>::~ImVector<unsigned short>
PUBLIC	?clear@?$ImVector@G@@QEAAXXZ			; ImVector<unsigned short>::clear
PUBLIC	??A?$ImVector@G@@QEAAAEAGH@Z			; ImVector<unsigned short>::operator[]
PUBLIC	?_grow_capacity@?$ImVector@G@@QEBAHH@Z		; ImVector<unsigned short>::_grow_capacity
PUBLIC	?resize@?$ImVector@G@@QEAAXH@Z			; ImVector<unsigned short>::resize
PUBLIC	?reserve@?$ImVector@G@@QEAAXH@Z			; ImVector<unsigned short>::reserve
PUBLIC	?push_back@?$ImVector@G@@QEAAXAEBG@Z		; ImVector<unsigned short>::push_back
PUBLIC	??0ImGuiIO@@QEAA@XZ				; ImGuiIO::ImGuiIO
PUBLIC	??1ImGuiIO@@QEAA@XZ				; ImGuiIO::~ImGuiIO
PUBLIC	??0ImGuiSizeCallbackData@@QEAA@XZ		; ImGuiSizeCallbackData::ImGuiSizeCallbackData
PUBLIC	??0ImGuiPayload@@QEAA@XZ			; ImGuiPayload::ImGuiPayload
PUBLIC	?Clear@ImGuiPayload@@QEAAXXZ			; ImGuiPayload::Clear
PUBLIC	?IsDataType@ImGuiPayload@@QEBA_NPEBD@Z		; ImGuiPayload::IsDataType
PUBLIC	??0ImGuiTextFilter@@QEAA@PEBD@Z			; ImGuiTextFilter::ImGuiTextFilter
PUBLIC	?Draw@ImGuiTextFilter@@QEAA_NPEBDM@Z		; ImGuiTextFilter::Draw
PUBLIC	?PassFilter@ImGuiTextFilter@@QEBA_NPEBD0@Z	; ImGuiTextFilter::PassFilter
PUBLIC	?Build@ImGuiTextFilter@@QEAAXXZ			; ImGuiTextFilter::Build
PUBLIC	??0ImGuiTextRange@ImGuiTextFilter@@QEAA@PEBD0@Z	; ImGuiTextFilter::ImGuiTextRange::ImGuiTextRange
PUBLIC	?empty@ImGuiTextRange@ImGuiTextFilter@@QEBA_NXZ	; ImGuiTextFilter::ImGuiTextRange::empty
PUBLIC	?split@ImGuiTextRange@ImGuiTextFilter@@QEBAXDPEAU?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@@Z ; ImGuiTextFilter::ImGuiTextRange::split
PUBLIC	??0?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ ; ImVector<ImGuiTextFilter::ImGuiTextRange>::ImVector<ImGuiTextFilter::ImGuiTextRange>
PUBLIC	??1?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ ; ImVector<ImGuiTextFilter::ImGuiTextRange>::~ImVector<ImGuiTextFilter::ImGuiTextRange>
PUBLIC	?empty@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBA_NXZ ; ImVector<ImGuiTextFilter::ImGuiTextRange>::empty
PUBLIC	??A?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAAEAUImGuiTextRange@ImGuiTextFilter@@H@Z ; ImVector<ImGuiTextFilter::ImGuiTextRange>::operator[]
PUBLIC	??A?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBAAEBUImGuiTextRange@ImGuiTextFilter@@H@Z ; ImVector<ImGuiTextFilter::ImGuiTextRange>::operator[]
PUBLIC	?_grow_capacity@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBAHH@Z ; ImVector<ImGuiTextFilter::ImGuiTextRange>::_grow_capacity
PUBLIC	?resize@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXH@Z ; ImVector<ImGuiTextFilter::ImGuiTextRange>::resize
PUBLIC	?reserve@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXH@Z ; ImVector<ImGuiTextFilter::ImGuiTextRange>::reserve
PUBLIC	?push_back@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXAEBUImGuiTextRange@ImGuiTextFilter@@@Z ; ImVector<ImGuiTextFilter::ImGuiTextRange>::push_back
PUBLIC	??0?$ImVector@D@@QEAA@XZ			; ImVector<char>::ImVector<char>
PUBLIC	??1?$ImVector@D@@QEAA@XZ			; ImVector<char>::~ImVector<char>
PUBLIC	?clear@?$ImVector@D@@QEAAXXZ			; ImVector<char>::clear
PUBLIC	??A?$ImVector@D@@QEAAAEADH@Z			; ImVector<char>::operator[]
PUBLIC	?front@?$ImVector@D@@QEBAAEBDXZ			; ImVector<char>::front
PUBLIC	?_grow_capacity@?$ImVector@D@@QEBAHH@Z		; ImVector<char>::_grow_capacity
PUBLIC	?resize@?$ImVector@D@@QEAAXH@Z			; ImVector<char>::resize
PUBLIC	?reserve@?$ImVector@D@@QEAAXH@Z			; ImVector<char>::reserve
PUBLIC	?push_back@?$ImVector@D@@QEAAXAEBD@Z		; ImVector<char>::push_back
PUBLIC	??0ImGuiTextBuffer@@QEAA@XZ			; ImGuiTextBuffer::ImGuiTextBuffer
PUBLIC	?begin@ImGuiTextBuffer@@QEBAPEBDXZ		; ImGuiTextBuffer::begin
PUBLIC	?size@ImGuiTextBuffer@@QEBAHXZ			; ImGuiTextBuffer::size
PUBLIC	?empty@ImGuiTextBuffer@@QEBA_NXZ		; ImGuiTextBuffer::empty
PUBLIC	?clear@ImGuiTextBuffer@@QEAAXXZ			; ImGuiTextBuffer::clear
PUBLIC	?reserve@ImGuiTextBuffer@@QEAAXH@Z		; ImGuiTextBuffer::reserve
PUBLIC	?c_str@ImGuiTextBuffer@@QEBAPEBDXZ		; ImGuiTextBuffer::c_str
PUBLIC	?append@ImGuiTextBuffer@@QEAAXPEBD0@Z		; ImGuiTextBuffer::append
PUBLIC	?appendf@ImGuiTextBuffer@@QEAAXPEBDZZ		; ImGuiTextBuffer::appendf
PUBLIC	?appendfv@ImGuiTextBuffer@@QEAAXPEBDPEAD@Z	; ImGuiTextBuffer::appendfv
PUBLIC	??1ImGuiTextBuffer@@QEAA@XZ			; ImGuiTextBuffer::~ImGuiTextBuffer
PUBLIC	??0ImGuiStoragePair@ImGuiStorage@@QEAA@IH@Z	; ImGuiStorage::ImGuiStoragePair::ImGuiStoragePair
PUBLIC	??0ImGuiStoragePair@ImGuiStorage@@QEAA@IM@Z	; ImGuiStorage::ImGuiStoragePair::ImGuiStoragePair
PUBLIC	??0ImGuiStoragePair@ImGuiStorage@@QEAA@IPEAX@Z	; ImGuiStorage::ImGuiStoragePair::ImGuiStoragePair
PUBLIC	??0?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ ; ImVector<ImGuiStorage::ImGuiStoragePair>::ImVector<ImGuiStorage::ImGuiStoragePair>
PUBLIC	??1?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ ; ImVector<ImGuiStorage::ImGuiStoragePair>::~ImVector<ImGuiStorage::ImGuiStoragePair>
PUBLIC	?clear@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAXXZ ; ImVector<ImGuiStorage::ImGuiStoragePair>::clear
PUBLIC	?size_in_bytes@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAHXZ ; ImVector<ImGuiStorage::ImGuiStoragePair>::size_in_bytes
PUBLIC	??A?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAAEAUImGuiStoragePair@ImGuiStorage@@H@Z ; ImVector<ImGuiStorage::ImGuiStoragePair>::operator[]
PUBLIC	?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@XZ ; ImVector<ImGuiStorage::ImGuiStoragePair>::end
PUBLIC	?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAPEBUImGuiStoragePair@ImGuiStorage@@XZ ; ImVector<ImGuiStorage::ImGuiStoragePair>::end
PUBLIC	?_grow_capacity@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAHH@Z ; ImVector<ImGuiStorage::ImGuiStoragePair>::_grow_capacity
PUBLIC	?reserve@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAXH@Z ; ImVector<ImGuiStorage::ImGuiStoragePair>::reserve
PUBLIC	?insert@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@PEBU23@AEBU23@@Z ; ImVector<ImGuiStorage::ImGuiStoragePair>::insert
PUBLIC	?Clear@ImGuiStorage@@QEAAXXZ			; ImGuiStorage::Clear
PUBLIC	?GetInt@ImGuiStorage@@QEBAHIH@Z			; ImGuiStorage::GetInt
PUBLIC	?SetInt@ImGuiStorage@@QEAAXIH@Z			; ImGuiStorage::SetInt
PUBLIC	?GetBool@ImGuiStorage@@QEBA_NI_N@Z		; ImGuiStorage::GetBool
PUBLIC	?SetBool@ImGuiStorage@@QEAAXI_N@Z		; ImGuiStorage::SetBool
PUBLIC	?GetFloat@ImGuiStorage@@QEBAMIM@Z		; ImGuiStorage::GetFloat
PUBLIC	?SetFloat@ImGuiStorage@@QEAAXIM@Z		; ImGuiStorage::SetFloat
PUBLIC	?GetVoidPtr@ImGuiStorage@@QEBAPEAXI@Z		; ImGuiStorage::GetVoidPtr
PUBLIC	?SetVoidPtr@ImGuiStorage@@QEAAXIPEAX@Z		; ImGuiStorage::SetVoidPtr
PUBLIC	?GetIntRef@ImGuiStorage@@QEAAPEAHIH@Z		; ImGuiStorage::GetIntRef
PUBLIC	?GetBoolRef@ImGuiStorage@@QEAAPEA_NI_N@Z	; ImGuiStorage::GetBoolRef
PUBLIC	?GetFloatRef@ImGuiStorage@@QEAAPEAMIM@Z		; ImGuiStorage::GetFloatRef
PUBLIC	?GetVoidPtrRef@ImGuiStorage@@QEAAPEAPEAXIPEAX@Z	; ImGuiStorage::GetVoidPtrRef
PUBLIC	?SetAllInt@ImGuiStorage@@QEAAXH@Z		; ImGuiStorage::SetAllInt
PUBLIC	?BuildSortByKey@ImGuiStorage@@QEAAXXZ		; ImGuiStorage::BuildSortByKey
PUBLIC	??0ImGuiStorage@@QEAA@XZ			; ImGuiStorage::ImGuiStorage
PUBLIC	??1ImGuiStorage@@QEAA@XZ			; ImGuiStorage::~ImGuiStorage
PUBLIC	??0ImGuiListClipper@@QEAA@XZ			; ImGuiListClipper::ImGuiListClipper
PUBLIC	??1ImGuiListClipper@@QEAA@XZ			; ImGuiListClipper::~ImGuiListClipper
PUBLIC	?Begin@ImGuiListClipper@@QEAAXHM@Z		; ImGuiListClipper::Begin
PUBLIC	?End@ImGuiListClipper@@QEAAXXZ			; ImGuiListClipper::End
PUBLIC	?Step@ImGuiListClipper@@QEAA_NXZ		; ImGuiListClipper::Step
PUBLIC	??0ImDrawCmdHeader@@QEAA@XZ			; ImDrawCmdHeader::ImDrawCmdHeader
PUBLIC	??0?$ImVector@UImDrawCmd@@@@QEAA@XZ		; ImVector<ImDrawCmd>::ImVector<ImDrawCmd>
PUBLIC	??1?$ImVector@UImDrawCmd@@@@QEAA@XZ		; ImVector<ImDrawCmd>::~ImVector<ImDrawCmd>
PUBLIC	??A?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@H@Z ; ImVector<ImDrawCmd>::operator[]
PUBLIC	?begin@?$ImVector@UImDrawCmd@@@@QEBAPEBUImDrawCmd@@XZ ; ImVector<ImDrawCmd>::begin
PUBLIC	?back@?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@XZ ; ImVector<ImDrawCmd>::back
PUBLIC	?back@?$ImVector@UImDrawCmd@@@@QEBAAEBUImDrawCmd@@XZ ; ImVector<ImDrawCmd>::back
PUBLIC	??0?$ImVector@UImDrawChannel@@@@QEAA@XZ		; ImVector<ImDrawChannel>::ImVector<ImDrawChannel>
PUBLIC	??1?$ImVector@UImDrawChannel@@@@QEAA@XZ		; ImVector<ImDrawChannel>::~ImVector<ImDrawChannel>
PUBLIC	?clear@?$ImVector@UImDrawChannel@@@@QEAAXXZ	; ImVector<ImDrawChannel>::clear
PUBLIC	??0ImDrawListSplitter@@QEAA@XZ			; ImDrawListSplitter::ImDrawListSplitter
PUBLIC	??1ImDrawListSplitter@@QEAA@XZ			; ImDrawListSplitter::~ImDrawListSplitter
PUBLIC	??0?$ImVector@UImDrawVert@@@@QEAA@XZ		; ImVector<ImDrawVert>::ImVector<ImDrawVert>
PUBLIC	??1?$ImVector@UImDrawVert@@@@QEAA@XZ		; ImVector<ImDrawVert>::~ImVector<ImDrawVert>
PUBLIC	?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z	; ImVector<ImDrawVert>::reserve
PUBLIC	??0?$ImVector@UImVec4@@@@QEAA@XZ		; ImVector<ImVec4>::ImVector<ImVec4>
PUBLIC	??1?$ImVector@UImVec4@@@@QEAA@XZ		; ImVector<ImVec4>::~ImVector<ImVec4>
PUBLIC	?back@?$ImVector@UImVec4@@@@QEAAAEAUImVec4@@XZ	; ImVector<ImVec4>::back
PUBLIC	??0?$ImVector@PEAX@@QEAA@XZ			; ImVector<void *>::ImVector<void *>
PUBLIC	??1?$ImVector@PEAX@@QEAA@XZ			; ImVector<void *>::~ImVector<void *>
PUBLIC	??0?$ImVector@UImVec2@@@@QEAA@XZ		; ImVector<ImVec2>::ImVector<ImVec2>
PUBLIC	??1?$ImVector@UImVec2@@@@QEAA@XZ		; ImVector<ImVec2>::~ImVector<ImVec2>
PUBLIC	?_grow_capacity@?$ImVector@UImVec2@@@@QEBAHH@Z	; ImVector<ImVec2>::_grow_capacity
PUBLIC	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z		; ImVector<ImVec2>::reserve
PUBLIC	?push_back@?$ImVector@UImVec2@@@@QEAAXAEBUImVec2@@@Z ; ImVector<ImVec2>::push_back
PUBLIC	??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z ; ImDrawList::ImDrawList
PUBLIC	??1ImDrawList@@QEAA@XZ				; ImDrawList::~ImDrawList
PUBLIC	?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z	; ImDrawList::PathLineTo
PUBLIC	?PathFillConvex@ImDrawList@@QEAAXI@Z		; ImDrawList::PathFillConvex
PUBLIC	?PathStroke@ImDrawList@@QEAAXIHM@Z		; ImDrawList::PathStroke
PUBLIC	??_GImDrawList@@QEAAPEAXI@Z			; ImDrawList::`scalar deleting destructor'
PUBLIC	??0ImDrawData@@QEAA@XZ				; ImDrawData::ImDrawData
PUBLIC	?Clear@ImDrawData@@QEAAXXZ			; ImDrawData::Clear
PUBLIC	??0?$ImVector@I@@QEAA@XZ			; ImVector<unsigned int>::ImVector<unsigned int>
PUBLIC	??1?$ImVector@I@@QEAA@XZ			; ImVector<unsigned int>::~ImVector<unsigned int>
PUBLIC	?clear@?$ImVector@I@@QEAAXXZ			; ImVector<unsigned int>::clear
PUBLIC	?back@?$ImVector@I@@QEAAAEAIXZ			; ImVector<unsigned int>::back
PUBLIC	?_grow_capacity@?$ImVector@I@@QEBAHH@Z		; ImVector<unsigned int>::_grow_capacity
PUBLIC	?resize@?$ImVector@I@@QEAAXH@Z			; ImVector<unsigned int>::resize
PUBLIC	?reserve@?$ImVector@I@@QEAAXH@Z			; ImVector<unsigned int>::reserve
PUBLIC	?push_back@?$ImVector@I@@QEAAXAEBI@Z		; ImVector<unsigned int>::push_back
PUBLIC	?pop_back@?$ImVector@I@@QEAAXXZ			; ImVector<unsigned int>::pop_back
PUBLIC	?IsBuilt@ImFontAtlas@@QEBA_NXZ			; ImFontAtlas::IsBuilt
PUBLIC	??0?$ImVector@PEAUImFont@@@@QEAA@XZ		; ImVector<ImFont *>::ImVector<ImFont *>
PUBLIC	??1?$ImVector@PEAUImFont@@@@QEAA@XZ		; ImVector<ImFont *>::~ImVector<ImFont *>
PUBLIC	?clear@?$ImVector@PEAUImFont@@@@QEAAXXZ		; ImVector<ImFont *>::clear
PUBLIC	?empty@?$ImVector@PEAUImFont@@@@QEBA_NXZ	; ImVector<ImFont *>::empty
PUBLIC	??A?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@H@Z ; ImVector<ImFont *>::operator[]
PUBLIC	?back@?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@XZ ; ImVector<ImFont *>::back
PUBLIC	?_grow_capacity@?$ImVector@PEAUImFont@@@@QEBAHH@Z ; ImVector<ImFont *>::_grow_capacity
PUBLIC	?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z	; ImVector<ImFont *>::reserve
PUBLIC	?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z ; ImVector<ImFont *>::push_back
PUBLIC	?pop_back@?$ImVector@PEAUImFont@@@@QEAAXXZ	; ImVector<ImFont *>::pop_back
PUBLIC	??_GImFontAtlas@@QEAAPEAXI@Z			; ImFontAtlas::`scalar deleting destructor'
PUBLIC	??0?$ImVector@M@@QEAA@XZ			; ImVector<float>::ImVector<float>
PUBLIC	??1?$ImVector@M@@QEAA@XZ			; ImVector<float>::~ImVector<float>
PUBLIC	?clear@?$ImVector@M@@QEAAXXZ			; ImVector<float>::clear
PUBLIC	??A?$ImVector@M@@QEAAAEAMH@Z			; ImVector<float>::operator[]
PUBLIC	?back@?$ImVector@M@@QEAAAEAMXZ			; ImVector<float>::back
PUBLIC	?_grow_capacity@?$ImVector@M@@QEBAHH@Z		; ImVector<float>::_grow_capacity
PUBLIC	?resize@?$ImVector@M@@QEAAXH@Z			; ImVector<float>::resize
PUBLIC	?reserve@?$ImVector@M@@QEAAXH@Z			; ImVector<float>::reserve
PUBLIC	?push_back@?$ImVector@M@@QEAAXAEBM@Z		; ImVector<float>::push_back
PUBLIC	?pop_back@?$ImVector@M@@QEAAXXZ			; ImVector<float>::pop_back
PUBLIC	?IsLoaded@ImFont@@QEBA_NXZ			; ImFont::IsLoaded
PUBLIC	??0ImGuiViewport@@QEAA@XZ			; ImGuiViewport::ImGuiViewport
PUBLIC	?GetCenter@ImGuiViewport@@QEBA?AUImVec2@@XZ	; ImGuiViewport::GetCenter
PUBLIC	__local_stdio_printf_options
PUBLIC	__local_stdio_scanf_options
PUBLIC	_vsnprintf_l
PUBLIC	_vsnprintf
PUBLIC	_vsscanf_l
PUBLIC	sscanf
PUBLIC	fabsf
PUBLIC	?ImHashData@@YAIPEBX_KI@Z			; ImHashData
PUBLIC	?ImHashStr@@YAIPEBD_KI@Z			; ImHashStr
PUBLIC	?ImAlphaBlendColors@@YAIII@Z			; ImAlphaBlendColors
PUBLIC	?ImStricmp@@YAHPEBD0@Z				; ImStricmp
PUBLIC	?ImStrnicmp@@YAHPEBD0_K@Z			; ImStrnicmp
PUBLIC	?ImStrncpy@@YAXPEADPEBD_K@Z			; ImStrncpy
PUBLIC	?ImStrdup@@YAPEADPEBD@Z				; ImStrdup
PUBLIC	?ImStrdupcpy@@YAPEADPEADPEA_KPEBD@Z		; ImStrdupcpy
PUBLIC	?ImStrchrRange@@YAPEBDPEBD0D@Z			; ImStrchrRange
PUBLIC	?ImStrlenW@@YAHPEBG@Z				; ImStrlenW
PUBLIC	?ImStreolRange@@YAPEBDPEBD0@Z			; ImStreolRange
PUBLIC	?ImStrbolW@@YAPEBGPEBG0@Z			; ImStrbolW
PUBLIC	?ImStristr@@YAPEBDPEBD000@Z			; ImStristr
PUBLIC	?ImStrTrimBlanks@@YAXPEAD@Z			; ImStrTrimBlanks
PUBLIC	?ImStrSkipBlank@@YAPEBDPEBD@Z			; ImStrSkipBlank
PUBLIC	?ImFormatString@@YAHPEAD_KPEBDZZ		; ImFormatString
PUBLIC	?ImFormatStringV@@YAHPEAD_KPEBD0@Z		; ImFormatStringV
PUBLIC	?ImTextCharToUtf8@@YAPEBDQEADI@Z		; ImTextCharToUtf8
PUBLIC	?ImTextStrToUtf8@@YAHPEADHPEBG1@Z		; ImTextStrToUtf8
PUBLIC	?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z		; ImTextCharFromUtf8
PUBLIC	?ImTextStrFromUtf8@@YAHPEAGHPEBD1PEAPEBD@Z	; ImTextStrFromUtf8
PUBLIC	?ImTextCountCharsFromUtf8@@YAHPEBD0@Z		; ImTextCountCharsFromUtf8
PUBLIC	?ImTextCountUtf8BytesFromChar@@YAHPEBD0@Z	; ImTextCountUtf8BytesFromChar
PUBLIC	?ImTextCountUtf8BytesFromStr@@YAHPEBG0@Z	; ImTextCountUtf8BytesFromStr
PUBLIC	?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z		; ImFileOpen
PUBLIC	?ImFileClose@@YA_NPEAU_iobuf@@@Z		; ImFileClose
PUBLIC	?ImFileGetSize@@YA_KPEAU_iobuf@@@Z		; ImFileGetSize
PUBLIC	?ImFileRead@@YA_KPEAX_K1PEAU_iobuf@@@Z		; ImFileRead
PUBLIC	?ImFileWrite@@YA_KPEBX_K1PEAU_iobuf@@@Z		; ImFileWrite
PUBLIC	?ImFileLoadToMemory@@YAPEAXPEBD0PEA_KH@Z	; ImFileLoadToMemory
PUBLIC	?ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU1@0000H@Z ; ImBezierCubicClosestPoint
PUBLIC	?ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU1@0000M@Z ; ImBezierCubicClosestPointCasteljau
PUBLIC	?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z	; ImLineClosestPoint
PUBLIC	?ImTriangleContainsPoint@@YA_NAEBUImVec2@@000@Z	; ImTriangleContainsPoint
PUBLIC	?ImTriangleClosestPoint@@YA?AUImVec2@@AEBU1@000@Z ; ImTriangleClosestPoint
PUBLIC	?ImTriangleBarycentricCoords@@YAXAEBUImVec2@@000AEAM11@Z ; ImTriangleBarycentricCoords
PUBLIC	?ImTriangleArea@@YAMAEBUImVec2@@00@Z		; ImTriangleArea
PUBLIC	?ImGetDirQuadrantFromDelta@@YAHMM@Z		; ImGetDirQuadrantFromDelta
PUBLIC	??0ImVec1@@QEAA@XZ				; ImVec1::ImVec1
PUBLIC	??0ImVec2ih@@QEAA@XZ				; ImVec2ih::ImVec2ih
PUBLIC	??0ImVec2ih@@QEAA@FF@Z				; ImVec2ih::ImVec2ih
PUBLIC	??0ImVec2ih@@QEAA@AEBUImVec2@@@Z		; ImVec2ih::ImVec2ih
PUBLIC	??0ImRect@@QEAA@XZ				; ImRect::ImRect
PUBLIC	??0ImRect@@QEAA@AEBUImVec2@@0@Z			; ImRect::ImRect
PUBLIC	??0ImRect@@QEAA@AEBUImVec4@@@Z			; ImRect::ImRect
PUBLIC	??0ImRect@@QEAA@MMMM@Z				; ImRect::ImRect
PUBLIC	?GetSize@ImRect@@QEBA?AUImVec2@@XZ		; ImRect::GetSize
PUBLIC	?GetWidth@ImRect@@QEBAMXZ			; ImRect::GetWidth
PUBLIC	?GetHeight@ImRect@@QEBAMXZ			; ImRect::GetHeight
PUBLIC	?GetBL@ImRect@@QEBA?AUImVec2@@XZ		; ImRect::GetBL
PUBLIC	?GetBR@ImRect@@QEBA?AUImVec2@@XZ		; ImRect::GetBR
PUBLIC	?Contains@ImRect@@QEBA_NAEBUImVec2@@@Z		; ImRect::Contains
PUBLIC	?Contains@ImRect@@QEBA_NAEBU1@@Z		; ImRect::Contains
PUBLIC	?Overlaps@ImRect@@QEBA_NAEBU1@@Z		; ImRect::Overlaps
PUBLIC	?Add@ImRect@@QEAAXAEBUImVec2@@@Z		; ImRect::Add
PUBLIC	?Add@ImRect@@QEAAXAEBU1@@Z			; ImRect::Add
PUBLIC	?Expand@ImRect@@QEAAXM@Z			; ImRect::Expand
PUBLIC	?Expand@ImRect@@QEAAXAEBUImVec2@@@Z		; ImRect::Expand
PUBLIC	?TranslateX@ImRect@@QEAAXM@Z			; ImRect::TranslateX
PUBLIC	?TranslateY@ImRect@@QEAAXM@Z			; ImRect::TranslateY
PUBLIC	?ClipWith@ImRect@@QEAAXAEBU1@@Z			; ImRect::ClipWith
PUBLIC	?ClipWithFull@ImRect@@QEAAXAEBU1@@Z		; ImRect::ClipWithFull
PUBLIC	?IsInverted@ImRect@@QEBA_NXZ			; ImRect::IsInverted
PUBLIC	?ToVec4@ImRect@@QEBA?AUImVec4@@XZ		; ImRect::ToVec4
PUBLIC	??0?$ImVector@PEAUImDrawList@@@@QEAA@XZ		; ImVector<ImDrawList *>::ImVector<ImDrawList *>
PUBLIC	??1?$ImVector@PEAUImDrawList@@@@QEAA@XZ		; ImVector<ImDrawList *>::~ImVector<ImDrawList *>
PUBLIC	?empty@?$ImVector@PEAUImDrawList@@@@QEBA_NXZ	; ImVector<ImDrawList *>::empty
PUBLIC	??A?$ImVector@PEAUImDrawList@@@@QEAAAEAPEAUImDrawList@@H@Z ; ImVector<ImDrawList *>::operator[]
PUBLIC	?_grow_capacity@?$ImVector@PEAUImDrawList@@@@QEBAHH@Z ; ImVector<ImDrawList *>::_grow_capacity
PUBLIC	?resize@?$ImVector@PEAUImDrawList@@@@QEAAXH@Z	; ImVector<ImDrawList *>::resize
PUBLIC	?reserve@?$ImVector@PEAUImDrawList@@@@QEAAXH@Z	; ImVector<ImDrawList *>::reserve
PUBLIC	?push_back@?$ImVector@PEAUImDrawList@@@@QEAAXAEBQEAUImDrawList@@@Z ; ImVector<ImDrawList *>::push_back
PUBLIC	?Clear@ImDrawDataBuilder@@QEAAXXZ		; ImDrawDataBuilder::Clear
PUBLIC	?GetDrawListCount@ImDrawDataBuilder@@QEBAHXZ	; ImDrawDataBuilder::GetDrawListCount
PUBLIC	?FlattenIntoSingleLayer@ImDrawDataBuilder@@QEAAXXZ ; ImDrawDataBuilder::FlattenIntoSingleLayer
PUBLIC	??0ImDrawDataBuilder@@QEAA@XZ			; ImDrawDataBuilder::ImDrawDataBuilder
PUBLIC	??1ImDrawDataBuilder@@QEAA@XZ			; ImDrawDataBuilder::~ImDrawDataBuilder
PUBLIC	??0ImGuiColorMod@@QEAA@XZ			; ImGuiColorMod::ImGuiColorMod
PUBLIC	??0ImGuiStyleMod@@QEAA@HM@Z			; ImGuiStyleMod::ImGuiStyleMod
PUBLIC	??0ImGuiStyleMod@@QEAA@HUImVec2@@@Z		; ImGuiStyleMod::ImGuiStyleMod
PUBLIC	??0ImGuiComboPreviewData@@QEAA@XZ		; ImGuiComboPreviewData::ImGuiComboPreviewData
PUBLIC	??0ImGuiMenuColumns@@QEAA@XZ			; ImGuiMenuColumns::ImGuiMenuColumns
PUBLIC	??0ImGuiInputTextState@@QEAA@XZ			; ImGuiInputTextState::ImGuiInputTextState
PUBLIC	?ClearFreeMemory@ImGuiInputTextState@@QEAAXXZ	; ImGuiInputTextState::ClearFreeMemory
PUBLIC	??1ImGuiInputTextState@@QEAA@XZ			; ImGuiInputTextState::~ImGuiInputTextState
PUBLIC	??0ImGuiPopupData@@QEAA@XZ			; ImGuiPopupData::ImGuiPopupData
PUBLIC	??0ImGuiNavItemData@@QEAA@XZ			; ImGuiNavItemData::ImGuiNavItemData
PUBLIC	?Clear@ImGuiNavItemData@@QEAAXXZ		; ImGuiNavItemData::Clear
PUBLIC	??0ImGuiNextWindowData@@QEAA@XZ			; ImGuiNextWindowData::ImGuiNextWindowData
PUBLIC	?ClearFlags@ImGuiNextWindowData@@QEAAXXZ	; ImGuiNextWindowData::ClearFlags
PUBLIC	??0ImGuiNextItemData@@QEAA@XZ			; ImGuiNextItemData::ImGuiNextItemData
PUBLIC	??1?$ImVector@UImGuiOldColumnData@@@@QEAA@XZ	; ImVector<ImGuiOldColumnData>::~ImVector<ImGuiOldColumnData>
PUBLIC	??A?$ImVector@UImGuiOldColumnData@@@@QEAAAEAUImGuiOldColumnData@@H@Z ; ImVector<ImGuiOldColumnData>::operator[]
PUBLIC	??1ImGuiOldColumns@@QEAA@XZ			; ImGuiOldColumns::~ImGuiOldColumns
PUBLIC	??_GImGuiOldColumns@@QEAAPEAXI@Z		; ImGuiOldColumns::`scalar deleting destructor'
PUBLIC	??0ImGuiViewportP@@QEAA@XZ			; ImGuiViewportP::ImGuiViewportP
PUBLIC	??1ImGuiViewportP@@QEAA@XZ			; ImGuiViewportP::~ImGuiViewportP
PUBLIC	?CalcWorkRectPos@ImGuiViewportP@@QEBA?AUImVec2@@AEBU2@@Z ; ImGuiViewportP::CalcWorkRectPos
PUBLIC	?CalcWorkRectSize@ImGuiViewportP@@QEBA?AUImVec2@@AEBU2@0@Z ; ImGuiViewportP::CalcWorkRectSize
PUBLIC	?UpdateWorkRect@ImGuiViewportP@@QEAAXXZ		; ImGuiViewportP::UpdateWorkRect
PUBLIC	?GetMainRect@ImGuiViewportP@@QEBA?AUImRect@@XZ	; ImGuiViewportP::GetMainRect
PUBLIC	?GetWorkRect@ImGuiViewportP@@QEBA?AUImRect@@XZ	; ImGuiViewportP::GetWorkRect
PUBLIC	??_GImGuiViewportP@@QEAAPEAXI@Z			; ImGuiViewportP::`scalar deleting destructor'
PUBLIC	??$IM_DELETE@UImDrawList@@@@YAXPEAUImDrawList@@@Z ; IM_DELETE<ImDrawList>
PUBLIC	??0ImGuiWindowSettings@@QEAA@XZ			; ImGuiWindowSettings::ImGuiWindowSettings
PUBLIC	?GetName@ImGuiWindowSettings@@QEAAPEADXZ	; ImGuiWindowSettings::GetName
PUBLIC	??0ImGuiSettingsHandler@@QEAA@XZ		; ImGuiSettingsHandler::ImGuiSettingsHandler
PUBLIC	??0ImGuiMetricsConfig@@QEAA@XZ			; ImGuiMetricsConfig::ImGuiMetricsConfig
PUBLIC	??0ImGuiStackSizes@@QEAA@XZ			; ImGuiStackSizes::ImGuiStackSizes
PUBLIC	?SetToCurrentState@ImGuiStackSizes@@QEAAXXZ	; ImGuiStackSizes::SetToCurrentState
PUBLIC	?CompareWithCurrentState@ImGuiStackSizes@@QEAAXXZ ; ImGuiStackSizes::CompareWithCurrentState
PUBLIC	??0?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ	; ImVector<ImGuiWindow *>::ImVector<ImGuiWindow *>
PUBLIC	??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ	; ImVector<ImGuiWindow *>::~ImVector<ImGuiWindow *>
PUBLIC	?clear@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ	; ImVector<ImGuiWindow *>::clear
PUBLIC	?clear_delete@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ ; ImVector<ImGuiWindow *>::clear_delete
PUBLIC	?empty@?$ImVector@PEAUImGuiWindow@@@@QEBA_NXZ	; ImVector<ImGuiWindow *>::empty
PUBLIC	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
PUBLIC	?back@?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@XZ ; ImVector<ImGuiWindow *>::back
PUBLIC	?swap@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEAU1@@Z ; ImVector<ImGuiWindow *>::swap
PUBLIC	?_grow_capacity@?$ImVector@PEAUImGuiWindow@@@@QEBAHH@Z ; ImVector<ImGuiWindow *>::_grow_capacity
PUBLIC	?resize@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z	; ImVector<ImGuiWindow *>::resize
PUBLIC	?reserve@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z	; ImVector<ImGuiWindow *>::reserve
PUBLIC	?push_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z ; ImVector<ImGuiWindow *>::push_back
PUBLIC	?pop_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ	; ImVector<ImGuiWindow *>::pop_back
PUBLIC	?push_front@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z ; ImVector<ImGuiWindow *>::push_front
PUBLIC	?insert@?$ImVector@PEAUImGuiWindow@@@@QEAAPEAPEAUImGuiWindow@@PEBQEAU2@AEBQEAU2@@Z ; ImVector<ImGuiWindow *>::insert
PUBLIC	??0?$ImVector@UImGuiColorMod@@@@QEAA@XZ		; ImVector<ImGuiColorMod>::ImVector<ImGuiColorMod>
PUBLIC	??1?$ImVector@UImGuiColorMod@@@@QEAA@XZ		; ImVector<ImGuiColorMod>::~ImVector<ImGuiColorMod>
PUBLIC	?clear@?$ImVector@UImGuiColorMod@@@@QEAAXXZ	; ImVector<ImGuiColorMod>::clear
PUBLIC	?back@?$ImVector@UImGuiColorMod@@@@QEAAAEAUImGuiColorMod@@XZ ; ImVector<ImGuiColorMod>::back
PUBLIC	?_grow_capacity@?$ImVector@UImGuiColorMod@@@@QEBAHH@Z ; ImVector<ImGuiColorMod>::_grow_capacity
PUBLIC	?reserve@?$ImVector@UImGuiColorMod@@@@QEAAXH@Z	; ImVector<ImGuiColorMod>::reserve
PUBLIC	?push_back@?$ImVector@UImGuiColorMod@@@@QEAAXAEBUImGuiColorMod@@@Z ; ImVector<ImGuiColorMod>::push_back
PUBLIC	?pop_back@?$ImVector@UImGuiColorMod@@@@QEAAXXZ	; ImVector<ImGuiColorMod>::pop_back
PUBLIC	??0?$ImVector@UImGuiStyleMod@@@@QEAA@XZ		; ImVector<ImGuiStyleMod>::ImVector<ImGuiStyleMod>
PUBLIC	??1?$ImVector@UImGuiStyleMod@@@@QEAA@XZ		; ImVector<ImGuiStyleMod>::~ImVector<ImGuiStyleMod>
PUBLIC	?clear@?$ImVector@UImGuiStyleMod@@@@QEAAXXZ	; ImVector<ImGuiStyleMod>::clear
PUBLIC	?back@?$ImVector@UImGuiStyleMod@@@@QEAAAEAUImGuiStyleMod@@XZ ; ImVector<ImGuiStyleMod>::back
PUBLIC	?_grow_capacity@?$ImVector@UImGuiStyleMod@@@@QEBAHH@Z ; ImVector<ImGuiStyleMod>::_grow_capacity
PUBLIC	?reserve@?$ImVector@UImGuiStyleMod@@@@QEAAXH@Z	; ImVector<ImGuiStyleMod>::reserve
PUBLIC	?push_back@?$ImVector@UImGuiStyleMod@@@@QEAAXAEBUImGuiStyleMod@@@Z ; ImVector<ImGuiStyleMod>::push_back
PUBLIC	?pop_back@?$ImVector@UImGuiStyleMod@@@@QEAAXXZ	; ImVector<ImGuiStyleMod>::pop_back
PUBLIC	??0?$ImVector@H@@QEAA@XZ			; ImVector<int>::ImVector<int>
PUBLIC	??1?$ImVector@H@@QEAA@XZ			; ImVector<int>::~ImVector<int>
PUBLIC	?clear@?$ImVector@H@@QEAAXXZ			; ImVector<int>::clear
PUBLIC	?back@?$ImVector@H@@QEAAAEAHXZ			; ImVector<int>::back
PUBLIC	?_grow_capacity@?$ImVector@H@@QEBAHH@Z		; ImVector<int>::_grow_capacity
PUBLIC	?resize@?$ImVector@H@@QEAAXH@Z			; ImVector<int>::resize
PUBLIC	?reserve@?$ImVector@H@@QEAAXH@Z			; ImVector<int>::reserve
PUBLIC	?push_back@?$ImVector@H@@QEAAXAEBH@Z		; ImVector<int>::push_back
PUBLIC	?pop_back@?$ImVector@H@@QEAAXXZ			; ImVector<int>::pop_back
PUBLIC	??0?$ImVector@UImGuiGroupData@@@@QEAA@XZ	; ImVector<ImGuiGroupData>::ImVector<ImGuiGroupData>
PUBLIC	??1?$ImVector@UImGuiGroupData@@@@QEAA@XZ	; ImVector<ImGuiGroupData>::~ImVector<ImGuiGroupData>
PUBLIC	?clear@?$ImVector@UImGuiGroupData@@@@QEAAXXZ	; ImVector<ImGuiGroupData>::clear
PUBLIC	?back@?$ImVector@UImGuiGroupData@@@@QEAAAEAUImGuiGroupData@@XZ ; ImVector<ImGuiGroupData>::back
PUBLIC	?_grow_capacity@?$ImVector@UImGuiGroupData@@@@QEBAHH@Z ; ImVector<ImGuiGroupData>::_grow_capacity
PUBLIC	?resize@?$ImVector@UImGuiGroupData@@@@QEAAXH@Z	; ImVector<ImGuiGroupData>::resize
PUBLIC	?reserve@?$ImVector@UImGuiGroupData@@@@QEAAXH@Z	; ImVector<ImGuiGroupData>::reserve
PUBLIC	?pop_back@?$ImVector@UImGuiGroupData@@@@QEAAXXZ	; ImVector<ImGuiGroupData>::pop_back
PUBLIC	??0?$ImVector@UImGuiPopupData@@@@QEAA@XZ	; ImVector<ImGuiPopupData>::ImVector<ImGuiPopupData>
PUBLIC	??1?$ImVector@UImGuiPopupData@@@@QEAA@XZ	; ImVector<ImGuiPopupData>::~ImVector<ImGuiPopupData>
PUBLIC	?clear@?$ImVector@UImGuiPopupData@@@@QEAAXXZ	; ImVector<ImGuiPopupData>::clear
PUBLIC	??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ; ImVector<ImGuiPopupData>::operator[]
PUBLIC	?back@?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@XZ ; ImVector<ImGuiPopupData>::back
PUBLIC	?_grow_capacity@?$ImVector@UImGuiPopupData@@@@QEBAHH@Z ; ImVector<ImGuiPopupData>::_grow_capacity
PUBLIC	?resize@?$ImVector@UImGuiPopupData@@@@QEAAXH@Z	; ImVector<ImGuiPopupData>::resize
PUBLIC	?reserve@?$ImVector@UImGuiPopupData@@@@QEAAXH@Z	; ImVector<ImGuiPopupData>::reserve
PUBLIC	?push_back@?$ImVector@UImGuiPopupData@@@@QEAAXAEBUImGuiPopupData@@@Z ; ImVector<ImGuiPopupData>::push_back
PUBLIC	?pop_back@?$ImVector@UImGuiPopupData@@@@QEAAXXZ	; ImVector<ImGuiPopupData>::pop_back
PUBLIC	??0?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ	; ImVector<ImGuiViewportP *>::ImVector<ImGuiViewportP *>
PUBLIC	??1?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ	; ImVector<ImGuiViewportP *>::~ImVector<ImGuiViewportP *>
PUBLIC	?clear@?$ImVector@PEAUImGuiViewportP@@@@QEAAXXZ	; ImVector<ImGuiViewportP *>::clear
PUBLIC	?clear_delete@?$ImVector@PEAUImGuiViewportP@@@@QEAAXXZ ; ImVector<ImGuiViewportP *>::clear_delete
PUBLIC	??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z ; ImVector<ImGuiViewportP *>::operator[]
PUBLIC	?_grow_capacity@?$ImVector@PEAUImGuiViewportP@@@@QEBAHH@Z ; ImVector<ImGuiViewportP *>::_grow_capacity
PUBLIC	?reserve@?$ImVector@PEAUImGuiViewportP@@@@QEAAXH@Z ; ImVector<ImGuiViewportP *>::reserve
PUBLIC	?push_back@?$ImVector@PEAUImGuiViewportP@@@@QEAAXAEBQEAUImGuiViewportP@@@Z ; ImVector<ImGuiViewportP *>::push_back
PUBLIC	??0?$ImVector@E@@QEAA@XZ			; ImVector<unsigned char>::ImVector<unsigned char>
PUBLIC	??1?$ImVector@E@@QEAA@XZ			; ImVector<unsigned char>::~ImVector<unsigned char>
PUBLIC	?clear@?$ImVector@E@@QEAAXXZ			; ImVector<unsigned char>::clear
PUBLIC	?_grow_capacity@?$ImVector@E@@QEBAHH@Z		; ImVector<unsigned char>::_grow_capacity
PUBLIC	?resize@?$ImVector@E@@QEAAXH@Z			; ImVector<unsigned char>::resize
PUBLIC	?reserve@?$ImVector@E@@QEAAXH@Z			; ImVector<unsigned char>::reserve
PUBLIC	??0?$ImVector@UImGuiTable@@@@QEAA@XZ		; ImVector<ImGuiTable>::ImVector<ImGuiTable>
PUBLIC	??1?$ImVector@UImGuiTable@@@@QEAA@XZ		; ImVector<ImGuiTable>::~ImVector<ImGuiTable>
PUBLIC	?clear@?$ImVector@UImGuiTable@@@@QEAAXXZ	; ImVector<ImGuiTable>::clear
PUBLIC	??A?$ImVector@UImGuiTable@@@@QEAAAEAUImGuiTable@@H@Z ; ImVector<ImGuiTable>::operator[]
PUBLIC	??0?$ImPool@UImGuiTable@@@@QEAA@XZ		; ImPool<ImGuiTable>::ImPool<ImGuiTable>
PUBLIC	??1?$ImPool@UImGuiTable@@@@QEAA@XZ		; ImPool<ImGuiTable>::~ImPool<ImGuiTable>
PUBLIC	?GetByIndex@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z ; ImPool<ImGuiTable>::GetByIndex
PUBLIC	?Clear@?$ImPool@UImGuiTable@@@@QEAAXXZ		; ImPool<ImGuiTable>::Clear
PUBLIC	?GetAliveCount@?$ImPool@UImGuiTable@@@@QEBAHXZ	; ImPool<ImGuiTable>::GetAliveCount
PUBLIC	?GetMapSize@?$ImPool@UImGuiTable@@@@QEBAHXZ	; ImPool<ImGuiTable>::GetMapSize
PUBLIC	?TryGetMapData@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z ; ImPool<ImGuiTable>::TryGetMapData
PUBLIC	??0?$ImVector@UImGuiTableTempData@@@@QEAA@XZ	; ImVector<ImGuiTableTempData>::ImVector<ImGuiTableTempData>
PUBLIC	??1?$ImVector@UImGuiTableTempData@@@@QEAA@XZ	; ImVector<ImGuiTableTempData>::~ImVector<ImGuiTableTempData>
PUBLIC	?clear@?$ImVector@UImGuiTableTempData@@@@QEAAXXZ ; ImVector<ImGuiTableTempData>::clear
PUBLIC	?clear_destruct@?$ImVector@UImGuiTableTempData@@@@QEAAXXZ ; ImVector<ImGuiTableTempData>::clear_destruct
PUBLIC	??A?$ImVector@UImGuiTableTempData@@@@QEAAAEAUImGuiTableTempData@@H@Z ; ImVector<ImGuiTableTempData>::operator[]
PUBLIC	??0?$ImVector@UImGuiTabBar@@@@QEAA@XZ		; ImVector<ImGuiTabBar>::ImVector<ImGuiTabBar>
PUBLIC	??1?$ImVector@UImGuiTabBar@@@@QEAA@XZ		; ImVector<ImGuiTabBar>::~ImVector<ImGuiTabBar>
PUBLIC	?clear@?$ImVector@UImGuiTabBar@@@@QEAAXXZ	; ImVector<ImGuiTabBar>::clear
PUBLIC	??A?$ImVector@UImGuiTabBar@@@@QEAAAEAUImGuiTabBar@@H@Z ; ImVector<ImGuiTabBar>::operator[]
PUBLIC	??0?$ImPool@UImGuiTabBar@@@@QEAA@XZ		; ImPool<ImGuiTabBar>::ImPool<ImGuiTabBar>
PUBLIC	??1?$ImPool@UImGuiTabBar@@@@QEAA@XZ		; ImPool<ImGuiTabBar>::~ImPool<ImGuiTabBar>
PUBLIC	?GetByIndex@?$ImPool@UImGuiTabBar@@@@QEAAPEAUImGuiTabBar@@H@Z ; ImPool<ImGuiTabBar>::GetByIndex
PUBLIC	?Clear@?$ImPool@UImGuiTabBar@@@@QEAAXXZ		; ImPool<ImGuiTabBar>::Clear
PUBLIC	?GetAliveCount@?$ImPool@UImGuiTabBar@@@@QEBAHXZ	; ImPool<ImGuiTabBar>::GetAliveCount
PUBLIC	?GetMapSize@?$ImPool@UImGuiTabBar@@@@QEBAHXZ	; ImPool<ImGuiTabBar>::GetMapSize
PUBLIC	?TryGetMapData@?$ImPool@UImGuiTabBar@@@@QEAAPEAUImGuiTabBar@@H@Z ; ImPool<ImGuiTabBar>::TryGetMapData
PUBLIC	??0?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ	; ImVector<ImGuiPtrOrIndex>::ImVector<ImGuiPtrOrIndex>
PUBLIC	??1?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ	; ImVector<ImGuiPtrOrIndex>::~ImVector<ImGuiPtrOrIndex>
PUBLIC	?clear@?$ImVector@UImGuiPtrOrIndex@@@@QEAAXXZ	; ImVector<ImGuiPtrOrIndex>::clear
PUBLIC	??0?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ	; ImVector<ImGuiShrinkWidthItem>::ImVector<ImGuiShrinkWidthItem>
PUBLIC	??1?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ	; ImVector<ImGuiShrinkWidthItem>::~ImVector<ImGuiShrinkWidthItem>
PUBLIC	?clear@?$ImVector@UImGuiShrinkWidthItem@@@@QEAAXXZ ; ImVector<ImGuiShrinkWidthItem>::clear
PUBLIC	??0?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ	; ImVector<ImGuiSettingsHandler>::ImVector<ImGuiSettingsHandler>
PUBLIC	??1?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ	; ImVector<ImGuiSettingsHandler>::~ImVector<ImGuiSettingsHandler>
PUBLIC	?clear@?$ImVector@UImGuiSettingsHandler@@@@QEAAXXZ ; ImVector<ImGuiSettingsHandler>::clear
PUBLIC	??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z ; ImVector<ImGuiSettingsHandler>::operator[]
PUBLIC	?_grow_capacity@?$ImVector@UImGuiSettingsHandler@@@@QEBAHH@Z ; ImVector<ImGuiSettingsHandler>::_grow_capacity
PUBLIC	?reserve@?$ImVector@UImGuiSettingsHandler@@@@QEAAXH@Z ; ImVector<ImGuiSettingsHandler>::reserve
PUBLIC	?push_back@?$ImVector@UImGuiSettingsHandler@@@@QEAAXAEBUImGuiSettingsHandler@@@Z ; ImVector<ImGuiSettingsHandler>::push_back
PUBLIC	?clear@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAXXZ ; ImChunkStream<ImGuiWindowSettings>::clear
PUBLIC	?empty@?$ImChunkStream@UImGuiWindowSettings@@@@QEBA_NXZ ; ImChunkStream<ImGuiWindowSettings>::empty
PUBLIC	?size@?$ImChunkStream@UImGuiWindowSettings@@@@QEBAHXZ ; ImChunkStream<ImGuiWindowSettings>::size
PUBLIC	?alloc_chunk@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@_K@Z ; ImChunkStream<ImGuiWindowSettings>::alloc_chunk
PUBLIC	?begin@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ ; ImChunkStream<ImGuiWindowSettings>::begin
PUBLIC	?next_chunk@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@PEAU2@@Z ; ImChunkStream<ImGuiWindowSettings>::next_chunk
PUBLIC	?chunk_size@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAHPEBUImGuiWindowSettings@@@Z ; ImChunkStream<ImGuiWindowSettings>::chunk_size
PUBLIC	?end@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ ; ImChunkStream<ImGuiWindowSettings>::end
PUBLIC	?offset_from_ptr@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAHPEBUImGuiWindowSettings@@@Z ; ImChunkStream<ImGuiWindowSettings>::offset_from_ptr
PUBLIC	?ptr_from_offset@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@H@Z ; ImChunkStream<ImGuiWindowSettings>::ptr_from_offset
PUBLIC	??0?$ImChunkStream@UImGuiWindowSettings@@@@QEAA@XZ ; ImChunkStream<ImGuiWindowSettings>::ImChunkStream<ImGuiWindowSettings>
PUBLIC	??1?$ImChunkStream@UImGuiWindowSettings@@@@QEAA@XZ ; ImChunkStream<ImGuiWindowSettings>::~ImChunkStream<ImGuiWindowSettings>
PUBLIC	?size@?$ImChunkStream@UImGuiTableSettings@@@@QEBAHXZ ; ImChunkStream<ImGuiTableSettings>::size
PUBLIC	?begin@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@XZ ; ImChunkStream<ImGuiTableSettings>::begin
PUBLIC	?next_chunk@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@PEAU2@@Z ; ImChunkStream<ImGuiTableSettings>::next_chunk
PUBLIC	?chunk_size@?$ImChunkStream@UImGuiTableSettings@@@@QEAAHPEBUImGuiTableSettings@@@Z ; ImChunkStream<ImGuiTableSettings>::chunk_size
PUBLIC	?end@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@XZ ; ImChunkStream<ImGuiTableSettings>::end
PUBLIC	??0?$ImChunkStream@UImGuiTableSettings@@@@QEAA@XZ ; ImChunkStream<ImGuiTableSettings>::ImChunkStream<ImGuiTableSettings>
PUBLIC	??1?$ImChunkStream@UImGuiTableSettings@@@@QEAA@XZ ; ImChunkStream<ImGuiTableSettings>::~ImChunkStream<ImGuiTableSettings>
PUBLIC	??0?$ImVector@UImGuiContextHook@@@@QEAA@XZ	; ImVector<ImGuiContextHook>::ImVector<ImGuiContextHook>
PUBLIC	??1?$ImVector@UImGuiContextHook@@@@QEAA@XZ	; ImVector<ImGuiContextHook>::~ImVector<ImGuiContextHook>
PUBLIC	??A?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@H@Z ; ImVector<ImGuiContextHook>::operator[]
PUBLIC	?back@?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@XZ ; ImVector<ImGuiContextHook>::back
PUBLIC	?_grow_capacity@?$ImVector@UImGuiContextHook@@@@QEBAHH@Z ; ImVector<ImGuiContextHook>::_grow_capacity
PUBLIC	?reserve@?$ImVector@UImGuiContextHook@@@@QEAAXH@Z ; ImVector<ImGuiContextHook>::reserve
PUBLIC	?push_back@?$ImVector@UImGuiContextHook@@@@QEAAXAEBUImGuiContextHook@@@Z ; ImVector<ImGuiContextHook>::push_back
PUBLIC	?erase@?$ImVector@UImGuiContextHook@@@@QEAAPEAUImGuiContextHook@@PEBU2@@Z ; ImVector<ImGuiContextHook>::erase
PUBLIC	??0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z	; ImGuiContext::ImGuiContext
PUBLIC	??1ImGuiContext@@QEAA@XZ			; ImGuiContext::~ImGuiContext
PUBLIC	??_GImGuiContext@@QEAAPEAXI@Z			; ImGuiContext::`scalar deleting destructor'
PUBLIC	??0ImGuiWindowTempData@@QEAA@XZ			; ImGuiWindowTempData::ImGuiWindowTempData
PUBLIC	??1ImGuiWindowTempData@@QEAA@XZ			; ImGuiWindowTempData::~ImGuiWindowTempData
PUBLIC	??0?$ImVector@UImGuiOldColumns@@@@QEAA@XZ	; ImVector<ImGuiOldColumns>::ImVector<ImGuiOldColumns>
PUBLIC	??1?$ImVector@UImGuiOldColumns@@@@QEAA@XZ	; ImVector<ImGuiOldColumns>::~ImVector<ImGuiOldColumns>
PUBLIC	?clear@?$ImVector@UImGuiOldColumns@@@@QEAAXXZ	; ImVector<ImGuiOldColumns>::clear
PUBLIC	?clear_destruct@?$ImVector@UImGuiOldColumns@@@@QEAAXXZ ; ImVector<ImGuiOldColumns>::clear_destruct
PUBLIC	??A?$ImVector@UImGuiOldColumns@@@@QEAAAEAUImGuiOldColumns@@H@Z ; ImVector<ImGuiOldColumns>::operator[]
PUBLIC	??0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z	; ImGuiWindow::ImGuiWindow
PUBLIC	??1ImGuiWindow@@QEAA@XZ				; ImGuiWindow::~ImGuiWindow
PUBLIC	?GetID@ImGuiWindow@@QEAAIPEBD0@Z		; ImGuiWindow::GetID
PUBLIC	?GetID@ImGuiWindow@@QEAAIPEBX@Z			; ImGuiWindow::GetID
PUBLIC	?GetID@ImGuiWindow@@QEAAIH@Z			; ImGuiWindow::GetID
PUBLIC	?GetIDNoKeepAlive@ImGuiWindow@@QEAAIPEBD0@Z	; ImGuiWindow::GetIDNoKeepAlive
PUBLIC	?GetIDNoKeepAlive@ImGuiWindow@@QEAAIPEBX@Z	; ImGuiWindow::GetIDNoKeepAlive
PUBLIC	?GetIDNoKeepAlive@ImGuiWindow@@QEAAIH@Z		; ImGuiWindow::GetIDNoKeepAlive
PUBLIC	?GetIDFromRectangle@ImGuiWindow@@QEAAIAEBUImRect@@@Z ; ImGuiWindow::GetIDFromRectangle
PUBLIC	?Rect@ImGuiWindow@@QEBA?AUImRect@@XZ		; ImGuiWindow::Rect
PUBLIC	?CalcFontSize@ImGuiWindow@@QEBAMXZ		; ImGuiWindow::CalcFontSize
PUBLIC	?TitleBarHeight@ImGuiWindow@@QEBAMXZ		; ImGuiWindow::TitleBarHeight
PUBLIC	?TitleBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ	; ImGuiWindow::TitleBarRect
PUBLIC	?MenuBarHeight@ImGuiWindow@@QEBAMXZ		; ImGuiWindow::MenuBarHeight
PUBLIC	?MenuBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ	; ImGuiWindow::MenuBarRect
PUBLIC	??_GImGuiWindow@@QEAAPEAXI@Z			; ImGuiWindow::`scalar deleting destructor'
PUBLIC	??1?$ImVector@UImGuiTabItem@@@@QEAA@XZ		; ImVector<ImGuiTabItem>::~ImVector<ImGuiTabItem>
PUBLIC	??A?$ImVector@UImGuiTabItem@@@@QEAAAEAUImGuiTabItem@@H@Z ; ImVector<ImGuiTabItem>::operator[]
PUBLIC	?GetTabName@ImGuiTabBar@@QEBAPEBDPEBUImGuiTabItem@@@Z ; ImGuiTabBar::GetTabName
PUBLIC	??1ImGuiTabBar@@QEAA@XZ				; ImGuiTabBar::~ImGuiTabBar
PUBLIC	??_GImGuiTabBar@@QEAAPEAXI@Z			; ImGuiTabBar::`scalar deleting destructor'
PUBLIC	??A?$ImSpan@UImGuiTableColumn@@@@QEAAAEAUImGuiTableColumn@@H@Z ; ImSpan<ImGuiTableColumn>::operator[]
PUBLIC	??1?$ImVector@UImGuiTableColumnSortSpecs@@@@QEAA@XZ ; ImVector<ImGuiTableColumnSortSpecs>::~ImVector<ImGuiTableColumnSortSpecs>
PUBLIC	??1ImGuiTable@@QEAA@XZ				; ImGuiTable::~ImGuiTable
PUBLIC	??_GImGuiTable@@QEAAPEAXI@Z			; ImGuiTable::`scalar deleting destructor'
PUBLIC	??1ImGuiTableTempData@@QEAA@XZ			; ImGuiTableTempData::~ImGuiTableTempData
PUBLIC	??_GImGuiTableTempData@@QEAAPEAXI@Z		; ImGuiTableTempData::`scalar deleting destructor'
PUBLIC	?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindowRead
PUBLIC	?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ	; ImGui::GetCurrentWindow
PUBLIC	?FindWindowByID@ImGui@@YAPEAUImGuiWindow@@I@Z	; ImGui::FindWindowByID
PUBLIC	?FindWindowByName@ImGui@@YAPEAUImGuiWindow@@PEBD@Z ; ImGui::FindWindowByName
PUBLIC	?UpdateWindowParentAndRootLinks@ImGui@@YAXPEAUImGuiWindow@@H0@Z ; ImGui::UpdateWindowParentAndRootLinks
PUBLIC	?CalcWindowNextAutoFitSize@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z ; ImGui::CalcWindowNextAutoFitSize
PUBLIC	?IsWindowChildOf@ImGui@@YA_NPEAUImGuiWindow@@0@Z ; ImGui::IsWindowChildOf
PUBLIC	?IsWindowAbove@ImGui@@YA_NPEAUImGuiWindow@@0@Z	; ImGui::IsWindowAbove
PUBLIC	?IsWindowNavFocusable@ImGui@@YA_NPEAUImGuiWindow@@@Z ; ImGui::IsWindowNavFocusable
PUBLIC	?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z ; ImGui::SetWindowPos
PUBLIC	?SetWindowSize@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z ; ImGui::SetWindowSize
PUBLIC	?SetWindowCollapsed@ImGui@@YAXPEAUImGuiWindow@@_NH@Z ; ImGui::SetWindowCollapsed
PUBLIC	?SetWindowHitTestHole@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@1@Z ; ImGui::SetWindowHitTestHole
PUBLIC	?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z	; ImGui::FocusWindow
PUBLIC	?FocusTopMostWindowUnderOne@ImGui@@YAXPEAUImGuiWindow@@0@Z ; ImGui::FocusTopMostWindowUnderOne
PUBLIC	?BringWindowToFocusFront@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::BringWindowToFocusFront
PUBLIC	?BringWindowToDisplayFront@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::BringWindowToDisplayFront
PUBLIC	?BringWindowToDisplayBack@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::BringWindowToDisplayBack
PUBLIC	?SetCurrentFont@ImGui@@YAXPEAUImFont@@@Z	; ImGui::SetCurrentFont
PUBLIC	?GetDefaultFont@ImGui@@YAPEAUImFont@@XZ		; ImGui::GetDefaultFont
PUBLIC	?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiWindow@@@Z ; ImGui::GetForegroundDrawList
PUBLIC	?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z ; ImGui::GetBackgroundDrawList
PUBLIC	?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z ; ImGui::GetForegroundDrawList
PUBLIC	?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z	; ImGui::Initialize
PUBLIC	?Shutdown@ImGui@@YAXPEAUImGuiContext@@@Z	; ImGui::Shutdown
PUBLIC	?UpdateHoveredWindowAndCaptureFlags@ImGui@@YAXXZ ; ImGui::UpdateHoveredWindowAndCaptureFlags
PUBLIC	?StartMouseMovingWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::StartMouseMovingWindow
PUBLIC	?UpdateMouseMovingWindowNewFrame@ImGui@@YAXXZ	; ImGui::UpdateMouseMovingWindowNewFrame
PUBLIC	?UpdateMouseMovingWindowEndFrame@ImGui@@YAXXZ	; ImGui::UpdateMouseMovingWindowEndFrame
PUBLIC	?AddContextHook@ImGui@@YAIPEAUImGuiContext@@PEBUImGuiContextHook@@@Z ; ImGui::AddContextHook
PUBLIC	?RemoveContextHook@ImGui@@YAXPEAUImGuiContext@@I@Z ; ImGui::RemoveContextHook
PUBLIC	?CallContextHooks@ImGui@@YAXPEAUImGuiContext@@W4ImGuiContextHookType@@@Z ; ImGui::CallContextHooks
PUBLIC	?MarkIniSettingsDirty@ImGui@@YAXXZ		; ImGui::MarkIniSettingsDirty
PUBLIC	?MarkIniSettingsDirty@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::MarkIniSettingsDirty
PUBLIC	?ClearIniSettings@ImGui@@YAXXZ			; ImGui::ClearIniSettings
PUBLIC	?CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z ; ImGui::CreateNewWindowSettings
PUBLIC	?FindWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@I@Z ; ImGui::FindWindowSettings
PUBLIC	?FindOrCreateWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z ; ImGui::FindOrCreateWindowSettings
PUBLIC	?FindSettingsHandler@ImGui@@YAPEAUImGuiSettingsHandler@@PEBD@Z ; ImGui::FindSettingsHandler
PUBLIC	?SetNextWindowScroll@ImGui@@YAXAEBUImVec2@@@Z	; ImGui::SetNextWindowScroll
PUBLIC	?SetScrollX@ImGui@@YAXPEAUImGuiWindow@@M@Z	; ImGui::SetScrollX
PUBLIC	?SetScrollY@ImGui@@YAXPEAUImGuiWindow@@M@Z	; ImGui::SetScrollY
PUBLIC	?SetScrollFromPosX@ImGui@@YAXPEAUImGuiWindow@@MM@Z ; ImGui::SetScrollFromPosX
PUBLIC	?SetScrollFromPosY@ImGui@@YAXPEAUImGuiWindow@@MM@Z ; ImGui::SetScrollFromPosY
PUBLIC	?ScrollToBringRectIntoView@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@AEBUImRect@@@Z ; ImGui::ScrollToBringRectIntoView
PUBLIC	?SetActiveID@ImGui@@YAXIPEAUImGuiWindow@@@Z	; ImGui::SetActiveID
PUBLIC	?SetFocusID@ImGui@@YAXIPEAUImGuiWindow@@@Z	; ImGui::SetFocusID
PUBLIC	?ClearActiveID@ImGui@@YAXXZ			; ImGui::ClearActiveID
PUBLIC	?GetHoveredID@ImGui@@YAIXZ			; ImGui::GetHoveredID
PUBLIC	?SetHoveredID@ImGui@@YAXI@Z			; ImGui::SetHoveredID
PUBLIC	?KeepAliveID@ImGui@@YAXI@Z			; ImGui::KeepAliveID
PUBLIC	?MarkItemEdited@ImGui@@YAXI@Z			; ImGui::MarkItemEdited
PUBLIC	?PushOverrideID@ImGui@@YAXI@Z			; ImGui::PushOverrideID
PUBLIC	?GetIDWithSeed@ImGui@@YAIPEBD0I@Z		; ImGui::GetIDWithSeed
PUBLIC	?ItemSize@ImGui@@YAXAEBUImVec2@@M@Z		; ImGui::ItemSize
PUBLIC	?ItemSize@ImGui@@YAXAEBUImRect@@M@Z		; ImGui::ItemSize
PUBLIC	?ItemAdd@ImGui@@YA_NAEBUImRect@@IPEBU2@H@Z	; ImGui::ItemAdd
PUBLIC	?ItemHoverable@ImGui@@YA_NAEBUImRect@@I@Z	; ImGui::ItemHoverable
PUBLIC	?ItemFocusable@ImGui@@YAXPEAUImGuiWindow@@I@Z	; ImGui::ItemFocusable
PUBLIC	?IsClippedEx@ImGui@@YA_NAEBUImRect@@I_N@Z	; ImGui::IsClippedEx
PUBLIC	?SetLastItemData@ImGui@@YAXPEAUImGuiWindow@@IHAEBUImRect@@@Z ; ImGui::SetLastItemData
PUBLIC	?CalcItemSize@ImGui@@YA?AUImVec2@@U2@MM@Z	; ImGui::CalcItemSize
PUBLIC	?CalcWrapWidthForPos@ImGui@@YAMAEBUImVec2@@M@Z	; ImGui::CalcWrapWidthForPos
PUBLIC	?PushMultiItemsWidths@ImGui@@YAXHM@Z		; ImGui::PushMultiItemsWidths
PUBLIC	?PushItemFlag@ImGui@@YAXH_N@Z			; ImGui::PushItemFlag
PUBLIC	?PopItemFlag@ImGui@@YAXXZ			; ImGui::PopItemFlag
PUBLIC	?PushDisabled@ImGui@@YAXXZ			; ImGui::PushDisabled
PUBLIC	?PopDisabled@ImGui@@YAXXZ			; ImGui::PopDisabled
PUBLIC	?IsItemToggledSelection@ImGui@@YA_NXZ		; ImGui::IsItemToggledSelection
PUBLIC	?GetContentRegionMaxAbs@ImGui@@YA?AUImVec2@@XZ	; ImGui::GetContentRegionMaxAbs
PUBLIC	?LogBegin@ImGui@@YAXW4ImGuiLogType@@H@Z		; ImGui::LogBegin
PUBLIC	?LogToBuffer@ImGui@@YAXH@Z			; ImGui::LogToBuffer
PUBLIC	?LogRenderedText@ImGui@@YAXPEBUImVec2@@PEBD1@Z	; ImGui::LogRenderedText
PUBLIC	?LogSetNextTextDecoration@ImGui@@YAXPEBD0@Z	; ImGui::LogSetNextTextDecoration
PUBLIC	?BeginChildEx@ImGui@@YA_NPEBDIAEBUImVec2@@_NH@Z	; ImGui::BeginChildEx
PUBLIC	?OpenPopupEx@ImGui@@YAXIH@Z			; ImGui::OpenPopupEx
PUBLIC	?ClosePopupToLevel@ImGui@@YAXH_N@Z		; ImGui::ClosePopupToLevel
PUBLIC	?ClosePopupsOverWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z ; ImGui::ClosePopupsOverWindow
PUBLIC	?IsPopupOpen@ImGui@@YA_NIH@Z			; ImGui::IsPopupOpen
PUBLIC	?BeginPopupEx@ImGui@@YA_NIH@Z			; ImGui::BeginPopupEx
PUBLIC	?BeginTooltipEx@ImGui@@YAXHH@Z			; ImGui::BeginTooltipEx
PUBLIC	?GetPopupAllowedExtentRect@ImGui@@YA?AUImRect@@PEAUImGuiWindow@@@Z ; ImGui::GetPopupAllowedExtentRect
PUBLIC	?GetTopMostPopupModal@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetTopMostPopupModal
PUBLIC	?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z ; ImGui::FindBestWindowPosForPopup
PUBLIC	?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z ; ImGui::FindBestWindowPosForPopupEx
PUBLIC	?NavInitWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z	; ImGui::NavInitWindow
PUBLIC	?NavMoveRequestButNoResultYet@ImGui@@YA_NXZ	; ImGui::NavMoveRequestButNoResultYet
PUBLIC	?NavMoveRequestCancel@ImGui@@YAXXZ		; ImGui::NavMoveRequestCancel
PUBLIC	?NavMoveRequestForward@ImGui@@YAXHHAEBUImRect@@H@Z ; ImGui::NavMoveRequestForward
PUBLIC	?NavMoveRequestTryWrapping@ImGui@@YAXPEAUImGuiWindow@@H@Z ; ImGui::NavMoveRequestTryWrapping
PUBLIC	?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z ; ImGui::GetNavInputAmount
PUBLIC	?GetNavInputAmount2d@ImGui@@YA?AUImVec2@@HW4ImGuiInputReadMode@@MM@Z ; ImGui::GetNavInputAmount2d
PUBLIC	?CalcTypematicRepeatAmount@ImGui@@YAHMMMM@Z	; ImGui::CalcTypematicRepeatAmount
PUBLIC	?ActivateItem@ImGui@@YAXI@Z			; ImGui::ActivateItem
PUBLIC	?SetNavID@ImGui@@YAXIW4ImGuiNavLayer@@IAEBUImRect@@@Z ; ImGui::SetNavID
PUBLIC	?PushFocusScope@ImGui@@YAXI@Z			; ImGui::PushFocusScope
PUBLIC	?PopFocusScope@ImGui@@YAXXZ			; ImGui::PopFocusScope
PUBLIC	?SetItemUsingMouseWheel@ImGui@@YAXXZ		; ImGui::SetItemUsingMouseWheel
PUBLIC	?SetActiveIdUsingNavAndKeys@ImGui@@YAXXZ	; ImGui::SetActiveIdUsingNavAndKeys
PUBLIC	?IsActiveIdUsingNavDir@ImGui@@YA_NH@Z		; ImGui::IsActiveIdUsingNavDir
PUBLIC	?IsActiveIdUsingNavInput@ImGui@@YA_NH@Z		; ImGui::IsActiveIdUsingNavInput
PUBLIC	?IsActiveIdUsingKey@ImGui@@YA_NH@Z		; ImGui::IsActiveIdUsingKey
PUBLIC	?IsMouseDragPastThreshold@ImGui@@YA_NHM@Z	; ImGui::IsMouseDragPastThreshold
PUBLIC	?IsKeyPressedMap@ImGui@@YA_NH_N@Z		; ImGui::IsKeyPressedMap
PUBLIC	?IsNavInputDown@ImGui@@YA_NH@Z			; ImGui::IsNavInputDown
PUBLIC	?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z ; ImGui::IsNavInputTest
PUBLIC	?GetMergedKeyModFlags@ImGui@@YAHXZ		; ImGui::GetMergedKeyModFlags
PUBLIC	?BeginDragDropTargetCustom@ImGui@@YA_NAEBUImRect@@I@Z ; ImGui::BeginDragDropTargetCustom
PUBLIC	?ClearDragDrop@ImGui@@YAXXZ			; ImGui::ClearDragDrop
PUBLIC	?IsDragDropPayloadBeingAccepted@ImGui@@YA_NXZ	; ImGui::IsDragDropPayloadBeingAccepted
PUBLIC	?RenderText@ImGui@@YAXUImVec2@@PEBD1_N@Z	; ImGui::RenderText
PUBLIC	?RenderTextWrapped@ImGui@@YAXUImVec2@@PEBD1M@Z	; ImGui::RenderTextWrapped
PUBLIC	?RenderTextClipped@ImGui@@YAXAEBUImVec2@@0PEBD1PEBU2@0PEBUImRect@@@Z ; ImGui::RenderTextClipped
PUBLIC	?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z ; ImGui::RenderTextClippedEx
PUBLIC	?RenderTextEllipsis@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1MMPEBD2PEBU3@@Z ; ImGui::RenderTextEllipsis
PUBLIC	?RenderFrame@ImGui@@YAXUImVec2@@0I_NM@Z		; ImGui::RenderFrame
PUBLIC	?RenderFrameBorder@ImGui@@YAXUImVec2@@0M@Z	; ImGui::RenderFrameBorder
PUBLIC	?RenderNavHighlight@ImGui@@YAXAEBUImRect@@IH@Z	; ImGui::RenderNavHighlight
PUBLIC	?FindRenderedTextEnd@ImGui@@YAPEBDPEBD0@Z	; ImGui::FindRenderedTextEnd
PUBLIC	?GetWindowResizeCornerID@ImGui@@YAIPEAUImGuiWindow@@H@Z ; ImGui::GetWindowResizeCornerID
PUBLIC	?GetWindowResizeBorderID@ImGui@@YAIPEAUImGuiWindow@@H@Z ; ImGui::GetWindowResizeBorderID
PUBLIC	?GcCompactTransientMiscBuffers@ImGui@@YAXXZ	; ImGui::GcCompactTransientMiscBuffers
PUBLIC	?GcCompactTransientWindowBuffers@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::GcCompactTransientWindowBuffers
PUBLIC	?GcAwakeTransientWindowBuffers@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::GcAwakeTransientWindowBuffers
PUBLIC	?ErrorCheckEndFrameRecover@ImGui@@YAXP6AXPEAXPEBDZZ0@Z ; ImGui::ErrorCheckEndFrameRecover
PUBLIC	?DebugStartItemPicker@ImGui@@YAXXZ		; ImGui::DebugStartItemPicker
PUBLIC	?ShowFontAtlas@ImGui@@YAXPEAUImFontAtlas@@@Z	; ImGui::ShowFontAtlas
PUBLIC	?DebugNodeColumns@ImGui@@YAXPEAUImGuiOldColumns@@@Z ; ImGui::DebugNodeColumns
PUBLIC	?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z ; ImGui::DebugNodeDrawList
PUBLIC	?DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU2@PEBUImDrawCmd@@_N3@Z ; ImGui::DebugNodeDrawCmdShowMeshAndBoundingBox
PUBLIC	?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z		; ImGui::DebugNodeFont
PUBLIC	?DebugNodeStorage@ImGui@@YAXPEAUImGuiStorage@@PEBD@Z ; ImGui::DebugNodeStorage
PUBLIC	?DebugNodeTabBar@ImGui@@YAXPEAUImGuiTabBar@@PEBD@Z ; ImGui::DebugNodeTabBar
PUBLIC	?DebugNodeWindow@ImGui@@YAXPEAUImGuiWindow@@PEBD@Z ; ImGui::DebugNodeWindow
PUBLIC	?DebugNodeWindowSettings@ImGui@@YAXPEAUImGuiWindowSettings@@@Z ; ImGui::DebugNodeWindowSettings
PUBLIC	?DebugNodeWindowsList@ImGui@@YAXPEAU?$ImVector@PEAUImGuiWindow@@@@PEBD@Z ; ImGui::DebugNodeWindowsList
PUBLIC	?DebugNodeViewport@ImGui@@YAXPEAUImGuiViewportP@@@Z ; ImGui::DebugNodeViewport
PUBLIC	?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z ; ImGui::DebugRenderViewportThumbnail
PUBLIC	?GetVarPtr@ImGuiStyleVarInfo@@QEBAPEAXPEAUImGuiStyle@@@Z ; ImGuiStyleVarInfo::GetVarPtr
PUBLIC	??$IM_DELETE@D@@YAXPEAD@Z			; IM_DELETE<char>
PUBLIC	??$IM_DELETE@UImGuiContext@@@@YAXPEAUImGuiContext@@@Z ; IM_DELETE<ImGuiContext>
PUBLIC	??$IM_DELETE@UImFontAtlas@@@@YAXPEAUImFontAtlas@@@Z ; IM_DELETE<ImFontAtlas>
PUBLIC	??$IM_DELETE@UImGuiViewportP@@@@YAXPEAUImGuiViewportP@@@Z ; IM_DELETE<ImGuiViewportP>
PUBLIC	??$IM_DELETE@UImGuiWindow@@@@YAXPEAUImGuiWindow@@@Z ; IM_DELETE<ImGuiWindow>
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@ ; `string'
PUBLIC	??_C@_1BC@IIGHOJGM@?$AAi?$AAd?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA1@ ; `string'
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_1GO@IOCEAJPC@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@ ; `string'
PUBLIC	??_C@_1HM@PJKJLKEH@?$AAt?$AAa?$AAb?$AA?9?$AA?$DO?$AAN?$AAa?$AAm?$AAe?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt@ ; `string'
PUBLIC	??_C@_13COJANIEC@?$AA0@				; `string'
PUBLIC	?__LINE__Var@?0??IsActiveIdUsingKey@ImGui@@YA_NH@Z@4JA ; `ImGui::IsActiveIdUsingKey'::`1'::__LINE__Var
PUBLIC	??_C@_1BC@LLDLMHEG@?$AAk?$AAe?$AAy?$AA?5?$AA?$DM?$AA?5?$AA6?$AA4@ ; `string'
PUBLIC	??_C@_09BJIHMJFE@imgui?4ini@			; `string'
PUBLIC	??_C@_0O@HCOAADPE@imgui_log?4txt@		; `string'
PUBLIC	?__LINE__Var@?0??ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU2@0000H@Z@4JA ; `ImBezierCubicClosestPoint'::`1'::__LINE__Var
PUBLIC	??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@ ; `string'
PUBLIC	??_C@_1CC@OJIGCPJC@?$AAn?$AAu?$AAm?$AA_?$AAs?$AAe?$AAg?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?5?$AA?$DO?$AA?5@ ; `string'
PUBLIC	?__LINE__Var@?0??ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU2@0000M@Z@4JA ; `ImBezierCubicClosestPointCasteljau'::`1'::__LINE__Var
PUBLIC	??_C@_1CA@PELHDBHK@?$AAt?$AAe?$AAs?$AAs?$AA_?$AAt?$AAo?$AAl?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AA0?$AAf@ ; `string'
PUBLIC	?__LINE__Var@?0??ImFileLoadToMemory@@YAPEAXPEBD0PEA_KH@Z@4JA ; `ImFileLoadToMemory'::`1'::__LINE__Var
PUBLIC	??_C@_1CC@MDBCLFOC@?$AAf?$AAi?$AAl?$AAe?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAm?$AAo?$AAd@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	?__LINE__Var@?0???1ImGuiListClipper@@QEAA@XZ@4JA ; `ImGuiListClipper::~ImGuiListClipper'::`1'::__LINE__Var
PUBLIC	??_C@_0DA@BHONNBHO@Forgot?5to?5call?5End?$CI?$CJ?0?5or?5to?5Ste@ ; `string'
PUBLIC	??_C@_1IM@IGMMBPBP@?$AAI?$AAt?$AAe?$AAm?$AAs?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?9@ ; `string'
PUBLIC	?__LINE__Var@?0??Step@ImGuiListClipper@@QEAA_NXZ@4JA ; `ImGuiListClipper::Step'::`1'::__LINE__Var
PUBLIC	??_C@_1CI@EMDFCODN@?$AAI?$AAt?$AAe?$AAm?$AAs?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5@ ; `string'
PUBLIC	??_C@_0FA@HACOCONG@Unable?5to?5calculate?5item?5height@ ; `string'
PUBLIC	??_C@_1NA@DHHMFPNJ@?$AAI?$AAt?$AAe?$AAm?$AAs?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1CG@FEFCFAEB@?$AAI?$AAt?$AAe?$AAm?$AAs?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0@ ; `string'
PUBLIC	?__LINE__Var@?0??GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ@4JA ; `ImGui::GetStyle'::`1'::__LINE__Var
PUBLIC	??_C@_0FJ@JBAFLEHG@No?5current?5context?4?5Did?5you?5cal@ ; `string'
PUBLIC	??_C@_1NE@MGLAEJCB@?$AAG?$AAI?$AAm?$AAG?$AAu?$AAi?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	?__LINE__Var@?0??GetStyleVarInfo@@YAPEBUImGuiStyleVarInfo@@H@Z@4JA ; `GetStyleVarInfo'::`1'::__LINE__Var
PUBLIC	??_C@_1EM@KGOACLAI@?$AAi?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AAd?$AAx@ ; `string'
PUBLIC	?__LINE__Var@?0??PushStyleVar@ImGui@@YAXHM@Z@4JA ; `ImGui::PushStyleVar'::`1'::__LINE__Var
PUBLIC	??_C@_1JA@BICGEIG@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?5?$AAP?$AAu@ ; `string'
PUBLIC	?__LINE__Var@?0??PushStyleVar@ImGui@@YAXHAEBUImVec2@@@Z@4JA ; `ImGui::PushStyleVar'::`1'::__LINE__Var
PUBLIC	??_C@_1JE@EECEMJDC@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?5?$AAP?$AAu@ ; `string'
PUBLIC	?__LINE__Var@?0??GetStyleColorName@ImGui@@YAPEBDH@Z@4JA ; `ImGui::GetStyleColorName'::`1'::__LINE__Var
PUBLIC	??_C@_04OJAHODMC@Text@				; `string'
PUBLIC	??_C@_0N@LNHHFNPK@TextDisabled@			; `string'
PUBLIC	??_C@_08DMKFNKPN@WindowBg@			; `string'
PUBLIC	??_C@_07BLEJOHFO@ChildBg@			; `string'
PUBLIC	??_C@_07LKIIIJHA@PopupBg@			; `string'
PUBLIC	??_C@_06CMOGDIBK@Border@			; `string'
PUBLIC	??_C@_0N@DECGFAEC@BorderShadow@			; `string'
PUBLIC	??_C@_07PJIIOGAC@FrameBg@			; `string'
PUBLIC	??_C@_0P@KIOOHHAC@FrameBgHovered@		; `string'
PUBLIC	??_C@_0O@BGDCDDEA@FrameBgActive@		; `string'
PUBLIC	??_C@_07MMLEKCPI@TitleBg@			; `string'
PUBLIC	??_C@_0O@JHBFJHNE@TitleBgActive@		; `string'
PUBLIC	??_C@_0BB@EGCOMBJG@TitleBgCollapsed@		; `string'
PUBLIC	??_C@_09GEKCKLDE@MenuBarBg@			; `string'
PUBLIC	??_C@_0M@MFDHPFJF@ScrollbarBg@			; `string'
PUBLIC	??_C@_0O@HABIDNBE@ScrollbarGrab@		; `string'
PUBLIC	??_C@_0BF@JFEOOMLL@ScrollbarGrabHovered@	; `string'
PUBLIC	??_C@_0BE@GODMFNCF@ScrollbarGrabActive@		; `string'
PUBLIC	??_C@_09DMKAANGE@CheckMark@			; `string'
PUBLIC	??_C@_0L@LAMBADIC@SliderGrab@			; `string'
PUBLIC	??_C@_0BB@HBOBMOMP@SliderGrabActive@		; `string'
PUBLIC	??_C@_06LKBCGDFD@Button@			; `string'
PUBLIC	??_C@_0O@HBCGNIAI@ButtonHovered@		; `string'
PUBLIC	??_C@_0N@IMHOFKJ@ButtonActive@			; `string'
PUBLIC	??_C@_06OENKJGA@Header@				; `string'
PUBLIC	??_C@_0O@HAINNLMC@HeaderHovered@		; `string'
PUBLIC	??_C@_0N@HILFCJOI@HeaderActive@			; `string'
PUBLIC	??_C@_09IBFEOKHN@Separator@			; `string'
PUBLIC	??_C@_0BB@CHICANJA@SeparatorHovered@		; `string'
PUBLIC	??_C@_0BA@BPNGFOJM@SeparatorActive@		; `string'
PUBLIC	??_C@_0L@NGBDNFNJ@ResizeGrip@			; `string'
PUBLIC	??_C@_0BC@NNEDPMNH@ResizeGripHovered@		; `string'
PUBLIC	??_C@_0BB@NBBKHKIC@ResizeGripActive@		; `string'
PUBLIC	??_C@_03IEAKBACE@Tab@				; `string'
PUBLIC	??_C@_0L@JFDLBKBD@TabHovered@			; `string'
PUBLIC	??_C@_09BLMKPFCF@TabActive@			; `string'
PUBLIC	??_C@_0N@KLEENDFP@TabUnfocused@			; `string'
PUBLIC	??_C@_0BD@JMEALEPP@TabUnfocusedActive@		; `string'
PUBLIC	??_C@_09HDJFFJLL@PlotLines@			; `string'
PUBLIC	??_C@_0BB@OMALNJLN@PlotLinesHovered@		; `string'
PUBLIC	??_C@_0O@EEKOCENA@PlotHistogram@		; `string'
PUBLIC	??_C@_0BF@GJALJGDC@PlotHistogramHovered@	; `string'
PUBLIC	??_C@_0O@OAEMMJAA@TableHeaderBg@		; `string'
PUBLIC	??_C@_0BC@EJINMLMM@TableBorderStrong@		; `string'
PUBLIC	??_C@_0BB@IPAPNNJD@TableBorderLight@		; `string'
PUBLIC	??_C@_0L@LLALIFOE@TableRowBg@			; `string'
PUBLIC	??_C@_0O@FGPLHMKP@TableRowBgAlt@		; `string'
PUBLIC	??_C@_0P@IBBLAEBJ@TextSelectedBg@		; `string'
PUBLIC	??_C@_0P@GDDMCLOI@DragDropTarget@		; `string'
PUBLIC	??_C@_0N@ENCIHEPH@NavHighlight@			; `string'
PUBLIC	??_C@_0BG@MCGDEFOI@NavWindowingHighlight@	; `string'
PUBLIC	??_C@_0BC@JHKONDGH@NavWindowingDimBg@		; `string'
PUBLIC	??_C@_0BB@JOEAHKNC@ModalWindowDimBg@		; `string'
PUBLIC	??_C@_07NBCGADJA@Unknown@			; `string'
PUBLIC	??_C@_05EJCOBEBF@?$CDMOVE@			; `string'
PUBLIC	?__LINE__Var@?0???1ImGuiWindow@@QEAA@XZ@4JA	; `ImGuiWindow::~ImGuiWindow'::`1'::__LINE__Var
PUBLIC	??_C@_1DE@OJBIPCGA@?$AAD?$AAr?$AAa?$AAw?$AAL?$AAi?$AAs?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CG?$AAD?$AAr@ ; `string'
PUBLIC	?__LINE__Var@?0??MarkItemEdited@ImGui@@YAXI@Z@4JA ; `ImGui::MarkItemEdited'::`1'::__LINE__Var
PUBLIC	??_C@_1HA@DMBDPHAC@?$AAg?$AA?4?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AAI?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAi@ ; `string'
PUBLIC	?__LINE__Var@?0??IsItemHovered@ImGui@@YA_NH@Z@4JA ; `ImGui::IsItemHovered'::`1'::__LINE__Var
PUBLIC	??_C@_1JO@PPIAHLHG@?$AA?$CI?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AAI?$AAm?$AAG?$AAu?$AAi@ ; `string'
PUBLIC	?__LINE__Var@?0??ItemFocusable@ImGui@@YAXPEAUImGuiWindow@@I@Z@4JA ; `ImGui::ItemFocusable'::`1'::__LINE__Var
PUBLIC	??_C@_1EO@PKFFHMKO@?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AAd?$AA?5?$AA?$DN@ ; `string'
PUBLIC	??_C@_08JKMMBCCO@1?484?5WIP@			; `string'
PUBLIC	?__LINE__Var@?0??AddContextHook@ImGui@@YAIPEAUImGuiContext@@PEBUImGuiContextHook@@@Z@4JA ; `ImGui::AddContextHook'::`1'::__LINE__Var
PUBLIC	??_C@_1LO@DGOFJFDA@?$AAh?$AAo?$AAo?$AAk?$AA?9?$AA?$DO?$AAC?$AAa?$AAl?$AAl?$AAb?$AAa?$AAc?$AAk?$AA?5@ ; `string'
PUBLIC	?__LINE__Var@?0??RemoveContextHook@ImGui@@YAXPEAUImGuiContext@@I@Z@4JA ; `ImGui::RemoveContextHook'::`1'::__LINE__Var
PUBLIC	??_C@_1BK@LEOMHFJC@?$AAh?$AAo?$AAo?$AAk?$AA_?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	?__LINE__Var@?0??GetIO@ImGui@@YAAEAUImGuiIO@@XZ@4JA ; `ImGui::GetIO'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z@4JA ; `GetViewportDrawList'::`1'::__LINE__Var
PUBLIC	??_C@_1KI@ECMHEDEI@?$AAd?$AAr?$AAa?$AAw?$AAl?$AAi?$AAs?$AAt?$AA_?$AAn?$AAo?$AA?5?$AA?$DM?$AA?5?$AA?$CI@ ; `string'
PUBLIC	??_C@_0N@MFFOHPLI@?$CD?$CDBackground@		; `string'
PUBLIC	??_C@_0N@MFHPHIIJ@?$CD?$CDForeground@		; `string'
PUBLIC	?__LINE__Var@?0??UpdateMouseMovingWindowNewFrame@ImGui@@YAXXZ@4JA ; `ImGui::UpdateMouseMovingWindowNewFrame'::`1'::__LINE__Var
PUBLIC	??_C@_1FK@PIJFGHBG@?$AAg?$AA?4?$AAM?$AAo?$AAv?$AAi?$AAn?$AAg?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5@ ; `string'
PUBLIC	?__LINE__Var@?0??NewFrame@ImGui@@YAXXZ@4JA	; `ImGui::NewFrame'::`1'::__LINE__Var
PUBLIC	??_C@_1CG@DCCAIGN@?$AAg?$AA?4?$AAF?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAI?$AAs?$AAL?$AAo?$AAa?$AAd?$AAe@ ; `string'
PUBLIC	??_C@_1FG@PEGMPHDA@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AAF?$AAo?$AAc?$AAu?$AAs?$AAO@ ; `string'
PUBLIC	??_C@_0P@IMLDNMEK@Debug?$CD?$CDDefault@		; `string'
PUBLIC	??_C@_1FE@JJEPGBAD@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@ ; `string'
PUBLIC	??_C@_0BC@JHPKFIGH@HoveredId?3?50x?$CF08X@	; `string'
PUBLIC	??_C@_0BM@IIPBLKLJ@Press?5ESC?5to?5abort?5picking?4@ ; `string'
PUBLIC	??_C@_0BM@OPIPEIJO@Click?5to?5break?5in?5debugger?$CB@ ; `string'
PUBLIC	?__LINE__Var@?0??Initialize@ImGui@@YAXPEAUImGuiContext@@@Z@4JA ; `ImGui::Initialize'::`1'::__LINE__Var
PUBLIC	??_C@_1EI@IBBBPCIN@?$AA?$CB?$AAg?$AA?4?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AA?5@ ; `string'
PUBLIC	??_C@_06BKKJGDHO@Window@			; `string'
PUBLIC	?__LINE__Var@?0??AddDrawListToDrawData@@YAXPEAU?$ImVector@PEAUImDrawList@@@@PEAUImDrawList@@@Z@4JA ; `AddDrawListToDrawData'::`1'::__LINE__Var
PUBLIC	??_C@_1OG@INBPPELJ@?$AAd?$AAr?$AAa?$AAw?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AAV?$AAt?$AAx?$AAB@ ; `string'
PUBLIC	??_C@_1OG@ICPLNDEC@?$AAd?$AAr?$AAa?$AAw?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AAI?$AAd?$AAx?$AAB@ ; `string'
PUBLIC	??_C@_1HI@ENCAIJO@?$AA?$CI?$AAi?$AAn?$AAt?$AA?$CJ?$AAd?$AAr?$AAa?$AAw?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?9@ ; `string'
PUBLIC	??_C@_0EJ@CDENJONN@Too?5many?5vertices?5in?5ImDrawList@ ; `string'
PUBLIC	??_C@_1OI@BGNIEPFI@?$AAd?$AAr?$AAa?$AAw?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AA_?$AAV?$AAt?$AAx@ ; `string'
PUBLIC	?__LINE__Var@?0??EndFrame@ImGui@@YAXXZ@4JA	; `ImGui::EndFrame'::`1'::__LINE__Var
PUBLIC	??_C@_1BM@ICEHPMG@?$AAg?$AA?4?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd@ ; `string'
PUBLIC	??_C@_0CC@DPHJAHCA@Forgot?5to?5call?5ImGui?3?3NewFrame?$CI@ ; `string'
PUBLIC	??_C@_1HE@BFIFNNBB@?$AAg?$AA?4?$AAW?$AAi?$AAt?$AAh?$AAi?$AAn?$AAF?$AAr?$AAa?$AAm?$AAe?$AAS?$AAc@ ; `string'
PUBLIC	??_C@_03KHICJKCI@?4?4?4@			; `string'
PUBLIC	??_C@_1FO@HCCAMJFH@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5@ ; `string'
PUBLIC	?__LINE__Var@?0??Render@ImGui@@YAXXZ@4JA	; `ImGui::Render'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??GetKeyIndex@ImGui@@YAHH@Z@4JA	; `ImGui::GetKeyIndex'::`1'::__LINE__Var
PUBLIC	??_C@_1FK@NOIPPDJE@?$AAi?$AAm?$AAg?$AAu?$AAi?$AA_?$AAk?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5@ ; `string'
PUBLIC	?__LINE__Var@?0??IsKeyDown@ImGui@@YA_NH@Z@4JA	; `ImGui::IsKeyDown'::`1'::__LINE__Var
PUBLIC	??_C@_1ME@GKDHJBBA@?$AAu?$AAs?$AAe?$AAr?$AA_?$AAk?$AAe?$AAy?$AA_?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5@ ; `string'
PUBLIC	?__LINE__Var@?0??GetKeyPressedAmount@ImGui@@YAHHMM@Z@4JA ; `ImGui::GetKeyPressedAmount'::`1'::__LINE__Var
PUBLIC	??_C@_1LA@MNMNDIA@?$AAk?$AAe?$AAy?$AA_?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5@ ; `string'
PUBLIC	?__LINE__Var@?0??IsKeyPressed@ImGui@@YA_NH_N@Z@4JA ; `ImGui::IsKeyPressed'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??IsKeyReleased@ImGui@@YA_NH@Z@4JA ; `ImGui::IsKeyReleased'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??IsMouseDown@ImGui@@YA_NH@Z@4JA	; `ImGui::IsMouseDown'::`1'::__LINE__Var
PUBLIC	??_C@_1KI@IKDPMEHK@?$AAb?$AAu?$AAt?$AAt?$AAo?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	?__LINE__Var@?0??IsMouseClicked@ImGui@@YA_NH_N@Z@4JA ; `ImGui::IsMouseClicked'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??IsMouseReleased@ImGui@@YA_NH@Z@4JA ; `ImGui::IsMouseReleased'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??IsMouseDoubleClicked@ImGui@@YA_NH@Z@4JA ; `ImGui::IsMouseDoubleClicked'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??IsMouseDragPastThreshold@ImGui@@YA_NHM@Z@4JA ; `ImGui::IsMouseDragPastThreshold'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??IsMouseDragging@ImGui@@YA_NHM@Z@4JA ; `ImGui::IsMouseDragging'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z@4JA ; `ImGui::IsMousePosValid'::`1'::__LINE__Var
PUBLIC	??_C@_1BI@DLHMADOF@?$AAG?$AAI?$AAm?$AAG?$AAu?$AAi?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	?__LINE__Var@?0??GetMouseDragDelta@ImGui@@YA?AUImVec2@@HM@Z@4JA ; `ImGui::GetMouseDragDelta'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??ResetMouseDragDelta@ImGui@@YAXH@Z@4JA ; `ImGui::ResetMouseDragDelta'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SetActiveIdUsingNavAndKeys@ImGui@@YAXXZ@4JA ; `ImGui::SetActiveIdUsingNavAndKeys'::`1'::__LINE__Var
PUBLIC	??_C@_1CA@MJFBPLLL@?$AAg?$AA?4?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AAI?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_0L@BDFLDJGI@?$CFs?1?$CFs_?$CF08X@		; `string'
PUBLIC	??_C@_07KBCBAKFA@?$CFs?1?$CF08X@		; `string'
PUBLIC	?__LINE__Var@?0??BeginChild@ImGui@@YA_NIAEBUImVec2@@_NH@Z@4JA ; `ImGui::BeginChild'::`1'::__LINE__Var
PUBLIC	??_C@_1BA@DDOODPOM@?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	?__LINE__Var@?0??EndChild@ImGui@@YAXXZ@4JA	; `ImGui::EndChild'::`1'::__LINE__Var
PUBLIC	??_C@_1DE@LOOJAFFK@?$AAg?$AA?4?$AAW?$AAi?$AAt?$AAh?$AAi?$AAn?$AAE?$AAn?$AAd?$AAC?$AAh?$AAi?$AAl@ ; `string'
PUBLIC	??_C@_1FK@ONDIMCKL@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG@ ; `string'
PUBLIC	?__LINE__Var@?0??GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z@4JA ; `GetResizeBorderRect'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??GetWindowResizeCornerID@ImGui@@YAIPEAUImGuiWindow@@H@Z@4JA ; `ImGui::GetWindowResizeCornerID'::`1'::__LINE__Var
PUBLIC	??_C@_1CA@EBHOHNJC@?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AA?5?$AA?$DM?$AA?5?$AA4@ ; `string'
PUBLIC	??_C@_07HDHBJEOI@?$CDRESIZE@			; `string'
PUBLIC	?__LINE__Var@?0??GetWindowResizeBorderID@ImGui@@YAIPEAUImGuiWindow@@H@Z@4JA ; `ImGui::GetWindowResizeBorderID'::`1'::__LINE__Var
PUBLIC	??_C@_1CI@OAHDFFF@?$AAd?$AAi?$AAr?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAd?$AAi?$AAr@ ; `string'
PUBLIC	?__LINE__Var@?0??RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z@4JA ; `ImGui::RenderWindowDecorations'::`1'::__LINE__Var
PUBLIC	??_C@_1DA@CEGNFBKM@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAB?$AAe?$AAg?$AAi?$AAn?$AAC?$AAo@ ; `string'
PUBLIC	??_C@_09BJOGEADB@?$CDCOLLAPSE@			; `string'
PUBLIC	??_C@_06KIIKKNMI@?$CDCLOSE@			; `string'
PUBLIC	?__LINE__Var@?0??UpdateWindowParentAndRootLinks@ImGui@@YAXPEAUImGuiWindow@@H0@Z@4JA ; `ImGui::UpdateWindowParentAndRootLinks'::`1'::__LINE__Var
PUBLIC	??_C@_1FI@JBDNHGBD@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAR?$AAo?$AAo?$AAt?$AAW?$AAi?$AAn@ ; `string'
PUBLIC	?__LINE__Var@?0??Begin@ImGui@@YA_NPEBDPEA_NH@Z@4JA ; `ImGui::Begin'::`1'::__LINE__Var
PUBLIC	??_C@_1DK@CDEKKEL@?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AAa@ ; `string'
PUBLIC	??_C@_1CG@FEBKCKMN@?$AAg?$AA?4?$AAW?$AAi?$AAt?$AAh?$AAi?$AAn?$AAF?$AAr?$AAa?$AAm?$AAe?$AAS?$AAc@ ; `string'
PUBLIC	??_C@_1EE@GGBMECGG@?$AAg?$AA?4?$AAF?$AAr?$AAa?$AAm?$AAe?$AAC?$AAo?$AAu?$AAn?$AAt?$AAE?$AAn?$AAd@ ; `string'
PUBLIC	??_C@_1EK@IADLALGG@?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AAI?$AAm?$AAG?$AAu?$AAi?$AAW?$AAi@ ; `string'
PUBLIC	??_C@_1HM@BDHFFAHO@?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA_?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CB@ ; `string'
PUBLIC	??_C@_1EO@GBMDJNAA@?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA_?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CG@ ; `string'
PUBLIC	??_C@_1KO@GJELMBN@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAD?$AAr?$AAa?$AAw?$AAL?$AAi?$AAs@ ; `string'
PUBLIC	??_C@_0M@OFKBALAI@?$CDFOCUSSCOPE@		; `string'
PUBLIC	??_C@_1FG@JPKHCDHL@?$AA?$CI?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AAI?$AAm?$AAG?$AAu?$AAi?$AAW@ ; `string'
PUBLIC	?__LINE__Var@?0??End@ImGui@@YAXXZ@4JA		; `ImGui::End'::`1'::__LINE__Var
PUBLIC	??_C@_0BO@JOGPJJCM@Calling?5End?$CI?$CJ?5too?5many?5times?$CB@ ; `string'
PUBLIC	??_C@_1IG@DKOLGHNA@?$AA?$CI?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo@ ; `string'
PUBLIC	??_C@_1DM@FOOGCAMP@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@ ; `string'
PUBLIC	??_C@_0CE@DEHLBEMA@Must?5call?5EndChild?$CI?$CJ?5and?5not?5En@ ; `string'
PUBLIC	??_C@_1HI@MIOLBHIM@?$AA?$CI?$AAg?$AA?4?$AAW?$AAi?$AAt?$AAh?$AAi?$AAn?$AAE?$AAn?$AAd?$AAC?$AAh?$AAi@ ; `string'
PUBLIC	?__LINE__Var@?0??BringWindowToFocusFront@ImGui@@YAXPEAUImGuiWindow@@@Z@4JA ; `ImGui::BringWindowToFocusFront'::`1'::__LINE__Var
PUBLIC	??_C@_1DK@MAFHBAAP@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAw?$AAi?$AAn?$AAd?$AAo@ ; `string'
PUBLIC	??_C@_1FC@LPBCMIDE@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AAF?$AAo?$AAc?$AAu?$AAs?$AAO@ ; `string'
PUBLIC	??_C@_1FA@BPAOPAIC@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AAF?$AAo?$AAc?$AAu?$AAs?$AAO@ ; `string'
PUBLIC	?__LINE__Var@?0??FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z@4JA ; `ImGui::FocusWindow'::`1'::__LINE__Var
PUBLIC	??_C@_1EO@CDDKCBBF@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5@ ; `string'
PUBLIC	?__LINE__Var@?0??FocusTopMostWindowUnderOne@ImGui@@YAXPEAUImGuiWindow@@0@Z@4JA ; `ImGui::FocusTopMostWindowUnderOne'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SetCurrentFont@ImGui@@YAXPEAUImFont@@@Z@4JA ; `ImGui::SetCurrentFont'::`1'::__LINE__Var
PUBLIC	??_C@_1DC@JABAIOEL@?$AAf?$AAo?$AAn?$AAt?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAf?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAI@ ; `string'
PUBLIC	??_C@_1CG@FNLEAELN@?$AAf?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAS?$AAc?$AAa?$AAl?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@ ; `string'
PUBLIC	?__LINE__Var@?0??PushItemFlag@ImGui@@YAXH_N@Z@4JA ; `ImGui::PushItemFlag'::`1'::__LINE__Var
PUBLIC	??_C@_1EM@MHLLLNGK@?$AAi?$AAt?$AAe?$AAm?$AA_?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAg@ ; `string'
PUBLIC	?__LINE__Var@?0??PopItemFlag@ImGui@@YAXXZ@4JA	; `ImGui::PopItemFlag'::`1'::__LINE__Var
PUBLIC	??_C@_1DE@LBPOLBMJ@?$AAg?$AA?4?$AAI?$AAt?$AAe?$AAm?$AAF?$AAl?$AAa?$AAg?$AAs?$AAS?$AAt?$AAa?$AAc@ ; `string'
PUBLIC	?__LINE__Var@?0??IsWindowHovered@ImGui@@YA_NH@Z@4JA ; `ImGui::IsWindowHovered'::`1'::__LINE__Var
PUBLIC	??_C@_1GK@LMFCIBAK@?$AA?$CI?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AAI?$AAm?$AAG?$AAu?$AAi?$AAH@ ; `string'
PUBLIC	?__LINE__Var@?0??IsWindowFocused@ImGui@@YA_NH@Z@4JA ; `ImGui::IsWindowFocused'::`1'::__LINE__Var
PUBLIC	??_C@_1CA@CLMFAGNB@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@ ; `string'
PUBLIC	?__LINE__Var@?0??SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z@4JA ; `ImGui::SetWindowPos'::`1'::__LINE__Var
PUBLIC	??_C@_1EE@PBEDMJFL@?$AAc?$AAo?$AAn?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAI?$AAm@ ; `string'
PUBLIC	?__LINE__Var@?0??SetWindowSize@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z@4JA ; `ImGui::SetWindowSize'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SetWindowHitTestHole@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@1@Z@4JA ; `ImGui::SetWindowHitTestHole'::`1'::__LINE__Var
PUBLIC	??_C@_1DO@GKCJBPLO@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAH?$AAi?$AAt?$AAT?$AAe?$AAs?$AAt@ ; `string'
PUBLIC	?__LINE__Var@?0??SetNextWindowPos@ImGui@@YAXAEBUImVec2@@H0@Z@4JA ; `ImGui::SetNextWindowPos'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SetNextWindowSize@ImGui@@YAXAEBUImVec2@@H@Z@4JA ; `ImGui::SetNextWindowSize'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SetNextWindowCollapsed@ImGui@@YAX_NH@Z@4JA ; `ImGui::SetNextWindowCollapsed'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SetWindowFontScale@ImGui@@YAXM@Z@4JA ; `ImGui::SetWindowFontScale'::`1'::__LINE__Var
PUBLIC	??_C@_1BK@JIIMNACC@?$AAs?$AAc?$AAa?$AAl?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AA0?$AAf@ ; `string'
PUBLIC	?__LINE__Var@?0??PopFocusScope@ImGui@@YAXXZ@4JA	; `ImGui::PopFocusScope'::`1'::__LINE__Var
PUBLIC	??_C@_1DG@FEBJKFDF@?$AAg?$AA?4?$AAF?$AAo?$AAc?$AAu?$AAs?$AAS?$AAc?$AAo?$AAp?$AAe?$AAS?$AAt?$AAa@ ; `string'
PUBLIC	?__LINE__Var@?0??SetKeyboardFocusHere@ImGui@@YAXH@Z@4JA ; `ImGui::SetKeyboardFocusHere'::`1'::__LINE__Var
PUBLIC	??_C@_1BK@BEOECDF@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA?9?$AA1@ ; `string'
PUBLIC	?__LINE__Var@?0??PopID@ImGui@@YAXXZ@4JA		; `ImGui::PopID'::`1'::__LINE__Var
PUBLIC	??_C@_1DC@KOOPJPAL@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAI?$AAD?$AAS?$AAt?$AAa?$AAc?$AAk@ ; `string'
PUBLIC	?__LINE__Var@?0??DebugCheckVersionAndDataLayout@ImGui@@YA_NPEBD_K11111@Z@4JA ; `ImGui::DebugCheckVersionAndDataLayout'::`1'::__LINE__Var
PUBLIC	??_C@_0BL@NJMNENPC@Mismatched?5version?5string?$CB@ ; `string'
PUBLIC	??_C@_1IC@BBJPBEHP@?$AAs?$AAt?$AAr?$AAc?$AAm?$AAp?$AA?$CI?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?0@ ; `string'
PUBLIC	??_C@_0BK@FMAIDOGC@Mismatched?5struct?5layout?$CB@ ; `string'
PUBLIC	??_C@_1HA@BDEJLFJB@?$AAs?$AAz?$AA_?$AAi?$AAo?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf@ ; `string'
PUBLIC	??_C@_1HM@KECEGJKN@?$AAs?$AAz?$AA_?$AAs?$AAt?$AAy?$AAl?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz@ ; `string'
PUBLIC	??_C@_1HC@KAEGCKOM@?$AAs?$AAz?$AA_?$AAv?$AAe?$AAc?$AA2?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe@ ; `string'
PUBLIC	??_C@_1HC@CFCKCFEN@?$AAs?$AAz?$AA_?$AAv?$AAe?$AAc?$AA4?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe@ ; `string'
PUBLIC	??_C@_1HK@HMLAJPFG@?$AAs?$AAz?$AA_?$AAv?$AAe?$AAr?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe@ ; `string'
PUBLIC	??_C@_1HG@IIMLENED@?$AAs?$AAz?$AA_?$AAi?$AAd?$AAx?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo@ ; `string'
PUBLIC	?__LINE__Var@?0??ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ@4JA ; `ImGui::ErrorCheckNewFrameSanityChecks'::`1'::__LINE__Var
PUBLIC	??_C@_0BL@INIAEKJF@Need?5a?5positive?5DeltaTime?$CB@ ; `string'
PUBLIC	??_C@_1JK@GMCNDFJ@?$AA?$CI?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAD?$AAe?$AAl?$AAt?$AAa?$AAT?$AAi?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0EI@GHMDJNFG@Forgot?5to?5call?5Render?$CI?$CJ?5or?5EndF@ ; `string'
PUBLIC	??_C@_1BAM@KGEBLPLP@?$AA?$CI?$AAg?$AA?4?$AAF?$AAr?$AAa?$AAm?$AAe?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN@ ; `string'
PUBLIC	??_C@_0BL@LDNBLEGM@Invalid?5DisplaySize?5value?$CB@ ; `string'
PUBLIC	??_C@_1LC@PGGPGCKP@?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAS?$AAi?$AAz@ ; `string'
PUBLIC	??_C@_0KM@BGIGOFPN@Font?5Atlas?5not?5built?$CB?5Make?5sure@ ; `string'
PUBLIC	??_C@_1BIO@NEOCPKAM@?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAF?$AAo?$AAn?$AAt?$AAs?$AA?9?$AA?$DO?$AAI?$AAs?$AAB@ ; `string'
PUBLIC	??_C@_0BH@EAJIBGFB@Invalid?5style?5setting?$CB@	; `string'
PUBLIC	??_C@_1IA@HHCKGFKM@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAC?$AAu?$AAr?$AAv?$AAe?$AAT?$AAe@ ; `string'
PUBLIC	??_C@_1IM@BBAKCECH@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAC?$AAi?$AAr?$AAc?$AAl?$AAe?$AAT@ ; `string'
PUBLIC	??_C@_1JG@HBCMMEC@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAA?$AAl?$AAp?$AAh?$AAa?$AA?5?$AA?$DO@ ; `string'
PUBLIC	??_C@_0BH@MHAAAKJO@Invalid?5style?5setting?4@	; `string'
PUBLIC	??_C@_1LO@BODAGONP@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAM@ ; `string'
PUBLIC	??_C@_1BDK@FANHHEDI@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAM@ ; `string'
PUBLIC	??_C@_0FH@NIAAMBB@io?4KeyMap?$FL?$FN?5contains?5an?5out?5of?5@ ; `string'
PUBLIC	??_C@_1BHO@ICEKAIPC@?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAK?$AAe?$AAy?$AAM?$AAa?$AAp?$AA?$FL?$AAn?$AA?$FN?$AA?5@ ; `string'
PUBLIC	??_C@_0EA@IDFJHFOM@ImGuiKey_Space?5is?5not?5mapped?0?5r@ ; `string'
PUBLIC	??_C@_1MO@ONPFNFPJ@?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAK?$AAe?$AAy?$AAM?$AAa?$AAp?$AA?$FL?$AAI?$AAm?$AAG@ ; `string'
PUBLIC	?__LINE__Var@?0??ErrorCheckEndFrameSanityChecks@ImGui@@YAXXZ@4JA ; `ImGui::ErrorCheckEndFrameSanityChecks'::`1'::__LINE__Var
PUBLIC	??_C@_0EH@IKLAPCIG@Mismatching?5io?4KeyCtrl?1io?4KeySh@ ; `string'
PUBLIC	??_C@_1BAE@HHDAPELE@?$AA?$CI?$AAk?$AAe?$AAy?$AA_?$AAm?$AAo?$AAd?$AA_?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_0FI@LNDFABED@Mismatched?5Begin?1BeginChild?5vs?5@ ; `string'
PUBLIC	??_C@_1PM@PNPJAGAO@?$AA?$CI?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo@ ; `string'
PUBLIC	??_C@_0FH@BPHEKLEJ@Mismatched?5Begin?1BeginChild?5vs?5@ ; `string'
PUBLIC	??_C@_1PK@KPEOFHN@?$AA?$CI?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo@ ; `string'
PUBLIC	??_C@_0BH@DOAAHNFO@Missing?5EndGroup?5call?$CB@	; `string'
PUBLIC	??_C@_1GK@BADAAGFG@?$AA?$CI?$AAg?$AA?4?$AAG?$AAr?$AAo?$AAu?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAS@ ; `string'
PUBLIC	?__LINE__Var@?0??ErrorCheckEndFrameRecover@ImGui@@YAXP6AXPEAXPEBDZZ0@Z@4JA ; `ImGui::ErrorCheckEndFrameRecover'::`1'::__LINE__Var
PUBLIC	??_C@_0CK@MCEMIAFO@Recovered?5from?5missing?5EndTable@ ; `string'
PUBLIC	??_C@_1BI@JFIKNFKH@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_0CL@PFJDIEBE@Recovered?5from?5missing?5EndTabBa@ ; `string'
PUBLIC	??_C@_0CJ@OIELACHL@Recovered?5from?5missing?5TreePop?$CI@ ; `string'
PUBLIC	??_C@_0CK@EIGPLJIB@Recovered?5from?5missing?5EndGroup@ ; `string'
PUBLIC	??_C@_0CH@CBEJECIE@Recovered?5from?5missing?5PopID?$CI?$CJ?5@ ; `string'
PUBLIC	??_C@_0DP@GKCPPFKN@Recovered?5from?5missing?5PopStyle@ ; `string'
PUBLIC	??_C@_0CN@EFPNNJDL@Recovered?5from?5missing?5PopStyle@ ; `string'
PUBLIC	??_C@_0CP@NEGGJCEB@Recovered?5from?5missing?5PopFocus@ ; `string'
PUBLIC	??_C@_1EE@JEPGGIKH@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@ ; `string'
PUBLIC	??_C@_1DE@IPHBHHKI@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAg?$AA?4?$AAC?$AAu?$AAr@ ; `string'
PUBLIC	??_C@_0CL@PKEBJEJO@Recovered?5from?5missing?5EndChild@ ; `string'
PUBLIC	??_C@_0CG@PCFKFCHL@Recovered?5from?5missing?5End?$CI?$CJ?5fo@ ; `string'
PUBLIC	?__LINE__Var@?0??CompareWithCurrentState@ImGuiStackSizes@@QEAAXXZ@4JA ; `ImGuiStackSizes::CompareWithCurrentState'::`1'::__LINE__Var
PUBLIC	??_C@_0CL@ILEOFLMG@PushID?1PopID?5or?5TreeNode?1TreePo@ ; `string'
PUBLIC	??_C@_1KM@GPENMPEF@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAI?$AAD?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?5?$AA?$DN@ ; `string'
PUBLIC	??_C@_0BO@DCHDJEI@BeginGroup?1EndGroup?5Mismatch?$CB@ ; `string'
PUBLIC	??_C@_1JC@FNBHEOLL@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAG?$AAr?$AAo?$AAu?$AAp?$AAS?$AAt?$AAa?$AAc@ ; `string'
PUBLIC	??_C@_0DD@CEJDOFG@BeginPopup?1EndPopup?5or?5BeginMen@ ; `string'
PUBLIC	??_C@_1NA@IJOEJOEN@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAB?$AAe?$AAg?$AAi?$AAn?$AAP?$AAo?$AAp?$AAu@ ; `string'
PUBLIC	??_C@_0CH@CECAGKKJ@PushStyleColor?1PopStyleColor?5Mi@ ; `string'
PUBLIC	??_C@_1KE@NCANFJNK@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAC?$AAo?$AAl?$AAo?$AAr?$AAS?$AAt?$AAa?$AAc@ ; `string'
PUBLIC	??_C@_0CD@DKPEIHNP@PushStyleVar?1PopStyleVar?5Mismat@ ; `string'
PUBLIC	??_C@_1KI@DHADCEOH@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAS?$AAt?$AAy?$AAl?$AAe?$AAV?$AAa?$AAr?$AAS@ ; `string'
PUBLIC	??_C@_0BL@JNELFKGN@PushFont?1PopFont?5Mismatch?$CB@ ; `string'
PUBLIC	??_C@_1II@EKMLEPAG@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAF?$AAo?$AAn?$AAt?$AAS?$AAt?$AAa?$AAc?$AAk@ ; `string'
PUBLIC	??_C@_0CH@BLGIKBOK@PushFocusScope?1PopFocusScope?5Mi@ ; `string'
PUBLIC	??_C@_1LI@DNMDNCBF@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAF?$AAo?$AAc?$AAu?$AAs?$AAS?$AAc?$AAo?$AAp@ ; `string'
PUBLIC	?__LINE__Var@?0??EndGroup@ImGui@@YAXXZ@4JA	; `ImGui::EndGroup'::`1'::__LINE__Var
PUBLIC	??_C@_1CM@HMCHNBOE@?$AAg?$AA?4?$AAG?$AAr?$AAo?$AAu?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAS?$AAi@ ; `string'
PUBLIC	??_C@_1EE@BNODPOAB@?$AAg?$AAr?$AAo?$AAu?$AAp?$AA_?$AAd?$AAa?$AAt?$AAa?$AA?4?$AAW?$AAi?$AAn?$AAd@ ; `string'
PUBLIC	?__LINE__Var@?0??SetScrollFromPosX@ImGui@@YAXPEAUImGuiWindow@@MM@Z@4JA ; `ImGui::SetScrollFromPosX'::`1'::__LINE__Var
PUBLIC	??_C@_1GC@BIJJIADH@?$AAc?$AAe?$AAn?$AAt?$AAe?$AAr?$AA_?$AAx?$AA_?$AAr?$AAa?$AAt?$AAi?$AAo?$AA?5@ ; `string'
PUBLIC	?__LINE__Var@?0??SetScrollFromPosY@ImGui@@YAXPEAUImGuiWindow@@MM@Z@4JA ; `ImGui::SetScrollFromPosY'::`1'::__LINE__Var
PUBLIC	??_C@_1GC@LDEACFFC@?$AAc?$AAe?$AAn?$AAt?$AAe?$AAr?$AA_?$AAy?$AA_?$AAr?$AAa?$AAt?$AAi?$AAo?$AA?5@ ; `string'
PUBLIC	??_C@_0P@DHLMFJKK@?$CD?$CDTooltip_?$CF02d@	; `string'
PUBLIC	?__LINE__Var@?0??EndTooltip@ImGui@@YAXXZ@4JA	; `ImGui::EndTooltip'::`1'::__LINE__Var
PUBLIC	??_C@_1HC@IKPEGHCP@?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo@ ; `string'
PUBLIC	?__LINE__Var@?0??IsPopupOpen@ImGui@@YA_NIH@Z@4JA ; `ImGui::IsPopupOpen'::`1'::__LINE__Var
PUBLIC	??_C@_1BA@OHMFOIK@?$AAi?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	?__LINE__Var@?0??IsPopupOpen@ImGui@@YA_NPEBDH@Z@4JA ; `ImGui::IsPopupOpen'::`1'::__LINE__Var
PUBLIC	??_C@_1KI@JIHIJAJC@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAu?$AAs@ ; `string'
PUBLIC	?__LINE__Var@?0??ClosePopupsOverWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z@4JA ; `ImGui::ClosePopupsOverWindow'::`1'::__LINE__Var
PUBLIC	??_C@_1GI@FJFNMD@?$AA?$CI?$AAp?$AAo?$AAp?$AAu?$AAp?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO@ ; `string'
PUBLIC	?__LINE__Var@?0??ClosePopupToLevel@ImGui@@YAXH_N@Z@4JA ; `ImGui::ClosePopupToLevel'::`1'::__LINE__Var
PUBLIC	??_C@_1GI@BPADGCJE@?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5@ ; `string'
PUBLIC	??_C@_0M@NANGKBBK@?$CD?$CDMenu_?$CF02d@		; `string'
PUBLIC	??_C@_0N@PIPFDMLM@?$CD?$CDPopup_?$CF08x@	; `string'
PUBLIC	?__LINE__Var@?0??EndPopup@ImGui@@YAXXZ@4JA	; `ImGui::EndPopup'::`1'::__LINE__Var
PUBLIC	??_C@_1EO@MGPJKAKN@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG@ ; `string'
PUBLIC	??_C@_1DG@NPFLFCJJ@?$AAg?$AA?4?$AAB?$AAe?$AAg?$AAi?$AAn?$AAP?$AAo?$AAp?$AAu?$AAp?$AAS?$AAt?$AAa@ ; `string'
PUBLIC	?__LINE__Var@?0??OpenPopupOnItemClick@ImGui@@YAXPEBDH@Z@4JA ; `ImGui::OpenPopupOnItemClick'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??BeginPopupContextItem@ImGui@@YA_NPEBDH@Z@4JA ; `ImGui::BeginPopupContextItem'::`1'::__LINE__Var
PUBLIC	??_C@_0P@DCJGJLLM@window_context@		; `string'
PUBLIC	??_C@_0N@OOFNFKBH@void_context@			; `string'
PUBLIC	?__LINE__Var@?0??FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z@4JA ; `ImGui::FindBestWindowPosForPopup'::`1'::__LINE__Var
PUBLIC	??_C@_1DE@NAFIGFGG@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@ ; `string'
PUBLIC	?__LINE__Var@?0??SetNavID@ImGui@@YAXIW4ImGuiNavLayer@@IAEBUImRect@@@Z@4JA ; `ImGui::SetNavID'::`1'::__LINE__Var
PUBLIC	??_C@_1CC@BGDNHLPI@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5@ ; `string'
PUBLIC	??_C@_1IG@LOIIGJJB@?$AAn?$AAa?$AAv?$AA_?$AAl?$AAa?$AAy?$AAe?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAI?$AAm@ ; `string'
PUBLIC	?__LINE__Var@?0??SetFocusID@ImGui@@YAXIPEAUImGuiWindow@@@Z@4JA ; `ImGui::SetFocusID'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??NavScoreItem@ImGui@@YA_NPEAUImGuiNavItemData@@UImRect@@@Z@4JA ; `ImGui::NavScoreItem'::`1'::__LINE__Var
PUBLIC	??_C@_1IK@IGCCKHOG@?$AA?$CI?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5@ ; `string'
PUBLIC	?__LINE__Var@?0??NavMoveRequestForward@ImGui@@YAXHHAEBUImRect@@H@Z@4JA ; `ImGui::NavMoveRequestForward'::`1'::__LINE__Var
PUBLIC	??_C@_1GA@HNMFLEAL@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAM?$AAo?$AAv?$AAe?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs@ ; `string'
PUBLIC	?__LINE__Var@?0??NavUpdateAnyRequestFlag@ImGui@@YAXXZ@4JA ; `ImGui::NavUpdateAnyRequestFlag'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??NavInitWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z@4JA ; `ImGui::NavInitWindow'::`1'::__LINE__Var
PUBLIC	??_C@_1CM@NGAIJMCF@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAg?$AA?4?$AAN?$AAa?$AAv@ ; `string'
PUBLIC	?__LINE__Var@?0??NavUpdate@ImGui@@YAXXZ@4JA	; `ImGui::NavUpdate'::`1'::__LINE__Var
PUBLIC	??_C@_1CC@PCNOPHOI@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAM?$AAo?$AAv?$AAe?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs@ ; `string'
PUBLIC	??_C@_1EG@OLANNBKO@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAL?$AAa?$AAy?$AAe?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1DG@HPGLIPGM@?$AAc?$AAh?$AAi?$AAl?$AAd?$AA_?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAC@ ; `string'
PUBLIC	??_C@_1EO@NJCLOIHM@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAe?$AAD?$AAo@ ; `string'
PUBLIC	??_C@_1IG@KDKGHOJC@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAM?$AAo?$AAv?$AAe?$AAD?$AAi?$AAr?$AA?5?$AA?$CB?$AA?$DN@ ; `string'
PUBLIC	??_C@_1HC@ODAAGLGB@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAM?$AAo?$AAv?$AAe?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs@ ; `string'
PUBLIC	??_C@_1DO@NFHNJCFP@?$AA?$CB?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAS?$AAc?$AAo?$AAr?$AAi?$AAn?$AAg?$AAR?$AAe@ ; `string'
PUBLIC	?__LINE__Var@?0??NavUpdateMoveResult@ImGui@@YAXXZ@4JA ; `ImGui::NavUpdateMoveResult'::`1'::__LINE__Var
PUBLIC	??_C@_1DM@EKPCIOHK@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	?__LINE__Var@?0??NavEndFrame@ImGui@@YAXXZ@4JA	; `ImGui::NavEndFrame'::`1'::__LINE__Var
PUBLIC	??_C@_1CA@PADPOC@?$AAm?$AAo?$AAv?$AAe?$AA_?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	?__LINE__Var@?0??FindWindowFocusIndex@ImGui@@YAHPEAUImGuiWindow@@@Z@4JA ; `ImGui::FindWindowFocusIndex'::`1'::__LINE__Var
PUBLIC	??_C@_1EK@IMFCDJFP@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AAF?$AAo?$AAc?$AAu?$AAs?$AAO@ ; `string'
PUBLIC	?__LINE__Var@?0??NavUpdateWindowingHighlightWindow@@YAXH@Z@4JA ; `NavUpdateWindowingHighlightWindow'::`1'::__LINE__Var
PUBLIC	??_C@_1CK@OIBCGJMF@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAi?$AAn?$AAg?$AAT@ ; `string'
PUBLIC	??_C@_07NPLNEKJH@?$CIPopup?$CJ@			; `string'
PUBLIC	??_C@_0O@BKOLOJFE@?$CD?$CDMainMenuBar@		; `string'
PUBLIC	??_C@_0BA@KDPNEDEH@?$CIMain?5menu?5bar?$CJ@	; `string'
PUBLIC	??_C@_0L@JOJOIPFK@?$CIUntitled?$CJ@		; `string'
PUBLIC	?__LINE__Var@?0??NavUpdateWindowingOverlay@ImGui@@YAXXZ@4JA ; `ImGui::NavUpdateWindowingOverlay'::`1'::__LINE__Var
PUBLIC	??_C@_1DE@DBGGCEBB@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAi?$AAn?$AAg?$AAT@ ; `string'
PUBLIC	??_C@_0BE@EBHFKNCA@?$CD?$CD?$CDNavWindowingList@ ; `string'
PUBLIC	?__LINE__Var@?0??BeginDragDropSource@ImGui@@YA_NH@Z@4JA ; `ImGui::BeginDragDropSource'::`1'::__LINE__Var
PUBLIC	??_C@_0O@KMAIKFAM@?$CDSourceExtern@		; `string'
PUBLIC	??_C@_1BO@PJLJNAI@?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA_?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	?__LINE__Var@?0??EndDragDropSource@ImGui@@YAXXZ@4JA ; `ImGui::EndDragDropSource'::`1'::__LINE__Var
PUBLIC	??_C@_1CC@NMCEOFEI@?$AAg?$AA?4?$AAD?$AAr?$AAa?$AAg?$AAD?$AAr?$AAo?$AAp?$AAA?$AAc?$AAt?$AAi?$AAv@ ; `string'
PUBLIC	??_C@_0CD@GALGOANB@Not?5after?5a?5BeginDragDropSource@ ; `string'
PUBLIC	??_C@_1HO@KPNGOBLC@?$AAg?$AA?4?$AAD?$AAr?$AAa?$AAg?$AAD?$AAr?$AAo?$AAp?$AAW?$AAi?$AAt?$AAh?$AAi@ ; `string'
PUBLIC	?__LINE__Var@?0??SetDragDropPayload@ImGui@@YA_NPEBDPEBX_KH@Z@4JA ; `ImGui::SetDragDropPayload'::`1'::__LINE__Var
PUBLIC	??_C@_1BE@MGJHACMG@?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_0CP@PLNIIIKE@Payload?5type?5can?5be?5at?5most?532?5@ ; `string'
PUBLIC	??_C@_1BAG@HHAODBGF@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAt?$AAy?$AAp?$AAe?$AA?$CJ?$AA?5?$AA?$DM?$AA?5@ ; `string'
PUBLIC	??_C@_1HM@NCOAFGFM@?$AA?$CI?$AAd?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAd@ ; `string'
PUBLIC	??_C@_1GG@ONMAEHAO@?$AAc?$AAo?$AAn?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAI?$AAm?$AAG?$AAu?$AAi?$AAC?$AAo@ ; `string'
PUBLIC	??_C@_1CM@DLJODDMB@?$AAp?$AAa?$AAy?$AAl?$AAo?$AAa?$AAd?$AA?4?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAI@ ; `string'
PUBLIC	?__LINE__Var@?0??BeginDragDropTargetCustom@ImGui@@YA_NAEBUImRect@@I@Z@4JA ; `ImGui::BeginDragDropTargetCustom'::`1'::__LINE__Var
PUBLIC	??_C@_1EA@CHPNIKA@?$AAg?$AA?4?$AAD?$AAr?$AAa?$AAg?$AAD?$AAr?$AAo?$AAp?$AAW?$AAi?$AAt?$AAh?$AAi@ ; `string'
PUBLIC	?__LINE__Var@?0??BeginDragDropTarget@ImGui@@YA_NXZ@4JA ; `ImGui::BeginDragDropTarget'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z@4JA ; `ImGui::AcceptDragDropPayload'::`1'::__LINE__Var
PUBLIC	??_C@_1DK@OHFCBLGB@?$AAp?$AAa?$AAy?$AAl?$AAo?$AAa?$AAd?$AA?4?$AAD?$AAa?$AAt?$AAa?$AAF?$AAr?$AAa@ ; `string'
PUBLIC	?__LINE__Var@?0??EndDragDropTarget@ImGui@@YAXXZ@4JA ; `ImGui::EndDragDropTarget'::`1'::__LINE__Var
PUBLIC	??_C@_1CO@LEPEHAFL@?$AAg?$AA?4?$AAD?$AAr?$AAa?$AAg?$AAD?$AAr?$AAo?$AAp?$AAW?$AAi?$AAt?$AAh?$AAi@ ; `string'
PUBLIC	??_C@_02PCIJFNDE@?$AN?6@			; `string'
PUBLIC	??_C@_07LFDEMEGD@?$CF?$CKs?$CF?4?$CKs@		; `string'
PUBLIC	?__LINE__Var@?0??LogBegin@ImGui@@YAXW4ImGuiLogType@@H@Z@4JA ; `ImGui::LogBegin'::`1'::__LINE__Var
PUBLIC	??_C@_1CM@DLAMPOKC@?$AAg?$AA?4?$AAL?$AAo?$AAg?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?5?$AA?$DN?$AA?$DN@ ; `string'
PUBLIC	??_C@_1BO@HOGBMEAE@?$AAg?$AA?4?$AAL?$AAo?$AAg?$AAF?$AAi?$AAl?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1CI@CDGOCLNI@?$AAg?$AA?4?$AAL?$AAo?$AAg?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAe?$AAm?$AAp@ ; `string'
PUBLIC	?__LINE__Var@?0??LogToFile@ImGui@@YAXHPEBD@Z@4JA ; `ImGui::LogToFile'::`1'::__LINE__Var
PUBLIC	??_C@_02BOGAIONP@ab@				; `string'
PUBLIC	?__LINE__Var@?0??LogFinish@ImGui@@YAXXZ@4JA	; `ImGui::LogFinish'::`1'::__LINE__Var
PUBLIC	??_C@_0L@DMNDGOCF@LogButtons@			; `string'
PUBLIC	??_C@_0L@COILDFG@Log?5To?5TTY@			; `string'
PUBLIC	??_C@_0M@KAEBEAHF@Log?5To?5File@		; `string'
PUBLIC	??_C@_0BB@CPOBJDKM@Log?5To?5Clipboard@		; `string'
PUBLIC	??_C@_0O@CONALMON@Default?5Depth@		; `string'
PUBLIC	?__LINE__Var@?0??UpdateSettings@ImGui@@YAXXZ@4JA ; `ImGui::UpdateSettings'::`1'::__LINE__Var
PUBLIC	??_C@_1DE@BLONNHPO@?$AAg?$AA?4?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AAW?$AAi?$AAn?$AAd?$AAo@ ; `string'
PUBLIC	??_C@_03OIJOKPOL@?$CD?$CD?$CD@			; `string'
PUBLIC	??_C@_02JDPG@rb@				; `string'
PUBLIC	?__LINE__Var@?0??LoadIniSettingsFromMemory@ImGui@@YAXPEBD_K@Z@4JA ; `ImGui::LoadIniSettingsFromMemory'::`1'::__LINE__Var
PUBLIC	??_C@_02BKFDOEMK@wt@				; `string'
PUBLIC	??_C@_09GOMOMIIP@Pos?$DN?$CFi?0?$CFi@		; `string'
PUBLIC	??_C@_0L@MPPKDMFA@Size?$DN?$CFi?0?$CFi@		; `string'
PUBLIC	??_C@_0N@IAKNMBB@Collapsed?$DN?$CFd@		; `string'
PUBLIC	?__LINE__Var@?0??WindowSettingsHandler_WriteAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAUImGuiTextBuffer@@@Z@4JA ; `WindowSettingsHandler_WriteAll'::`1'::__LINE__Var
PUBLIC	??_C@_1DG@BLKMIOLK@?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AA?9?$AA?$DO?$AAI?$AAD?$AA?5?$AA?$DN?$AA?$DN@ ; `string'
PUBLIC	??_C@_09HNFDDBIF@?$FL?$CFs?$FN?$FL?$CFs?$FN?6@	; `string'
PUBLIC	??_C@_0L@DDMADIHO@Pos?$DN?$CFd?0?$CFd?6@	; `string'
PUBLIC	??_C@_0M@CFANMDMP@Size?$DN?$CFd?0?$CFd?6@	; `string'
PUBLIC	??_C@_0O@JAFHMCKE@Collapsed?$DN?$CFd?6@		; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	?__LINE__Var@?0??UpdateViewportsNewFrame@ImGui@@YAXXZ@4JA ; `ImGui::UpdateViewportsNewFrame'::`1'::__LINE__Var
PUBLIC	??_C@_1CM@MPBIDJHA@?$AAg?$AA?4?$AAV?$AAi?$AAe?$AAw?$AAp?$AAo?$AAr?$AAt?$AAs?$AA?4?$AAS?$AAi?$AAz@ ; `string'
PUBLIC	??_C@_03NAEMJKHE@?$CI?$DP?$CJ@			; `string'
PUBLIC	??_C@_0BM@CNHCNFCK@Dear?5ImGui?5Metrics?1Debugger@ ; `string'
PUBLIC	??_C@_0O@NCHBJMJF@Dear?5ImGui?5?$CFs@		; `string'
PUBLIC	??_C@_0CN@EIPBEGMP@Application?5average?5?$CF?43f?5ms?1fra@ ; `string'
PUBLIC	??_C@_0CH@HHKODNBE@?$CFd?5vertices?0?5?$CFd?5indices?5?$CI?$CFd?5tri@ ; `string'
PUBLIC	??_C@_0BP@OPGGNCEP@?$CFd?5active?5windows?5?$CI?$CFd?5visible?$CJ@ ; `string'
PUBLIC	??_C@_0BG@NBPNMJGC@?$CFd?5active?5allocations@	; `string'
PUBLIC	??_C@_09DBGHEPMN@OuterRect@			; `string'
PUBLIC	??_C@_0BB@CJNOCIFN@OuterRectClipped@		; `string'
PUBLIC	??_C@_09PPJHMOMF@InnerRect@			; `string'
PUBLIC	??_C@_0O@BNFMFEHO@InnerClipRect@		; `string'
PUBLIC	??_C@_08FACDBJHD@WorkRect@			; `string'
PUBLIC	??_C@_07HLHPKMFI@Content@			; `string'
PUBLIC	??_C@_0N@FEPIKFED@ContentIdeal@			; `string'
PUBLIC	??_C@_0BC@NDBPEMLC@ContentRegionRect@		; `string'
PUBLIC	??_C@_0N@OPBPMFAC@HostClipRect@			; `string'
PUBLIC	??_C@_0BD@PAHDAJDC@BackgroundClipRect@		; `string'
PUBLIC	??_C@_0M@CDCMPDKG@ColumnsRect@			; `string'
PUBLIC	??_C@_0BA@ODEDLNCO@ColumnsWorkRect@		; `string'
PUBLIC	??_C@_0BA@JACIJDNM@ColumnsClipRect@		; `string'
PUBLIC	??_C@_0BK@BLBFMAOD@ColumnsContentHeadersUsed@	; `string'
PUBLIC	??_C@_0BL@FAEPMJDA@ColumnsContentHeadersIdeal@	; `string'
PUBLIC	??_C@_0BF@HAPEHPAK@ColumnsContentFrozen@	; `string'
PUBLIC	??_C@_0BH@NNGOPODG@ColumnsContentUnfrozen@	; `string'
PUBLIC	??_C@_05OENKALAF@Tools@				; `string'
PUBLIC	??_C@_0O@BDKBPKIH@Item?5Picker?4?4@		; `string'
PUBLIC	??_C@_0IF@BGKDCLHL@Will?5call?5the?5IM_DEBUG_BREAK?$CI?$CJ?5@ ; `string'
PUBLIC	??_C@_0BJ@HJBAEIMP@Show?5windows?5begin?5order@	; `string'
PUBLIC	??_C@_0BI@DIKJGFFM@Show?5windows?5rectangles@	; `string'
PUBLIC	??_C@_0BJ@OFHLDDCB@?$CD?$CDshow_windows_rect_type@ ; `string'
PUBLIC	??_C@_05DMJEEKMI@?8?$CFs?8?3@			; `string'
PUBLIC	??_C@_0DC@MPAIEFII@?$CI?$CF6?41f?0?$CF6?41f?$CJ?5?$CI?$CF6?41f?0?$CF6?41f?$CJ?5Siz@ ; `string'
PUBLIC	??_C@_0CC@NLEJJGFA@Show?5ImDrawCmd?5mesh?5when?5hoveri@ ; `string'
PUBLIC	??_C@_0CM@GCNMPAKG@Show?5ImDrawCmd?5bounding?5boxes?5w@ ; `string'
PUBLIC	??_C@_0BH@GINBNIDO@Show?5tables?5rectangles@	; `string'
PUBLIC	??_C@_0BI@CCENNJPN@?$CD?$CDshow_table_rects_type@ ; `string'
PUBLIC	??_C@_0CD@PGABKCAC@Table?50x?$CF08X?5?$CI?$CFd?5columns?0?5in?5?8?$CF@ ; `string'
PUBLIC	??_C@_0DJ@IFLDIHOJ@?$CI?$CF6?41f?0?$CF6?41f?$CJ?5?$CI?$CF6?41f?0?$CF6?41f?$CJ?5Siz@ ; `string'
PUBLIC	??_C@_07LDLFNPGN@Windows@			; `string'
PUBLIC	??_C@_0P@EHGADCPI@DrawLists?5?$CI?$CFd?$CJ@	; `string'
PUBLIC	??_C@_09KCCHKPGA@DrawLists@			; `string'
PUBLIC	??_C@_08IJNCDCKF@DrawList@			; `string'
PUBLIC	??_C@_0P@HKKCMMOO@Viewports?5?$CI?$CFd?$CJ@	; `string'
PUBLIC	??_C@_09GPOHHJPA@Viewports@			; `string'
PUBLIC	??_C@_0M@CMLJJLKO@Popups?5?$CI?$CFd?$CJ@	; `string'
PUBLIC	??_C@_06ENDEIGLN@Popups@			; `string'
PUBLIC	??_C@_0L@CMJPHOMG@?5ChildMenu@			; `string'
PUBLIC	??_C@_0N@FFCBFAEB@?5ChildWindow@		; `string'
PUBLIC	??_C@_04HIBGFPH@NULL@				; `string'
PUBLIC	??_C@_0CA@FCBKAHPI@PopupID?3?5?$CF08x?0?5Window?3?5?8?$CFs?8?$CFs?$CFs@ ; `string'
PUBLIC	??_C@_0O@JLIGAOM@Tab?5Bars?5?$CI?$CFd?$CJ@	; `string'
PUBLIC	??_C@_07NBICDJOO@TabBars@			; `string'
PUBLIC	??_C@_06PAFCDPCC@TabBar@			; `string'
PUBLIC	??_C@_0M@GKKKBBGH@Tables?5?$CI?$CFd?$CJ@	; `string'
PUBLIC	??_C@_06KOKNHOLC@Tables@			; `string'
PUBLIC	??_C@_0L@IBDLAPEA@Fonts?5?$CI?$CFd?$CJ@		; `string'
PUBLIC	??_C@_05ENDNDI@Fonts@				; `string'
PUBLIC	??_C@_08EEOHOBEO@Settings@			; `string'
PUBLIC	??_C@_05MDNHABIA@Clear@				; `string'
PUBLIC	??_C@_0P@BGFPLLLP@Save?5to?5memory@		; `string'
PUBLIC	??_C@_0N@PMPOLMLD@Save?5to?5disk@		; `string'
PUBLIC	??_C@_04OEDFLLKD@?$CC?$CFs?$CC@			; `string'
PUBLIC	??_C@_06CBHGEMFM@?$DMNULL?$DO@			; `string'
PUBLIC	??_C@_0BI@KCGHKNOH@SettingsDirtyTimer?5?$CF?42f@ ; `string'
PUBLIC	??_C@_0BI@PGENAEOL@Settings?5handlers?3?5?$CI?$CFd?$CJ@ ; `string'
PUBLIC	??_C@_0BB@NEINIHH@SettingsHandlers@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0CI@CKIDLOMN@Settings?5packed?5data?3?5Windows?3?5@ ; `string'
PUBLIC	??_C@_0BA@GOMGONFN@SettingsWindows@		; `string'
PUBLIC	??_C@_0CH@GODOBOJJ@Settings?5packed?5data?3?5Tables?3?5?$CF@ ; `string'
PUBLIC	??_C@_0P@NAODIHNN@SettingsTables@		; `string'
PUBLIC	??_C@_0CI@MPNDIPDD@Settings?5unpacked?5data?5?$CI?4ini?$CJ?3?5@ ; `string'
PUBLIC	??_C@_0BA@IEPJFGMP@SettingsIniData@		; `string'
PUBLIC	??_C@_05FJAOFNGD@?$CD?$CDIni@			; `string'
PUBLIC	??_C@_0P@DKNCHHLP@Internal?5state@		; `string'
PUBLIC	??_C@_04OHJIHAFH@None@				; `string'
PUBLIC	??_C@_05PEEFLODH@Mouse@				; `string'
PUBLIC	??_C@_08CPOKIBJK@Keyboard@			; `string'
PUBLIC	??_C@_07FCEHOHKC@Gamepad@			; `string'
PUBLIC	??_C@_03JFAAHAIK@Nav@				; `string'
PUBLIC	??_C@_09HLEDPOBH@Clipboard@			; `string'
PUBLIC	??_C@_09OOMCPLIM@WINDOWING@			; `string'
PUBLIC	??_C@_0BE@NBGIHPGN@HoveredWindow?3?5?8?$CFs?8@	; `string'
PUBLIC	??_C@_0BK@GFBMGONH@HoveredWindow?9?$DORoot?3?5?8?$CFs?8@ ; `string'
PUBLIC	??_C@_0CF@OOIEDAD@HoveredWindowUnderMovingWindow?3@ ; `string'
PUBLIC	??_C@_0BD@HCKEDLME@MovingWindow?3?5?8?$CFs?8@	; `string'
PUBLIC	??_C@_05OOOHNEPI@ITEMS@				; `string'
PUBLIC	??_C@_0EB@PEJDHKLE@ActiveId?3?50x?$CF08X?10x?$CF08X?5?$CI?$CF?42f?5s@ ; `string'
PUBLIC	??_C@_0BF@CPEAOPEJ@ActiveIdWindow?3?5?8?$CFs?8@	; `string'
PUBLIC	??_C@_0EP@NGKPCOLK@ActiveIdUsing?3?5Wheel?3?5?$CFd?0?5NavDi@ ; `string'
PUBLIC	??_C@_0DG@FAAGHPBL@HoveredId?3?50x?$CF08X?10x?$CF08X?5?$CI?$CF?42f?5@ ; `string'
PUBLIC	??_C@_0DJ@OPOHHHAC@DragDrop?3?5?$CFd?0?5SourceId?5?$DN?50x?$CF08X@ ; `string'
PUBLIC	??_C@_09LPFJCNIB@NAV?0FOCUS@			; `string'
PUBLIC	??_C@_0BA@KJPDENCF@NavWindow?3?5?8?$CFs?8@	; `string'
PUBLIC	??_C@_0BM@KFFINKHC@NavId?3?50x?$CF08X?0?5NavLayer?3?5?$CFd@ ; `string'
PUBLIC	??_C@_0BD@HIKDFBG@NavInputSource?3?5?$CFs@	; `string'
PUBLIC	??_C@_0BO@PADIALFI@NavActive?3?5?$CFd?0?5NavVisible?3?5?$CFd@ ; `string'
PUBLIC	??_C@_0CK@FMBJOEO@NavActivateId?3?50x?$CF08X?0?5NavInput@ ; `string'
PUBLIC	??_C@_0DC@PBLGJJAI@NavDisableHighlight?3?5?$CFd?0?5NavDis@ ; `string'
PUBLIC	??_C@_0BJ@GGAKOFG@NavFocusScopeId?5?$DN?50x?$CF08X@ ; `string'
PUBLIC	??_C@_0BJ@HGGGEMAP@NavWindowingTarget?3?5?8?$CFs?8@ ; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd@				; `string'
PUBLIC	??_C@_0BN@JPEJHLJM@Atlas?5texture?5?$CI?$CFdx?$CFd?5pixels?$CJ@ ; `string'
PUBLIC	??_C@_0O@KCJLBEBN@Atlas?5texture@		; `string'
PUBLIC	??_C@_0CN@LMOAIACO@Columns?5Id?3?50x?$CF08X?0?5Count?3?5?$CFd?0?5@ ; `string'
PUBLIC	??_C@_0CF@PKFCLBKA@Width?3?5?$CF?41f?5?$CIMinX?3?5?$CF?41f?0?5MaxX?3?5@ ; `string'
PUBLIC	??_C@_0CJ@CPAFBJNN@Column?5?$CF02d?3?5OffsetNorm?5?$CF?43f?5?$CI?$DN@ ; `string'
PUBLIC	??_C@_0CF@IMBENNLG@?$CFs?3?5?8?$CFs?8?5?$CFd?5vtx?0?5?$CFd?5indices?0?5?$CFd@ ; `string'
PUBLIC	??_C@_0BE@LDCFEMCB@CURRENTLY?5APPENDING@	; `string'
PUBLIC	??_C@_0EJ@LNIIFBMO@Warning?3?5owning?5Window?5is?5inact@ ; `string'
PUBLIC	??_C@_0BK@FDNBBNBF@Callback?5?$CFp?0?5user_data?5?$CFp@ ; `string'
PUBLIC	??_C@_0EB@FAPEKKJB@DrawCmd?3?$CF5d?5tris?0?5Tex?50x?$CFp?0?5Cli@ ; `string'
PUBLIC	??_C@_0EE@EGAMBHDK@Mesh?3?5ElemCount?3?5?$CFd?0?5VtxOffset?3@ ; `string'
PUBLIC	??_C@_05HCFPDLGJ@Vert?3@			; `string'
PUBLIC	??_C@_05IFKLLJBC@?5?5?5?5?5@			; `string'
PUBLIC	??_C@_0DG@MPIFBGBG@?$CFs?5?$CF04d?3?5pos?5?$CI?$CF8?42f?0?$CF8?42f?$CJ?0?5uv?5@ ; `string'
PUBLIC	?__LINE__Var@?0??DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU3@PEBUImDrawCmd@@_N3@Z@4JA ; `ImGui::DebugNodeDrawCmdShowMeshAndBoundingBox'::`1'::__LINE__Var
PUBLIC	??_C@_1CO@NHFPKPKM@?$AAs?$AAh?$AAo?$AAw?$AA_?$AAm?$AAe?$AAs?$AAh?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAs?$AAh@ ; `string'
PUBLIC	??_C@_0CK@IFCNIJMP@Font?3?5?$CC?$CFs?$CC?6?$CF?42f?5px?0?5?$CFd?5glyphs?0?5@ ; `string'
PUBLIC	??_C@_0P@HCLAAKJM@Set?5as?5default@		; `string'
PUBLIC	??_C@_0CM@HCLJNHNJ@The?5quick?5brown?5fox?5jumps?5over?5@ ; `string'
PUBLIC	??_C@_04GGBPDDBN@?$CF?41f@			; `string'
PUBLIC	??_C@_0L@HAJGHBLA@Font?5scale@			; `string'
PUBLIC	??_C@_0BIM@BPPJLJKD@Note?5than?5the?5default?5embedded?5@ ; `string'
PUBLIC	??_C@_0CE@FJCMKHHK@Ascent?3?5?$CFf?0?5Descent?3?5?$CFf?0?5Height@ ; `string'
PUBLIC	??_C@_0CC@FDGLEGDM@Fallback?5character?3?5?8?$CFs?8?5?$CIU?$CL?$CF04@ ; `string'
PUBLIC	??_C@_0CC@FAJAAGEH@Ellipsis?5character?3?5?8?$CFs?8?5?$CIU?$CL?$CF04@ ; `string'
PUBLIC	??_C@_0CE@LLADJGCM@Texture?5Area?3?5about?5?$CFd?5px?5?$HO?$CFdx?$CF@ ; `string'
PUBLIC	??_C@_0EJ@EOFKACMP@Input?5?$CFd?3?5?8?$CFs?8?0?5Oversample?3?5?$CI?$CFd@ ; `string'
PUBLIC	??_C@_0M@NEAHLNMH@Glyphs?5?$CI?$CFd?$CJ@	; `string'
PUBLIC	??_C@_06EBCCDGNI@Glyphs@			; `string'
PUBLIC	??_C@_06IOJPAPEE@glyphs@			; `string'
PUBLIC	??_C@_05OIOMJNBL@glyph@				; `string'
PUBLIC	??_C@_0BH@KIECHKHD@U?$CL?$CF04X?4?4U?$CL?$CF04X?5?$CI?$CFd?5?$CFs?$CJ@ ; `string'
PUBLIC	??_C@_0BC@JMLDGIFC@Codepoint?3?5U?$CL?$CF04X@	; `string'
PUBLIC	??_C@_0M@GDBOFNKK@Visible?3?5?$CFd@		; `string'
PUBLIC	??_C@_0P@JLIDDFIB@AdvanceX?3?5?$CF?41f@		; `string'
PUBLIC	??_C@_0BO@BCFBHCGJ@Pos?3?5?$CI?$CF?42f?0?$CF?42f?$CJ?9?$DO?$CI?$CF?42f?0?$CF?42f?$CJ@ ; `string'
PUBLIC	??_C@_0BN@EHEDNDHJ@UV?3?5?$CI?$CF?43f?0?$CF?43f?$CJ?9?$DO?$CI?$CF?43f?0?$CF?43f?$CJ@ ; `string'
PUBLIC	??_C@_0BJ@EFAEFOHB@?$CFs?3?5?$CFd?5entries?0?5?$CFd?5bytes@ ; `string'
PUBLIC	??_C@_0BL@LEAFLIMO@Key?50x?$CF08X?5Value?5?$HL?5i?3?5?$CFd?5?$HN@ ; `string'
PUBLIC	??_C@_0M@MDILNFHC@?5?$CKInactive?$CK@		; `string'
PUBLIC	??_C@_0BG@BDDHJGDD@?$CFs?50x?$CF08X?5?$CI?$CFd?5tabs?$CJ?$CFs@ ; `string'
PUBLIC	??_C@_04JFAOCLML@?5?5?$HL?5@			; `string'
PUBLIC	??_C@_03BBKEAIF@?$DP?$DP?$DP@			; `string'
PUBLIC	??_C@_02KEGNLNML@?0?5@				; `string'
PUBLIC	??_C@_06BKNPIBKB@?$CFs?8?$CFs?8@		; `string'
PUBLIC	??_C@_06MEIHFGI@?5?4?4?4?5?$HN@			; `string'
PUBLIC	??_C@_03LHCEFAHM@?5?$HN?5@			; `string'
PUBLIC	??_C@_01MNNFJEPP@?$DM@				; `string'
PUBLIC	??_C@_01PPODPGHN@?$DO@				; `string'
PUBLIC	??_C@_0DG@MOHAOPFA@?$CF02d?$CFc?5Tab?50x?$CF08X?5?8?$CFs?8?5Offset?3?5@ ; `string'
PUBLIC	??_C@_0N@IHHEFJLI@Viewport?5?$CD?$CFd@		; `string'
PUBLIC	??_C@_09PLOOGGOG@viewport0@			; `string'
PUBLIC	??_C@_0GJ@COEDEIEA@Main?5Pos?3?5?$CI?$CF?40f?0?$CF?40f?$CJ?0?5Size?3?5?$CI?$CF@ ; `string'
PUBLIC	??_C@_0M@FAFJAKJI@?5OwnedByApp@			; `string'
PUBLIC	??_C@_0BD@FKGIEJBE@?5IsPlatformMonitor@		; `string'
PUBLIC	??_C@_0BC@KGGIDDGG@?5IsPlatformWindow@		; `string'
PUBLIC	??_C@_0BG@LEDJFOBI@Flags?3?50x?$CF04X?5?$DN?$CFs?$CFs?$CFs@ ; `string'
PUBLIC	??_C@_08MGKMCIPB@?$CFs?3?5NULL@			; `string'
PUBLIC	??_C@_09GBCBPCGK@?$CFs?5?8?$CFs?8?$CFs@		; `string'
PUBLIC	??_C@_0DF@KJLKCABL@Note?3?5some?5memory?5buffers?5have?5@ ; `string'
PUBLIC	??_C@_0EP@MJAPPIBI@Pos?3?5?$CI?$CF?41f?0?$CF?41f?$CJ?0?5Size?3?5?$CI?$CF?41f?0?$CF@ ; `string'
PUBLIC	??_C@_0BB@GGEIPOID@AlwaysAutoResize@		; `string'
PUBLIC	??_C@_0M@COLEABDL@NoNavInputs@			; `string'
PUBLIC	??_C@_0O@LAPEOEIJ@NoMouseInputs@		; `string'
PUBLIC	??_C@_0BB@EBNDPMCP@NoSavedSettings?5@		; `string'
PUBLIC	??_C@_0L@OPMMHACC@ChildMenu?5@			; `string'
PUBLIC	??_C@_06IFIMNOLK@Modal?5@			; `string'
PUBLIC	??_C@_06NMKCIICK@Popup?5@			; `string'
PUBLIC	??_C@_08LGECAIGF@Tooltip?5@			; `string'
PUBLIC	??_C@_06MMFPNIIL@Child?5@			; `string'
PUBLIC	??_C@_0CF@HFFEAFCN@Flags?3?50x?$CF08X?5?$CI?$CFs?$CFs?$CFs?$CFs?$CFs?$CFs?$CFs?$CFs@ ; `string'
PUBLIC	??_C@_01NFFPALBN@Y@				; `string'
PUBLIC	??_C@_01MMEEDKFM@X@				; `string'
PUBLIC	??_C@_0CN@OBHMFINH@Scroll?3?5?$CI?$CF?42f?1?$CF?42f?0?$CF?42f?1?$CF?42f?$CJ?5S@ ; `string'
PUBLIC	??_C@_0DO@LPCMGHLI@Active?3?5?$CFd?1?$CFd?0?5WriteAccessed?3?5?$CF@ ; `string'
PUBLIC	??_C@_0EA@JLDPMAKO@Appearing?3?5?$CFd?0?5Hidden?3?5?$CFd?5?$CICanS@ ; `string'
PUBLIC	??_C@_0BH@EDAJMFBI@NavLastIds?$FL?$CFd?$FN?3?50x?$CF08X@ ; `string'
PUBLIC	??_C@_0DC@PKDENGJH@NavLastIds?$FL?$CFd?$FN?3?50x?$CF08X?5at?5?$CL?$CI?$CF?41@ ; `string'
PUBLIC	??_C@_0DD@ILECKNFA@NavLayersActiveMask?3?5?$CFX?0?5NavLas@ ; `string'
PUBLIC	??_C@_0L@EHLMOHOL@RootWindow@			; `string'
PUBLIC	??_C@_0N@BPPHAMMO@ParentWindow@			; `string'
PUBLIC	??_C@_0N@BGDHDNPO@ChildWindows@			; `string'
PUBLIC	??_C@_0BC@FIDDFLAI@Columns?5sets?5?$CI?$CFd?$CJ@ ; `string'
PUBLIC	??_C@_07IBCCJKML@Columns@			; `string'
PUBLIC	??_C@_07PFGLPMIK@Storage@			; `string'
PUBLIC	??_C@_0DC@NLKEEDHM@0x?$CF08X?5?$CC?$CFs?$CC?5Pos?5?$CI?$CFd?0?$CFd?$CJ?5Size?5?$CI?$CF@ ; `string'
PUBLIC	??_C@_07JMKCEEPK@?$CFs?5?$CI?$CFd?$CJ@		; `string'
PUBLIC	??_C@_0BK@GKODIOOH@?$CIIn?5front?9to?9back?5order?3?$CJ@ ; `string'
PUBLIC	??_C@_1DC@DHFOGPCD@?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp?$AA?5@ ; `string'
PUBLIC	??_C@_1DO@NPHOAPAC@?$AAi?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@ ; `string'
PUBLIC	??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@ ; `string'
PUBLIC	??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1DE@BDDBABLK@?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAb?$AAe?$AAg?$AAi?$AAn?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG@ ; `string'
PUBLIC	??_C@_1BE@OEELIPPM@?$AAp?$AA?5?$AA?$DM?$AA?5?$AAe?$AAn?$AAd?$AA?$CI?$AA?$CJ@ ; `string'
PUBLIC	??_C@_1DG@EPOMENA@?$AAo?$AAf?$AAf?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA4?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAo?$AAf?$AAf@ ; `string'
PUBLIC	??_C@_1EA@INDCAEFK@?$AAi?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@1e3ce508
PUBLIC	__real@3727c5ac
PUBLIC	__real@38d1b717
PUBLIC	__real@3b808081
PUBLIC	__real@3ba3d70a
PUBLIC	__real@3c23d70a
PUBLIC	__real@3c888889
PUBLIC	__real@3d23d70a
PUBLIC	__real@3d4ccccd
PUBLIC	__real@3dcccccd
PUBLIC	__real@3e000000
PUBLIC	__real@3e19999a
PUBLIC	__real@3e2aaaab
PUBLIC	__real@3e4ccccd
PUBLIC	__real@3e800000
PUBLIC	__real@3e8ccccd
PUBLIC	__real@3e99999a
PUBLIC	__real@3ecccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f19999a
PUBLIC	__real@3f266666
PUBLIC	__real@3f2b851f
PUBLIC	__real@3f333333
PUBLIC	__real@3f3851ec
PUBLIC	__real@3f400000
PUBLIC	__real@3f490fdb
PUBLIC	__real@3f4ccccd
PUBLIC	__real@3f7fff58
PUBLIC	__real@3f800000
PUBLIC	__real@3f8ccccd
PUBLIC	__real@3fa00000
PUBLIC	__real@3faccccd
PUBLIC	__real@3fc90fdb
PUBLIC	__real@40000000
PUBLIC	__real@40200000
PUBLIC	__real@40400000
PUBLIC	__real@40490fdb
PUBLIC	__real@40600000
PUBLIC	__real@40800000
PUBLIC	__real@4096cbe4
PUBLIC	__real@40a00000
PUBLIC	__real@40c00000
PUBLIC	__real@41000000
PUBLIC	__real@41100000
PUBLIC	__real@41200000
PUBLIC	__real@41400000
PUBLIC	__real@41600000
PUBLIC	__real@41800000
PUBLIC	__real@41980000
PUBLIC	__real@41a00000
PUBLIC	__real@41a80000
PUBLIC	__real@41c00000
PUBLIC	__real@42000000
PUBLIC	__real@420c0000
PUBLIC	__real@42700000
PUBLIC	__real@42a00000
PUBLIC	__real@42c80000
PUBLIC	__real@437f0000
PUBLIC	__real@43c80000
PUBLIC	__real@44160000
PUBLIC	__real@44480000
PUBLIC	__real@447a0000
PUBLIC	__real@7f7fffff
PUBLIC	__real@80800000
PUBLIC	__real@beaaaaab
PUBLIC	__real@bf800000
PUBLIC	__real@c87a0000
PUBLIC	__real@ff7fffff
PUBLIC	__xmm@7fffffffffffffff7fffffffffffffff
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??_L@YAXPEAX_K1P6AX0@Z2@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YAXPEAX_K1P6AX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	strstr:PROC
EXTRN	__imp_strncpy:PROC
EXTRN	__imp__wassert:PROC
EXTRN	?StyleColorsDark@ImGui@@YAXPEAUImGuiStyle@@@Z:PROC ; ImGui::StyleColorsDark
EXTRN	?Separator@ImGui@@YAXXZ:PROC			; ImGui::Separator
EXTRN	?Dummy@ImGui@@YAXAEBUImVec2@@@Z:PROC		; ImGui::Dummy
EXTRN	?TextUnformatted@ImGui@@YAXPEBD0@Z:PROC		; ImGui::TextUnformatted
EXTRN	?Text@ImGui@@YAXPEBDZZ:PROC			; ImGui::Text
EXTRN	?TextV@ImGui@@YAXPEBDPEAD@Z:PROC		; ImGui::TextV
EXTRN	?TextColored@ImGui@@YAXAEBUImVec4@@PEBDZZ:PROC	; ImGui::TextColored
EXTRN	?TextDisabled@ImGui@@YAXPEBDZZ:PROC		; ImGui::TextDisabled
EXTRN	?BulletText@ImGui@@YAXPEBDZZ:PROC		; ImGui::BulletText
EXTRN	?Button@ImGui@@YA_NPEBDAEBUImVec2@@@Z:PROC	; ImGui::Button
EXTRN	?SmallButton@ImGui@@YA_NPEBD@Z:PROC		; ImGui::SmallButton
EXTRN	?Image@ImGui@@YAXPEAXAEBUImVec2@@11AEBUImVec4@@2@Z:PROC ; ImGui::Image
EXTRN	?Checkbox@ImGui@@YA_NPEBDPEA_N@Z:PROC		; ImGui::Checkbox
EXTRN	?Combo@ImGui@@YA_NPEBDPEAHQEBQEBDHH@Z:PROC	; ImGui::Combo
EXTRN	?DragFloat@ImGui@@YA_NPEBDPEAMMMM0H@Z:PROC	; ImGui::DragFloat
EXTRN	?SliderInt@ImGui@@YA_NPEBDPEAHHH0H@Z:PROC	; ImGui::SliderInt
EXTRN	?InputText@ImGui@@YA_NPEBDPEAD_KHP6AHPEAUImGuiInputTextCallbackData@@@ZPEAX@Z:PROC ; ImGui::InputText
EXTRN	?InputTextMultiline@ImGui@@YA_NPEBDPEAD_KAEBUImVec2@@HP6AHPEAUImGuiInputTextCallbackData@@@ZPEAX@Z:PROC ; ImGui::InputTextMultiline
EXTRN	?TreeNode@ImGui@@YA_NPEBD@Z:PROC		; ImGui::TreeNode
EXTRN	?TreeNode@ImGui@@YA_NPEBD0ZZ:PROC		; ImGui::TreeNode
EXTRN	?TreeNode@ImGui@@YA_NPEBXPEBDZZ:PROC		; ImGui::TreeNode
EXTRN	?TreeNodeEx@ImGui@@YA_NPEBDH0ZZ:PROC		; ImGui::TreeNodeEx
EXTRN	?TreePop@ImGui@@YAXXZ:PROC			; ImGui::TreePop
EXTRN	?GetTreeNodeToLabelSpacing@ImGui@@YAMXZ:PROC	; ImGui::GetTreeNodeToLabelSpacing
EXTRN	?SetNextItemOpen@ImGui@@YAX_NH@Z:PROC		; ImGui::SetNextItemOpen
EXTRN	?Selectable@ImGui@@YA_NPEBD_NHAEBUImVec2@@@Z:PROC ; ImGui::Selectable
EXTRN	?EndTable@ImGui@@YAXXZ:PROC			; ImGui::EndTable
EXTRN	?EndTabBar@ImGui@@YAXXZ:PROC			; ImGui::EndTabBar
EXTRN	?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ:PROC ; ImDrawListSplitter::ClearFreeMemory
EXTRN	?PushClipRect@ImDrawList@@QEAAXUImVec2@@0_N@Z:PROC ; ImDrawList::PushClipRect
EXTRN	?PopClipRect@ImDrawList@@QEAAXXZ:PROC		; ImDrawList::PopClipRect
EXTRN	?PushTextureID@ImDrawList@@QEAAXPEAX@Z:PROC	; ImDrawList::PushTextureID
EXTRN	?PopTextureID@ImDrawList@@QEAAXXZ:PROC		; ImDrawList::PopTextureID
EXTRN	?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z:PROC ; ImDrawList::AddLine
EXTRN	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z:PROC ; ImDrawList::AddRect
EXTRN	?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z:PROC ; ImDrawList::AddRectFilled
EXTRN	?AddText@ImDrawList@@QEAAXAEBUImVec2@@IPEBD1@Z:PROC ; ImDrawList::AddText
EXTRN	?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z:PROC ; ImDrawList::AddText
EXTRN	?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HIHM@Z:PROC ; ImDrawList::AddPolyline
EXTRN	?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z:PROC ; ImDrawList::AddConvexPolyFilled
EXTRN	?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z:PROC ; ImDrawList::PathArcTo
EXTRN	?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z:PROC ; ImDrawList::PathArcToFast
EXTRN	?_ResetForNewFrame@ImDrawList@@QEAAXXZ:PROC	; ImDrawList::_ResetForNewFrame
EXTRN	?_ClearFreeMemory@ImDrawList@@QEAAXXZ:PROC	; ImDrawList::_ClearFreeMemory
EXTRN	?_PopUnusedDrawCmd@ImDrawList@@QEAAXXZ:PROC	; ImDrawList::_PopUnusedDrawCmd
EXTRN	??0ImFontAtlas@@QEAA@XZ:PROC			; ImFontAtlas::ImFontAtlas
EXTRN	??1ImFontAtlas@@QEAA@XZ:PROC			; ImFontAtlas::~ImFontAtlas
EXTRN	??0ImFont@@QEAA@XZ:PROC				; ImFont::ImFont
EXTRN	??1ImFont@@QEAA@XZ:PROC				; ImFont::~ImFont
EXTRN	?FindGlyph@ImFont@@QEBAPEBUImFontGlyph@@G@Z:PROC ; ImFont::FindGlyph
EXTRN	?FindGlyphNoFallback@ImFont@@QEBAPEBUImFontGlyph@@G@Z:PROC ; ImFont::FindGlyphNoFallback
EXTRN	?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z:PROC ; ImFont::CalcTextSizeA
EXTRN	?RenderChar@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IG@Z:PROC ; ImFont::RenderChar
EXTRN	?IsGlyphRangeUnused@ImFont@@QEAA_NII@Z:PROC	; ImFont::IsGlyphRangeUnused
EXTRN	__imp___acrt_iob_func:PROC
EXTRN	__imp__wfopen:PROC
EXTRN	__imp_fclose:PROC
EXTRN	__imp_fflush:PROC
EXTRN	__imp_fread:PROC
EXTRN	__imp_fseek:PROC
EXTRN	__imp_ftell:PROC
EXTRN	__imp_fwrite:PROC
EXTRN	__imp___stdio_common_vsprintf:PROC
EXTRN	__imp___stdio_common_vsscanf:PROC
EXTRN	__imp_free:PROC
EXTRN	__imp_malloc:PROC
EXTRN	__imp_qsort:PROC
EXTRN	?ImBezierCubicCalc@@YA?AUImVec2@@AEBU1@000M@Z:PROC ; ImBezierCubicCalc
EXTRN	??0ImDrawListSharedData@@QEAA@XZ:PROC		; ImDrawListSharedData::ImDrawListSharedData
EXTRN	?SetCircleTessellationMaxError@ImDrawListSharedData@@QEAAXM@Z:PROC ; ImDrawListSharedData::SetCircleTessellationMaxError
EXTRN	?Update@ImGuiMenuColumns@@QEAAXHM_N@Z:PROC	; ImGuiMenuColumns::Update
EXTRN	?EndColumns@ImGui@@YAXXZ:PROC			; ImGui::EndColumns
EXTRN	?GetColumnOffsetFromNorm@ImGui@@YAMPEBUImGuiOldColumns@@M@Z:PROC ; ImGui::GetColumnOffsetFromNorm
EXTRN	?TableEndRow@ImGui@@YAXPEAUImGuiTable@@@Z:PROC	; ImGui::TableEndRow
EXTRN	?TableGcCompactTransientBuffers@ImGui@@YAXPEAUImGuiTable@@@Z:PROC ; ImGui::TableGcCompactTransientBuffers
EXTRN	?TableGcCompactTransientBuffers@ImGui@@YAXPEAUImGuiTableTempData@@@Z:PROC ; ImGui::TableGcCompactTransientBuffers
EXTRN	?TableGcCompactSettings@ImGui@@YAXXZ:PROC	; ImGui::TableGcCompactSettings
EXTRN	?TableSettingsInstallHandler@ImGui@@YAXPEAUImGuiContext@@@Z:PROC ; ImGui::TableSettingsInstallHandler
EXTRN	?TabBarQueueReorder@ImGui@@YAXPEAUImGuiTabBar@@PEBUImGuiTabItem@@H@Z:PROC ; ImGui::TabBarQueueReorder
EXTRN	?RenderBullet@ImGui@@YAXPEAUImDrawList@@UImVec2@@I@Z:PROC ; ImGui::RenderBullet
EXTRN	?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z:PROC ; ImGui::RenderMouseCursor
EXTRN	?CloseButton@ImGui@@YA_NIAEBUImVec2@@@Z:PROC	; ImGui::CloseButton
EXTRN	?CollapseButton@ImGui@@YA_NIAEBUImVec2@@@Z:PROC	; ImGui::CollapseButton
EXTRN	?Scrollbar@ImGui@@YAXW4ImGuiAxis@@@Z:PROC	; ImGui::Scrollbar
EXTRN	?ButtonBehavior@ImGui@@YA_NAEBUImRect@@IPEA_N1H@Z:PROC ; ImGui::ButtonBehavior
EXTRN	?DebugNodeTable@ImGui@@YAXPEAUImGuiTable@@@Z:PROC ; ImGui::DebugNodeTable
EXTRN	?DebugNodeTableSettings@ImGui@@YAXPEAUImGuiTableSettings@@@Z:PROC ; ImGui::DebugNodeTableSettings
EXTRN	__imp_toupper:PROC
EXTRN	__imp_GlobalAlloc:PROC
EXTRN	__imp_GlobalUnlock:PROC
EXTRN	__imp_GlobalLock:PROC
EXTRN	__imp_GlobalFree:PROC
EXTRN	__imp_OpenClipboard:PROC
EXTRN	__imp_CloseClipboard:PROC
EXTRN	__imp_SetClipboardData:PROC
EXTRN	__imp_GetClipboardData:PROC
EXTRN	__imp_EmptyClipboard:PROC
EXTRN	__imp_MultiByteToWideChar:PROC
EXTRN	__imp_WideCharToMultiByte:PROC
EXTRN	ImmGetContext:PROC
EXTRN	ImmReleaseContext:PROC
EXTRN	ImmSetCompositionWindow:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__chkstk:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	fmodf:PROC
EXTRN	memchr:PROC
EXTRN	memmove:PROC
EXTRN	sqrtf:PROC
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?GImAllocatorUserData@@3PEAXEA DQ 01H DUP (?)		; GImAllocatorUserData
?resize_grip_def@@3QBUImGuiResizeGripDef@@B DB 060H DUP (?) ; resize_grip_def
?resize_border_def@@3QBUImGuiResizeBorderDef@@B DB 070H DUP (?) ; resize_border_def
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN7
	DD	imagerel $LN7+172
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImVec2@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??0ImVec2@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImVec2@@QEAA@MM@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??0ImVec2@@QEAA@MM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??AImVec2@@QEAAAEAM_K@Z DD imagerel $LN4
	DD	imagerel $LN4+85
	DD	imagerel $unwind$??AImVec2@@QEAAAEAM_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImVec4@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??0ImVec4@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImVec4@@QEAA@MMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??0ImVec4@@QEAA@MMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z DD imagerel $LN7
	DD	imagerel $LN7+212
	DD	imagerel $unwind$?CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$0@?0??CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$0@?0??CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z@4HA+56
	DD	imagerel $unwind$?dtor$0@?0??CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DestroyContext@ImGui@@YAXPEAUImGuiContext@@@Z DD imagerel $LN5
	DD	imagerel $LN5+112
	DD	imagerel $unwind$?DestroyContext@ImGui@@YAXPEAUImGuiContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCurrentContext@ImGui@@YAPEAUImGuiContext@@XZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?GetCurrentContext@ImGui@@YAPEAUImGuiContext@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetCurrentContext@ImGui@@YAXPEAUImGuiContext@@@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?SetCurrentContext@ImGui@@YAXPEAUImGuiContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetIO@ImGui@@YAAEAUImGuiIO@@XZ DD imagerel $LN5
	DD	imagerel $LN5+103
	DD	imagerel $unwind$?GetIO@ImGui@@YAAEAUImGuiIO@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ DD imagerel $LN5
	DD	imagerel $LN5+105
	DD	imagerel $unwind$?GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NewFrame@ImGui@@YAXXZ DD imagerel $LN60
	DD	imagerel $LN60+3905
	DD	imagerel $unwind$?NewFrame@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EndFrame@ImGui@@YAXXZ DD imagerel $LN23
	DD	imagerel $LN23+1160
	DD	imagerel $unwind$?EndFrame@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Render@ImGui@@YAXXZ DD imagerel $LN26
	DD	imagerel $LN26+1314
	DD	imagerel $unwind$?Render@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDrawData@ImGui@@YAPEAUImDrawData@@XZ DD imagerel $LN5
	DD	imagerel $LN5+133
	DD	imagerel $unwind$?GetDrawData@ImGui@@YAPEAUImDrawData@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ShowMetricsWindow@ImGui@@YAXPEA_N@Z DD imagerel $LN125
	DD	imagerel $LN125+7658
	DD	imagerel $unwind$?ShowMetricsWindow@ImGui@@YAXPEA_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetVersion@ImGui@@YAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?GetVersion@ImGui@@YAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Begin@ImGui@@YA_NPEBDPEA_NH@Z DD imagerel $LN240
	DD	imagerel $LN240+13071
	DD	imagerel $unwind$?Begin@ImGui@@YA_NPEBDPEA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?End@ImGui@@YAXXZ DD imagerel $LN15
	DD	imagerel $LN15+472
	DD	imagerel $unwind$?End@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BeginChild@ImGui@@YA_NPEBDAEBUImVec2@@_NH@Z DD imagerel $LN3
	DD	imagerel $LN3+123
	DD	imagerel $unwind$?BeginChild@ImGui@@YA_NPEBDAEBUImVec2@@_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BeginChild@ImGui@@YA_NIAEBUImVec2@@_NH@Z DD imagerel $LN4
	DD	imagerel $LN4+135
	DD	imagerel $unwind$?BeginChild@ImGui@@YA_NIAEBUImVec2@@_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EndChild@ImGui@@YAXXZ DD imagerel $LN14
	DD	imagerel $LN14+878
	DD	imagerel $unwind$?EndChild@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsWindowAppearing@ImGui@@YA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?IsWindowAppearing@ImGui@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsWindowCollapsed@ImGui@@YA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?IsWindowCollapsed@ImGui@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsWindowFocused@ImGui@@YA_NH@Z DD imagerel $LN21
	DD	imagerel $LN21+494
	DD	imagerel $unwind$?IsWindowFocused@ImGui@@YA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsWindowHovered@ImGui@@YA_NH@Z DD imagerel $LN19
	DD	imagerel $LN19+430
	DD	imagerel $unwind$?IsWindowHovered@ImGui@@YA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWindowDrawList@ImGui@@YAPEAUImDrawList@@XZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?GetWindowDrawList@ImGui@@YAPEAUImDrawList@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWindowPos@ImGui@@YA?AUImVec2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$?GetWindowPos@ImGui@@YA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWindowSize@ImGui@@YA?AUImVec2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?GetWindowSize@ImGui@@YA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWindowWidth@ImGui@@YAMXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?GetWindowWidth@ImGui@@YAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWindowHeight@ImGui@@YAMXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?GetWindowHeight@ImGui@@YAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetNextWindowPos@ImGui@@YAXAEBUImVec2@@H0@Z DD imagerel $LN6
	DD	imagerel $LN6+236
	DD	imagerel $unwind$?SetNextWindowPos@ImGui@@YAXAEBUImVec2@@H0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetNextWindowSize@ImGui@@YAXAEBUImVec2@@H@Z DD imagerel $LN6
	DD	imagerel $LN6+210
	DD	imagerel $unwind$?SetNextWindowSize@ImGui@@YAXAEBUImVec2@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetNextWindowSizeConstraints@ImGui@@YAXAEBUImVec2@@0P6AXPEAUImGuiSizeCallbackData@@@ZPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+175
	DD	imagerel $unwind$?SetNextWindowSizeConstraints@ImGui@@YAXAEBUImVec2@@0P6AXPEAUImGuiSizeCallbackData@@@ZPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetNextWindowContentSize@ImGui@@YAXAEBUImVec2@@@Z DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$?SetNextWindowContentSize@ImGui@@YAXAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetNextWindowCollapsed@ImGui@@YAX_NH@Z DD imagerel $LN6
	DD	imagerel $LN6+205
	DD	imagerel $unwind$?SetNextWindowCollapsed@ImGui@@YAX_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetNextWindowFocus@ImGui@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$?SetNextWindowFocus@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetNextWindowBgAlpha@ImGui@@YAXM@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$?SetNextWindowBgAlpha@ImGui@@YAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetWindowPos@ImGui@@YAXAEBUImVec2@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?SetWindowPos@ImGui@@YAXAEBUImVec2@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetWindowSize@ImGui@@YAXAEBUImVec2@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?SetWindowSize@ImGui@@YAXAEBUImVec2@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetWindowCollapsed@ImGui@@YAX_NH@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?SetWindowCollapsed@ImGui@@YAX_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetWindowFocus@ImGui@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?SetWindowFocus@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetWindowFontScale@ImGui@@YAXM@Z DD imagerel $LN4
	DD	imagerel $LN4+189
	DD	imagerel $unwind$?SetWindowFontScale@ImGui@@YAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetWindowPos@ImGui@@YAXPEBDAEBUImVec2@@H@Z DD imagerel $LN4
	DD	imagerel $LN4+97
	DD	imagerel $unwind$?SetWindowPos@ImGui@@YAXPEBDAEBUImVec2@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetWindowSize@ImGui@@YAXPEBDAEBUImVec2@@H@Z DD imagerel $LN4
	DD	imagerel $LN4+97
	DD	imagerel $unwind$?SetWindowSize@ImGui@@YAXPEBDAEBUImVec2@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetWindowCollapsed@ImGui@@YAXPEBD_NH@Z DD imagerel $LN4
	DD	imagerel $LN4+96
	DD	imagerel $unwind$?SetWindowCollapsed@ImGui@@YAXPEBD_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetWindowFocus@ImGui@@YAXPEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+92
	DD	imagerel $unwind$?SetWindowFocus@ImGui@@YAXPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetContentRegionAvail@ImGui@@YA?AUImVec2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$?GetContentRegionAvail@ImGui@@YA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetContentRegionMax@ImGui@@YA?AUImVec2@@XZ DD imagerel $LN5
	DD	imagerel $LN5+255
	DD	imagerel $unwind$?GetContentRegionMax@ImGui@@YA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWindowContentRegionMin@ImGui@@YA?AUImVec2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+103
	DD	imagerel $unwind$?GetWindowContentRegionMin@ImGui@@YA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWindowContentRegionMax@ImGui@@YA?AUImVec2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+103
	DD	imagerel $unwind$?GetWindowContentRegionMax@ImGui@@YA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWindowContentRegionWidth@ImGui@@YAMXZ DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?GetWindowContentRegionWidth@ImGui@@YAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetScrollX@ImGui@@YAMXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?GetScrollX@ImGui@@YAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetScrollY@ImGui@@YAMXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?GetScrollY@ImGui@@YAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetScrollX@ImGui@@YAXM@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?SetScrollX@ImGui@@YAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetScrollY@ImGui@@YAXM@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?SetScrollY@ImGui@@YAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetScrollMaxX@ImGui@@YAMXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?GetScrollMaxX@ImGui@@YAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetScrollMaxY@ImGui@@YAMXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?GetScrollMaxY@ImGui@@YAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetScrollHereX@ImGui@@YAXM@Z DD imagerel $LN3
	DD	imagerel $LN3+238
	DD	imagerel $unwind$?SetScrollHereX@ImGui@@YAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetScrollHereY@ImGui@@YAXM@Z DD imagerel $LN3
	DD	imagerel $LN3+253
	DD	imagerel $unwind$?SetScrollHereY@ImGui@@YAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetScrollFromPosX@ImGui@@YAXMM@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$?SetScrollFromPosX@ImGui@@YAXMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetScrollFromPosY@ImGui@@YAXMM@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$?SetScrollFromPosY@ImGui@@YAXMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushFont@ImGui@@YAXPEAUImFont@@@Z DD imagerel $LN4
	DD	imagerel $LN4+174
	DD	imagerel $unwind$?PushFont@ImGui@@YAXPEAUImFont@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PopFont@ImGui@@YAXXZ DD imagerel $LN5
	DD	imagerel $LN5+168
	DD	imagerel $unwind$?PopFont@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushStyleColor@ImGui@@YAXHI@Z DD imagerel $LN3
	DD	imagerel $LN3+268
	DD	imagerel $unwind$?PushStyleColor@ImGui@@YAXHI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushStyleColor@ImGui@@YAXHAEBUImVec4@@@Z DD imagerel $LN3
	DD	imagerel $LN3+255
	DD	imagerel $unwind$?PushStyleColor@ImGui@@YAXHAEBUImVec4@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PopStyleColor@ImGui@@YAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+156
	DD	imagerel $unwind$?PopStyleColor@ImGui@@YAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushStyleVar@ImGui@@YAXHM@Z DD imagerel $LN5
	DD	imagerel $LN5+233
	DD	imagerel $unwind$?PushStyleVar@ImGui@@YAXHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushStyleVar@ImGui@@YAXHAEBUImVec2@@@Z DD imagerel $LN5
	DD	imagerel $LN5+232
	DD	imagerel $unwind$?PushStyleVar@ImGui@@YAXHAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PopStyleVar@ImGui@@YAXH@Z DD imagerel $LN8
	DD	imagerel $LN8+318
	DD	imagerel $unwind$?PopStyleVar@ImGui@@YAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushAllowKeyboardFocus@ImGui@@YAX_N@Z DD imagerel $LN5
	DD	imagerel $LN5+84
	DD	imagerel $unwind$?PushAllowKeyboardFocus@ImGui@@YAX_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PopAllowKeyboardFocus@ImGui@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?PopAllowKeyboardFocus@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushButtonRepeat@ImGui@@YAX_N@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?PushButtonRepeat@ImGui@@YAX_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PopButtonRepeat@ImGui@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?PopButtonRepeat@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushItemWidth@ImGui@@YAXM@Z DD imagerel $LN5
	DD	imagerel $LN5+210
	DD	imagerel $unwind$?PushItemWidth@ImGui@@YAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PopItemWidth@ImGui@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+98
	DD	imagerel $unwind$?PopItemWidth@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetNextItemWidth@ImGui@@YAXM@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$?SetNextItemWidth@ImGui@@YAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcItemWidth@ImGui@@YAMXZ DD imagerel $LN6
	DD	imagerel $LN6+208
	DD	imagerel $unwind$?CalcItemWidth@ImGui@@YAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushTextWrapPos@ImGui@@YAXM@Z DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$?PushTextWrapPos@ImGui@@YAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PopTextWrapPos@ImGui@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+98
	DD	imagerel $unwind$?PopTextWrapPos@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetFont@ImGui@@YAPEAUImFont@@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?GetFont@ImGui@@YAPEAUImFont@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetFontSize@ImGui@@YAMXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?GetFontSize@ImGui@@YAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetFontTexUvWhitePixel@ImGui@@YA?AUImVec2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?GetFontTexUvWhitePixel@ImGui@@YA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetColorU32@ImGui@@YAIHM@Z DD imagerel $LN3
	DD	imagerel $LN3+222
	DD	imagerel $unwind$?GetColorU32@ImGui@@YAIHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetColorU32@ImGui@@YAIAEBUImVec4@@@Z DD imagerel $LN3
	DD	imagerel $LN3+187
	DD	imagerel $unwind$?GetColorU32@ImGui@@YAIAEBUImVec4@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetColorU32@ImGui@@YAII@Z DD imagerel $LN4
	DD	imagerel $LN4+142
	DD	imagerel $unwind$?GetColorU32@ImGui@@YAII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetStyleColorVec4@ImGui@@YAAEBUImVec4@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$?GetStyleColorVec4@ImGui@@YAAEBUImVec4@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SameLine@ImGui@@YAXMM@Z DD imagerel $LN9
	DD	imagerel $LN9+360
	DD	imagerel $unwind$?SameLine@ImGui@@YAXMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Indent@ImGui@@YAXM@Z DD imagerel $LN6
	DD	imagerel $LN6+196
	DD	imagerel $unwind$?Indent@ImGui@@YAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Unindent@ImGui@@YAXM@Z DD imagerel $LN6
	DD	imagerel $LN6+196
	DD	imagerel $unwind$?Unindent@ImGui@@YAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BeginGroup@ImGui@@YAXXZ DD imagerel $LN6
	DD	imagerel $LN6+499
	DD	imagerel $unwind$?BeginGroup@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EndGroup@ImGui@@YAXXZ DD imagerel $LN19
	DD	imagerel $LN19+1072
	DD	imagerel $unwind$?EndGroup@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCursorPos@ImGui@@YA?AUImVec2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+131
	DD	imagerel $unwind$?GetCursorPos@ImGui@@YA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCursorPosX@ImGui@@YAMXZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?GetCursorPosX@ImGui@@YAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCursorPosY@ImGui@@YAMXZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?GetCursorPosY@ImGui@@YAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetCursorPos@ImGui@@YAXAEBUImVec2@@@Z DD imagerel $LN3
	DD	imagerel $LN3+173
	DD	imagerel $unwind$?SetCursorPos@ImGui@@YAXAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetCursorPosX@ImGui@@YAXM@Z DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$?SetCursorPosX@ImGui@@YAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetCursorPosY@ImGui@@YAXM@Z DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$?SetCursorPosY@ImGui@@YAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCursorStartPos@ImGui@@YA?AUImVec2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$?GetCursorStartPos@ImGui@@YA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCursorScreenPos@ImGui@@YA?AUImVec2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?GetCursorScreenPos@ImGui@@YA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetCursorScreenPos@ImGui@@YAXAEBUImVec2@@@Z DD imagerel $LN3
	DD	imagerel $LN3+124
	DD	imagerel $unwind$?SetCursorScreenPos@ImGui@@YAXAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetTextLineHeight@ImGui@@YAMXZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$?GetTextLineHeight@ImGui@@YAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetTextLineHeightWithSpacing@ImGui@@YAMXZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?GetTextLineHeightWithSpacing@ImGui@@YAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetFrameHeight@ImGui@@YAMXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?GetFrameHeight@ImGui@@YAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetFrameHeightWithSpacing@ImGui@@YAMXZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$?GetFrameHeightWithSpacing@ImGui@@YAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushID@ImGui@@YAXPEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+195
	DD	imagerel $unwind$?PushID@ImGui@@YAXPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushID@ImGui@@YAXPEBD0@Z DD imagerel $LN3
	DD	imagerel $LN3+204
	DD	imagerel $unwind$?PushID@ImGui@@YAXPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushID@ImGui@@YAXPEBX@Z DD imagerel $LN3
	DD	imagerel $LN3+192
	DD	imagerel $unwind$?PushID@ImGui@@YAXPEBX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushID@ImGui@@YAXH@Z DD imagerel $LN3
	DD	imagerel $LN3+189
	DD	imagerel $unwind$?PushID@ImGui@@YAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PopID@ImGui@@YAXXZ DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$?PopID@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetID@ImGui@@YAIPEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?GetID@ImGui@@YAIPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetID@ImGui@@YAIPEBD0@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?GetID@ImGui@@YAIPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetID@ImGui@@YAIPEBX@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?GetID@ImGui@@YAIPEBX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BeginTooltip@ImGui@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?BeginTooltip@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EndTooltip@ImGui@@YAXXZ DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$?EndTooltip@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetTooltip@ImGui@@YAXPEBDZZ DD imagerel $LN3
	DD	imagerel $LN3+164
	DD	imagerel $unwind$?SetTooltip@ImGui@@YAXPEBDZZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetTooltipV@ImGui@@YAXPEBDPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$?SetTooltipV@ImGui@@YAXPEBDPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BeginPopup@ImGui@@YA_NPEBDH@Z DD imagerel $LN4
	DD	imagerel $LN4+170
	DD	imagerel $unwind$?BeginPopup@ImGui@@YA_NPEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BeginPopupModal@ImGui@@YA_NPEBDPEA_NH@Z DD imagerel $LN8
	DD	imagerel $LN8+377
	DD	imagerel $unwind$?BeginPopupModal@ImGui@@YA_NPEBDPEA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EndPopup@ImGui@@YAXXZ DD imagerel $LN8
	DD	imagerel $LN8+283
	DD	imagerel $unwind$?EndPopup@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?OpenPopup@ImGui@@YAXPEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$?OpenPopup@ImGui@@YAXPEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?OpenPopup@ImGui@@YAXIH@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?OpenPopup@ImGui@@YAXIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?OpenPopupOnItemClick@ImGui@@YAXPEBDH@Z DD imagerel $LN7
	DD	imagerel $LN7+227
	DD	imagerel $unwind$?OpenPopupOnItemClick@ImGui@@YAXPEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CloseCurrentPopup@ImGui@@YAXXZ DD imagerel $LN12
	DD	imagerel $LN12+405
	DD	imagerel $unwind$?CloseCurrentPopup@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BeginPopupContextItem@ImGui@@YA_NPEBDH@Z DD imagerel $LN8
	DD	imagerel $LN8+258
	DD	imagerel $unwind$?BeginPopupContextItem@ImGui@@YA_NPEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BeginPopupContextWindow@ImGui@@YA_NPEBDH@Z DD imagerel $LN7
	DD	imagerel $LN7+205
	DD	imagerel $unwind$?BeginPopupContextWindow@ImGui@@YA_NPEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BeginPopupContextVoid@ImGui@@YA_NPEBDH@Z DD imagerel $LN6
	DD	imagerel $LN6+190
	DD	imagerel $unwind$?BeginPopupContextVoid@ImGui@@YA_NPEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsPopupOpen@ImGui@@YA_NPEBDH@Z DD imagerel $LN7
	DD	imagerel $LN7+213
	DD	imagerel $unwind$?IsPopupOpen@ImGui@@YA_NPEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LogToTTY@ImGui@@YAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$?LogToTTY@ImGui@@YAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LogToFile@ImGui@@YAXHPEBD@Z DD imagerel $LN9
	DD	imagerel $LN9+240
	DD	imagerel $unwind$?LogToFile@ImGui@@YAXHPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LogToClipboard@ImGui@@YAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$?LogToClipboard@ImGui@@YAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LogFinish@ImGui@@YAXXZ DD imagerel $LN13
	DD	imagerel $LN13+327
	DD	imagerel $unwind$?LogFinish@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LogButtons@ImGui@@YAXXZ DD imagerel $LN6
	DD	imagerel $LN6+353
	DD	imagerel $unwind$?LogButtons@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LogText@ImGui@@YAXPEBDZZ DD imagerel $LN4
	DD	imagerel $LN4+196
	DD	imagerel $unwind$?LogText@ImGui@@YAXPEBDZZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LogTextV@ImGui@@YAXPEBDPEAD@Z DD imagerel $LN4
	DD	imagerel $LN4+97
	DD	imagerel $unwind$?LogTextV@ImGui@@YAXPEBDPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BeginDragDropSource@ImGui@@YA_NH@Z DD imagerel $LN25
	DD	imagerel $LN25+1045
	DD	imagerel $unwind$?BeginDragDropSource@ImGui@@YA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetDragDropPayload@ImGui@@YA_NPEBDPEBX_KH@Z DD imagerel $LN21
	DD	imagerel $LN21+788
	DD	imagerel $unwind$?SetDragDropPayload@ImGui@@YA_NPEBDPEBX_KH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EndDragDropSource@ImGui@@YAXXZ DD imagerel $LN8
	DD	imagerel $LN8+209
	DD	imagerel $unwind$?EndDragDropSource@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BeginDragDropTarget@ImGui@@YA_NXZ DD imagerel $LN12
	DD	imagerel $LN12+408
	DD	imagerel $unwind$?BeginDragDropTarget@ImGui@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z DD imagerel $LN13
	DD	imagerel $LN13+925
	DD	imagerel $unwind$?AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EndDragDropTarget@ImGui@@YAXXZ DD imagerel $LN5
	DD	imagerel $LN5+157
	DD	imagerel $unwind$?EndDragDropTarget@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDragDropPayload@ImGui@@YAPEBUImGuiPayload@@XZ DD imagerel $LN5
	DD	imagerel $LN5+100
	DD	imagerel $unwind$?GetDragDropPayload@ImGui@@YAPEBUImGuiPayload@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushClipRect@ImGui@@YAXAEBUImVec2@@0_N@Z DD imagerel $LN3
	DD	imagerel $LN3+186
	DD	imagerel $unwind$?PushClipRect@ImGui@@YAXAEBUImVec2@@0_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PopClipRect@ImGui@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$?PopClipRect@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetItemDefaultFocus@ImGui@@YAXXZ DD imagerel $LN7
	DD	imagerel $LN7+367
	DD	imagerel $unwind$?SetItemDefaultFocus@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetKeyboardFocusHere@ImGui@@YAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+167
	DD	imagerel $unwind$?SetKeyboardFocusHere@ImGui@@YAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsItemHovered@ImGui@@YA_NH@Z DD imagerel $LN13
	DD	imagerel $LN13+420
	DD	imagerel $unwind$?IsItemHovered@ImGui@@YA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsItemActive@ImGui@@YA_NXZ DD imagerel $LN6
	DD	imagerel $LN6+131
	DD	imagerel $unwind$?IsItemActive@ImGui@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsItemFocused@ImGui@@YA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+104
	DD	imagerel $unwind$?IsItemFocused@ImGui@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsItemClicked@ImGui@@YA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+103
	DD	imagerel $unwind$?IsItemClicked@ImGui@@YA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsItemVisible@ImGui@@YA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$?IsItemVisible@ImGui@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsItemEdited@ImGui@@YA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+92
	DD	imagerel $unwind$?IsItemEdited@ImGui@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsItemActivated@ImGui@@YA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+126
	DD	imagerel $unwind$?IsItemActivated@ImGui@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsItemDeactivated@ImGui@@YA_NXZ DD imagerel $LN8
	DD	imagerel $LN8+214
	DD	imagerel $unwind$?IsItemDeactivated@ImGui@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsItemDeactivatedAfterEdit@ImGui@@YA_NXZ DD imagerel $LN7
	DD	imagerel $LN7+132
	DD	imagerel $unwind$?IsItemDeactivatedAfterEdit@ImGui@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsItemToggledOpen@ImGui@@YA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+95
	DD	imagerel $unwind$?IsItemToggledOpen@ImGui@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsAnyItemHovered@ImGui@@YA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+103
	DD	imagerel $unwind$?IsAnyItemHovered@ImGui@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsAnyItemActive@ImGui@@YA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+90
	DD	imagerel $unwind$?IsAnyItemActive@ImGui@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsAnyItemFocused@ImGui@@YA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+105
	DD	imagerel $unwind$?IsAnyItemFocused@ImGui@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetItemRectMin@ImGui@@YA?AUImVec2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?GetItemRectMin@ImGui@@YA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetItemRectMax@ImGui@@YA?AUImVec2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?GetItemRectMax@ImGui@@YA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetItemRectSize@ImGui@@YA?AUImVec2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$?GetItemRectSize@ImGui@@YA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetItemAllowOverlap@ImGui@@YAXXZ DD imagerel $LN5
	DD	imagerel $LN5+120
	DD	imagerel $unwind$?SetItemAllowOverlap@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetMainViewport@ImGui@@YAPEAUImGuiViewport@@XZ DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$?GetMainViewport@ImGui@@YAPEAUImGuiViewport@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsRectVisible@ImGui@@YA_NAEBUImVec2@@@Z DD imagerel $LN3
	DD	imagerel $LN3+152
	DD	imagerel $unwind$?IsRectVisible@ImGui@@YA_NAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsRectVisible@ImGui@@YA_NAEBUImVec2@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+122
	DD	imagerel $unwind$?IsRectVisible@ImGui@@YA_NAEBUImVec2@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetTime@ImGui@@YANXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?GetTime@ImGui@@YANXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetFrameCount@ImGui@@YAHXZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?GetFrameCount@ImGui@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@XZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@XZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDrawListSharedData@ImGui@@YAPEAUImDrawListSharedData@@XZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?GetDrawListSharedData@ImGui@@YAPEAUImDrawListSharedData@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetStyleColorName@ImGui@@YAPEBDH@Z DD imagerel $LN60
	DD	imagerel $LN60+960
	DD	imagerel $unwind$?GetStyleColorName@ImGui@@YAPEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetStateStorage@ImGui@@YAXPEAUImGuiStorage@@@Z DD imagerel $LN5
	DD	imagerel $LN5+120
	DD	imagerel $unwind$?SetStateStorage@ImGui@@YAXPEAUImGuiStorage@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetStateStorage@ImGui@@YAPEAUImGuiStorage@@XZ DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?GetStateStorage@ImGui@@YAPEAUImGuiStorage@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcListClipping@ImGui@@YAXHMPEAH0@Z DD imagerel $LN9
	DD	imagerel $LN9+753
	DD	imagerel $unwind$?CalcListClipping@ImGui@@YAXHMPEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BeginChildFrame@ImGui@@YA_NIAEBUImVec2@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+230
	DD	imagerel $unwind$?BeginChildFrame@ImGui@@YA_NIAEBUImVec2@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EndChildFrame@ImGui@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?EndChildFrame@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcTextSize@ImGui@@YA?AUImVec2@@PEBD0_NM@Z DD imagerel $LN6
	DD	imagerel $LN6+399
	DD	imagerel $unwind$?CalcTextSize@ImGui@@YA?AUImVec2@@PEBD0_NM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ColorConvertU32ToFloat4@ImGui@@YA?AUImVec4@@I@Z DD imagerel $LN3
	DD	imagerel $LN3+206
	DD	imagerel $unwind$?ColorConvertU32ToFloat4@ImGui@@YA?AUImVec4@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z DD imagerel $LN3
	DD	imagerel $LN3+233
	DD	imagerel $unwind$?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ColorConvertRGBtoHSV@ImGui@@YAXMMMAEAM00@Z DD imagerel $LN7
	DD	imagerel $LN7+369
	DD	imagerel $unwind$?ColorConvertRGBtoHSV@ImGui@@YAXMMMAEAM00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ColorConvertHSVtoRGB@ImGui@@YAXMMMAEAM00@Z DD imagerel $LN14
	DD	imagerel $LN14+772
	DD	imagerel $unwind$?ColorConvertHSVtoRGB@ImGui@@YAXMMMAEAM00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetKeyIndex@ImGui@@YAHH@Z DD imagerel $LN5
	DD	imagerel $LN5+117
	DD	imagerel $unwind$?GetKeyIndex@ImGui@@YAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsKeyDown@ImGui@@YA_NH@Z DD imagerel $LN6
	DD	imagerel $LN6+138
	DD	imagerel $unwind$?IsKeyDown@ImGui@@YA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsKeyPressed@ImGui@@YA_NH_N@Z DD imagerel $LN10
	DD	imagerel $LN10+272
	DD	imagerel $unwind$?IsKeyPressed@ImGui@@YA_NH_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsKeyReleased@ImGui@@YA_NH@Z DD imagerel $LN8
	DD	imagerel $LN8+203
	DD	imagerel $unwind$?IsKeyReleased@ImGui@@YA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetKeyPressedAmount@ImGui@@YAHHMM@Z DD imagerel $LN6
	DD	imagerel $LN6+196
	DD	imagerel $unwind$?GetKeyPressedAmount@ImGui@@YAHHMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CaptureKeyboardFromApp@ImGui@@YAX_N@Z DD imagerel $LN5
	DD	imagerel $LN5+92
	DD	imagerel $unwind$?CaptureKeyboardFromApp@ImGui@@YAX_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsMouseDown@ImGui@@YA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+122
	DD	imagerel $unwind$?IsMouseDown@ImGui@@YA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsMouseClicked@ImGui@@YA_NH_N@Z DD imagerel $LN8
	DD	imagerel $LN8+271
	DD	imagerel $unwind$?IsMouseClicked@ImGui@@YA_NH_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsMouseReleased@ImGui@@YA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+122
	DD	imagerel $unwind$?IsMouseReleased@ImGui@@YA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsMouseDoubleClicked@ImGui@@YA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+122
	DD	imagerel $unwind$?IsMouseDoubleClicked@ImGui@@YA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z DD imagerel $LN5
	DD	imagerel $LN5+334
	DD	imagerel $unwind$?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z DD imagerel $LN8
	DD	imagerel $LN8+306
	DD	imagerel $unwind$?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsAnyMouseDown@ImGui@@YA_NXZ DD imagerel $LN7
	DD	imagerel $LN7+99
	DD	imagerel $unwind$?IsAnyMouseDown@ImGui@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetMousePos@ImGui@@YA?AUImVec2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$?GetMousePos@ImGui@@YA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetMousePosOnOpeningCurrentPopup@ImGui@@YA?AUImVec2@@XZ DD imagerel $LN4
	DD	imagerel $LN4+159
	DD	imagerel $unwind$?GetMousePosOnOpeningCurrentPopup@ImGui@@YA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsMouseDragging@ImGui@@YA_NHM@Z DD imagerel $LN6
	DD	imagerel $LN6+155
	DD	imagerel $unwind$?IsMouseDragging@ImGui@@YA_NHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetMouseDragDelta@ImGui@@YA?AUImVec2@@HM@Z DD imagerel $LN10
	DD	imagerel $LN10+375
	DD	imagerel $unwind$?GetMouseDragDelta@ImGui@@YA?AUImVec2@@HM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ResetMouseDragDelta@ImGui@@YAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+133
	DD	imagerel $unwind$?ResetMouseDragDelta@ImGui@@YAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetMouseCursor@ImGui@@YAHXZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?GetMouseCursor@ImGui@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetMouseCursor@ImGui@@YAXH@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?SetMouseCursor@ImGui@@YAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CaptureMouseFromApp@ImGui@@YAX_N@Z DD imagerel $LN5
	DD	imagerel $LN5+92
	DD	imagerel $unwind$?CaptureMouseFromApp@ImGui@@YAX_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetClipboardText@ImGui@@YAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+127
	DD	imagerel $unwind$?GetClipboardText@ImGui@@YAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetClipboardText@ImGui@@YAXPEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+108
	DD	imagerel $unwind$?SetClipboardText@ImGui@@YAXPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LoadIniSettingsFromDisk@ImGui@@YAXPEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+183
	DD	imagerel $unwind$?LoadIniSettingsFromDisk@ImGui@@YAXPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LoadIniSettingsFromMemory@ImGui@@YAXPEBD_K@Z DD imagerel $LN32
	DD	imagerel $LN32+1423
	DD	imagerel $unwind$?LoadIniSettingsFromMemory@ImGui@@YAXPEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SaveIniSettingsToDisk@ImGui@@YAXPEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+236
	DD	imagerel $unwind$?SaveIniSettingsToDisk@ImGui@@YAXPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SaveIniSettingsToMemory@ImGui@@YAPEBDPEA_K@Z DD imagerel $LN7
	DD	imagerel $LN7+311
	DD	imagerel $unwind$?SaveIniSettingsToMemory@ImGui@@YAPEBDPEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DebugCheckVersionAndDataLayout@ImGui@@YA_NPEBD_K11111@Z DD imagerel $LN32
	DD	imagerel $LN32+669
	DD	imagerel $unwind$?DebugCheckVersionAndDataLayout@ImGui@@YA_NPEBD_K11111@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetAllocatorFunctions@ImGui@@YAXP6APEAX_KPEAX@ZP6AX11@Z1@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$?SetAllocatorFunctions@ImGui@@YAXP6APEAX_KPEAX@ZP6AX11@Z1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetAllocatorFunctions@ImGui@@YAXPEAP6APEAX_KPEAX@ZPEAP6AX11@ZPEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?GetAllocatorFunctions@ImGui@@YAXPEAP6APEAX_KPEAX@ZPEAP6AX11@ZPEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?MemAlloc@ImGui@@YAPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+115
	DD	imagerel $unwind$?MemAlloc@ImGui@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?MemFree@ImGui@@YAXPEAX@Z DD imagerel $LN5
	DD	imagerel $LN5+125
	DD	imagerel $unwind$?MemFree@ImGui@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KUImNewWrapper@@PEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??2@YAPEAX_KUImNewWrapper@@PEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??3@YAXPEAXUImNewWrapper@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??3@YAXPEAXUImNewWrapper@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiStyle@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+1319
	DD	imagerel $unwind$??0ImGuiStyle@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ScaleAllSizes@ImGuiStyle@@QEAAXM@Z DD imagerel $LN6
	DD	imagerel $LN6+1226
	DD	imagerel $unwind$?ScaleAllSizes@ImGuiStyle@@QEAAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddInputCharacter@ImGuiIO@@QEAAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+144
	DD	imagerel $unwind$?AddInputCharacter@ImGuiIO@@QEAAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddInputCharacterUTF16@ImGuiIO@@QEAAXG@Z DD imagerel $LN9
	DD	imagerel $LN9+429
	DD	imagerel $unwind$?AddInputCharacterUTF16@ImGuiIO@@QEAAXG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddInputCharactersUTF8@ImGuiIO@@QEAAXPEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+239
	DD	imagerel $unwind$?AddInputCharactersUTF8@ImGuiIO@@QEAAXPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClearInputCharacters@ImGuiIO@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?ClearInputCharacters@ImGuiIO@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@G@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@G@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@G@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@G@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@G@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@G@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@G@@QEAAAEAGH@Z DD imagerel $LN5
	DD	imagerel $LN5+121
	DD	imagerel $unwind$??A?$ImVector@G@@QEAAAEAGH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_grow_capacity@?$ImVector@G@@QEBAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?_grow_capacity@?$ImVector@G@@QEBAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@G@@QEAAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?resize@?$ImVector@G@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@G@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+183
	DD	imagerel $unwind$?reserve@?$ImVector@G@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@G@@QEAAXAEBG@Z DD imagerel $LN4
	DD	imagerel $LN4+161
	DD	imagerel $unwind$?push_back@?$ImVector@G@@QEAAXAEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiIO@@QEAA@XZ DD imagerel $LN16
	DD	imagerel $LN16+1288
	DD	imagerel $unwind$??0ImGuiIO@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ImGuiIO@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0ImGuiIO@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0ImGuiIO@@QEAA@XZ@4HA+46
	DD	imagerel $unwind$?dtor$0@?0???0ImGuiIO@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImGuiIO@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??1ImGuiIO@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiSizeCallbackData@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$??0ImGuiSizeCallbackData@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiPayload@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??0ImGuiPayload@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clear@ImGuiPayload@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+156
	DD	imagerel $unwind$?Clear@ImGuiPayload@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsDataType@ImGuiPayload@@QEBA_NPEBD@Z DD imagerel $LN8
	DD	imagerel $LN8+137
	DD	imagerel $unwind$?IsDataType@ImGuiPayload@@QEBA_NPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiTextFilter@@QEAA@PEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+164
	DD	imagerel $unwind$??0ImGuiTextFilter@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ImGuiTextFilter@@QEAA@PEBD@Z@4HA DD imagerel ?dtor$0@?0???0ImGuiTextFilter@@QEAA@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0ImGuiTextFilter@@QEAA@PEBD@Z@4HA+46
	DD	imagerel $unwind$?dtor$0@?0???0ImGuiTextFilter@@QEAA@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Draw@ImGuiTextFilter@@QEAA_NPEBDM@Z DD imagerel $LN6
	DD	imagerel $LN6+160
	DD	imagerel $unwind$?Draw@ImGuiTextFilter@@QEAA_NPEBDM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PassFilter@ImGuiTextFilter@@QEBA_NPEBD0@Z DD imagerel $LN14
	DD	imagerel $LN14+352
	DD	imagerel $unwind$?PassFilter@ImGuiTextFilter@@QEBA_NPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Build@ImGuiTextFilter@@QEAAXXZ DD imagerel $LN13
	DD	imagerel $LN13+613
	DD	imagerel $unwind$?Build@ImGuiTextFilter@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiTextRange@ImGuiTextFilter@@QEAA@PEBD0@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$??0ImGuiTextRange@ImGuiTextFilter@@QEAA@PEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?empty@ImGuiTextRange@ImGuiTextFilter@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+93
	DD	imagerel $unwind$?empty@ImGuiTextRange@ImGuiTextFilter@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?split@ImGuiTextRange@ImGuiTextFilter@@QEBAXDPEAU?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@@Z DD imagerel $LN7
	DD	imagerel $LN7+225
	DD	imagerel $unwind$?split@ImGuiTextRange@ImGuiTextFilter@@QEBAXDPEAU?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?empty@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$?empty@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAAEAUImGuiTextRange@ImGuiTextFilter@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+121
	DD	imagerel $unwind$??A?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAAEAUImGuiTextRange@ImGuiTextFilter@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBAAEBUImGuiTextRange@ImGuiTextFilter@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+121
	DD	imagerel $unwind$??A?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBAAEBUImGuiTextRange@ImGuiTextFilter@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_grow_capacity@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?_grow_capacity@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?resize@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+185
	DD	imagerel $unwind$?reserve@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXAEBUImGuiTextRange@ImGuiTextFilter@@@Z DD imagerel $LN4
	DD	imagerel $LN4+171
	DD	imagerel $unwind$?push_back@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXAEBUImGuiTextRange@ImGuiTextFilter@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@D@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@D@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@D@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@D@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@D@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@D@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@D@@QEAAAEADH@Z DD imagerel $LN5
	DD	imagerel $LN5+123
	DD	imagerel $unwind$??A?$ImVector@D@@QEAAAEADH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?front@?$ImVector@D@@QEBAAEBDXZ DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?front@?$ImVector@D@@QEBAAEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_grow_capacity@?$ImVector@D@@QEBAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?_grow_capacity@?$ImVector@D@@QEBAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@D@@QEAAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?resize@?$ImVector@D@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@D@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+177
	DD	imagerel $unwind$?reserve@?$ImVector@D@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@D@@QEAAXAEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+160
	DD	imagerel $unwind$?push_back@?$ImVector@D@@QEAAXAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiTextBuffer@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+63
	DD	imagerel $unwind$??0ImGuiTextBuffer@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@ImGuiTextBuffer@@QEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+100
	DD	imagerel $unwind$?begin@ImGuiTextBuffer@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@ImGuiTextBuffer@@QEBAHXZ DD imagerel $LN5
	DD	imagerel $LN5+88
	DD	imagerel $unwind$?size@ImGuiTextBuffer@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?empty@ImGuiTextBuffer@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$?empty@ImGuiTextBuffer@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@ImGuiTextBuffer@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?clear@ImGuiTextBuffer@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@ImGuiTextBuffer@@QEAAXH@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?reserve@ImGuiTextBuffer@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?c_str@ImGuiTextBuffer@@QEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+96
	DD	imagerel $unwind$?c_str@ImGuiTextBuffer@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@ImGuiTextBuffer@@QEAAXPEBD0@Z DD imagerel $LN11
	DD	imagerel $LN11+459
	DD	imagerel $unwind$?append@ImGuiTextBuffer@@QEAAXPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?appendf@ImGuiTextBuffer@@QEAAXPEBDZZ DD imagerel $LN3
	DD	imagerel $LN3+171
	DD	imagerel $unwind$?appendf@ImGuiTextBuffer@@QEAAXPEBDZZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?appendfv@ImGuiTextBuffer@@QEAAXPEBDPEAD@Z DD imagerel $LN9
	DD	imagerel $LN9+387
	DD	imagerel $unwind$?appendfv@ImGuiTextBuffer@@QEAAXPEBDPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImGuiTextBuffer@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??1ImGuiTextBuffer@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiStoragePair@ImGuiStorage@@QEAA@IH@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??0ImGuiStoragePair@ImGuiStorage@@QEAA@IH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiStoragePair@ImGuiStorage@@QEAA@IM@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$??0ImGuiStoragePair@ImGuiStorage@@QEAA@IM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiStoragePair@ImGuiStorage@@QEAA@IPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0ImGuiStoragePair@ImGuiStorage@@QEAA@IPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size_in_bytes@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?size_in_bytes@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAAEAUImGuiStoragePair@ImGuiStorage@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+121
	DD	imagerel $unwind$??A?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAAEAUImGuiStoragePair@ImGuiStorage@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@XZ DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAPEBUImGuiStoragePair@ImGuiStorage@@XZ DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAPEBUImGuiStoragePair@ImGuiStorage@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_grow_capacity@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?_grow_capacity@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+185
	DD	imagerel $unwind$?reserve@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?insert@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@PEBU23@AEBU23@@Z DD imagerel $LN7
	DD	imagerel $LN7+396
	DD	imagerel $unwind$?insert@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@PEBU23@AEBU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clear@ImGuiStorage@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?Clear@ImGuiStorage@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetInt@ImGuiStorage@@QEBAHIH@Z DD imagerel $LN5
	DD	imagerel $LN5+125
	DD	imagerel $unwind$?GetInt@ImGuiStorage@@QEBAHIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetInt@ImGuiStorage@@QEAAXIH@Z DD imagerel $LN5
	DD	imagerel $LN5+183
	DD	imagerel $unwind$?SetInt@ImGuiStorage@@QEAAXIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetBool@ImGuiStorage@@QEBA_NI_N@Z DD imagerel $LN7
	DD	imagerel $LN7+141
	DD	imagerel $unwind$?GetBool@ImGuiStorage@@QEBA_NI_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetBool@ImGuiStorage@@QEAAXI_N@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$?SetBool@ImGuiStorage@@QEAAXI_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetFloat@ImGuiStorage@@QEBAMIM@Z DD imagerel $LN5
	DD	imagerel $LN5+130
	DD	imagerel $unwind$?GetFloat@ImGuiStorage@@QEBAMIM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetFloat@ImGuiStorage@@QEAAXIM@Z DD imagerel $LN5
	DD	imagerel $LN5+189
	DD	imagerel $unwind$?SetFloat@ImGuiStorage@@QEAAXIM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetVoidPtr@ImGuiStorage@@QEBAPEAXI@Z DD imagerel $LN5
	DD	imagerel $LN5+117
	DD	imagerel $unwind$?GetVoidPtr@ImGuiStorage@@QEBAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetVoidPtr@ImGuiStorage@@QEAAXIPEAX@Z DD imagerel $LN5
	DD	imagerel $LN5+185
	DD	imagerel $unwind$?SetVoidPtr@ImGuiStorage@@QEAAXIPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetIntRef@ImGuiStorage@@QEAAPEAHIH@Z DD imagerel $LN5
	DD	imagerel $LN5+180
	DD	imagerel $unwind$?GetIntRef@ImGuiStorage@@QEAAPEAHIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetBoolRef@ImGuiStorage@@QEAAPEA_NI_N@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$?GetBoolRef@ImGuiStorage@@QEAAPEA_NI_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetFloatRef@ImGuiStorage@@QEAAPEAMIM@Z DD imagerel $LN5
	DD	imagerel $LN5+182
	DD	imagerel $unwind$?GetFloatRef@ImGuiStorage@@QEAAPEAMIM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetVoidPtrRef@ImGuiStorage@@QEAAPEAPEAXIPEAX@Z DD imagerel $LN5
	DD	imagerel $LN5+180
	DD	imagerel $unwind$?GetVoidPtrRef@ImGuiStorage@@QEAAPEAPEAXIPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetAllInt@ImGuiStorage@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+116
	DD	imagerel $unwind$?SetAllInt@ImGuiStorage@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BuildSortByKey@ImGuiStorage@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+96
	DD	imagerel $unwind$?BuildSortByKey@ImGuiStorage@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiStorage@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+51
	DD	imagerel $unwind$??0ImGuiStorage@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImGuiStorage@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??1ImGuiStorage@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiListClipper@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??0ImGuiListClipper@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImGuiListClipper@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+99
	DD	imagerel $unwind$??1ImGuiListClipper@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Begin@ImGuiListClipper@@QEAAXHM@Z DD imagerel $LN5
	DD	imagerel $LN5+238
	DD	imagerel $unwind$?Begin@ImGuiListClipper@@QEAAXHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?End@ImGuiListClipper@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+189
	DD	imagerel $unwind$?End@ImGuiListClipper@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Step@ImGuiListClipper@@QEAA_NXZ DD imagerel $LN22
	DD	imagerel $LN22+1192
	DD	imagerel $unwind$?Step@ImGuiListClipper@@QEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImDrawCmdHeader@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0ImDrawCmdHeader@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@UImDrawCmd@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@UImDrawCmd@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImDrawCmd@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImDrawCmd@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+121
	DD	imagerel $unwind$??A?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$ImVector@UImDrawCmd@@@@QEBAPEBUImDrawCmd@@XZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?begin@?$ImVector@UImDrawCmd@@@@QEBAPEBUImDrawCmd@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@XZ DD imagerel $LN4
	DD	imagerel $LN4+109
	DD	imagerel $unwind$?back@?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@UImDrawCmd@@@@QEBAAEBUImDrawCmd@@XZ DD imagerel $LN4
	DD	imagerel $LN4+109
	DD	imagerel $unwind$?back@?$ImVector@UImDrawCmd@@@@QEBAAEBUImDrawCmd@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@UImDrawChannel@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@UImDrawChannel@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImDrawChannel@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImDrawChannel@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImDrawChannel@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@UImDrawChannel@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImDrawListSplitter@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??0ImDrawListSplitter@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImDrawListSplitter@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??1ImDrawListSplitter@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@UImDrawVert@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@UImDrawVert@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImDrawVert@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImDrawVert@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+185
	DD	imagerel $unwind$?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@UImVec4@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@UImVec4@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImVec4@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImVec4@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@UImVec4@@@@QEAAAEAUImVec4@@XZ DD imagerel $LN4
	DD	imagerel $LN4+109
	DD	imagerel $unwind$?back@?$ImVector@UImVec4@@@@QEAAAEAUImVec4@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@PEAX@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@PEAX@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@PEAX@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@PEAX@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@UImVec2@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@UImVec2@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImVec2@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImVec2@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_grow_capacity@?$ImVector@UImVec2@@@@QEBAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?_grow_capacity@?$ImVector@UImVec2@@@@QEBAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+185
	DD	imagerel $unwind$?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@UImVec2@@@@QEAAXAEBUImVec2@@@Z DD imagerel $LN4
	DD	imagerel $LN4+161
	DD	imagerel $unwind$?push_back@?$ImVector@UImVec2@@@@QEAAXAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z DD imagerel $LN10
	DD	imagerel $LN10+245
	DD	imagerel $unwind$??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA DD imagerel ?dtor$0@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA DD imagerel ?dtor$1@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
	DD	imagerel ?dtor$1@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA+43
	DD	imagerel $unwind$?dtor$1@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA DD imagerel ?dtor$2@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
	DD	imagerel ?dtor$2@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA+43
	DD	imagerel $unwind$?dtor$2@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA DD imagerel ?dtor$3@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
	DD	imagerel ?dtor$3@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA+43
	DD	imagerel $unwind$?dtor$3@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA DD imagerel ?dtor$4@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
	DD	imagerel ?dtor$4@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA+43
	DD	imagerel $unwind$?dtor$4@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA DD imagerel ?dtor$5@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
	DD	imagerel ?dtor$5@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA+43
	DD	imagerel $unwind$?dtor$5@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImDrawList@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+185
	DD	imagerel $unwind$??1ImDrawList@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PathFillConvex@ImDrawList@@QEAAXI@Z DD imagerel $LN3
	DD	imagerel $LN3+103
	DD	imagerel $unwind$?PathFillConvex@ImDrawList@@QEAAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PathStroke@ImDrawList@@QEAAXIHM@Z DD imagerel $LN3
	DD	imagerel $LN3+138
	DD	imagerel $unwind$?PathStroke@ImDrawList@@QEAAXIHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GImDrawList@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_GImDrawList@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImDrawData@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??0ImDrawData@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clear@ImDrawData@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?Clear@ImDrawData@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@I@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@I@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@I@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@I@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@I@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@I@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@I@@QEAAAEAIXZ DD imagerel $LN4
	DD	imagerel $LN4+109
	DD	imagerel $unwind$?back@?$ImVector@I@@QEAAAEAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_grow_capacity@?$ImVector@I@@QEBAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?_grow_capacity@?$ImVector@I@@QEBAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@I@@QEAAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?resize@?$ImVector@I@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@I@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+185
	DD	imagerel $unwind$?reserve@?$ImVector@I@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@I@@QEAAXAEBI@Z DD imagerel $LN4
	DD	imagerel $LN4+159
	DD	imagerel $unwind$?push_back@?$ImVector@I@@QEAAXAEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pop_back@?$ImVector@I@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?pop_back@?$ImVector@I@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsBuilt@ImFontAtlas@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+98
	DD	imagerel $unwind$?IsBuilt@ImFontAtlas@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@PEAUImFont@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@PEAUImFont@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@PEAUImFont@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@PEAUImFont@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@PEAUImFont@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@PEAUImFont@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?empty@?$ImVector@PEAUImFont@@@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$?empty@?$ImVector@PEAUImFont@@@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+121
	DD	imagerel $unwind$??A?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@XZ DD imagerel $LN4
	DD	imagerel $LN4+109
	DD	imagerel $unwind$?back@?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_grow_capacity@?$ImVector@PEAUImFont@@@@QEBAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?_grow_capacity@?$ImVector@PEAUImFont@@@@QEBAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+185
	DD	imagerel $unwind$?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z DD imagerel $LN4
	DD	imagerel $LN4+161
	DD	imagerel $unwind$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pop_back@?$ImVector@PEAUImFont@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?pop_back@?$ImVector@PEAUImFont@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GImFontAtlas@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_GImFontAtlas@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@M@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@M@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@M@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@M@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@M@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@M@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@M@@QEAAAEAMH@Z DD imagerel $LN5
	DD	imagerel $LN5+121
	DD	imagerel $unwind$??A?$ImVector@M@@QEAAAEAMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@M@@QEAAAEAMXZ DD imagerel $LN4
	DD	imagerel $LN4+109
	DD	imagerel $unwind$?back@?$ImVector@M@@QEAAAEAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_grow_capacity@?$ImVector@M@@QEBAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?_grow_capacity@?$ImVector@M@@QEBAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@M@@QEAAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?resize@?$ImVector@M@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@M@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+185
	DD	imagerel $unwind$?reserve@?$ImVector@M@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@M@@QEAAXAEBM@Z DD imagerel $LN4
	DD	imagerel $LN4+159
	DD	imagerel $unwind$?push_back@?$ImVector@M@@QEAAXAEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pop_back@?$ImVector@M@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?pop_back@?$ImVector@M@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsLoaded@ImFont@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+84
	DD	imagerel $unwind$?IsLoaded@ImFont@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiViewport@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??0ImGuiViewport@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCenter@ImGuiViewport@@QEBA?AUImVec2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+146
	DD	imagerel $unwind$?GetCenter@ImGuiViewport@@QEBA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_printf_options DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$__local_stdio_printf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_scanf_options DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$__local_stdio_scanf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsnprintf_l DD imagerel $LN5
	DD	imagerel $LN5+158
	DD	imagerel $unwind$_vsnprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsnprintf DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$_vsnprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsscanf_l DD imagerel $LN3
	DD	imagerel $LN3+115
	DD	imagerel $unwind$_vsscanf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sscanf DD imagerel $LN3
	DD	imagerel $LN3+184
	DD	imagerel $unwind$sscanf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$fabsf DD	imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$fabsf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImHashData@@YAIPEBX_KI@Z DD imagerel $LN7
	DD	imagerel $LN7+225
	DD	imagerel $unwind$?ImHashData@@YAIPEBX_KI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImHashStr@@YAIPEBD_KI@Z DD imagerel $LN13
	DD	imagerel $LN13+494
	DD	imagerel $unwind$?ImHashStr@@YAIPEBD_KI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImAlphaBlendColors@@YAIII@Z DD imagerel $LN3
	DD	imagerel $LN3+226
	DD	imagerel $unwind$?ImAlphaBlendColors@@YAIII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImIsPowerOfTwo@@YA_NH@Z DD imagerel ?ImIsPowerOfTwo@@YA_NH@Z
	DD	imagerel ?ImIsPowerOfTwo@@YA_NH@Z+100
	DD	imagerel $unwind$?ImIsPowerOfTwo@@YA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImStricmp@@YAHPEBD0@Z DD imagerel $LN5
	DD	imagerel $LN5+158
	DD	imagerel $unwind$?ImStricmp@@YAHPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImStrnicmp@@YAHPEBD0_K@Z DD imagerel $LN5
	DD	imagerel $LN5+204
	DD	imagerel $unwind$?ImStrnicmp@@YAHPEBD0_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImStrncpy@@YAXPEADPEBD_K@Z DD imagerel $LN5
	DD	imagerel $LN5+130
	DD	imagerel $unwind$?ImStrncpy@@YAXPEADPEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImStrdup@@YAPEADPEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+152
	DD	imagerel $unwind$?ImStrdup@@YAPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImStrdupcpy@@YAPEADPEADPEA_KPEBD@Z DD imagerel $LN9
	DD	imagerel $LN9+317
	DD	imagerel $unwind$?ImStrdupcpy@@YAPEADPEADPEA_KPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImStrchrRange@@YAPEBDPEBD0D@Z DD imagerel $LN3
	DD	imagerel $LN3+103
	DD	imagerel $unwind$?ImStrchrRange@@YAPEBDPEBD0D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImStrlenW@@YAHPEBG@Z DD imagerel $LN5
	DD	imagerel $LN5+107
	DD	imagerel $unwind$?ImStrlenW@@YAHPEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImStreolRange@@YAPEBDPEBD0@Z DD imagerel $LN5
	DD	imagerel $LN5+131
	DD	imagerel $unwind$?ImStreolRange@@YAPEBDPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImStrbolW@@YAPEBGPEBG0@Z DD imagerel $LN5
	DD	imagerel $LN5+114
	DD	imagerel $unwind$?ImStrbolW@@YAPEBGPEBG0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImStristr@@YAPEBDPEBD000@Z DD imagerel $LN15
	DD	imagerel $LN15+413
	DD	imagerel $unwind$?ImStristr@@YAPEBDPEBD000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImStrTrimBlanks@@YAXPEAD@Z DD imagerel $LN12
	DD	imagerel $LN12+279
	DD	imagerel $unwind$?ImStrTrimBlanks@@YAXPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImStrSkipBlank@@YAPEBDPEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+117
	DD	imagerel $unwind$?ImStrSkipBlank@@YAPEBDPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImFormatString@@YAHPEAD_KPEBDZZ DD imagerel $LN6
	DD	imagerel $LN6+248
	DD	imagerel $unwind$?ImFormatString@@YAHPEAD_KPEBDZZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImFormatStringV@@YAHPEAD_KPEBD0@Z DD imagerel $LN6
	DD	imagerel $LN6+153
	DD	imagerel $unwind$?ImFormatStringV@@YAHPEAD_KPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImCharIsBlankA@@YA_ND@Z DD imagerel ?ImCharIsBlankA@@YA_ND@Z
	DD	imagerel ?ImCharIsBlankA@@YA_ND@Z+93
	DD	imagerel $unwind$?ImCharIsBlankA@@YA_ND@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImTextCharToUtf8@@YAPEBDQEADI@Z DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$?ImTextCharToUtf8@@YAPEBDQEADI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImTextStrToUtf8@@YAHPEADHPEBG1@Z DD imagerel $LN8
	DD	imagerel $LN8+307
	DD	imagerel $unwind$?ImTextStrToUtf8@@YAHPEADHPEBG1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z DD imagerel $LN29
	DD	imagerel $LN29+1256
	DD	imagerel $unwind$?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImTextStrFromUtf8@@YAHPEAGHPEBD1PEAPEBD@Z DD imagerel $LN8
	DD	imagerel $LN8+358
	DD	imagerel $unwind$?ImTextStrFromUtf8@@YAHPEAGHPEBD1PEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImTextCountCharsFromUtf8@@YAHPEBD0@Z DD imagerel $LN7
	DD	imagerel $LN7+236
	DD	imagerel $unwind$?ImTextCountCharsFromUtf8@@YAHPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImTextCountUtf8BytesFromChar@@YAHPEBD0@Z DD imagerel $LN3
	DD	imagerel $LN3+155
	DD	imagerel $unwind$?ImTextCountUtf8BytesFromChar@@YAHPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImTextCountUtf8BytesFromStr@@YAHPEBG0@Z DD imagerel $LN8
	DD	imagerel $LN8+178
	DD	imagerel $unwind$?ImTextCountUtf8BytesFromStr@@YAHPEBG0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D@YA?AUImVec2@@AEBU0@M@Z DD imagerel ??D@YA?AUImVec2@@AEBU0@M@Z
	DD	imagerel ??D@YA?AUImVec2@@AEBU0@M@Z+87
	DD	imagerel $unwind$??D@YA?AUImVec2@@AEBU0@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??K@YA?AUImVec2@@AEBU0@M@Z DD imagerel ??K@YA?AUImVec2@@AEBU0@M@Z
	DD	imagerel ??K@YA?AUImVec2@@AEBU0@M@Z+87
	DD	imagerel $unwind$??K@YA?AUImVec2@@AEBU0@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??H@YA?AUImVec2@@AEBU0@0@Z DD imagerel ??H@YA?AUImVec2@@AEBU0@0@Z
	DD	imagerel ??H@YA?AUImVec2@@AEBU0@0@Z+93
	DD	imagerel $unwind$??H@YA?AUImVec2@@AEBU0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??G@YA?AUImVec2@@AEBU0@0@Z DD imagerel ??G@YA?AUImVec2@@AEBU0@0@Z
	DD	imagerel ??G@YA?AUImVec2@@AEBU0@0@Z+93
	DD	imagerel $unwind$??G@YA?AUImVec2@@AEBU0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D@YA?AUImVec2@@AEBU0@0@Z DD imagerel ??D@YA?AUImVec2@@AEBU0@0@Z
	DD	imagerel ??D@YA?AUImVec2@@AEBU0@0@Z+93
	DD	imagerel $unwind$??D@YA?AUImVec2@@AEBU0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??K@YA?AUImVec2@@AEBU0@0@Z DD imagerel ??K@YA?AUImVec2@@AEBU0@0@Z
	DD	imagerel ??K@YA?AUImVec2@@AEBU0@0@Z+93
	DD	imagerel $unwind$??K@YA?AUImVec2@@AEBU0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??X@YAAEAUImVec2@@AEAU0@M@Z DD imagerel ??X@YAAEAUImVec2@@AEAU0@M@Z
	DD	imagerel ??X@YAAEAUImVec2@@AEAU0@M@Z+87
	DD	imagerel $unwind$??X@YAAEAUImVec2@@AEAU0@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y@YAAEAUImVec2@@AEAU0@AEBU0@@Z DD imagerel ??Y@YAAEAUImVec2@@AEAU0@AEBU0@@Z
	DD	imagerel ??Y@YAAEAUImVec2@@AEAU0@AEBU0@@Z+93
	DD	imagerel $unwind$??Y@YAAEAUImVec2@@AEAU0@AEBU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Z@YAAEAUImVec2@@AEAU0@AEBU0@@Z DD imagerel ??Z@YAAEAUImVec2@@AEAU0@AEBU0@@Z
	DD	imagerel ??Z@YAAEAUImVec2@@AEAU0@AEBU0@@Z+93
	DD	imagerel $unwind$??Z@YAAEAUImVec2@@AEAU0@AEBU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z DD imagerel $LN4
	DD	imagerel $LN4+427
	DD	imagerel $unwind$?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z@4HA DD imagerel ?dtor$0@?0??ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z@4HA
	DD	imagerel ?dtor$0@?0??ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImFileClose@@YA_NPEAU_iobuf@@@Z DD imagerel $LN5
	DD	imagerel $LN5+87
	DD	imagerel $unwind$?ImFileClose@@YA_NPEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImFileGetSize@@YA_KPEAU_iobuf@@@Z DD imagerel $LN5
	DD	imagerel $LN5+178
	DD	imagerel $unwind$?ImFileGetSize@@YA_KPEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImFileRead@@YA_KPEAX_K1PEAU_iobuf@@@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$?ImFileRead@@YA_KPEAX_K1PEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImFileWrite@@YA_KPEBX_K1PEAU_iobuf@@@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$?ImFileWrite@@YA_KPEBX_K1PEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImFileLoadToMemory@@YAPEAXPEBD0PEA_KH@Z DD imagerel $LN12
	DD	imagerel $LN12+396
	DD	imagerel $unwind$?ImFileLoadToMemory@@YAPEAXPEBD0PEA_KH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImMin@@YA?AUImVec2@@AEBU1@0@Z DD imagerel ?ImMin@@YA?AUImVec2@@AEBU1@0@Z
	DD	imagerel ?ImMin@@YA?AUImVec2@@AEBU1@0@Z+160
	DD	imagerel $unwind$?ImMin@@YA?AUImVec2@@AEBU1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImMax@@YA?AUImVec2@@AEBU1@0@Z DD imagerel ?ImMax@@YA?AUImVec2@@AEBU1@0@Z
	DD	imagerel ?ImMax@@YA?AUImVec2@@AEBU1@0@Z+160
	DD	imagerel $unwind$?ImMax@@YA?AUImVec2@@AEBU1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z DD imagerel ?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z
	DD	imagerel ?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z+238
	DD	imagerel $unwind$?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImLerp@@YA?AUImVec2@@AEBU1@00@Z DD imagerel ?ImLerp@@YA?AUImVec2@@AEBU1@00@Z
	DD	imagerel ?ImLerp@@YA?AUImVec2@@AEBU1@00@Z+146
	DD	imagerel $unwind$?ImLerp@@YA?AUImVec2@@AEBU1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImSaturate@@YAMM@Z DD imagerel ?ImSaturate@@YAMM@Z
	DD	imagerel ?ImSaturate@@YAMM@Z+107
	DD	imagerel $unwind$?ImSaturate@@YAMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImLengthSqr@@YAMAEBUImVec2@@@Z DD imagerel ?ImLengthSqr@@YAMAEBUImVec2@@@Z
	DD	imagerel ?ImLengthSqr@@YAMAEBUImVec2@@@Z+71
	DD	imagerel $unwind$?ImLengthSqr@@YAMAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImFloor@@YAMM@Z DD imagerel ?ImFloor@@YAMM@Z
	DD	imagerel ?ImFloor@@YAMM@Z+43
	DD	imagerel $unwind$?ImFloor@@YAMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImFloor@@YA?AUImVec2@@AEBU1@@Z DD imagerel ?ImFloor@@YA?AUImVec2@@AEBU1@@Z
	DD	imagerel ?ImFloor@@YA?AUImVec2@@AEBU1@@Z+79
	DD	imagerel $unwind$?ImFloor@@YA?AUImVec2@@AEBU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImModPositive@@YAHHH@Z DD imagerel ?ImModPositive@@YAHHH@Z
	DD	imagerel ?ImModPositive@@YAHHH@Z+52
	DD	imagerel $unwind$?ImModPositive@@YAHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$ImMin@M@@YAMMM@Z DD imagerel ??$ImMin@M@@YAMMM@Z
	DD	imagerel ??$ImMin@M@@YAMMM@Z+107
	DD	imagerel $unwind$??$ImMin@M@@YAMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$ImMax@M@@YAMMM@Z DD imagerel ??$ImMax@M@@YAMMM@Z
	DD	imagerel ??$ImMax@M@@YAMMM@Z+107
	DD	imagerel $unwind$??$ImMax@M@@YAMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU1@0000H@Z DD imagerel $LN8
	DD	imagerel $LN8+503
	DD	imagerel $unwind$?ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU1@0000H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU1@0000M@Z DD imagerel $LN4
	DD	imagerel $LN4+428
	DD	imagerel $unwind$?ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU1@0000M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z DD imagerel $LN5
	DD	imagerel $LN5+390
	DD	imagerel $unwind$?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImTriangleContainsPoint@@YA_NAEBUImVec2@@000@Z DD imagerel $LN11
	DD	imagerel $LN11+541
	DD	imagerel $unwind$?ImTriangleContainsPoint@@YA_NAEBUImVec2@@000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImTriangleClosestPoint@@YA?AUImVec2@@AEBU1@000@Z DD imagerel $LN5
	DD	imagerel $LN5+483
	DD	imagerel $unwind$?ImTriangleClosestPoint@@YA?AUImVec2@@AEBU1@000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImTriangleBarycentricCoords@@YAXAEBUImVec2@@000AEAM11@Z DD imagerel $LN3
	DD	imagerel $LN3+348
	DD	imagerel $unwind$?ImTriangleBarycentricCoords@@YAXAEBUImVec2@@000AEAM11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImTriangleArea@@YAMAEBUImVec2@@00@Z DD imagerel $LN3
	DD	imagerel $LN3+198
	DD	imagerel $unwind$?ImTriangleArea@@YAMAEBUImVec2@@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGetDirQuadrantFromDelta@@YAHMM@Z DD imagerel $LN8
	DD	imagerel $LN8+187
	DD	imagerel $unwind$?ImGetDirQuadrantFromDelta@@YAHMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImVec1@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0ImVec1@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImVec2ih@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0ImVec2ih@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImVec2ih@@QEAA@FF@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??0ImVec2ih@@QEAA@FF@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImVec2ih@@QEAA@AEBUImVec2@@@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??0ImVec2ih@@QEAA@AEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImRect@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??0ImRect@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImRect@@QEAA@AEBUImVec2@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??0ImRect@@QEAA@AEBUImVec2@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImRect@@QEAA@AEBUImVec4@@@Z DD imagerel $LN3
	DD	imagerel $LN3+115
	DD	imagerel $unwind$??0ImRect@@QEAA@AEBUImVec4@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImRect@@QEAA@MMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??0ImRect@@QEAA@MMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSize@ImRect@@QEBA?AUImVec2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?GetSize@ImRect@@QEBA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWidth@ImRect@@QEBAMXZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?GetWidth@ImRect@@QEBAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetHeight@ImRect@@QEBAMXZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?GetHeight@ImRect@@QEBAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetBL@ImRect@@QEBA?AUImVec2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?GetBL@ImRect@@QEBA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetBR@ImRect@@QEBA?AUImVec2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?GetBR@ImRect@@QEBA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Contains@ImRect@@QEBA_NAEBUImVec2@@@Z DD imagerel $LN5
	DD	imagerel $LN5+131
	DD	imagerel $unwind$?Contains@ImRect@@QEBA_NAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Contains@ImRect@@QEBA_NAEBU1@@Z DD imagerel $LN5
	DD	imagerel $LN5+132
	DD	imagerel $unwind$?Contains@ImRect@@QEBA_NAEBU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Overlaps@ImRect@@QEBA_NAEBU1@@Z DD imagerel $LN5
	DD	imagerel $LN5+132
	DD	imagerel $unwind$?Overlaps@ImRect@@QEBA_NAEBU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Add@ImRect@@QEAAXAEBUImVec2@@@Z DD imagerel $LN7
	DD	imagerel $LN7+180
	DD	imagerel $unwind$?Add@ImRect@@QEAAXAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Add@ImRect@@QEAAXAEBU1@@Z DD imagerel $LN7
	DD	imagerel $LN7+182
	DD	imagerel $unwind$?Add@ImRect@@QEAAXAEBU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Expand@ImRect@@QEAAXM@Z DD imagerel $LN3
	DD	imagerel $LN3+129
	DD	imagerel $unwind$?Expand@ImRect@@QEAAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Expand@ImRect@@QEAAXAEBUImVec2@@@Z DD imagerel $LN3
	DD	imagerel $LN3+142
	DD	imagerel $unwind$?Expand@ImRect@@QEAAXAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TranslateX@ImRect@@QEAAXM@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$?TranslateX@ImRect@@QEAAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TranslateY@ImRect@@QEAAXM@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?TranslateY@ImRect@@QEAAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClipWith@ImRect@@QEAAXAEBU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$?ClipWith@ImRect@@QEAAXAEBU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClipWithFull@ImRect@@QEAAXAEBU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+125
	DD	imagerel $unwind$?ClipWithFull@ImRect@@QEAAXAEBU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsInverted@ImRect@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+90
	DD	imagerel $unwind$?IsInverted@ImRect@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToVec4@ImRect@@QEBA?AUImVec4@@XZ DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$?ToVec4@ImRect@@QEBA?AUImVec4@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@PEAUImDrawList@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@PEAUImDrawList@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@PEAUImDrawList@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@PEAUImDrawList@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?empty@?$ImVector@PEAUImDrawList@@@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$?empty@?$ImVector@PEAUImDrawList@@@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@PEAUImDrawList@@@@QEAAAEAPEAUImDrawList@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+121
	DD	imagerel $unwind$??A?$ImVector@PEAUImDrawList@@@@QEAAAEAPEAUImDrawList@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_grow_capacity@?$ImVector@PEAUImDrawList@@@@QEBAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?_grow_capacity@?$ImVector@PEAUImDrawList@@@@QEBAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@PEAUImDrawList@@@@QEAAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?resize@?$ImVector@PEAUImDrawList@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@PEAUImDrawList@@@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+185
	DD	imagerel $unwind$?reserve@?$ImVector@PEAUImDrawList@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@PEAUImDrawList@@@@QEAAXAEBQEAUImDrawList@@@Z DD imagerel $LN4
	DD	imagerel $LN4+161
	DD	imagerel $unwind$?push_back@?$ImVector@PEAUImDrawList@@@@QEAAXAEBQEAUImDrawList@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clear@ImDrawDataBuilder@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+108
	DD	imagerel $unwind$?Clear@ImDrawDataBuilder@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDrawListCount@ImDrawDataBuilder@@QEBAHXZ DD imagerel $LN6
	DD	imagerel $LN6+104
	DD	imagerel $unwind$?GetDrawListCount@ImDrawDataBuilder@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FlattenIntoSingleLayer@ImDrawDataBuilder@@QEAAXXZ DD imagerel $LN10
	DD	imagerel $LN10+393
	DD	imagerel $unwind$?FlattenIntoSingleLayer@ImDrawDataBuilder@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImDrawDataBuilder@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??0ImDrawDataBuilder@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImDrawDataBuilder@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??1ImDrawDataBuilder@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiColorMod@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$??0ImGuiColorMod@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiStyleMod@@QEAA@HM@Z DD imagerel $LN3
	DD	imagerel $LN3+103
	DD	imagerel $unwind$??0ImGuiStyleMod@@QEAA@HM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiStyleMod@@QEAA@HUImVec2@@@Z DD imagerel $LN3
	DD	imagerel $LN3+132
	DD	imagerel $unwind$??0ImGuiStyleMod@@QEAA@HUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiComboPreviewData@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??0ImGuiComboPreviewData@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiMenuColumns@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0ImGuiMenuColumns@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiInputTextState@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+123
	DD	imagerel $unwind$??0ImGuiInputTextState@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ImGuiInputTextState@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0ImGuiInputTextState@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0ImGuiInputTextState@@QEAA@XZ@4HA+43
	DD	imagerel $unwind$?dtor$0@?0???0ImGuiInputTextState@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0ImGuiInputTextState@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0ImGuiInputTextState@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0ImGuiInputTextState@@QEAA@XZ@4HA+43
	DD	imagerel $unwind$?dtor$1@?0???0ImGuiInputTextState@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClearFreeMemory@ImGuiInputTextState@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+98
	DD	imagerel $unwind$?ClearFreeMemory@ImGuiInputTextState@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImGuiInputTextState@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??1ImGuiInputTextState@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$ImMin@H@@YAHHH@Z DD imagerel ??$ImMin@H@@YAHHH@Z
	DD	imagerel ??$ImMin@H@@YAHHH@Z+90
	DD	imagerel $unwind$??$ImMin@H@@YAHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiPopupData@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??0ImGuiPopupData@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiNavItemData@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$??0ImGuiNavItemData@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clear@ImGuiNavItemData@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+178
	DD	imagerel $unwind$?Clear@ImGuiNavItemData@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiNextWindowData@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+197
	DD	imagerel $unwind$??0ImGuiNextWindowData@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClearFlags@ImGuiNextWindowData@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?ClearFlags@ImGuiNextWindowData@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiNextItemData@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0ImGuiNextItemData@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImGuiOldColumnData@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImGuiOldColumnData@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImGuiOldColumnData@@@@QEAAAEAUImGuiOldColumnData@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+121
	DD	imagerel $unwind$??A?$ImVector@UImGuiOldColumnData@@@@QEAAAEAUImGuiOldColumnData@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImGuiOldColumns@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??1ImGuiOldColumns@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GImGuiOldColumns@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_GImGuiOldColumns@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiViewportP@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+281
	DD	imagerel $unwind$??0ImGuiViewportP@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ImGuiViewportP@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0ImGuiViewportP@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0ImGuiViewportP@@QEAA@XZ@4HA+43
	DD	imagerel $unwind$?dtor$0@?0???0ImGuiViewportP@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImGuiViewportP@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+161
	DD	imagerel $unwind$??1ImGuiViewportP@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcWorkRectPos@ImGuiViewportP@@QEBA?AUImVec2@@AEBU2@@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$?CalcWorkRectPos@ImGuiViewportP@@QEBA?AUImVec2@@AEBU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcWorkRectSize@ImGuiViewportP@@QEBA?AUImVec2@@AEBU2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+199
	DD	imagerel $unwind$?CalcWorkRectSize@ImGuiViewportP@@QEBA?AUImVec2@@AEBU2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateWorkRect@ImGuiViewportP@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+156
	DD	imagerel $unwind$?UpdateWorkRect@ImGuiViewportP@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetMainRect@ImGuiViewportP@@QEBA?AUImRect@@XZ DD imagerel $LN3
	DD	imagerel $LN3+146
	DD	imagerel $unwind$?GetMainRect@ImGuiViewportP@@QEBA?AUImRect@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWorkRect@ImGuiViewportP@@QEBA?AUImRect@@XZ DD imagerel $LN3
	DD	imagerel $LN3+146
	DD	imagerel $unwind$?GetWorkRect@ImGuiViewportP@@QEBA?AUImRect@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GImGuiViewportP@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_GImGuiViewportP@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$IM_DELETE@UImDrawList@@@@YAXPEAUImDrawList@@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??$IM_DELETE@UImDrawList@@@@YAXPEAUImDrawList@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiWindowSettings@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$??0ImGuiWindowSettings@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetName@ImGuiWindowSettings@@QEAAPEADXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?GetName@ImGuiWindowSettings@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiSettingsHandler@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0ImGuiSettingsHandler@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiMetricsConfig@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$??0ImGuiMetricsConfig@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiStackSizes@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0ImGuiStackSizes@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetToCurrentState@ImGuiStackSizes@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+220
	DD	imagerel $unwind$?SetToCurrentState@ImGuiStackSizes@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CompareWithCurrentState@ImGuiStackSizes@@QEAAXXZ DD imagerel $LN17
	DD	imagerel $LN17+549
	DD	imagerel $unwind$?CompareWithCurrentState@ImGuiStackSizes@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear_delete@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+110
	DD	imagerel $unwind$?clear_delete@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?empty@?$ImVector@PEAUImGuiWindow@@@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$?empty@?$ImVector@PEAUImGuiWindow@@@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+121
	DD	imagerel $unwind$??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@XZ DD imagerel $LN4
	DD	imagerel $LN4+109
	DD	imagerel $unwind$?back@?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?swap@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+186
	DD	imagerel $unwind$?swap@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_grow_capacity@?$ImVector@PEAUImGuiWindow@@@@QEBAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?_grow_capacity@?$ImVector@PEAUImGuiWindow@@@@QEBAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?resize@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+185
	DD	imagerel $unwind$?reserve@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z DD imagerel $LN4
	DD	imagerel $LN4+161
	DD	imagerel $unwind$?push_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pop_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?pop_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_front@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z DD imagerel $LN5
	DD	imagerel $LN5+109
	DD	imagerel $unwind$?push_front@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?insert@?$ImVector@PEAUImGuiWindow@@@@QEAAPEAPEAUImGuiWindow@@PEBQEAU2@AEBQEAU2@@Z DD imagerel $LN7
	DD	imagerel $LN7+394
	DD	imagerel $unwind$?insert@?$ImVector@PEAUImGuiWindow@@@@QEAAPEAPEAUImGuiWindow@@PEBQEAU2@AEBQEAU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@UImGuiColorMod@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@UImGuiColorMod@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImGuiColorMod@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImGuiColorMod@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImGuiColorMod@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@UImGuiColorMod@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@UImGuiColorMod@@@@QEAAAEAUImGuiColorMod@@XZ DD imagerel $LN4
	DD	imagerel $LN4+109
	DD	imagerel $unwind$?back@?$ImVector@UImGuiColorMod@@@@QEAAAEAUImGuiColorMod@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_grow_capacity@?$ImVector@UImGuiColorMod@@@@QEBAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?_grow_capacity@?$ImVector@UImGuiColorMod@@@@QEBAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImGuiColorMod@@@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+185
	DD	imagerel $unwind$?reserve@?$ImVector@UImGuiColorMod@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@UImGuiColorMod@@@@QEAAXAEBUImGuiColorMod@@@Z DD imagerel $LN4
	DD	imagerel $LN4+171
	DD	imagerel $unwind$?push_back@?$ImVector@UImGuiColorMod@@@@QEAAXAEBUImGuiColorMod@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pop_back@?$ImVector@UImGuiColorMod@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?pop_back@?$ImVector@UImGuiColorMod@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@UImGuiStyleMod@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@UImGuiStyleMod@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImGuiStyleMod@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImGuiStyleMod@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImGuiStyleMod@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@UImGuiStyleMod@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@UImGuiStyleMod@@@@QEAAAEAUImGuiStyleMod@@XZ DD imagerel $LN4
	DD	imagerel $LN4+109
	DD	imagerel $unwind$?back@?$ImVector@UImGuiStyleMod@@@@QEAAAEAUImGuiStyleMod@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_grow_capacity@?$ImVector@UImGuiStyleMod@@@@QEBAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?_grow_capacity@?$ImVector@UImGuiStyleMod@@@@QEBAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImGuiStyleMod@@@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+185
	DD	imagerel $unwind$?reserve@?$ImVector@UImGuiStyleMod@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@UImGuiStyleMod@@@@QEAAXAEBUImGuiStyleMod@@@Z DD imagerel $LN4
	DD	imagerel $LN4+171
	DD	imagerel $unwind$?push_back@?$ImVector@UImGuiStyleMod@@@@QEAAXAEBUImGuiStyleMod@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pop_back@?$ImVector@UImGuiStyleMod@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?pop_back@?$ImVector@UImGuiStyleMod@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@H@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@H@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@H@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@H@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@H@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@H@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@H@@QEAAAEAHXZ DD imagerel $LN4
	DD	imagerel $LN4+109
	DD	imagerel $unwind$?back@?$ImVector@H@@QEAAAEAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_grow_capacity@?$ImVector@H@@QEBAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?_grow_capacity@?$ImVector@H@@QEBAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@H@@QEAAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?resize@?$ImVector@H@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@H@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+185
	DD	imagerel $unwind$?reserve@?$ImVector@H@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@H@@QEAAXAEBH@Z DD imagerel $LN4
	DD	imagerel $LN4+159
	DD	imagerel $unwind$?push_back@?$ImVector@H@@QEAAXAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pop_back@?$ImVector@H@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?pop_back@?$ImVector@H@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@UImGuiGroupData@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@UImGuiGroupData@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImGuiGroupData@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImGuiGroupData@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImGuiGroupData@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@UImGuiGroupData@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@UImGuiGroupData@@@@QEAAAEAUImGuiGroupData@@XZ DD imagerel $LN4
	DD	imagerel $LN4+109
	DD	imagerel $unwind$?back@?$ImVector@UImGuiGroupData@@@@QEAAAEAUImGuiGroupData@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_grow_capacity@?$ImVector@UImGuiGroupData@@@@QEBAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?_grow_capacity@?$ImVector@UImGuiGroupData@@@@QEBAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@UImGuiGroupData@@@@QEAAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?resize@?$ImVector@UImGuiGroupData@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImGuiGroupData@@@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+185
	DD	imagerel $unwind$?reserve@?$ImVector@UImGuiGroupData@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pop_back@?$ImVector@UImGuiGroupData@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?pop_back@?$ImVector@UImGuiGroupData@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@UImGuiPopupData@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@UImGuiPopupData@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImGuiPopupData@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImGuiPopupData@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImGuiPopupData@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@UImGuiPopupData@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+121
	DD	imagerel $unwind$??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@XZ DD imagerel $LN4
	DD	imagerel $LN4+109
	DD	imagerel $unwind$?back@?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_grow_capacity@?$ImVector@UImGuiPopupData@@@@QEBAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?_grow_capacity@?$ImVector@UImGuiPopupData@@@@QEBAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@UImGuiPopupData@@@@QEAAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?resize@?$ImVector@UImGuiPopupData@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImGuiPopupData@@@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+185
	DD	imagerel $unwind$?reserve@?$ImVector@UImGuiPopupData@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@UImGuiPopupData@@@@QEAAXAEBUImGuiPopupData@@@Z DD imagerel $LN4
	DD	imagerel $LN4+171
	DD	imagerel $unwind$?push_back@?$ImVector@UImGuiPopupData@@@@QEAAXAEBUImGuiPopupData@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pop_back@?$ImVector@UImGuiPopupData@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?pop_back@?$ImVector@UImGuiPopupData@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@PEAUImGuiViewportP@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@PEAUImGuiViewportP@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear_delete@?$ImVector@PEAUImGuiViewportP@@@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+110
	DD	imagerel $unwind$?clear_delete@?$ImVector@PEAUImGuiViewportP@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+121
	DD	imagerel $unwind$??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_grow_capacity@?$ImVector@PEAUImGuiViewportP@@@@QEBAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?_grow_capacity@?$ImVector@PEAUImGuiViewportP@@@@QEBAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@PEAUImGuiViewportP@@@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+185
	DD	imagerel $unwind$?reserve@?$ImVector@PEAUImGuiViewportP@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@PEAUImGuiViewportP@@@@QEAAXAEBQEAUImGuiViewportP@@@Z DD imagerel $LN4
	DD	imagerel $LN4+161
	DD	imagerel $unwind$?push_back@?$ImVector@PEAUImGuiViewportP@@@@QEAAXAEBQEAUImGuiViewportP@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@E@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@E@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@E@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@E@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@E@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@E@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_grow_capacity@?$ImVector@E@@QEBAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?_grow_capacity@?$ImVector@E@@QEBAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$ImVector@E@@QEAAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$?resize@?$ImVector@E@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@E@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+177
	DD	imagerel $unwind$?reserve@?$ImVector@E@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@UImGuiTable@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@UImGuiTable@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImGuiTable@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImGuiTable@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImGuiTable@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@UImGuiTable@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImGuiTable@@@@QEAAAEAUImGuiTable@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+124
	DD	imagerel $unwind$??A?$ImVector@UImGuiTable@@@@QEAAAEAUImGuiTable@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImPool@UImGuiTable@@@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+111
	DD	imagerel $unwind$??0?$ImPool@UImGuiTable@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$ImPool@UImGuiTable@@@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$ImPool@UImGuiTable@@@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$ImPool@UImGuiTable@@@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$ImPool@UImGuiTable@@@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImPool@UImGuiTable@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??1?$ImPool@UImGuiTable@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetByIndex@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?GetByIndex@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clear@?$ImPool@UImGuiTable@@@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+232
	DD	imagerel $unwind$?Clear@?$ImPool@UImGuiTable@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetAliveCount@?$ImPool@UImGuiTable@@@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?GetAliveCount@?$ImPool@UImGuiTable@@@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetMapSize@?$ImPool@UImGuiTable@@@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?GetMapSize@?$ImPool@UImGuiTable@@@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TryGetMapData@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z DD imagerel $LN4
	DD	imagerel $LN4+112
	DD	imagerel $unwind$?TryGetMapData@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@UImGuiTableTempData@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@UImGuiTableTempData@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImGuiTableTempData@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImGuiTableTempData@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImGuiTableTempData@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@UImGuiTableTempData@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear_destruct@?$ImVector@UImGuiTableTempData@@@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+126
	DD	imagerel $unwind$?clear_destruct@?$ImVector@UImGuiTableTempData@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImGuiTableTempData@@@@QEAAAEAUImGuiTableTempData@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+121
	DD	imagerel $unwind$??A?$ImVector@UImGuiTableTempData@@@@QEAAAEAUImGuiTableTempData@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@UImGuiTabBar@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@UImGuiTabBar@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImGuiTabBar@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImGuiTabBar@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImGuiTabBar@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@UImGuiTabBar@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImGuiTabBar@@@@QEAAAEAUImGuiTabBar@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+124
	DD	imagerel $unwind$??A?$ImVector@UImGuiTabBar@@@@QEAAAEAUImGuiTabBar@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImPool@UImGuiTabBar@@@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+111
	DD	imagerel $unwind$??0?$ImPool@UImGuiTabBar@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$ImPool@UImGuiTabBar@@@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$ImPool@UImGuiTabBar@@@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$ImPool@UImGuiTabBar@@@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$ImPool@UImGuiTabBar@@@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImPool@UImGuiTabBar@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??1?$ImPool@UImGuiTabBar@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetByIndex@?$ImPool@UImGuiTabBar@@@@QEAAPEAUImGuiTabBar@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?GetByIndex@?$ImPool@UImGuiTabBar@@@@QEAAPEAUImGuiTabBar@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clear@?$ImPool@UImGuiTabBar@@@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+232
	DD	imagerel $unwind$?Clear@?$ImPool@UImGuiTabBar@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetAliveCount@?$ImPool@UImGuiTabBar@@@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?GetAliveCount@?$ImPool@UImGuiTabBar@@@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetMapSize@?$ImPool@UImGuiTabBar@@@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?GetMapSize@?$ImPool@UImGuiTabBar@@@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TryGetMapData@?$ImPool@UImGuiTabBar@@@@QEAAPEAUImGuiTabBar@@H@Z DD imagerel $LN4
	DD	imagerel $LN4+112
	DD	imagerel $unwind$?TryGetMapData@?$ImPool@UImGuiTabBar@@@@QEAAPEAUImGuiTabBar@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImGuiPtrOrIndex@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@UImGuiPtrOrIndex@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImGuiShrinkWidthItem@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@UImGuiShrinkWidthItem@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImGuiSettingsHandler@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@UImGuiSettingsHandler@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+121
	DD	imagerel $unwind$??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_grow_capacity@?$ImVector@UImGuiSettingsHandler@@@@QEBAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?_grow_capacity@?$ImVector@UImGuiSettingsHandler@@@@QEBAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImGuiSettingsHandler@@@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+185
	DD	imagerel $unwind$?reserve@?$ImVector@UImGuiSettingsHandler@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@UImGuiSettingsHandler@@@@QEAAXAEBUImGuiSettingsHandler@@@Z DD imagerel $LN4
	DD	imagerel $LN4+171
	DD	imagerel $unwind$?push_back@?$ImVector@UImGuiSettingsHandler@@@@QEAAXAEBUImGuiSettingsHandler@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?clear@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?empty@?$ImChunkStream@UImGuiWindowSettings@@@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$?empty@?$ImChunkStream@UImGuiWindowSettings@@@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$ImChunkStream@UImGuiWindowSettings@@@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?size@?$ImChunkStream@UImGuiWindowSettings@@@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?alloc_chunk@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+199
	DD	imagerel $unwind$?alloc_chunk@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$?begin@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?next_chunk@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@PEAU2@@Z DD imagerel $LN7
	DD	imagerel $LN7+250
	DD	imagerel $unwind$?next_chunk@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@PEAU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?chunk_size@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAHPEBUImGuiWindowSettings@@@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?chunk_size@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAHPEBUImGuiWindowSettings@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?end@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?offset_from_ptr@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAHPEBUImGuiWindowSettings@@@Z DD imagerel $LN5
	DD	imagerel $LN5+147
	DD	imagerel $unwind$?offset_from_ptr@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAHPEBUImGuiWindowSettings@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ptr_from_offset@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+117
	DD	imagerel $unwind$?ptr_from_offset@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImChunkStream@UImGuiWindowSettings@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+51
	DD	imagerel $unwind$??0?$ImChunkStream@UImGuiWindowSettings@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImChunkStream@UImGuiWindowSettings@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??1?$ImChunkStream@UImGuiWindowSettings@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$ImChunkStream@UImGuiTableSettings@@@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?size@?$ImChunkStream@UImGuiTableSettings@@@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@XZ DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$?begin@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?next_chunk@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@PEAU2@@Z DD imagerel $LN7
	DD	imagerel $LN7+250
	DD	imagerel $unwind$?next_chunk@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@PEAU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?chunk_size@?$ImChunkStream@UImGuiTableSettings@@@@QEAAHPEBUImGuiTableSettings@@@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?chunk_size@?$ImChunkStream@UImGuiTableSettings@@@@QEAAHPEBUImGuiTableSettings@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?end@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImChunkStream@UImGuiTableSettings@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+51
	DD	imagerel $unwind$??0?$ImChunkStream@UImGuiTableSettings@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImChunkStream@UImGuiTableSettings@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??1?$ImChunkStream@UImGuiTableSettings@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@UImGuiContextHook@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@UImGuiContextHook@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImGuiContextHook@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImGuiContextHook@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+121
	DD	imagerel $unwind$??A?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?back@?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@XZ DD imagerel $LN4
	DD	imagerel $LN4+109
	DD	imagerel $unwind$?back@?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_grow_capacity@?$ImVector@UImGuiContextHook@@@@QEBAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?_grow_capacity@?$ImVector@UImGuiContextHook@@@@QEBAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$ImVector@UImGuiContextHook@@@@QEAAXH@Z DD imagerel $LN5
	DD	imagerel $LN5+185
	DD	imagerel $unwind$?reserve@?$ImVector@UImGuiContextHook@@@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$ImVector@UImGuiContextHook@@@@QEAAXAEBUImGuiContextHook@@@Z DD imagerel $LN4
	DD	imagerel $LN4+171
	DD	imagerel $unwind$?push_back@?$ImVector@UImGuiContextHook@@@@QEAAXAEBUImGuiContextHook@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$ImVector@UImGuiContextHook@@@@QEAAPEAUImGuiContextHook@@PEBU2@@Z DD imagerel $LN5
	DD	imagerel $LN5+282
	DD	imagerel $unwind$?erase@?$ImVector@UImGuiContextHook@@@@QEAAPEAUImGuiContextHook@@PEBU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z DD imagerel $LN43
	DD	imagerel $LN43+4295
	DD	imagerel $unwind$??0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$0@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+43
	DD	imagerel $unwind$?dtor$0@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$1@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$1@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$1@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$2@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$2@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$2@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$3@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$3@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$3@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$4@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$4@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$4@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$5@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$5@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$5@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$6@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$6@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$6@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$7@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$7@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$7@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$7@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$8@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$8@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$8@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$8@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$9@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$9@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$9@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$9@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$10@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$10@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$10@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$10@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$11@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$11@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$11@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$11@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$12@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$12@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$12@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$12@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$13@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$13@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$13@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$13@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$14@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$14@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$14@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$14@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$15@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$15@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$15@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$15@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$16@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$16@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$16@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$16@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$17@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$17@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$17@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$17@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$18@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$18@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$18@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$18@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$19@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$19@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$19@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$19@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$20@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$20@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$20@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$20@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$21@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$21@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$21@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$21@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$22@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$22@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$22@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$22@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$23@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$23@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$23@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$23@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$24@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$24@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$24@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$24@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$25@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$25@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$25@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$25@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$26@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$26@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$26@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$26@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$27@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$27@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$27@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$27@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$28@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$28@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$28@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$28@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$29@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$29@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$29@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$29@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$30@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$30@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$30@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$30@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$31@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$31@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$31@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$31@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$32@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$32@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$32@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+46
	DD	imagerel $unwind$?dtor$32@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$33@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD imagerel ?dtor$33@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DD	imagerel ?dtor$33@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA+56
	DD	imagerel $unwind$?dtor$33@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImGuiContext@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+720
	DD	imagerel $unwind$??1ImGuiContext@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GImGuiContext@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_GImGuiContext@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiWindowTempData@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+390
	DD	imagerel $unwind$??0ImGuiWindowTempData@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA+46
	DD	imagerel $unwind$?dtor$0@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA+46
	DD	imagerel $unwind$?dtor$1@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA DD imagerel ?dtor$2@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA+46
	DD	imagerel $unwind$?dtor$2@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImGuiWindowTempData@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$??1ImGuiWindowTempData@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ImVector@UImGuiOldColumns@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$ImVector@UImGuiOldColumns@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImGuiOldColumns@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImGuiOldColumns@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$ImVector@UImGuiOldColumns@@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$?clear@?$ImVector@UImGuiOldColumns@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear_destruct@?$ImVector@UImGuiOldColumns@@@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+129
	DD	imagerel $unwind$?clear_destruct@?$ImVector@UImGuiOldColumns@@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImGuiOldColumns@@@@QEAAAEAUImGuiOldColumns@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+124
	DD	imagerel $unwind$??A?$ImVector@UImGuiOldColumns@@@@QEAAAEAUImGuiOldColumns@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z DD imagerel $LN9
	DD	imagerel $LN9+1388
	DD	imagerel $unwind$??0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA DD imagerel ?dtor$0@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA+46
	DD	imagerel $unwind$?dtor$0@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA DD imagerel ?dtor$1@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA
	DD	imagerel ?dtor$1@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA+46
	DD	imagerel $unwind$?dtor$1@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA DD imagerel ?dtor$2@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA
	DD	imagerel ?dtor$2@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA+46
	DD	imagerel $unwind$?dtor$2@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA DD imagerel ?dtor$3@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA
	DD	imagerel ?dtor$3@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA+46
	DD	imagerel $unwind$?dtor$3@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA DD imagerel ?dtor$4@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA
	DD	imagerel ?dtor$4@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA+46
	DD	imagerel $unwind$?dtor$4@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImGuiWindow@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+245
	DD	imagerel $unwind$??1ImGuiWindow@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetID@ImGuiWindow@@QEAAIPEBD0@Z DD imagerel $LN5
	DD	imagerel $LN5+176
	DD	imagerel $unwind$?GetID@ImGuiWindow@@QEAAIPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetID@ImGuiWindow@@QEAAIPEBX@Z DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$?GetID@ImGuiWindow@@QEAAIPEBX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetID@ImGuiWindow@@QEAAIH@Z DD imagerel $LN3
	DD	imagerel $LN3+106
	DD	imagerel $unwind$?GetID@ImGuiWindow@@QEAAIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetIDNoKeepAlive@ImGuiWindow@@QEAAIPEBD0@Z DD imagerel $LN5
	DD	imagerel $LN5+168
	DD	imagerel $unwind$?GetIDNoKeepAlive@ImGuiWindow@@QEAAIPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetIDNoKeepAlive@ImGuiWindow@@QEAAIPEBX@Z DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$?GetIDNoKeepAlive@ImGuiWindow@@QEAAIPEBX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetIDNoKeepAlive@ImGuiWindow@@QEAAIH@Z DD imagerel $LN3
	DD	imagerel $LN3+98
	DD	imagerel $unwind$?GetIDNoKeepAlive@ImGuiWindow@@QEAAIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetIDFromRectangle@ImGuiWindow@@QEAAIAEBUImRect@@@Z DD imagerel $LN3
	DD	imagerel $LN3+304
	DD	imagerel $unwind$?GetIDFromRectangle@ImGuiWindow@@QEAAIAEBUImRect@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Rect@ImGuiWindow@@QEBA?AUImRect@@XZ DD imagerel $LN3
	DD	imagerel $LN3+146
	DD	imagerel $unwind$?Rect@ImGuiWindow@@QEBA?AUImRect@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcFontSize@ImGuiWindow@@QEBAMXZ DD imagerel $LN4
	DD	imagerel $LN4+138
	DD	imagerel $unwind$?CalcFontSize@ImGuiWindow@@QEBAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TitleBarHeight@ImGuiWindow@@QEBAMXZ DD imagerel $LN5
	DD	imagerel $LN5+134
	DD	imagerel $unwind$?TitleBarHeight@ImGuiWindow@@QEBAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TitleBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ DD imagerel $LN3
	DD	imagerel $LN3+181
	DD	imagerel $unwind$?TitleBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?MenuBarHeight@ImGuiWindow@@QEBAMXZ DD imagerel $LN5
	DD	imagerel $LN5+158
	DD	imagerel $unwind$?MenuBarHeight@ImGuiWindow@@QEBAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?MenuBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ DD imagerel $LN3
	DD	imagerel $LN3+220
	DD	imagerel $unwind$?MenuBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GImGuiWindow@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_GImGuiWindow@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImGuiTabItem@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImGuiTabItem@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImVector@UImGuiTabItem@@@@QEAAAEAUImGuiTabItem@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+121
	DD	imagerel $unwind$??A?$ImVector@UImGuiTabItem@@@@QEAAAEAUImGuiTabItem@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetTabName@ImGuiTabBar@@QEBAPEBDPEBUImGuiTabItem@@@Z DD imagerel $LN5
	DD	imagerel $LN5+137
	DD	imagerel $unwind$?GetTabName@ImGuiTabBar@@QEBAPEBDPEBUImGuiTabItem@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImGuiTabBar@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??1ImGuiTabBar@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GImGuiTabBar@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_GImGuiTabBar@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$ImSpan@UImGuiTableColumn@@@@QEAAAEAUImGuiTableColumn@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+135
	DD	imagerel $unwind$??A?$ImSpan@UImGuiTableColumn@@@@QEAAAEAUImGuiTableColumn@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ImVector@UImGuiTableColumnSortSpecs@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$ImVector@UImGuiTableColumnSortSpecs@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImGuiTable@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??1ImGuiTable@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GImGuiTable@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_GImGuiTable@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ImGuiTableTempData@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??1ImGuiTableTempData@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GImGuiTableTempData@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_GImGuiTableTempData@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FindWindowByID@ImGui@@YAPEAUImGuiWindow@@I@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$?FindWindowByID@ImGui@@YAPEAUImGuiWindow@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FindWindowByName@ImGui@@YAPEAUImGuiWindow@@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$?FindWindowByName@ImGui@@YAPEAUImGuiWindow@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateWindowParentAndRootLinks@ImGui@@YAXPEAUImGuiWindow@@H0@Z DD imagerel $LN8
	DD	imagerel $LN8+391
	DD	imagerel $unwind$?UpdateWindowParentAndRootLinks@ImGui@@YAXPEAUImGuiWindow@@H0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcWindowNextAutoFitSize@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+224
	DD	imagerel $unwind$?CalcWindowNextAutoFitSize@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsWindowChildOf@ImGui@@YA_NPEAUImGuiWindow@@0@Z DD imagerel $LN7
	DD	imagerel $LN7+128
	DD	imagerel $unwind$?IsWindowChildOf@ImGui@@YA_NPEAUImGuiWindow@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsWindowAbove@ImGui@@YA_NPEAUImGuiWindow@@0@Z DD imagerel $LN8
	DD	imagerel $LN8+165
	DD	imagerel $unwind$?IsWindowAbove@ImGui@@YA_NPEAUImGuiWindow@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsWindowNavFocusable@ImGui@@YA_NPEAUImGuiWindow@@@Z DD imagerel $LN5
	DD	imagerel $LN5+130
	DD	imagerel $unwind$?IsWindowNavFocusable@ImGui@@YA_NPEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+511
	DD	imagerel $unwind$?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetWindowSize@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z DD imagerel $LN9
	DD	imagerel $LN9+405
	DD	imagerel $unwind$?SetWindowSize@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetWindowCollapsed@ImGui@@YAXPEAUImGuiWindow@@_NH@Z DD imagerel $LN4
	DD	imagerel $LN4+176
	DD	imagerel $unwind$?SetWindowCollapsed@ImGui@@YAXPEAUImGuiWindow@@_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetWindowHitTestHole@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@1@Z DD imagerel $LN4
	DD	imagerel $LN4+199
	DD	imagerel $unwind$?SetWindowHitTestHole@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z DD imagerel $LN16
	DD	imagerel $LN16+577
	DD	imagerel $unwind$?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FocusTopMostWindowUnderOne@ImGui@@YAXPEAUImGuiWindow@@0@Z DD imagerel $LN11
	DD	imagerel $LN11+319
	DD	imagerel $unwind$?FocusTopMostWindowUnderOne@ImGui@@YAXPEAUImGuiWindow@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BringWindowToFocusFront@ImGui@@YAXPEAUImGuiWindow@@@Z DD imagerel $LN10
	DD	imagerel $LN10+587
	DD	imagerel $unwind$?BringWindowToFocusFront@ImGui@@YAXPEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BringWindowToDisplayFront@ImGui@@YAXPEAUImGuiWindow@@@Z DD imagerel $LN9
	DD	imagerel $LN9+392
	DD	imagerel $unwind$?BringWindowToDisplayFront@ImGui@@YAXPEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BringWindowToDisplayBack@ImGui@@YAXPEAUImGuiWindow@@@Z DD imagerel $LN8
	DD	imagerel $LN8+347
	DD	imagerel $unwind$?BringWindowToDisplayBack@ImGui@@YAXPEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetCurrentFont@ImGui@@YAXPEAUImFont@@@Z DD imagerel $LN8
	DD	imagerel $LN8+434
	DD	imagerel $unwind$?SetCurrentFont@ImGui@@YAXPEAUImFont@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDefaultFont@ImGui@@YAPEAUImFont@@XZ DD imagerel $LN5
	DD	imagerel $LN5+135
	DD	imagerel $unwind$?GetDefaultFont@ImGui@@YAPEAUImFont@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiWindow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z DD imagerel $LN8
	DD	imagerel $LN8+503
	DD	imagerel $unwind$?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Initialize@ImGui@@YAXPEAUImGuiContext@@@Z@4HA DD imagerel ?dtor$0@?0??Initialize@ImGui@@YAXPEAUImGuiContext@@@Z@4HA
	DD	imagerel ?dtor$0@?0??Initialize@ImGui@@YAXPEAUImGuiContext@@@Z@4HA+56
	DD	imagerel $unwind$?dtor$0@?0??Initialize@ImGui@@YAXPEAUImGuiContext@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Shutdown@ImGui@@YAXPEAUImGuiContext@@@Z DD imagerel $LN8
	DD	imagerel $LN8+817
	DD	imagerel $unwind$?Shutdown@ImGui@@YAXPEAUImGuiContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateHoveredWindowAndCaptureFlags@ImGui@@YAXXZ DD imagerel $LN38
	DD	imagerel $LN38+1085
	DD	imagerel $unwind$?UpdateHoveredWindowAndCaptureFlags@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?StartMouseMovingWindow@ImGui@@YAXPEAUImGuiWindow@@@Z DD imagerel $LN6
	DD	imagerel $LN6+259
	DD	imagerel $unwind$?StartMouseMovingWindow@ImGui@@YAXPEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateMouseMovingWindowNewFrame@ImGui@@YAXXZ DD imagerel $LN14
	DD	imagerel $LN14+514
	DD	imagerel $unwind$?UpdateMouseMovingWindowNewFrame@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateMouseMovingWindowEndFrame@ImGui@@YAXXZ DD imagerel $LN22
	DD	imagerel $LN22+677
	DD	imagerel $unwind$?UpdateMouseMovingWindowEndFrame@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddContextHook@ImGui@@YAIPEAUImGuiContext@@PEBUImGuiContextHook@@@Z DD imagerel $LN5
	DD	imagerel $LN5+236
	DD	imagerel $unwind$?AddContextHook@ImGui@@YAIPEAUImGuiContext@@PEBUImGuiContextHook@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RemoveContextHook@ImGui@@YAXPEAUImGuiContext@@I@Z DD imagerel $LN8
	DD	imagerel $LN8+214
	DD	imagerel $unwind$?RemoveContextHook@ImGui@@YAXPEAUImGuiContext@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CallContextHooks@ImGui@@YAXPEAUImGuiContext@@W4ImGuiContextHookType@@@Z DD imagerel $LN7
	DD	imagerel $LN7+239
	DD	imagerel $unwind$?CallContextHooks@ImGui@@YAXPEAUImGuiContext@@W4ImGuiContextHookType@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?MarkIniSettingsDirty@ImGui@@YAXXZ DD imagerel $LN4
	DD	imagerel $LN4+85
	DD	imagerel $unwind$?MarkIniSettingsDirty@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?MarkIniSettingsDirty@ImGui@@YAXPEAUImGuiWindow@@@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$?MarkIniSettingsDirty@ImGui@@YAXPEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClearIniSettings@ImGui@@YAXXZ DD imagerel $LN7
	DD	imagerel $LN7+245
	DD	imagerel $unwind$?ClearIniSettings@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z DD imagerel $LN8
	DD	imagerel $LN8+397
	DD	imagerel $unwind$?CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z@4HA DD imagerel ?dtor$0@?0??CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0??CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z@4HA+56
	DD	imagerel $unwind$?dtor$0@?0??CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FindWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@I@Z DD imagerel $LN7
	DD	imagerel $LN7+143
	DD	imagerel $unwind$?FindWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FindOrCreateWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+94
	DD	imagerel $unwind$?FindOrCreateWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FindSettingsHandler@ImGui@@YAPEAUImGuiSettingsHandler@@PEBD@Z DD imagerel $LN7
	DD	imagerel $LN7+182
	DD	imagerel $unwind$?FindSettingsHandler@ImGui@@YAPEAUImGuiSettingsHandler@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetNextWindowScroll@ImGui@@YAXAEBUImVec2@@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$?SetNextWindowScroll@ImGui@@YAXAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetScrollX@ImGui@@YAXPEAUImGuiWindow@@M@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$?SetScrollX@ImGui@@YAXPEAUImGuiWindow@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetScrollY@ImGui@@YAXPEAUImGuiWindow@@M@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$?SetScrollY@ImGui@@YAXPEAUImGuiWindow@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetScrollFromPosX@ImGui@@YAXPEAUImGuiWindow@@MM@Z DD imagerel $LN5
	DD	imagerel $LN5+195
	DD	imagerel $unwind$?SetScrollFromPosX@ImGui@@YAXPEAUImGuiWindow@@MM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetScrollFromPosY@ImGui@@YAXPEAUImGuiWindow@@MM@Z DD imagerel $LN5
	DD	imagerel $LN5+271
	DD	imagerel $unwind$?SetScrollFromPosY@ImGui@@YAXPEAUImGuiWindow@@MM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ScrollToBringRectIntoView@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@AEBUImRect@@@Z DD imagerel $LN11
	DD	imagerel $LN11+929
	DD	imagerel $unwind$?ScrollToBringRectIntoView@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@AEBUImRect@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetActiveID@ImGui@@YAXIPEAUImGuiWindow@@@Z DD imagerel $LN10
	DD	imagerel $LN10+475
	DD	imagerel $unwind$?SetActiveID@ImGui@@YAXIPEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetFocusID@ImGui@@YAXIPEAUImGuiWindow@@@Z DD imagerel $LN8
	DD	imagerel $LN8+463
	DD	imagerel $unwind$?SetFocusID@ImGui@@YAXIPEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClearActiveID@ImGui@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?ClearActiveID@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetHoveredID@ImGui@@YAIXZ DD imagerel $LN5
	DD	imagerel $LN5+101
	DD	imagerel $unwind$?GetHoveredID@ImGui@@YAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetHoveredID@ImGui@@YAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+146
	DD	imagerel $unwind$?SetHoveredID@ImGui@@YAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?KeepAliveID@ImGui@@YAXI@Z DD imagerel $LN5
	DD	imagerel $LN5+114
	DD	imagerel $unwind$?KeepAliveID@ImGui@@YAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?MarkItemEdited@ImGui@@YAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+190
	DD	imagerel $unwind$?MarkItemEdited@ImGui@@YAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushOverrideID@ImGui@@YAXI@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?PushOverrideID@ImGui@@YAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetIDWithSeed@ImGui@@YAIPEBD0I@Z DD imagerel $LN5
	DD	imagerel $LN5+153
	DD	imagerel $unwind$?GetIDWithSeed@ImGui@@YAIPEBD0I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ItemSize@ImGui@@YAXAEBUImVec2@@M@Z DD imagerel $LN7
	DD	imagerel $LN7+588
	DD	imagerel $unwind$?ItemSize@ImGui@@YAXAEBUImVec2@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ItemSize@ImGui@@YAXAEBUImRect@@M@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$?ItemSize@ImGui@@YAXAEBUImRect@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ItemAdd@ImGui@@YA_NAEBUImRect@@IPEBU2@H@Z DD imagerel $LN14
	DD	imagerel $LN14+560
	DD	imagerel $unwind$?ItemAdd@ImGui@@YA_NAEBUImRect@@IPEBU2@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ItemHoverable@ImGui@@YA_NAEBUImRect@@I@Z DD imagerel $LN13
	DD	imagerel $LN13+482
	DD	imagerel $unwind$?ItemHoverable@ImGui@@YA_NAEBUImRect@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ItemFocusable@ImGui@@YAXPEAUImGuiWindow@@I@Z DD imagerel $LN18
	DD	imagerel $LN18+642
	DD	imagerel $unwind$?ItemFocusable@ImGui@@YAXPEAUImGuiWindow@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsClippedEx@ImGui@@YA_NAEBUImRect@@I_N@Z DD imagerel $LN8
	DD	imagerel $LN8+185
	DD	imagerel $unwind$?IsClippedEx@ImGui@@YA_NAEBUImRect@@I_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetLastItemData@ImGui@@YAXPEAUImGuiWindow@@IHAEBUImRect@@@Z DD imagerel $LN3
	DD	imagerel $LN3+123
	DD	imagerel $unwind$?SetLastItemData@ImGui@@YAXPEAUImGuiWindow@@IHAEBUImRect@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcItemSize@ImGui@@YA?AUImVec2@@U2@MM@Z DD imagerel $LN11
	DD	imagerel $LN11+427
	DD	imagerel $unwind$?CalcItemSize@ImGui@@YA?AUImVec2@@U2@MM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcWrapWidthForPos@ImGui@@YAMAEBUImVec2@@M@Z DD imagerel $LN7
	DD	imagerel $LN7+224
	DD	imagerel $unwind$?CalcWrapWidthForPos@ImGui@@YAMAEBUImVec2@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushMultiItemsWidths@ImGui@@YAXHM@Z DD imagerel $LN8
	DD	imagerel $LN8+558
	DD	imagerel $unwind$?PushMultiItemsWidths@ImGui@@YAXHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushItemFlag@ImGui@@YAXH_N@Z DD imagerel $LN6
	DD	imagerel $LN6+292
	DD	imagerel $unwind$?PushItemFlag@ImGui@@YAXH_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PopItemFlag@ImGui@@YAXXZ DD imagerel $LN4
	DD	imagerel $LN4+143
	DD	imagerel $unwind$?PopItemFlag@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushDisabled@ImGui@@YAXXZ DD imagerel $LN4
	DD	imagerel $LN4+107
	DD	imagerel $unwind$?PushDisabled@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PopDisabled@ImGui@@YAXXZ DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$?PopDisabled@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsItemToggledSelection@ImGui@@YA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+95
	DD	imagerel $unwind$?IsItemToggledSelection@ImGui@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetContentRegionMaxAbs@ImGui@@YA?AUImVec2@@XZ DD imagerel $LN5
	DD	imagerel $LN5+227
	DD	imagerel $unwind$?GetContentRegionMaxAbs@ImGui@@YA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LogBegin@ImGui@@YAXW4ImGuiLogType@@H@Z DD imagerel $LN8
	DD	imagerel $LN8+389
	DD	imagerel $unwind$?LogBegin@ImGui@@YAXW4ImGuiLogType@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LogToBuffer@ImGui@@YAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$?LogToBuffer@ImGui@@YAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LogRenderedText@ImGui@@YAXPEBUImVec2@@PEBD1@Z DD imagerel $LN24
	DD	imagerel $LN24+921
	DD	imagerel $unwind$?LogRenderedText@ImGui@@YAXPEBUImVec2@@PEBD1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LogSetNextTextDecoration@ImGui@@YAXPEBD0@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$?LogSetNextTextDecoration@ImGui@@YAXPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BeginChildEx@ImGui@@YA_NPEBDIAEBUImVec2@@_NH@Z DD imagerel $LN15
	DD	imagerel $LN15+859
	DD	imagerel $unwind$?BeginChildEx@ImGui@@YA_NPEBDIAEBUImVec2@@_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?OpenPopupEx@ImGui@@YAXIH@Z DD imagerel $LN11
	DD	imagerel $LN11+618
	DD	imagerel $unwind$?OpenPopupEx@ImGui@@YAXIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClosePopupToLevel@ImGui@@YAXH_N@Z DD imagerel $LN9
	DD	imagerel $LN9+332
	DD	imagerel $unwind$?ClosePopupToLevel@ImGui@@YAXH_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClosePopupsOverWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z DD imagerel $LN18
	DD	imagerel $LN18+438
	DD	imagerel $unwind$?ClosePopupsOverWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsPopupOpen@ImGui@@YA_NIH@Z DD imagerel $LN20
	DD	imagerel $LN20+443
	DD	imagerel $unwind$?IsPopupOpen@ImGui@@YA_NIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BeginPopupEx@ImGui@@YA_NIH@Z DD imagerel $LN7
	DD	imagerel $LN7+309
	DD	imagerel $unwind$?BeginPopupEx@ImGui@@YA_NIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BeginTooltipEx@ImGui@@YAXHH@Z DD imagerel $LN8
	DD	imagerel $LN8+528
	DD	imagerel $unwind$?BeginTooltipEx@ImGui@@YAXHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetPopupAllowedExtentRect@ImGui@@YA?AUImRect@@PEAUImGuiWindow@@@Z DD imagerel $LN7
	DD	imagerel $LN7+369
	DD	imagerel $unwind$?GetPopupAllowedExtentRect@ImGui@@YA?AUImRect@@PEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetTopMostPopupModal@ImGui@@YAPEAUImGuiWindow@@XZ DD imagerel $LN8
	DD	imagerel $LN8+140
	DD	imagerel $unwind$?GetTopMostPopupModal@ImGui@@YAPEAUImGuiWindow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z DD imagerel $LN12
	DD	imagerel $LN12+1404
	DD	imagerel $unwind$?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z DD imagerel $LN48
	DD	imagerel $LN48+2019
	DD	imagerel $unwind$?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavInitWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z DD imagerel $LN9
	DD	imagerel $LN9+444
	DD	imagerel $unwind$?NavInitWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavMoveRequestButNoResultYet@ImGui@@YA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+118
	DD	imagerel $unwind$?NavMoveRequestButNoResultYet@ImGui@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavMoveRequestCancel@ImGui@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?NavMoveRequestCancel@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavMoveRequestForward@ImGui@@YAXHHAEBUImRect@@H@Z DD imagerel $LN4
	DD	imagerel $LN4+229
	DD	imagerel $unwind$?NavMoveRequestForward@ImGui@@YAXHHAEBUImRect@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavMoveRequestTryWrapping@ImGui@@YAXPEAUImGuiWindow@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$?NavMoveRequestTryWrapping@ImGui@@YAXPEAUImGuiWindow@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z DD imagerel $LN14
	DD	imagerel $LN14+596
	DD	imagerel $unwind$?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetNavInputAmount2d@ImGui@@YA?AUImVec2@@HW4ImGuiInputReadMode@@MM@Z DD imagerel $LN10
	DD	imagerel $LN10+826
	DD	imagerel $unwind$?GetNavInputAmount2d@ImGui@@YA?AUImVec2@@HW4ImGuiInputReadMode@@MM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcTypematicRepeatAmount@ImGui@@YAHMMMM@Z DD imagerel $LN12
	DD	imagerel $LN12+352
	DD	imagerel $unwind$?CalcTypematicRepeatAmount@ImGui@@YAHMMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ActivateItem@ImGui@@YAXI@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?ActivateItem@ImGui@@YAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetNavID@ImGui@@YAXIW4ImGuiNavLayer@@IAEBUImRect@@@Z DD imagerel $LN5
	DD	imagerel $LN5+290
	DD	imagerel $unwind$?SetNavID@ImGui@@YAXIW4ImGuiNavLayer@@IAEBUImRect@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushFocusScope@ImGui@@YAXI@Z DD imagerel $LN3
	DD	imagerel $LN3+124
	DD	imagerel $unwind$?PushFocusScope@ImGui@@YAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PopFocusScope@ImGui@@YAXXZ DD imagerel $LN4
	DD	imagerel $LN4+158
	DD	imagerel $unwind$?PopFocusScope@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetItemUsingMouseWheel@ImGui@@YAXXZ DD imagerel $LN5
	DD	imagerel $LN5+120
	DD	imagerel $unwind$?SetItemUsingMouseWheel@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetActiveIdUsingNavAndKeys@ImGui@@YAXXZ DD imagerel $LN4
	DD	imagerel $LN4+143
	DD	imagerel $unwind$?SetActiveIdUsingNavAndKeys@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsActiveIdUsingNavDir@ImGui@@YA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+126
	DD	imagerel $unwind$?IsActiveIdUsingNavDir@ImGui@@YA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsActiveIdUsingNavInput@ImGui@@YA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+126
	DD	imagerel $unwind$?IsActiveIdUsingNavInput@ImGui@@YA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsActiveIdUsingKey@ImGui@@YA_NH@Z DD imagerel $LN6
	DD	imagerel $LN6+171
	DD	imagerel $unwind$?IsActiveIdUsingKey@ImGui@@YA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsMouseDragPastThreshold@ImGui@@YA_NHM@Z DD imagerel $LN8
	DD	imagerel $LN8+208
	DD	imagerel $unwind$?IsMouseDragPastThreshold@ImGui@@YA_NHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsKeyPressedMap@ImGui@@YA_NH_N@Z DD imagerel $LN5
	DD	imagerel $LN5+116
	DD	imagerel $unwind$?IsKeyPressedMap@ImGui@@YA_NH_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsNavInputDown@ImGui@@YA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+109
	DD	imagerel $unwind$?IsNavInputDown@ImGui@@YA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z DD imagerel $LN5
	DD	imagerel $LN5+99
	DD	imagerel $unwind$?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetMergedKeyModFlags@ImGui@@YAHXZ DD imagerel $LN7
	DD	imagerel $LN7+154
	DD	imagerel $unwind$?GetMergedKeyModFlags@ImGui@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BeginDragDropTargetCustom@ImGui@@YA_NAEBUImRect@@I@Z DD imagerel $LN11
	DD	imagerel $LN11+371
	DD	imagerel $unwind$?BeginDragDropTargetCustom@ImGui@@YA_NAEBUImRect@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClearDragDrop@ImGui@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+193
	DD	imagerel $unwind$?ClearDragDrop@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsDragDropPayloadBeingAccepted@ImGui@@YA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+105
	DD	imagerel $unwind$?IsDragDropPayloadBeingAccepted@ImGui@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderText@ImGui@@YAXUImVec2@@PEBD1_N@Z DD imagerel $LN9
	DD	imagerel $LN9+433
	DD	imagerel $unwind$?RenderText@ImGui@@YAXUImVec2@@PEBD1_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderTextWrapped@ImGui@@YAXUImVec2@@PEBD1M@Z DD imagerel $LN7
	DD	imagerel $LN7+401
	DD	imagerel $unwind$?RenderTextWrapped@ImGui@@YAXUImVec2@@PEBD1M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderTextClipped@ImGui@@YAXAEBUImVec2@@0PEBD1PEBU2@0PEBUImRect@@@Z DD imagerel $LN5
	DD	imagerel $LN5+256
	DD	imagerel $unwind$?RenderTextClipped@ImGui@@YAXAEBUImVec2@@0PEBD1PEBU2@0PEBUImRect@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z DD imagerel $LN18
	DD	imagerel $LN18+922
	DD	imagerel $unwind$?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderTextEllipsis@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1MMPEBD2PEBU3@@Z DD imagerel $LN18
	DD	imagerel $LN18+1696
	DD	imagerel $unwind$?RenderTextEllipsis@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1MMPEBD2PEBU3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderFrame@ImGui@@YAXUImVec2@@0I_NM@Z DD imagerel $LN4
	DD	imagerel $LN4+535
	DD	imagerel $unwind$?RenderFrame@ImGui@@YAXUImVec2@@0I_NM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderFrameBorder@ImGui@@YAXUImVec2@@0M@Z DD imagerel $LN4
	DD	imagerel $LN4+443
	DD	imagerel $unwind$?RenderFrameBorder@ImGui@@YAXUImVec2@@0M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderNavHighlight@ImGui@@YAXAEBUImRect@@IH@Z DD imagerel $LN12
	DD	imagerel $LN12+867
	DD	imagerel $unwind$?RenderNavHighlight@ImGui@@YAXAEBUImRect@@IH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FindRenderedTextEnd@ImGui@@YAPEBDPEBD0@Z DD imagerel $LN7
	DD	imagerel $LN7+163
	DD	imagerel $unwind$?FindRenderedTextEnd@ImGui@@YAPEBDPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWindowResizeCornerID@ImGui@@YAIPEAUImGuiWindow@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+157
	DD	imagerel $unwind$?GetWindowResizeCornerID@ImGui@@YAIPEAUImGuiWindow@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWindowResizeBorderID@ImGui@@YAIPEAUImGuiWindow@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+243
	DD	imagerel $unwind$?GetWindowResizeBorderID@ImGui@@YAIPEAUImGuiWindow@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GcCompactTransientMiscBuffers@ImGui@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?GcCompactTransientMiscBuffers@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GcCompactTransientWindowBuffers@ImGui@@YAXPEAUImGuiWindow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+218
	DD	imagerel $unwind$?GcCompactTransientWindowBuffers@ImGui@@YAXPEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GcAwakeTransientWindowBuffers@ImGui@@YAXPEAUImGuiWindow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+189
	DD	imagerel $unwind$?GcAwakeTransientWindowBuffers@ImGui@@YAXPEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ErrorCheckEndFrameRecover@ImGui@@YAXP6AXPEAXPEBDZZ0@Z DD imagerel $LN38
	DD	imagerel $LN38+1149
	DD	imagerel $unwind$?ErrorCheckEndFrameRecover@ImGui@@YAXP6AXPEAXPEBDZZ0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DebugStartItemPicker@ImGui@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?DebugStartItemPicker@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ShowFontAtlas@ImGui@@YAXPEAUImFontAtlas@@@Z DD imagerel $LN7
	DD	imagerel $LN7+537
	DD	imagerel $unwind$?ShowFontAtlas@ImGui@@YAXPEAUImFontAtlas@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DebugNodeColumns@ImGui@@YAXPEAUImGuiOldColumns@@@Z DD imagerel $LN7
	DD	imagerel $LN7+408
	DD	imagerel $unwind$?DebugNodeColumns@ImGui@@YAXPEAUImGuiOldColumns@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z DD imagerel $LN43
	DD	imagerel $LN43+2597
	DD	imagerel $unwind$?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z@4HA DD imagerel ?dtor$0@?0??DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0??DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0??DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU2@PEBUImDrawCmd@@_N3@Z DD imagerel $LN16
	DD	imagerel $LN16+941
	DD	imagerel $unwind$?DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU2@PEBUImDrawCmd@@_N3@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z DD imagerel $LN32
	DD	imagerel $LN32+2374
	DD	imagerel $unwind$?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DebugNodeStorage@ImGui@@YAXPEAUImGuiStorage@@PEBD@Z DD imagerel $LN7
	DD	imagerel $LN7+231
	DD	imagerel $unwind$?DebugNodeStorage@ImGui@@YAXPEAUImGuiStorage@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DebugNodeTabBar@ImGui@@YAXPEAUImGuiTabBar@@PEBD@Z DD imagerel $LN29
	DD	imagerel $LN29+1763
	DD	imagerel $unwind$?DebugNodeTabBar@ImGui@@YAXPEAUImGuiTabBar@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DebugNodeWindow@ImGui@@YAXPEAUImGuiWindow@@PEBD@Z DD imagerel $LN51
	DD	imagerel $LN51+2679
	DD	imagerel $unwind$?DebugNodeWindow@ImGui@@YAXPEAUImGuiWindow@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DebugNodeWindowSettings@ImGui@@YAXPEAUImGuiWindowSettings@@@Z DD imagerel $LN3
	DD	imagerel $LN3+232
	DD	imagerel $unwind$?DebugNodeWindowSettings@ImGui@@YAXPEAUImGuiWindowSettings@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DebugNodeWindowsList@ImGui@@YAXPEAU?$ImVector@PEAUImGuiWindow@@@@PEBD@Z DD imagerel $LN7
	DD	imagerel $LN7+198
	DD	imagerel $unwind$?DebugNodeWindowsList@ImGui@@YAXPEAU?$ImVector@PEAUImGuiWindow@@@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DebugNodeViewport@ImGui@@YAXPEAUImGuiViewportP@@@Z DD imagerel $LN16
	DD	imagerel $LN16+599
	DD	imagerel $unwind$?DebugNodeViewport@ImGui@@YAXPEAUImGuiViewportP@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z DD imagerel $LN12
	DD	imagerel $LN12+1754
	DD	imagerel $unwind$?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetCurrentWindow@@YAXPEAUImGuiWindow@@@Z DD imagerel ?SetCurrentWindow@@YAXPEAUImGuiWindow@@@Z
	DD	imagerel ?SetCurrentWindow@@YAXPEAUImGuiWindow@@@Z+246
	DD	imagerel $unwind$?SetCurrentWindow@@YAXPEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FindHoveredWindow@@YAXXZ DD imagerel ?FindHoveredWindow@@YAXXZ
	DD	imagerel ?FindHoveredWindow@@YAXXZ+941
	DD	imagerel $unwind$?FindHoveredWindow@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z DD imagerel ?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z
	DD	imagerel ?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z+906
	DD	imagerel $unwind$?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z@4HA DD imagerel ?dtor$0@?0??CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z@4HA
	DD	imagerel ?dtor$0@?0??CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z@4HA+56
	DD	imagerel $unwind$?dtor$0@?0??CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcNextScrollFromScrollTargetAndClamp@@YA?AUImVec2@@PEAUImGuiWindow@@@Z DD imagerel ?CalcNextScrollFromScrollTargetAndClamp@@YA?AUImVec2@@PEAUImGuiWindow@@@Z
	DD	imagerel ?CalcNextScrollFromScrollTargetAndClamp@@YA?AUImVec2@@PEAUImGuiWindow@@@Z+882
	DD	imagerel $unwind$?CalcNextScrollFromScrollTargetAndClamp@@YA?AUImVec2@@PEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddDrawListToDrawData@@YAXPEAU?$ImVector@PEAUImDrawList@@@@PEAUImDrawList@@@Z DD imagerel ?AddDrawListToDrawData@@YAXPEAU?$ImVector@PEAUImDrawList@@@@PEAUImDrawList@@@Z
	DD	imagerel ?AddDrawListToDrawData@@YAXPEAU?$ImVector@PEAUImDrawList@@@@PEAUImDrawList@@@Z+408
	DD	imagerel $unwind$?AddDrawListToDrawData@@YAXPEAU?$ImVector@PEAUImDrawList@@@@PEAUImDrawList@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddWindowToSortBuffer@@YAXPEAU?$ImVector@PEAUImGuiWindow@@@@PEAUImGuiWindow@@@Z DD imagerel ?AddWindowToSortBuffer@@YAXPEAU?$ImVector@PEAUImGuiWindow@@@@PEAUImGuiWindow@@@Z
	DD	imagerel ?AddWindowToSortBuffer@@YAXPEAU?$ImVector@PEAUImGuiWindow@@@@PEAUImGuiWindow@@@Z+249
	DD	imagerel $unwind$?AddWindowToSortBuffer@@YAXPEAU?$ImVector@PEAUImGuiWindow@@@@PEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WindowSettingsHandler_ClearAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@@Z DD imagerel ?WindowSettingsHandler_ClearAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@@Z
	DD	imagerel ?WindowSettingsHandler_ClearAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@@Z+154
	DD	imagerel $unwind$?WindowSettingsHandler_ClearAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WindowSettingsHandler_ReadOpen@@YAPEAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEBD@Z DD imagerel ?WindowSettingsHandler_ReadOpen@@YAPEAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEBD@Z
	DD	imagerel ?WindowSettingsHandler_ReadOpen@@YAPEAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEBD@Z+125
	DD	imagerel $unwind$?WindowSettingsHandler_ReadOpen@@YAPEAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WindowSettingsHandler_ReadLine@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAXPEBD@Z DD imagerel ?WindowSettingsHandler_ReadLine@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAXPEBD@Z
	DD	imagerel ?WindowSettingsHandler_ReadLine@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAXPEBD@Z+341
	DD	imagerel $unwind$?WindowSettingsHandler_ReadLine@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAXPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WindowSettingsHandler_ApplyAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@@Z DD imagerel ?WindowSettingsHandler_ApplyAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@@Z
	DD	imagerel ?WindowSettingsHandler_ApplyAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@@Z+182
	DD	imagerel $unwind$?WindowSettingsHandler_ApplyAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WindowSettingsHandler_WriteAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAUImGuiTextBuffer@@@Z DD imagerel ?WindowSettingsHandler_WriteAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAUImGuiTextBuffer@@@Z
	DD	imagerel ?WindowSettingsHandler_WriteAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAUImGuiTextBuffer@@@Z+802
	DD	imagerel $unwind$?WindowSettingsHandler_WriteAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAUImGuiTextBuffer@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetClipboardTextFn_DefaultImpl@@YAPEBDPEAX@Z DD imagerel ?GetClipboardTextFn_DefaultImpl@@YAPEBDPEAX@Z
	DD	imagerel ?GetClipboardTextFn_DefaultImpl@@YAPEBDPEAX@Z+333
	DD	imagerel $unwind$?GetClipboardTextFn_DefaultImpl@@YAPEBDPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetClipboardTextFn_DefaultImpl@@YAXPEAXPEBD@Z DD imagerel ?SetClipboardTextFn_DefaultImpl@@YAXPEAXPEBD@Z
	DD	imagerel ?SetClipboardTextFn_DefaultImpl@@YAXPEAXPEBD@Z+257
	DD	imagerel $unwind$?SetClipboardTextFn_DefaultImpl@@YAXPEAXPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImeSetInputScreenPosFn_DefaultImpl@@YAXHH@Z DD imagerel ?ImeSetInputScreenPosFn_DefaultImpl@@YAXHH@Z
	DD	imagerel ?ImeSetInputScreenPosFn_DefaultImpl@@YAXHH@Z+218
	DD	imagerel $unwind$?ImeSetInputScreenPosFn_DefaultImpl@@YAXHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavUpdate@ImGui@@YAXXZ DD imagerel ?NavUpdate@ImGui@@YAXXZ
	DD	imagerel ?NavUpdate@ImGui@@YAXXZ+6420
	DD	imagerel $unwind$?NavUpdate@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavUpdateWindowing@ImGui@@YAXXZ DD imagerel ?NavUpdateWindowing@ImGui@@YAXXZ
	DD	imagerel ?NavUpdateWindowing@ImGui@@YAXXZ+2629
	DD	imagerel $unwind$?NavUpdateWindowing@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavUpdateWindowingOverlay@ImGui@@YAXXZ DD imagerel ?NavUpdateWindowingOverlay@ImGui@@YAXXZ
	DD	imagerel ?NavUpdateWindowingOverlay@ImGui@@YAXXZ+725
	DD	imagerel $unwind$?NavUpdateWindowingOverlay@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavUpdateMoveResult@ImGui@@YAXXZ DD imagerel ?NavUpdateMoveResult@ImGui@@YAXXZ
	DD	imagerel ?NavUpdateMoveResult@ImGui@@YAXXZ+1052
	DD	imagerel $unwind$?NavUpdateMoveResult@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavUpdateInitResult@ImGui@@YAXXZ DD imagerel ?NavUpdateInitResult@ImGui@@YAXXZ
	DD	imagerel ?NavUpdateInitResult@ImGui@@YAXXZ+153
	DD	imagerel $unwind$?NavUpdateInitResult@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavUpdatePageUpPageDown@ImGui@@YAMXZ DD imagerel ?NavUpdatePageUpPageDown@ImGui@@YAMXZ
	DD	imagerel ?NavUpdatePageUpPageDown@ImGui@@YAMXZ+1455
	DD	imagerel $unwind$?NavUpdatePageUpPageDown@ImGui@@YAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavUpdateAnyRequestFlag@ImGui@@YAXXZ DD imagerel ?NavUpdateAnyRequestFlag@ImGui@@YAXXZ
	DD	imagerel ?NavUpdateAnyRequestFlag@ImGui@@YAXXZ+186
	DD	imagerel $unwind$?NavUpdateAnyRequestFlag@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavEndFrame@ImGui@@YAXXZ DD imagerel ?NavEndFrame@ImGui@@YAXXZ
	DD	imagerel ?NavEndFrame@ImGui@@YAXXZ+947
	DD	imagerel $unwind$?NavEndFrame@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavScoreItem@ImGui@@YA_NPEAUImGuiNavItemData@@UImRect@@@Z DD imagerel ?NavScoreItem@ImGui@@YA_NPEAUImGuiNavItemData@@UImRect@@@Z
	DD	imagerel ?NavScoreItem@ImGui@@YA_NPEAUImGuiNavItemData@@UImRect@@@Z+1766
	DD	imagerel $unwind$?NavScoreItem@ImGui@@YA_NPEAUImGuiNavItemData@@UImRect@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavApplyItemToResult@ImGui@@YAXPEAUImGuiNavItemData@@PEAUImGuiWindow@@IAEBUImRect@@@Z DD imagerel ?NavApplyItemToResult@ImGui@@YAXPEAUImGuiNavItemData@@PEAUImGuiWindow@@IAEBUImRect@@@Z
	DD	imagerel ?NavApplyItemToResult@ImGui@@YAXPEAUImGuiNavItemData@@PEAUImGuiWindow@@IAEBUImRect@@@Z+139
	DD	imagerel $unwind$?NavApplyItemToResult@ImGui@@YAXPEAUImGuiNavItemData@@PEAUImGuiWindow@@IAEBUImRect@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavProcessItem@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@I@Z DD imagerel ?NavProcessItem@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@I@Z
	DD	imagerel ?NavProcessItem@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@I@Z+1121
	DD	imagerel $unwind$?NavProcessItem@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavCalcPreferredRefPos@ImGui@@YA?AUImVec2@@XZ DD imagerel ?NavCalcPreferredRefPos@ImGui@@YA?AUImVec2@@XZ
	DD	imagerel ?NavCalcPreferredRefPos@ImGui@@YA?AUImVec2@@XZ+655
	DD	imagerel $unwind$?NavCalcPreferredRefPos@ImGui@@YA?AUImVec2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavSaveLastChildNavWindowIntoParent@ImGui@@YAXPEAUImGuiWindow@@@Z DD imagerel ?NavSaveLastChildNavWindowIntoParent@ImGui@@YAXPEAUImGuiWindow@@@Z
	DD	imagerel ?NavSaveLastChildNavWindowIntoParent@ImGui@@YAXPEAUImGuiWindow@@@Z+147
	DD	imagerel $unwind$?NavSaveLastChildNavWindowIntoParent@ImGui@@YAXPEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavRestoreLastChildNavWindow@ImGui@@YAPEAUImGuiWindow@@PEAU2@@Z DD imagerel ?NavRestoreLastChildNavWindow@ImGui@@YAPEAUImGuiWindow@@PEAU2@@Z
	DD	imagerel ?NavRestoreLastChildNavWindow@ImGui@@YAPEAUImGuiWindow@@PEAU2@@Z+106
	DD	imagerel $unwind$?NavRestoreLastChildNavWindow@ImGui@@YAPEAUImGuiWindow@@PEAU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavRestoreLayer@ImGui@@YAXW4ImGuiNavLayer@@@Z DD imagerel ?NavRestoreLayer@ImGui@@YAXW4ImGuiNavLayer@@@Z
	DD	imagerel ?NavRestoreLayer@ImGui@@YAXW4ImGuiNavLayer@@@Z+243
	DD	imagerel $unwind$?NavRestoreLayer@ImGui@@YAXW4ImGuiNavLayer@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FindWindowFocusIndex@ImGui@@YAHPEAUImGuiWindow@@@Z DD imagerel ?FindWindowFocusIndex@ImGui@@YAHPEAUImGuiWindow@@@Z
	DD	imagerel ?FindWindowFocusIndex@ImGui@@YAHPEAUImGuiWindow@@@Z+150
	DD	imagerel $unwind$?FindWindowFocusIndex@ImGui@@YAHPEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ DD imagerel ?ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ
	DD	imagerel ?ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ+1058
	DD	imagerel $unwind$?ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ErrorCheckEndFrameSanityChecks@ImGui@@YAXXZ DD imagerel ?ErrorCheckEndFrameSanityChecks@ImGui@@YAXXZ
	DD	imagerel ?ErrorCheckEndFrameSanityChecks@ImGui@@YAXXZ+352
	DD	imagerel $unwind$?ErrorCheckEndFrameSanityChecks@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateSettings@ImGui@@YAXXZ DD imagerel ?UpdateSettings@ImGui@@YAXXZ
	DD	imagerel ?UpdateSettings@ImGui@@YAXXZ+279
	DD	imagerel $unwind$?UpdateSettings@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateMouseInputs@ImGui@@YAXXZ DD imagerel ?UpdateMouseInputs@ImGui@@YAXXZ
	DD	imagerel ?UpdateMouseInputs@ImGui@@YAXXZ+1777
	DD	imagerel $unwind$?UpdateMouseInputs@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateMouseWheel@ImGui@@YAXXZ DD imagerel ?UpdateMouseWheel@ImGui@@YAXXZ
	DD	imagerel ?UpdateMouseWheel@ImGui@@YAXXZ+1794
	DD	imagerel $unwind$?UpdateMouseWheel@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateTabFocus@ImGui@@YAXXZ DD imagerel ?UpdateTabFocus@ImGui@@YAXXZ
	DD	imagerel ?UpdateTabFocus@ImGui@@YAXXZ+680
	DD	imagerel $unwind$?UpdateTabFocus@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateDebugToolItemPicker@ImGui@@YAXXZ DD imagerel ?UpdateDebugToolItemPicker@ImGui@@YAXXZ
	DD	imagerel ?UpdateDebugToolItemPicker@ImGui@@YAXXZ+284
	DD	imagerel $unwind$?UpdateDebugToolItemPicker@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z DD imagerel ?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z
	DD	imagerel ?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z+3587
	DD	imagerel $unwind$?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderWindowOuterBorders@ImGui@@YAXPEAUImGuiWindow@@@Z DD imagerel ?RenderWindowOuterBorders@ImGui@@YAXPEAUImGuiWindow@@@Z
	DD	imagerel ?RenderWindowOuterBorders@ImGui@@YAXPEAUImGuiWindow@@@Z+1475
	DD	imagerel $unwind$?RenderWindowOuterBorders@ImGui@@YAXPEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z DD imagerel ?RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z
	DD	imagerel ?RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z+2485
	DD	imagerel $unwind$?RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z DD imagerel ?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z
	DD	imagerel ?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z+1949
	DD	imagerel $unwind$?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateViewportsNewFrame@ImGui@@YAXXZ DD imagerel ?UpdateViewportsNewFrame@ImGui@@YAXXZ
	DD	imagerel ?UpdateViewportsNewFrame@ImGui@@YAXXZ+375
	DD	imagerel $unwind$?UpdateViewportsNewFrame@ImGui@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?MallocWrapper@@YAPEAX_KPEAX@Z DD imagerel ?MallocWrapper@@YAPEAX_KPEAX@Z
	DD	imagerel ?MallocWrapper@@YAPEAX_KPEAX@Z+59
	DD	imagerel $unwind$?MallocWrapper@@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FreeWrapper@@YAXPEAX0@Z DD imagerel ?FreeWrapper@@YAXPEAX0@Z
	DD	imagerel ?FreeWrapper@@YAXPEAX0@Z+59
	DD	imagerel $unwind$?FreeWrapper@@YAXPEAX0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImBezierCubicClosestPointCasteljauStep@@YAXAEBUImVec2@@AEAU1@1AEAMMMMMMMMMMH@Z DD imagerel ?ImBezierCubicClosestPointCasteljauStep@@YAXAEBUImVec2@@AEAU1@1AEAMMMMMMMMMMH@Z
	DD	imagerel ?ImBezierCubicClosestPointCasteljauStep@@YAXAEBUImVec2@@AEAU1@1AEAMMMMMMMMMMH@Z+1389
	DD	imagerel $unwind$?ImBezierCubicClosestPointCasteljauStep@@YAXAEBUImVec2@@AEAU1@1AEAMMMMMMMMMMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImTextCharToUtf8_inline@@YAHPEADHI@Z DD imagerel ?ImTextCharToUtf8_inline@@YAHPEADHI@Z
	DD	imagerel ?ImTextCharToUtf8_inline@@YAHPEADHI@Z+525
	DD	imagerel $unwind$?ImTextCharToUtf8_inline@@YAHPEADHI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImTextCountUtf8BytesFromChar@@YAHI@Z DD imagerel ?ImTextCountUtf8BytesFromChar@@YAHI@Z
	DD	imagerel ?ImTextCountUtf8BytesFromChar@@YAHI@Z+121
	DD	imagerel $unwind$?ImTextCountUtf8BytesFromChar@@YAHI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$ImLerp@H@@YAHHHM@Z DD imagerel ??$ImLerp@H@@YAHHHM@Z
	DD	imagerel ??$ImLerp@H@@YAHHHM@Z+94
	DD	imagerel $unwind$??$ImLerp@H@@YAHHHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$ImSwap@M@@YAXAEAM0@Z DD imagerel ??$ImSwap@M@@YAXAEAM0@Z
	DD	imagerel ??$ImSwap@M@@YAXAEAM0@Z+100
	DD	imagerel $unwind$??$ImSwap@M@@YAXAEAM0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LowerBound@@YAPEAUImGuiStoragePair@ImGuiStorage@@AEAU?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@I@Z DD imagerel ?LowerBound@@YAPEAUImGuiStoragePair@ImGuiStorage@@AEAU?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@I@Z
	DD	imagerel ?LowerBound@@YAPEAUImGuiStoragePair@ImGuiStorage@@AEAU?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@I@Z+234
	DD	imagerel $unwind$?LowerBound@@YAPEAUImGuiStoragePair@ImGuiStorage@@AEAU?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PairCompareByID@StaticFunc@?1??BuildSortByKey@ImGuiStorage@@QEAAXXZ@SAHPEBX0@Z DD imagerel ?PairCompareByID@StaticFunc@?1??BuildSortByKey@ImGuiStorage@@QEAAXXZ@SAHPEBX0@Z
	DD	imagerel ?PairCompareByID@StaticFunc@?1??BuildSortByKey@ImGuiStorage@@QEAAXXZ@SAHPEBX0@Z+102
	DD	imagerel $unwind$?PairCompareByID@StaticFunc@?1??BuildSortByKey@ImGuiStorage@@QEAAXXZ@SAHPEBX0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSkipItemForListClipping@@YA_NXZ DD imagerel ?GetSkipItemForListClipping@@YA_NXZ
	DD	imagerel ?GetSkipItemForListClipping@@YA_NXZ+119
	DD	imagerel $unwind$?GetSkipItemForListClipping@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$ImClamp@H@@YAHHHH@Z DD imagerel ??$ImClamp@H@@YAHHHH@Z
	DD	imagerel ??$ImClamp@H@@YAHHHH@Z+135
	DD	imagerel $unwind$??$ImClamp@H@@YAHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetCursorPosYAndSetupForPrevLine@@YAXMM@Z DD imagerel ?SetCursorPosYAndSetupForPrevLine@@YAXMM@Z
	DD	imagerel ?SetCursorPosYAndSetupForPrevLine@@YAXMM@Z+411
	DD	imagerel $unwind$?SetCursorPosYAndSetupForPrevLine@@YAXMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetVarPtr@ImGuiStyleVarInfo@@QEBAPEAXPEAUImGuiStyle@@@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$?GetVarPtr@ImGuiStyleVarInfo@@QEBAPEAXPEAUImGuiStyle@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetStyleVarInfo@@YAPEBUImGuiStyleVarInfo@@H@Z DD imagerel ?GetStyleVarInfo@@YAPEBUImGuiStyleVarInfo@@H@Z
	DD	imagerel ?GetStyleVarInfo@@YAPEBUImGuiStyleVarInfo@@H@Z+115
	DD	imagerel $unwind$?GetStyleVarInfo@@YAPEBUImGuiStyleVarInfo@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$IM_DELETE@D@@YAXPEAD@Z DD imagerel $LN4
	DD	imagerel $LN4+63
	DD	imagerel $unwind$??$IM_DELETE@D@@YAXPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsWindowContentHoverable@@YA_NPEAUImGuiWindow@@H@Z DD imagerel ?IsWindowContentHoverable@@YA_NPEAUImGuiWindow@@H@Z
	DD	imagerel ?IsWindowContentHoverable@@YA_NPEAUImGuiWindow@@H@Z+189
	DD	imagerel $unwind$?IsWindowContentHoverable@@YA_NPEAUImGuiWindow@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$IM_DELETE@UImGuiContext@@@@YAXPEAUImGuiContext@@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??$IM_DELETE@UImGuiContext@@@@YAXPEAUImGuiContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z DD imagerel ?GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z
	DD	imagerel ?GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z+516
	DD	imagerel $unwind$?GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z@4HA DD imagerel ?dtor$0@?0??GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z@4HA
	DD	imagerel ?dtor$0@?0??GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z@4HA+56
	DD	imagerel $unwind$?dtor$0@?0??GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsWindowActiveAndVisible@@YA_NPEAUImGuiWindow@@@Z DD imagerel ?IsWindowActiveAndVisible@@YA_NPEAUImGuiWindow@@@Z
	DD	imagerel ?IsWindowActiveAndVisible@@YA_NPEAUImGuiWindow@@@Z+106
	DD	imagerel $unwind$?IsWindowActiveAndVisible@@YA_NPEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?StartLockWheelingWindow@@YAXPEAUImGuiWindow@@@Z DD imagerel ?StartLockWheelingWindow@@YAXPEAUImGuiWindow@@@Z
	DD	imagerel ?StartLockWheelingWindow@@YAXPEAUImGuiWindow@@@Z+134
	DD	imagerel $unwind$?StartLockWheelingWindow@@YAXPEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$ImClamp@M@@YAMMMM@Z DD imagerel ??$ImClamp@M@@YAMMMM@Z
	DD	imagerel ??$ImClamp@M@@YAMMMM@Z+164
	DD	imagerel $unwind$??$ImClamp@M@@YAMMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$IM_DELETE@UImFontAtlas@@@@YAXPEAUImFontAtlas@@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??$IM_DELETE@UImFontAtlas@@@@YAXPEAUImFontAtlas@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ChildWindowComparer@@YAHPEBX0@Z DD imagerel ?ChildWindowComparer@@YAHPEBX0@Z
	DD	imagerel ?ChildWindowComparer@@YAHPEBX0@Z+180
	DD	imagerel $unwind$?ChildWindowComparer@@YAHPEBX0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddWindowToDrawData@@YAXPEAUImGuiWindow@@H@Z DD imagerel ?AddWindowToDrawData@@YAXPEAUImGuiWindow@@H@Z
	DD	imagerel ?AddWindowToDrawData@@YAXPEAUImGuiWindow@@H@Z+268
	DD	imagerel $unwind$?AddWindowToDrawData@@YAXPEAUImGuiWindow@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddRootWindowToDrawData@@YAXPEAUImGuiWindow@@@Z DD imagerel ?AddRootWindowToDrawData@@YAXPEAUImGuiWindow@@@Z
	DD	imagerel ?AddRootWindowToDrawData@@YAXPEAUImGuiWindow@@@Z+106
	DD	imagerel $unwind$?AddRootWindowToDrawData@@YAXPEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetupViewportDrawData@@YAXPEAUImGuiViewportP@@PEAU?$ImVector@PEAUImDrawList@@@@@Z DD imagerel ?SetupViewportDrawData@@YAXPEAUImGuiViewportP@@PEAU?$ImVector@PEAUImDrawList@@@@@Z
	DD	imagerel ?SetupViewportDrawData@@YAXPEAUImGuiViewportP@@PEAU?$ImVector@PEAUImDrawList@@@@@Z+339
	DD	imagerel $unwind$?SetupViewportDrawData@@YAXPEAUImGuiViewportP@@PEAU?$ImVector@PEAUImDrawList@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetWindowConditionAllowFlags@@YAXPEAUImGuiWindow@@H_N@Z DD imagerel ?SetWindowConditionAllowFlags@@YAXPEAUImGuiWindow@@H_N@Z
	DD	imagerel ?SetWindowConditionAllowFlags@@YAXPEAUImGuiWindow@@H_N@Z+434
	DD	imagerel $unwind$?SetWindowConditionAllowFlags@@YAXPEAUImGuiWindow@@H_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ApplyWindowSettings@@YAXPEAUImGuiWindow@@PEAUImGuiWindowSettings@@@Z DD imagerel ?ApplyWindowSettings@@YAXPEAUImGuiWindow@@PEAUImGuiWindowSettings@@@Z
	DD	imagerel ?ApplyWindowSettings@@YAXPEAUImGuiWindow@@PEAUImGuiWindowSettings@@@Z+270
	DD	imagerel $unwind$?ApplyWindowSettings@@YAXPEAUImGuiWindow@@PEAUImGuiWindowSettings@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z DD imagerel ?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z
	DD	imagerel ?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z+750
	DD	imagerel $unwind$?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcWindowContentSizes@@YAXPEAUImGuiWindow@@PEAUImVec2@@1@Z DD imagerel ?CalcWindowContentSizes@@YAXPEAUImGuiWindow@@PEAUImVec2@@1@Z
	DD	imagerel ?CalcWindowContentSizes@@YAXPEAUImGuiWindow@@PEAUImVec2@@1@Z+710
	DD	imagerel $unwind$?CalcWindowContentSizes@@YAXPEAUImGuiWindow@@PEAUImVec2@@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z DD imagerel ?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z
	DD	imagerel ?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z+1044
	DD	imagerel $unwind$?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWindowBgColorIdxFromFlags@@YAHH@Z DD imagerel ?GetWindowBgColorIdxFromFlags@@YAHH@Z
	DD	imagerel ?GetWindowBgColorIdxFromFlags@@YAHH@Z+89
	DD	imagerel $unwind$?GetWindowBgColorIdxFromFlags@@YAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z DD imagerel ?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z
	DD	imagerel ?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z+422
	DD	imagerel $unwind$?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Eresize_grip_def@@YAXXZ DD imagerel ??__Eresize_grip_def@@YAXXZ
	DD	imagerel ??__Eresize_grip_def@@YAXXZ+321
	DD	imagerel $unwind$??__Eresize_grip_def@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Eresize_border_def@@YAXXZ DD imagerel ??__Eresize_border_def@@YAXXZ
	DD	imagerel ??__Eresize_border_def@@YAXXZ+372
	DD	imagerel $unwind$??__Eresize_border_def@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z DD imagerel ?GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z
	DD	imagerel ?GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z+719
	DD	imagerel $unwind$?GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClampWindowRect@@YAXPEAUImGuiWindow@@AEBUImRect@@@Z DD imagerel ?ClampWindowRect@@YAXPEAUImGuiWindow@@AEBUImRect@@@Z
	DD	imagerel ?ClampWindowRect@@YAXPEAUImGuiWindow@@AEBUImRect@@@Z+299
	DD	imagerel $unwind$?ClampWindowRect@@YAXPEAUImGuiWindow@@AEBUImRect@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcScrollEdgeSnap@@YAMMMMMM@Z DD imagerel ?CalcScrollEdgeSnap@@YAMMMMMM@Z
	DD	imagerel ?CalcScrollEdgeSnap@@YAMMMMMM@Z+184
	DD	imagerel $unwind$?CalcScrollEdgeSnap@@YAMMMMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$ImLerp@M@@YAMMMM@Z DD imagerel ??$ImLerp@M@@YAMMMM@Z
	DD	imagerel ??$ImLerp@M@@YAMMMM@Z+93
	DD	imagerel $unwind$??$ImLerp@M@@YAMMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavScoreItemDistInterval@@YAMMMMM@Z DD imagerel ?NavScoreItemDistInterval@@YAMMMMM@Z
	DD	imagerel ?NavScoreItemDistInterval@@YAMMMMM@Z+133
	DD	imagerel $unwind$?NavScoreItemDistInterval@@YAMMMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavClampRectToVisibleAreaForMoveDir@@YAXHAEAUImRect@@AEBU1@@Z DD imagerel ?NavClampRectToVisibleAreaForMoveDir@@YAXHAEAUImRect@@AEBU1@@Z
	DD	imagerel ?NavClampRectToVisibleAreaForMoveDir@@YAXHAEAUImRect@@AEBU1@@Z+278
	DD	imagerel $unwind$?NavClampRectToVisibleAreaForMoveDir@@YAXHAEAUImRect@@AEBU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FindWindowNavFocusable@@YAPEAUImGuiWindow@@HHH@Z DD imagerel ?FindWindowNavFocusable@@YAPEAUImGuiWindow@@HHH@Z
	DD	imagerel ?FindWindowNavFocusable@@YAPEAUImGuiWindow@@HHH@Z+210
	DD	imagerel $unwind$?FindWindowNavFocusable@@YAPEAUImGuiWindow@@HHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavUpdateWindowingHighlightWindow@@YAXH@Z DD imagerel ?NavUpdateWindowingHighlightWindow@@YAXH@Z
	DD	imagerel ?NavUpdateWindowingHighlightWindow@@YAXH@Z+313
	DD	imagerel $unwind$?NavUpdateWindowingHighlightWindow@@YAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetFallbackWindowNameForWindowingList@@YAPEBDPEAUImGuiWindow@@@Z DD imagerel ?GetFallbackWindowNameForWindowingList@@YAPEBDPEAUImGuiWindow@@@Z
	DD	imagerel ?GetFallbackWindowNameForWindowingList@@YAPEBDPEAUImGuiWindow@@@Z+152
	DD	imagerel $unwind$?GetFallbackWindowNameForWindowingList@@YAPEBDPEAUImGuiWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LogTextV@@YAXAEAUImGuiContext@@PEBDPEAD@Z DD imagerel ?LogTextV@@YAXAEAUImGuiContext@@PEBDPEAD@Z
	DD	imagerel ?LogTextV@@YAXAEAUImGuiContext@@PEBDPEAD@Z+310
	DD	imagerel $unwind$?LogTextV@@YAXAEAUImGuiContext@@PEBDPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderViewportsThumbnails@@YAXXZ DD imagerel ?RenderViewportsThumbnails@@YAXXZ
	DD	imagerel ?RenderViewportsThumbnails@@YAXXZ+718
	DD	imagerel $unwind$?RenderViewportsThumbnails@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?MetricsHelpMarker@@YAXPEBD@Z DD imagerel ?MetricsHelpMarker@@YAXPEBD@Z
	DD	imagerel ?MetricsHelpMarker@@YAXPEBD@Z+114
	DD	imagerel $unwind$?MetricsHelpMarker@@YAXPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetTableRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiTable@@HH@Z DD imagerel ?GetTableRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiTable@@HH@Z
	DD	imagerel ?GetTableRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiTable@@HH@Z+1432
	DD	imagerel $unwind$?GetTableRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiTable@@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWindowRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiWindow@@H@Z DD imagerel ?GetWindowRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiWindow@@H@Z
	DD	imagerel ?GetWindowRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiWindow@@H@Z+804
	DD	imagerel $unwind$?GetWindowRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiWindow@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$IM_DELETE@UImGuiViewportP@@@@YAXPEAUImGuiViewportP@@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??$IM_DELETE@UImGuiViewportP@@@@YAXPEAUImGuiViewportP@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$IM_DELETE@UImGuiWindow@@@@YAXPEAUImGuiWindow@@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??$IM_DELETE@UImGuiWindow@@@@YAXPEAUImGuiWindow@@@Z
pdata	ENDS
CRT$XCU	SEGMENT
?resize_grip_def$initializer$@@3P6AXXZEA DQ FLAT:??__Eresize_grip_def@@YAXXZ ; resize_grip_def$initializer$
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@7fffffffffffffff7fffffffffffffff
CONST	SEGMENT
__xmm@7fffffffffffffff7fffffffffffffff DB 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __real@ff7fffff
CONST	SEGMENT
__real@ff7fffff DD 0ff7fffffr			; -3.40282e+38
CONST	ENDS
;	COMDAT __real@c87a0000
CONST	SEGMENT
__real@c87a0000 DD 0c87a0000r			; -256000
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@beaaaaab
CONST	SEGMENT
__real@beaaaaab DD 0beaaaaabr			; -0.333333
CONST	ENDS
;	COMDAT __real@80800000
CONST	SEGMENT
__real@80800000 DD 080800000r			; -1.17549e-38
CONST	ENDS
;	COMDAT __real@7f7fffff
CONST	SEGMENT
__real@7f7fffff DD 07f7fffffr			; 3.40282e+38
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@44480000
CONST	SEGMENT
__real@44480000 DD 044480000r			; 800
CONST	ENDS
;	COMDAT __real@44160000
CONST	SEGMENT
__real@44160000 DD 044160000r			; 600
CONST	ENDS
;	COMDAT __real@43c80000
CONST	SEGMENT
__real@43c80000 DD 043c80000r			; 400
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@42a00000
CONST	SEGMENT
__real@42a00000 DD 042a00000r			; 80
CONST	ENDS
;	COMDAT __real@42700000
CONST	SEGMENT
__real@42700000 DD 042700000r			; 60
CONST	ENDS
;	COMDAT __real@420c0000
CONST	SEGMENT
__real@420c0000 DD 0420c0000r			; 35
CONST	ENDS
;	COMDAT __real@42000000
CONST	SEGMENT
__real@42000000 DD 042000000r			; 32
CONST	ENDS
;	COMDAT __real@41c00000
CONST	SEGMENT
__real@41c00000 DD 041c00000r			; 24
CONST	ENDS
;	COMDAT __real@41a80000
CONST	SEGMENT
__real@41a80000 DD 041a80000r			; 21
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@41980000
CONST	SEGMENT
__real@41980000 DD 041980000r			; 19
CONST	ENDS
;	COMDAT __real@41800000
CONST	SEGMENT
__real@41800000 DD 041800000r			; 16
CONST	ENDS
;	COMDAT __real@41600000
CONST	SEGMENT
__real@41600000 DD 041600000r			; 14
CONST	ENDS
;	COMDAT __real@41400000
CONST	SEGMENT
__real@41400000 DD 041400000r			; 12
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@41100000
CONST	SEGMENT
__real@41100000 DD 041100000r			; 9
CONST	ENDS
;	COMDAT __real@41000000
CONST	SEGMENT
__real@41000000 DD 041000000r			; 8
CONST	ENDS
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@4096cbe4
CONST	SEGMENT
__real@4096cbe4 DD 04096cbe4r			; 4.71239
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40600000
CONST	SEGMENT
__real@40600000 DD 040600000r			; 3.5
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@40200000
CONST	SEGMENT
__real@40200000 DD 040200000r			; 2.5
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3fc90fdb
CONST	SEGMENT
__real@3fc90fdb DD 03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT __real@3faccccd
CONST	SEGMENT
__real@3faccccd DD 03faccccdr			; 1.35
CONST	ENDS
;	COMDAT __real@3fa00000
CONST	SEGMENT
__real@3fa00000 DD 03fa00000r			; 1.25
CONST	ENDS
;	COMDAT __real@3f8ccccd
CONST	SEGMENT
__real@3f8ccccd DD 03f8ccccdr			; 1.1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f7fff58
CONST	SEGMENT
__real@3f7fff58 DD 03f7fff58r			; 0.99999
CONST	ENDS
;	COMDAT __real@3f4ccccd
CONST	SEGMENT
__real@3f4ccccd DD 03f4ccccdr			; 0.8
CONST	ENDS
;	COMDAT __real@3f490fdb
CONST	SEGMENT
__real@3f490fdb DD 03f490fdbr			; 0.785398
CONST	ENDS
;	COMDAT __real@3f400000
CONST	SEGMENT
__real@3f400000 DD 03f400000r			; 0.75
CONST	ENDS
;	COMDAT __real@3f3851ec
CONST	SEGMENT
__real@3f3851ec DD 03f3851ecr			; 0.72
CONST	ENDS
;	COMDAT __real@3f333333
CONST	SEGMENT
__real@3f333333 DD 03f333333r			; 0.7
CONST	ENDS
;	COMDAT __real@3f2b851f
CONST	SEGMENT
__real@3f2b851f DD 03f2b851fr			; 0.67
CONST	ENDS
;	COMDAT __real@3f266666
CONST	SEGMENT
__real@3f266666 DD 03f266666r			; 0.65
CONST	ENDS
;	COMDAT __real@3f19999a
CONST	SEGMENT
__real@3f19999a DD 03f19999ar			; 0.6
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3ecccccd
CONST	SEGMENT
__real@3ecccccd DD 03ecccccdr			; 0.4
CONST	ENDS
;	COMDAT __real@3e99999a
CONST	SEGMENT
__real@3e99999a DD 03e99999ar			; 0.3
CONST	ENDS
;	COMDAT __real@3e8ccccd
CONST	SEGMENT
__real@3e8ccccd DD 03e8ccccdr			; 0.275
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@3e2aaaab
CONST	SEGMENT
__real@3e2aaaab DD 03e2aaaabr			; 0.166667
CONST	ENDS
;	COMDAT __real@3e19999a
CONST	SEGMENT
__real@3e19999a DD 03e19999ar			; 0.15
CONST	ENDS
;	COMDAT __real@3e000000
CONST	SEGMENT
__real@3e000000 DD 03e000000r			; 0.125
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3d4ccccd
CONST	SEGMENT
__real@3d4ccccd DD 03d4ccccdr			; 0.05
CONST	ENDS
;	COMDAT __real@3d23d70a
CONST	SEGMENT
__real@3d23d70a DD 03d23d70ar			; 0.04
CONST	ENDS
;	COMDAT __real@3c888889
CONST	SEGMENT
__real@3c888889 DD 03c888889r			; 0.0166667
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT __real@3ba3d70a
CONST	SEGMENT
__real@3ba3d70a DD 03ba3d70ar			; 0.005
CONST	ENDS
;	COMDAT __real@3b808081
CONST	SEGMENT
__real@3b808081 DD 03b808081r			; 0.00392157
CONST	ENDS
;	COMDAT __real@38d1b717
CONST	SEGMENT
__real@38d1b717 DD 038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT __real@3727c5ac
CONST	SEGMENT
__real@3727c5ac DD 03727c5acr			; 1e-05
CONST	ENDS
;	COMDAT __real@1e3ce508
CONST	SEGMENT
__real@1e3ce508 DD 01e3ce508r			; 1e-20
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1EA@INDCAEFK@?$AAi?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
CONST	SEGMENT
??_C@_1EA@INDCAEFK@?$AAi?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@ DB 'i'
	DB	00H, 't', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, 'D', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, ' ', 00H, '&', 00H, '&', 00H, ' '
	DB	00H, 'i', 00H, 't', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H
	DB	'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H, '+', 00H, ' '
	DB	00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@EPOMENA@?$AAo?$AAf?$AAf?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA4?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAo?$AAf?$AAf@
CONST	SEGMENT
??_C@_1DG@EPOMENA@?$AAo?$AAf?$AAf?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA4?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAo?$AAf?$AAf@ DB 'o'
	DB	00H, 'f', 00H, 'f', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H
	DB	'4', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'o', 00H, 'f'
	DB	00H, 'f', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, '.', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@OEELIPPM@?$AAp?$AA?5?$AA?$DM?$AA?5?$AAe?$AAn?$AAd?$AA?$CI?$AA?$CJ@
CONST	SEGMENT
??_C@_1BE@OEELIPPM@?$AAp?$AA?5?$AA?$DM?$AA?5?$AAe?$AAn?$AAd?$AA?$CI?$AA?$CJ@ DB 'p'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, 'e', 00H, 'n', 00H, 'd', 00H
	DB	'(', 00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@BDDBABLK@?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAb?$AAe?$AAg?$AAi?$AAn?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG@
CONST	SEGMENT
??_C@_1DE@BDDBABLK@?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAb?$AAe?$AAg?$AAi?$AAn?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG@ DB 'p'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, 'b', 00H, 'e', 00H
	DB	'g', 00H, 'i', 00H, 'n', 00H, '(', 00H, ')', 00H, ' ', 00H, '&'
	DB	00H, '&', 00H, ' ', 00H, 'p', 00H, ' ', 00H, '<', 00H, ' ', 00H
	DB	'e', 00H, 'n', 00H, 'd', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@ DB 'S', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
CONST	SEGMENT
??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@ DB 'i'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, 'i', 00H, ' ', 00H, '<', 00H, ' '
	DB	00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@NPHOAPAC@?$AAi?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
CONST	SEGMENT
??_C@_1DO@NPHOAPAC@?$AAi?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@ DB 'i'
	DB	00H, 't', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, 'D', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, ' ', 00H, '&', 00H, '&', 00H, ' '
	DB	00H, 'i', 00H, 't', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'D', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, ' ', 00H, '+', 00H, ' ', 00H, 'S'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@DHFOGPCD@?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp?$AA?5@
CONST	SEGMENT
??_C@_1DC@DHFOGPCD@?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp?$AA?5@ DB 'p'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, 'D', 00H, 'a', 00H
	DB	't', 00H, 'a', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'p'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, 'D', 00H, 'a', 00H, 't', 00H
	DB	'a', 00H, 'E', 00H, 'n', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GKODIOOH@?$CIIn?5front?9to?9back?5order?3?$CJ@
CONST	SEGMENT
??_C@_0BK@GKODIOOH@?$CIIn?5front?9to?9back?5order?3?$CJ@ DB '(In front-to'
	DB	'-back order:)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07JMKCEEPK@?$CFs?5?$CI?$CFd?$CJ@
CONST	SEGMENT
??_C@_07JMKCEEPK@?$CFs?5?$CI?$CFd?$CJ@ DB '%s (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@NLKEEDHM@0x?$CF08X?5?$CC?$CFs?$CC?5Pos?5?$CI?$CFd?0?$CFd?$CJ?5Size?5?$CI?$CF@
CONST	SEGMENT
??_C@_0DC@NLKEEDHM@0x?$CF08X?5?$CC?$CFs?$CC?5Pos?5?$CI?$CFd?0?$CFd?$CJ?5Size?5?$CI?$CF@ DB '0'
	DB	'x%08X "%s" Pos (%d,%d) Size (%d,%d) Collapsed=%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07PFGLPMIK@Storage@
CONST	SEGMENT
??_C@_07PFGLPMIK@Storage@ DB 'Storage', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07IBCCJKML@Columns@
CONST	SEGMENT
??_C@_07IBCCJKML@Columns@ DB 'Columns', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FIDDFLAI@Columns?5sets?5?$CI?$CFd?$CJ@
CONST	SEGMENT
??_C@_0BC@FIDDFLAI@Columns?5sets?5?$CI?$CFd?$CJ@ DB 'Columns sets (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BGDHDNPO@ChildWindows@
CONST	SEGMENT
??_C@_0N@BGDHDNPO@ChildWindows@ DB 'ChildWindows', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BPPHAMMO@ParentWindow@
CONST	SEGMENT
??_C@_0N@BPPHAMMO@ParentWindow@ DB 'ParentWindow', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EHLMOHOL@RootWindow@
CONST	SEGMENT
??_C@_0L@EHLMOHOL@RootWindow@ DB 'RootWindow', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@ILECKNFA@NavLayersActiveMask?3?5?$CFX?0?5NavLas@
CONST	SEGMENT
??_C@_0DD@ILECKNFA@NavLayersActiveMask?3?5?$CFX?0?5NavLas@ DB 'NavLayersA'
	DB	'ctiveMask: %X, NavLastChildNavWindow: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@PKDENGJH@NavLastIds?$FL?$CFd?$FN?3?50x?$CF08X?5at?5?$CL?$CI?$CF?41@
CONST	SEGMENT
??_C@_0DC@PKDENGJH@NavLastIds?$FL?$CFd?$FN?3?50x?$CF08X?5at?5?$CL?$CI?$CF?41@ DB 'N'
	DB	'avLastIds[%d]: 0x%08X at +(%.1f,%.1f)(%.1f,%.1f)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EDAJMFBI@NavLastIds?$FL?$CFd?$FN?3?50x?$CF08X@
CONST	SEGMENT
??_C@_0BH@EDAJMFBI@NavLastIds?$FL?$CFd?$FN?3?50x?$CF08X@ DB 'NavLastIds[%'
	DB	'd]: 0x%08X', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@JLDPMAKO@Appearing?3?5?$CFd?0?5Hidden?3?5?$CFd?5?$CICanS@
CONST	SEGMENT
??_C@_0EA@JLDPMAKO@Appearing?3?5?$CFd?0?5Hidden?3?5?$CFd?5?$CICanS@ DB 'A'
	DB	'ppearing: %d, Hidden: %d (CanSkip %d Cannot %d), SkipItems: %'
	DB	'd', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@LPCMGHLI@Active?3?5?$CFd?1?$CFd?0?5WriteAccessed?3?5?$CF@
CONST	SEGMENT
??_C@_0DO@LPCMGHLI@Active?3?5?$CFd?1?$CFd?0?5WriteAccessed?3?5?$CF@ DB 'A'
	DB	'ctive: %d/%d, WriteAccessed: %d, BeginOrderWithinContext: %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@OBHMFINH@Scroll?3?5?$CI?$CF?42f?1?$CF?42f?0?$CF?42f?1?$CF?42f?$CJ?5S@
CONST	SEGMENT
??_C@_0CN@OBHMFINH@Scroll?3?5?$CI?$CF?42f?1?$CF?42f?0?$CF?42f?1?$CF?42f?$CJ?5S@ DB 'S'
	DB	'croll: (%.2f/%.2f,%.2f/%.2f) Scrollbar:%s%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01MMEEDKFM@X@
CONST	SEGMENT
??_C@_01MMEEDKFM@X@ DB 'X', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01NFFPALBN@Y@
CONST	SEGMENT
??_C@_01NFFPALBN@Y@ DB 'Y', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@HFFEAFCN@Flags?3?50x?$CF08X?5?$CI?$CFs?$CFs?$CFs?$CFs?$CFs?$CFs?$CFs?$CFs@
CONST	SEGMENT
??_C@_0CF@HFFEAFCN@Flags?3?50x?$CF08X?5?$CI?$CFs?$CFs?$CFs?$CFs?$CFs?$CFs?$CFs?$CFs@ DB 'F'
	DB	'lags: 0x%08X (%s%s%s%s%s%s%s%s%s..)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06MMFPNIIL@Child?5@
CONST	SEGMENT
??_C@_06MMFPNIIL@Child?5@ DB 'Child ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LGECAIGF@Tooltip?5@
CONST	SEGMENT
??_C@_08LGECAIGF@Tooltip?5@ DB 'Tooltip ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06NMKCIICK@Popup?5@
CONST	SEGMENT
??_C@_06NMKCIICK@Popup?5@ DB 'Popup ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IFIMNOLK@Modal?5@
CONST	SEGMENT
??_C@_06IFIMNOLK@Modal?5@ DB 'Modal ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OPMMHACC@ChildMenu?5@
CONST	SEGMENT
??_C@_0L@OPMMHACC@ChildMenu?5@ DB 'ChildMenu ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EBNDPMCP@NoSavedSettings?5@
CONST	SEGMENT
??_C@_0BB@EBNDPMCP@NoSavedSettings?5@ DB 'NoSavedSettings ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LAPEOEIJ@NoMouseInputs@
CONST	SEGMENT
??_C@_0O@LAPEOEIJ@NoMouseInputs@ DB 'NoMouseInputs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@COLEABDL@NoNavInputs@
CONST	SEGMENT
??_C@_0M@COLEABDL@NoNavInputs@ DB 'NoNavInputs', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GGEIPOID@AlwaysAutoResize@
CONST	SEGMENT
??_C@_0BB@GGEIPOID@AlwaysAutoResize@ DB 'AlwaysAutoResize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@MJAPPIBI@Pos?3?5?$CI?$CF?41f?0?$CF?41f?$CJ?0?5Size?3?5?$CI?$CF?41f?0?$CF@
CONST	SEGMENT
??_C@_0EP@MJAPPIBI@Pos?3?5?$CI?$CF?41f?0?$CF?41f?$CJ?0?5Size?3?5?$CI?$CF?41f?0?$CF@ DB 'P'
	DB	'os: (%.1f,%.1f), Size: (%.1f,%.1f), ContentSize (%.1f,%.1f) I'
	DB	'deal (%.1f,%.1f)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@KJLKCABL@Note?3?5some?5memory?5buffers?5have?5@
CONST	SEGMENT
??_C@_0DF@KJLKCABL@Note?3?5some?5memory?5buffers?5have?5@ DB 'Note: some '
	DB	'memory buffers have been compacted/freed.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GBCBPCGK@?$CFs?5?8?$CFs?8?$CFs@
CONST	SEGMENT
??_C@_09GBCBPCGK@?$CFs?5?8?$CFs?8?$CFs@ DB '%s ''%s''%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08MGKMCIPB@?$CFs?3?5NULL@
CONST	SEGMENT
??_C@_08MGKMCIPB@?$CFs?3?5NULL@ DB '%s: NULL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LEDJFOBI@Flags?3?50x?$CF04X?5?$DN?$CFs?$CFs?$CFs@
CONST	SEGMENT
??_C@_0BG@LEDJFOBI@Flags?3?50x?$CF04X?5?$DN?$CFs?$CFs?$CFs@ DB 'Flags: 0x'
	DB	'%04X =%s%s%s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KGGIDDGG@?5IsPlatformWindow@
CONST	SEGMENT
??_C@_0BC@KGGIDDGG@?5IsPlatformWindow@ DB ' IsPlatformWindow', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FKGIEJBE@?5IsPlatformMonitor@
CONST	SEGMENT
??_C@_0BD@FKGIEJBE@?5IsPlatformMonitor@ DB ' IsPlatformMonitor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FAFJAKJI@?5OwnedByApp@
CONST	SEGMENT
??_C@_0M@FAFJAKJI@?5OwnedByApp@ DB ' OwnedByApp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@COEDEIEA@Main?5Pos?3?5?$CI?$CF?40f?0?$CF?40f?$CJ?0?5Size?3?5?$CI?$CF@
CONST	SEGMENT
??_C@_0GJ@COEDEIEA@Main?5Pos?3?5?$CI?$CF?40f?0?$CF?40f?$CJ?0?5Size?3?5?$CI?$CF@ DB 'M'
	DB	'ain Pos: (%.0f,%.0f), Size: (%.0f,%.0f)', 0aH, 'WorkArea Offs'
	DB	'et Left: %.0f Top: %.0f, Right: %.0f, Bottom: %.0f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PLOOGGOG@viewport0@
CONST	SEGMENT
??_C@_09PLOOGGOG@viewport0@ DB 'viewport0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IHHEFJLI@Viewport?5?$CD?$CFd@
CONST	SEGMENT
??_C@_0N@IHHEFJLI@Viewport?5?$CD?$CFd@ DB 'Viewport #%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@MOHAOPFA@?$CF02d?$CFc?5Tab?50x?$CF08X?5?8?$CFs?8?5Offset?3?5@
CONST	SEGMENT
??_C@_0DG@MOHAOPFA@?$CF02d?$CFc?5Tab?50x?$CF08X?5?8?$CFs?8?5Offset?3?5@ DB '%'
	DB	'02d%c Tab 0x%08X ''%s'' Offset: %.1f, Width: %.1f/%.1f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01PPODPGHN@?$DO@
CONST	SEGMENT
??_C@_01PPODPGHN@?$DO@ DB '>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01MNNFJEPP@?$DM@
CONST	SEGMENT
??_C@_01MNNFJEPP@?$DM@ DB '<', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LHCEFAHM@?5?$HN?5@
CONST	SEGMENT
??_C@_03LHCEFAHM@?5?$HN?5@ DB ' } ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06MEIHFGI@?5?4?4?4?5?$HN@
CONST	SEGMENT
??_C@_06MEIHFGI@?5?4?4?4?5?$HN@ DB ' ... }', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06BKNPIBKB@?$CFs?8?$CFs?8@
CONST	SEGMENT
??_C@_06BKNPIBKB@?$CFs?8?$CFs?8@ DB '%s''%s''', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02KEGNLNML@?0?5@
CONST	SEGMENT
??_C@_02KEGNLNML@?0?5@ DB ', ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BBKEAIF@?$DP?$DP?$DP@
CONST	SEGMENT
??_C@_03BBKEAIF@?$DP?$DP?$DP@ DB '???', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04JFAOCLML@?5?5?$HL?5@
CONST	SEGMENT
??_C@_04JFAOCLML@?5?5?$HL?5@ DB '  { ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BDDHJGDD@?$CFs?50x?$CF08X?5?$CI?$CFd?5tabs?$CJ?$CFs@
CONST	SEGMENT
??_C@_0BG@BDDHJGDD@?$CFs?50x?$CF08X?5?$CI?$CFd?5tabs?$CJ?$CFs@ DB '%s 0x%'
	DB	'08X (%d tabs)%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MDILNFHC@?5?$CKInactive?$CK@
CONST	SEGMENT
??_C@_0M@MDILNFHC@?5?$CKInactive?$CK@ DB ' *Inactive*', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LEAFLIMO@Key?50x?$CF08X?5Value?5?$HL?5i?3?5?$CFd?5?$HN@
CONST	SEGMENT
??_C@_0BL@LEAFLIMO@Key?50x?$CF08X?5Value?5?$HL?5i?3?5?$CFd?5?$HN@ DB 'Key'
	DB	' 0x%08X Value { i: %d }', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EFAEFOHB@?$CFs?3?5?$CFd?5entries?0?5?$CFd?5bytes@
CONST	SEGMENT
??_C@_0BJ@EFAEFOHB@?$CFs?3?5?$CFd?5entries?0?5?$CFd?5bytes@ DB '%s: %d en'
	DB	'tries, %d bytes', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@EHEDNDHJ@UV?3?5?$CI?$CF?43f?0?$CF?43f?$CJ?9?$DO?$CI?$CF?43f?0?$CF?43f?$CJ@
CONST	SEGMENT
??_C@_0BN@EHEDNDHJ@UV?3?5?$CI?$CF?43f?0?$CF?43f?$CJ?9?$DO?$CI?$CF?43f?0?$CF?43f?$CJ@ DB 'U'
	DB	'V: (%.3f,%.3f)->(%.3f,%.3f)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BCFBHCGJ@Pos?3?5?$CI?$CF?42f?0?$CF?42f?$CJ?9?$DO?$CI?$CF?42f?0?$CF?42f?$CJ@
CONST	SEGMENT
??_C@_0BO@BCFBHCGJ@Pos?3?5?$CI?$CF?42f?0?$CF?42f?$CJ?9?$DO?$CI?$CF?42f?0?$CF?42f?$CJ@ DB 'P'
	DB	'os: (%.2f,%.2f)->(%.2f,%.2f)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JLIDDFIB@AdvanceX?3?5?$CF?41f@
CONST	SEGMENT
??_C@_0P@JLIDDFIB@AdvanceX?3?5?$CF?41f@ DB 'AdvanceX: %.1f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GDBOFNKK@Visible?3?5?$CFd@
CONST	SEGMENT
??_C@_0M@GDBOFNKK@Visible?3?5?$CFd@ DB 'Visible: %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JMLDGIFC@Codepoint?3?5U?$CL?$CF04X@
CONST	SEGMENT
??_C@_0BC@JMLDGIFC@Codepoint?3?5U?$CL?$CF04X@ DB 'Codepoint: U+%04X', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KIECHKHD@U?$CL?$CF04X?4?4U?$CL?$CF04X?5?$CI?$CFd?5?$CFs?$CJ@
CONST	SEGMENT
??_C@_0BH@KIECHKHD@U?$CL?$CF04X?4?4U?$CL?$CF04X?5?$CI?$CFd?5?$CFs?$CJ@ DB 'U'
	DB	'+%04X..U+%04X (%d %s)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05OIOMJNBL@glyph@
CONST	SEGMENT
??_C@_05OIOMJNBL@glyph@ DB 'glyph', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06IOJPAPEE@glyphs@
CONST	SEGMENT
??_C@_06IOJPAPEE@glyphs@ DB 'glyphs', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06EBCCDGNI@Glyphs@
CONST	SEGMENT
??_C@_06EBCCDGNI@Glyphs@ DB 'Glyphs', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NEAHLNMH@Glyphs?5?$CI?$CFd?$CJ@
CONST	SEGMENT
??_C@_0M@NEAHLNMH@Glyphs?5?$CI?$CFd?$CJ@ DB 'Glyphs (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@EOFKACMP@Input?5?$CFd?3?5?8?$CFs?8?0?5Oversample?3?5?$CI?$CFd@
CONST	SEGMENT
??_C@_0EJ@EOFKACMP@Input?5?$CFd?3?5?8?$CFs?8?0?5Oversample?3?5?$CI?$CFd@ DB 'I'
	DB	'nput %d: ''%s'', Oversample: (%d,%d), PixelSnapH: %d, Offset:'
	DB	' (%.1f,%.1f)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@LLADJGCM@Texture?5Area?3?5about?5?$CFd?5px?5?$HO?$CFdx?$CF@
CONST	SEGMENT
??_C@_0CE@LLADJGCM@Texture?5Area?3?5about?5?$CFd?5px?5?$HO?$CFdx?$CF@ DB 'T'
	DB	'exture Area: about %d px ~%dx%d px', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@FAJAAGEH@Ellipsis?5character?3?5?8?$CFs?8?5?$CIU?$CL?$CF04@
CONST	SEGMENT
??_C@_0CC@FAJAAGEH@Ellipsis?5character?3?5?8?$CFs?8?5?$CIU?$CL?$CF04@ DB 'E'
	DB	'llipsis character: ''%s'' (U+%04X)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@FDGLEGDM@Fallback?5character?3?5?8?$CFs?8?5?$CIU?$CL?$CF04@
CONST	SEGMENT
??_C@_0CC@FDGLEGDM@Fallback?5character?3?5?8?$CFs?8?5?$CIU?$CL?$CF04@ DB 'F'
	DB	'allback character: ''%s'' (U+%04X)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@FJCMKHHK@Ascent?3?5?$CFf?0?5Descent?3?5?$CFf?0?5Height@
CONST	SEGMENT
??_C@_0CE@FJCMKHHK@Ascent?3?5?$CFf?0?5Descent?3?5?$CFf?0?5Height@ DB 'Asc'
	DB	'ent: %f, Descent: %f, Height: %f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BIM@BPPJLJKD@Note?5than?5the?5default?5embedded?5@
CONST	SEGMENT
??_C@_0BIM@BPPJLJKD@Note?5than?5the?5default?5embedded?5@ DB 'Note than t'
	DB	'he default embedded font is NOT meant to be scaled.', 0aH, 0aH
	DB	'Font are currently rendered into bitmaps at a given size at t'
	DB	'he time of building the atlas. You may oversample them to get'
	DB	' some flexibility with scaling. You can also render at multip'
	DB	'le sizes and select which one to use at runtime.', 0aH, 0aH, '('
	DB	'Glimmer of hope: the atlas system will be rewritten in the fu'
	DB	'ture to make scaling more flexible.)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HAJGHBLA@Font?5scale@
CONST	SEGMENT
??_C@_0L@HAJGHBLA@Font?5scale@ DB 'Font scale', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04GGBPDDBN@?$CF?41f@
CONST	SEGMENT
??_C@_04GGBPDDBN@?$CF?41f@ DB '%.1f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@HCLJNHNJ@The?5quick?5brown?5fox?5jumps?5over?5@
CONST	SEGMENT
??_C@_0CM@HCLJNHNJ@The?5quick?5brown?5fox?5jumps?5over?5@ DB 'The quick b'
	DB	'rown fox jumps over the lazy dog', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HCLAAKJM@Set?5as?5default@
CONST	SEGMENT
??_C@_0P@HCLAAKJM@Set?5as?5default@ DB 'Set as default', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@IFCNIJMP@Font?3?5?$CC?$CFs?$CC?6?$CF?42f?5px?0?5?$CFd?5glyphs?0?5@
CONST	SEGMENT
??_C@_0CK@IFCNIJMP@Font?3?5?$CC?$CFs?$CC?6?$CF?42f?5px?0?5?$CFd?5glyphs?0?5@ DB 'F'
	DB	'ont: "%s"', 0aH, '%.2f px, %d glyphs, %d file(s)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@NHFPKPKM@?$AAs?$AAh?$AAo?$AAw?$AA_?$AAm?$AAe?$AAs?$AAh?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAs?$AAh@
CONST	SEGMENT
??_C@_1CO@NHFPKPKM@?$AAs?$AAh?$AAo?$AAw?$AA_?$AAm?$AAe?$AAs?$AAh?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAs?$AAh@ DB 's'
	DB	00H, 'h', 00H, 'o', 00H, 'w', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	's', 00H, 'h', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 's'
	DB	00H, 'h', 00H, 'o', 00H, 'w', 00H, '_', 00H, 'a', 00H, 'a', 00H
	DB	'b', 00H, 'b', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU3@PEBUImDrawCmd@@_N3@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU3@PEBUImDrawCmd@@_N3@Z@4JA DD 02cb8H ; `ImGui::DebugNodeDrawCmdShowMeshAndBoundingBox'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DG@MPIFBGBG@?$CFs?5?$CF04d?3?5pos?5?$CI?$CF8?42f?0?$CF8?42f?$CJ?0?5uv?5@
CONST	SEGMENT
??_C@_0DG@MPIFBGBG@?$CFs?5?$CF04d?3?5pos?5?$CI?$CF8?42f?0?$CF8?42f?$CJ?0?5uv?5@ DB '%'
	DB	's %04d: pos (%8.2f,%8.2f), uv (%.6f,%.6f), col %08X', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05IFKLLJBC@?5?5?5?5?5@
CONST	SEGMENT
??_C@_05IFKLLJBC@?5?5?5?5?5@ DB '     ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05HCFPDLGJ@Vert?3@
CONST	SEGMENT
??_C@_05HCFPDLGJ@Vert?3@ DB 'Vert:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@EGAMBHDK@Mesh?3?5ElemCount?3?5?$CFd?0?5VtxOffset?3@
CONST	SEGMENT
??_C@_0EE@EGAMBHDK@Mesh?3?5ElemCount?3?5?$CFd?0?5VtxOffset?3@ DB 'Mesh: E'
	DB	'lemCount: %d, VtxOffset: +%d, IdxOffset: +%d, Area: ~%0.f px', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@FAPEKKJB@DrawCmd?3?$CF5d?5tris?0?5Tex?50x?$CFp?0?5Cli@
CONST	SEGMENT
??_C@_0EB@FAPEKKJB@DrawCmd?3?$CF5d?5tris?0?5Tex?50x?$CFp?0?5Cli@ DB 'Draw'
	DB	'Cmd:%5d tris, Tex 0x%p, ClipRect (%4.0f,%4.0f)-(%4.0f,%4.0f)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FDNBBNBF@Callback?5?$CFp?0?5user_data?5?$CFp@
CONST	SEGMENT
??_C@_0BK@FDNBBNBF@Callback?5?$CFp?0?5user_data?5?$CFp@ DB 'Callback %p, '
	DB	'user_data %p', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@LNIIFBMO@Warning?3?5owning?5Window?5is?5inact@
CONST	SEGMENT
??_C@_0EJ@LNIIFBMO@Warning?3?5owning?5Window?5is?5inact@ DB 'Warning: own'
	DB	'ing Window is inactive. This DrawList is not being rendered!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LDCFEMCB@CURRENTLY?5APPENDING@
CONST	SEGMENT
??_C@_0BE@LDCFEMCB@CURRENTLY?5APPENDING@ DB 'CURRENTLY APPENDING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@IMBENNLG@?$CFs?3?5?8?$CFs?8?5?$CFd?5vtx?0?5?$CFd?5indices?0?5?$CFd@
CONST	SEGMENT
??_C@_0CF@IMBENNLG@?$CFs?3?5?8?$CFs?8?5?$CFd?5vtx?0?5?$CFd?5indices?0?5?$CFd@ DB '%'
	DB	's: ''%s'' %d vtx, %d indices, %d cmds', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@CPAFBJNN@Column?5?$CF02d?3?5OffsetNorm?5?$CF?43f?5?$CI?$DN@
CONST	SEGMENT
??_C@_0CJ@CPAFBJNN@Column?5?$CF02d?3?5OffsetNorm?5?$CF?43f?5?$CI?$DN@ DB 'C'
	DB	'olumn %02d: OffsetNorm %.3f (= %.1f px)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@PKFCLBKA@Width?3?5?$CF?41f?5?$CIMinX?3?5?$CF?41f?0?5MaxX?3?5@
CONST	SEGMENT
??_C@_0CF@PKFCLBKA@Width?3?5?$CF?41f?5?$CIMinX?3?5?$CF?41f?0?5MaxX?3?5@ DB 'W'
	DB	'idth: %.1f (MinX: %.1f, MaxX: %.1f)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@LMOAIACO@Columns?5Id?3?50x?$CF08X?0?5Count?3?5?$CFd?0?5@
CONST	SEGMENT
??_C@_0CN@LMOAIACO@Columns?5Id?3?50x?$CF08X?0?5Count?3?5?$CFd?0?5@ DB 'Co'
	DB	'lumns Id: 0x%08X, Count: %d, Flags: 0x%04X', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KCJLBEBN@Atlas?5texture@
CONST	SEGMENT
??_C@_0O@KCJLBEBN@Atlas?5texture@ DB 'Atlas texture', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@JPEJHLJM@Atlas?5texture?5?$CI?$CFdx?$CFd?5pixels?$CJ@
CONST	SEGMENT
??_C@_0BN@JPEJHLJM@Atlas?5texture?5?$CI?$CFdx?$CFd?5pixels?$CJ@ DB 'Atlas'
	DB	' texture (%dx%d pixels)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd@ DB '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HGGGEMAP@NavWindowingTarget?3?5?8?$CFs?8@
CONST	SEGMENT
??_C@_0BJ@HGGGEMAP@NavWindowingTarget?3?5?8?$CFs?8@ DB 'NavWindowingTarge'
	DB	't: ''%s''', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GGAKOFG@NavFocusScopeId?5?$DN?50x?$CF08X@
CONST	SEGMENT
??_C@_0BJ@GGAKOFG@NavFocusScopeId?5?$DN?50x?$CF08X@ DB 'NavFocusScopeId ='
	DB	' 0x%08X', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@PBLGJJAI@NavDisableHighlight?3?5?$CFd?0?5NavDis@
CONST	SEGMENT
??_C@_0DC@PBLGJJAI@NavDisableHighlight?3?5?$CFd?0?5NavDis@ DB 'NavDisable'
	DB	'Highlight: %d, NavDisableMouseHover: %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@FMBJOEO@NavActivateId?3?50x?$CF08X?0?5NavInput@
CONST	SEGMENT
??_C@_0CK@FMBJOEO@NavActivateId?3?50x?$CF08X?0?5NavInput@ DB 'NavActivate'
	DB	'Id: 0x%08X, NavInputId: 0x%08X', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PADIALFI@NavActive?3?5?$CFd?0?5NavVisible?3?5?$CFd@
CONST	SEGMENT
??_C@_0BO@PADIALFI@NavActive?3?5?$CFd?0?5NavVisible?3?5?$CFd@ DB 'NavActi'
	DB	've: %d, NavVisible: %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HIKDFBG@NavInputSource?3?5?$CFs@
CONST	SEGMENT
??_C@_0BD@HIKDFBG@NavInputSource?3?5?$CFs@ DB 'NavInputSource: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KFFINKHC@NavId?3?50x?$CF08X?0?5NavLayer?3?5?$CFd@
CONST	SEGMENT
??_C@_0BM@KFFINKHC@NavId?3?50x?$CF08X?0?5NavLayer?3?5?$CFd@ DB 'NavId: 0x'
	DB	'%08X, NavLayer: %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KJPDENCF@NavWindow?3?5?8?$CFs?8@
CONST	SEGMENT
??_C@_0BA@KJPDENCF@NavWindow?3?5?8?$CFs?8@ DB 'NavWindow: ''%s''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LPFJCNIB@NAV?0FOCUS@
CONST	SEGMENT
??_C@_09LPFJCNIB@NAV?0FOCUS@ DB 'NAV,FOCUS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@OPOHHHAC@DragDrop?3?5?$CFd?0?5SourceId?5?$DN?50x?$CF08X@
CONST	SEGMENT
??_C@_0DJ@OPOHHHAC@DragDrop?3?5?$CFd?0?5SourceId?5?$DN?50x?$CF08X@ DB 'Dr'
	DB	'agDrop: %d, SourceId = 0x%08X, Payload "%s" (%d bytes)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@FAAGHPBL@HoveredId?3?50x?$CF08X?10x?$CF08X?5?$CI?$CF?42f?5@
CONST	SEGMENT
??_C@_0DG@FAAGHPBL@HoveredId?3?50x?$CF08X?10x?$CF08X?5?$CI?$CF?42f?5@ DB 'H'
	DB	'overedId: 0x%08X/0x%08X (%.2f sec), AllowOverlap: %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@NGKPCOLK@ActiveIdUsing?3?5Wheel?3?5?$CFd?0?5NavDi@
CONST	SEGMENT
??_C@_0EP@NGKPCOLK@ActiveIdUsing?3?5Wheel?3?5?$CFd?0?5NavDi@ DB 'ActiveId'
	DB	'Using: Wheel: %d, NavDirMask: %X, NavInputMask: %X, KeyInputM'
	DB	'ask: %llX', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CPEAOPEJ@ActiveIdWindow?3?5?8?$CFs?8@
CONST	SEGMENT
??_C@_0BF@CPEAOPEJ@ActiveIdWindow?3?5?8?$CFs?8@ DB 'ActiveIdWindow: ''%s'''
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@PEJDHKLE@ActiveId?3?50x?$CF08X?10x?$CF08X?5?$CI?$CF?42f?5s@
CONST	SEGMENT
??_C@_0EB@PEJDHKLE@ActiveId?3?50x?$CF08X?10x?$CF08X?5?$CI?$CF?42f?5s@ DB 'A'
	DB	'ctiveId: 0x%08X/0x%08X (%.2f sec), AllowOverlap: %d, Source: '
	DB	'%s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_05OOOHNEPI@ITEMS@
CONST	SEGMENT
??_C@_05OOOHNEPI@ITEMS@ DB 'ITEMS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HCKEDLME@MovingWindow?3?5?8?$CFs?8@
CONST	SEGMENT
??_C@_0BD@HCKEDLME@MovingWindow?3?5?8?$CFs?8@ DB 'MovingWindow: ''%s''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@OOIEDAD@HoveredWindowUnderMovingWindow?3@
CONST	SEGMENT
??_C@_0CF@OOIEDAD@HoveredWindowUnderMovingWindow?3@ DB 'HoveredWindowUnde'
	DB	'rMovingWindow: ''%s''', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GFBMGONH@HoveredWindow?9?$DORoot?3?5?8?$CFs?8@
CONST	SEGMENT
??_C@_0BK@GFBMGONH@HoveredWindow?9?$DORoot?3?5?8?$CFs?8@ DB 'HoveredWindo'
	DB	'w->Root: ''%s''', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NBGIHPGN@HoveredWindow?3?5?8?$CFs?8@
CONST	SEGMENT
??_C@_0BE@NBGIHPGN@HoveredWindow?3?5?8?$CFs?8@ DB 'HoveredWindow: ''%s''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09OOMCPLIM@WINDOWING@
CONST	SEGMENT
??_C@_09OOMCPLIM@WINDOWING@ DB 'WINDOWING', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09HLEDPOBH@Clipboard@
CONST	SEGMENT
??_C@_09HLEDPOBH@Clipboard@ DB 'Clipboard', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JFAAHAIK@Nav@
CONST	SEGMENT
??_C@_03JFAAHAIK@Nav@ DB 'Nav', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07FCEHOHKC@Gamepad@
CONST	SEGMENT
??_C@_07FCEHOHKC@Gamepad@ DB 'Gamepad', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08CPOKIBJK@Keyboard@
CONST	SEGMENT
??_C@_08CPOKIBJK@Keyboard@ DB 'Keyboard', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PEEFLODH@Mouse@
CONST	SEGMENT
??_C@_05PEEFLODH@Mouse@ DB 'Mouse', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04OHJIHAFH@None@
CONST	SEGMENT
??_C@_04OHJIHAFH@None@ DB 'None', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DKNCHHLP@Internal?5state@
CONST	SEGMENT
??_C@_0P@DKNCHHLP@Internal?5state@ DB 'Internal state', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05FJAOFNGD@?$CD?$CDIni@
CONST	SEGMENT
??_C@_05FJAOFNGD@?$CD?$CDIni@ DB '##Ini', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IEPJFGMP@SettingsIniData@
CONST	SEGMENT
??_C@_0BA@IEPJFGMP@SettingsIniData@ DB 'SettingsIniData', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@MPNDIPDD@Settings?5unpacked?5data?5?$CI?4ini?$CJ?3?5@
CONST	SEGMENT
??_C@_0CI@MPNDIPDD@Settings?5unpacked?5data?5?$CI?4ini?$CJ?3?5@ DB 'Setti'
	DB	'ngs unpacked data (.ini): %d bytes', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NAODIHNN@SettingsTables@
CONST	SEGMENT
??_C@_0P@NAODIHNN@SettingsTables@ DB 'SettingsTables', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@GODOBOJJ@Settings?5packed?5data?3?5Tables?3?5?$CF@
CONST	SEGMENT
??_C@_0CH@GODOBOJJ@Settings?5packed?5data?3?5Tables?3?5?$CF@ DB 'Settings'
	DB	' packed data: Tables: %d bytes', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GOMGONFN@SettingsWindows@
CONST	SEGMENT
??_C@_0BA@GOMGONFN@SettingsWindows@ DB 'SettingsWindows', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@CKIDLOMN@Settings?5packed?5data?3?5Windows?3?5@
CONST	SEGMENT
??_C@_0CI@CKIDLOMN@Settings?5packed?5data?3?5Windows?3?5@ DB 'Settings pa'
	DB	'cked data: Windows: %d bytes', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NEINIHH@SettingsHandlers@
CONST	SEGMENT
??_C@_0BB@NEINIHH@SettingsHandlers@ DB 'SettingsHandlers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PGENAEOL@Settings?5handlers?3?5?$CI?$CFd?$CJ@
CONST	SEGMENT
??_C@_0BI@PGENAEOL@Settings?5handlers?3?5?$CI?$CFd?$CJ@ DB 'Settings hand'
	DB	'lers: (%d)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KCGHKNOH@SettingsDirtyTimer?5?$CF?42f@
CONST	SEGMENT
??_C@_0BI@KCGHKNOH@SettingsDirtyTimer?5?$CF?42f@ DB 'SettingsDirtyTimer %'
	DB	'.2f', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_06CBHGEMFM@?$DMNULL?$DO@
CONST	SEGMENT
??_C@_06CBHGEMFM@?$DMNULL?$DO@ DB '<NULL>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OEDFLLKD@?$CC?$CFs?$CC@
CONST	SEGMENT
??_C@_04OEDFLLKD@?$CC?$CFs?$CC@ DB '"%s"', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PMPOLMLD@Save?5to?5disk@
CONST	SEGMENT
??_C@_0N@PMPOLMLD@Save?5to?5disk@ DB 'Save to disk', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BGFPLLLP@Save?5to?5memory@
CONST	SEGMENT
??_C@_0P@BGFPLLLP@Save?5to?5memory@ DB 'Save to memory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MDNHABIA@Clear@
CONST	SEGMENT
??_C@_05MDNHABIA@Clear@ DB 'Clear', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08EEOHOBEO@Settings@
CONST	SEGMENT
??_C@_08EEOHOBEO@Settings@ DB 'Settings', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05ENDNDI@Fonts@
CONST	SEGMENT
??_C@_05ENDNDI@Fonts@ DB 'Fonts', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IBDLAPEA@Fonts?5?$CI?$CFd?$CJ@
CONST	SEGMENT
??_C@_0L@IBDLAPEA@Fonts?5?$CI?$CFd?$CJ@ DB 'Fonts (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06KOKNHOLC@Tables@
CONST	SEGMENT
??_C@_06KOKNHOLC@Tables@ DB 'Tables', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GKKKBBGH@Tables?5?$CI?$CFd?$CJ@
CONST	SEGMENT
??_C@_0M@GKKKBBGH@Tables?5?$CI?$CFd?$CJ@ DB 'Tables (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06PAFCDPCC@TabBar@
CONST	SEGMENT
??_C@_06PAFCDPCC@TabBar@ DB 'TabBar', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NBICDJOO@TabBars@
CONST	SEGMENT
??_C@_07NBICDJOO@TabBars@ DB 'TabBars', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JLIGAOM@Tab?5Bars?5?$CI?$CFd?$CJ@
CONST	SEGMENT
??_C@_0O@JLIGAOM@Tab?5Bars?5?$CI?$CFd?$CJ@ DB 'Tab Bars (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FCBKAHPI@PopupID?3?5?$CF08x?0?5Window?3?5?8?$CFs?8?$CFs?$CFs@
CONST	SEGMENT
??_C@_0CA@FCBKAHPI@PopupID?3?5?$CF08x?0?5Window?3?5?8?$CFs?8?$CFs?$CFs@ DB 'P'
	DB	'opupID: %08x, Window: ''%s''%s%s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04HIBGFPH@NULL@
CONST	SEGMENT
??_C@_04HIBGFPH@NULL@ DB 'NULL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FFCBFAEB@?5ChildWindow@
CONST	SEGMENT
??_C@_0N@FFCBFAEB@?5ChildWindow@ DB ' ChildWindow', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CMJPHOMG@?5ChildMenu@
CONST	SEGMENT
??_C@_0L@CMJPHOMG@?5ChildMenu@ DB ' ChildMenu', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06ENDEIGLN@Popups@
CONST	SEGMENT
??_C@_06ENDEIGLN@Popups@ DB 'Popups', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CMLJJLKO@Popups?5?$CI?$CFd?$CJ@
CONST	SEGMENT
??_C@_0M@CMLJJLKO@Popups?5?$CI?$CFd?$CJ@ DB 'Popups (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GPOHHJPA@Viewports@
CONST	SEGMENT
??_C@_09GPOHHJPA@Viewports@ DB 'Viewports', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HKKCMMOO@Viewports?5?$CI?$CFd?$CJ@
CONST	SEGMENT
??_C@_0P@HKKCMMOO@Viewports?5?$CI?$CFd?$CJ@ DB 'Viewports (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08IJNCDCKF@DrawList@
CONST	SEGMENT
??_C@_08IJNCDCKF@DrawList@ DB 'DrawList', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09KCCHKPGA@DrawLists@
CONST	SEGMENT
??_C@_09KCCHKPGA@DrawLists@ DB 'DrawLists', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EHGADCPI@DrawLists?5?$CI?$CFd?$CJ@
CONST	SEGMENT
??_C@_0P@EHGADCPI@DrawLists?5?$CI?$CFd?$CJ@ DB 'DrawLists (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07LDLFNPGN@Windows@
CONST	SEGMENT
??_C@_07LDLFNPGN@Windows@ DB 'Windows', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@IFLDIHOJ@?$CI?$CF6?41f?0?$CF6?41f?$CJ?5?$CI?$CF6?41f?0?$CF6?41f?$CJ?5Siz@
CONST	SEGMENT
??_C@_0DJ@IFLDIHOJ@?$CI?$CF6?41f?0?$CF6?41f?$CJ?5?$CI?$CF6?41f?0?$CF6?41f?$CJ?5Siz@ DB '('
	DB	'%6.1f,%6.1f) (%6.1f,%6.1f) Size (%6.1f,%6.1f) Col %d %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@PGABKCAC@Table?50x?$CF08X?5?$CI?$CFd?5columns?0?5in?5?8?$CF@
CONST	SEGMENT
??_C@_0CD@PGABKCAC@Table?50x?$CF08X?5?$CI?$CFd?5columns?0?5in?5?8?$CF@ DB 'T'
	DB	'able 0x%08X (%d columns, in ''%s'')', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CCENNJPN@?$CD?$CDshow_table_rects_type@
CONST	SEGMENT
??_C@_0BI@CCENNJPN@?$CD?$CDshow_table_rects_type@ DB '##show_table_rects_'
	DB	'type', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GINBNIDO@Show?5tables?5rectangles@
CONST	SEGMENT
??_C@_0BH@GINBNIDO@Show?5tables?5rectangles@ DB 'Show tables rectangles', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@GCNMPAKG@Show?5ImDrawCmd?5bounding?5boxes?5w@
CONST	SEGMENT
??_C@_0CM@GCNMPAKG@Show?5ImDrawCmd?5bounding?5boxes?5w@ DB 'Show ImDrawCm'
	DB	'd bounding boxes when hovering', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@NLEJJGFA@Show?5ImDrawCmd?5mesh?5when?5hoveri@
CONST	SEGMENT
??_C@_0CC@NLEJJGFA@Show?5ImDrawCmd?5mesh?5when?5hoveri@ DB 'Show ImDrawCm'
	DB	'd mesh when hovering', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@MPAIEFII@?$CI?$CF6?41f?0?$CF6?41f?$CJ?5?$CI?$CF6?41f?0?$CF6?41f?$CJ?5Siz@
CONST	SEGMENT
??_C@_0DC@MPAIEFII@?$CI?$CF6?41f?0?$CF6?41f?$CJ?5?$CI?$CF6?41f?0?$CF6?41f?$CJ?5Siz@ DB '('
	DB	'%6.1f,%6.1f) (%6.1f,%6.1f) Size (%6.1f,%6.1f) %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05DMJEEKMI@?8?$CFs?8?3@
CONST	SEGMENT
??_C@_05DMJEEKMI@?8?$CFs?8?3@ DB '''%s'':', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@OFHLDDCB@?$CD?$CDshow_windows_rect_type@
CONST	SEGMENT
??_C@_0BJ@OFHLDDCB@?$CD?$CDshow_windows_rect_type@ DB '##show_windows_rec'
	DB	't_type', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DIKJGFFM@Show?5windows?5rectangles@
CONST	SEGMENT
??_C@_0BI@DIKJGFFM@Show?5windows?5rectangles@ DB 'Show windows rectangles'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HJBAEIMP@Show?5windows?5begin?5order@
CONST	SEGMENT
??_C@_0BJ@HJBAEIMP@Show?5windows?5begin?5order@ DB 'Show windows begin or'
	DB	'der', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0IF@BGKDCLHL@Will?5call?5the?5IM_DEBUG_BREAK?$CI?$CJ?5@
CONST	SEGMENT
??_C@_0IF@BGKDCLHL@Will?5call?5the?5IM_DEBUG_BREAK?$CI?$CJ?5@ DB 'Will ca'
	DB	'll the IM_DEBUG_BREAK() macro to break in debugger.', 0aH, 'W'
	DB	'arning: If you don''t have a debugger attached, this will pro'
	DB	'bably crash.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BDKBPKIH@Item?5Picker?4?4@
CONST	SEGMENT
??_C@_0O@BDKBPKIH@Item?5Picker?4?4@ DB 'Item Picker..', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05OENKALAF@Tools@
CONST	SEGMENT
??_C@_05OENKALAF@Tools@ DB 'Tools', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NNGOPODG@ColumnsContentUnfrozen@
CONST	SEGMENT
??_C@_0BH@NNGOPODG@ColumnsContentUnfrozen@ DB 'ColumnsContentUnfrozen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HAPEHPAK@ColumnsContentFrozen@
CONST	SEGMENT
??_C@_0BF@HAPEHPAK@ColumnsContentFrozen@ DB 'ColumnsContentFrozen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FAEPMJDA@ColumnsContentHeadersIdeal@
CONST	SEGMENT
??_C@_0BL@FAEPMJDA@ColumnsContentHeadersIdeal@ DB 'ColumnsContentHeadersI'
	DB	'deal', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@BLBFMAOD@ColumnsContentHeadersUsed@
CONST	SEGMENT
??_C@_0BK@BLBFMAOD@ColumnsContentHeadersUsed@ DB 'ColumnsContentHeadersUs'
	DB	'ed', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JACIJDNM@ColumnsClipRect@
CONST	SEGMENT
??_C@_0BA@JACIJDNM@ColumnsClipRect@ DB 'ColumnsClipRect', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ODEDLNCO@ColumnsWorkRect@
CONST	SEGMENT
??_C@_0BA@ODEDLNCO@ColumnsWorkRect@ DB 'ColumnsWorkRect', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CDCMPDKG@ColumnsRect@
CONST	SEGMENT
??_C@_0M@CDCMPDKG@ColumnsRect@ DB 'ColumnsRect', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PAHDAJDC@BackgroundClipRect@
CONST	SEGMENT
??_C@_0BD@PAHDAJDC@BackgroundClipRect@ DB 'BackgroundClipRect', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OPBPMFAC@HostClipRect@
CONST	SEGMENT
??_C@_0N@OPBPMFAC@HostClipRect@ DB 'HostClipRect', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NDBPEMLC@ContentRegionRect@
CONST	SEGMENT
??_C@_0BC@NDBPEMLC@ContentRegionRect@ DB 'ContentRegionRect', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FEPIKFED@ContentIdeal@
CONST	SEGMENT
??_C@_0N@FEPIKFED@ContentIdeal@ DB 'ContentIdeal', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07HLHPKMFI@Content@
CONST	SEGMENT
??_C@_07HLHPKMFI@Content@ DB 'Content', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08FACDBJHD@WorkRect@
CONST	SEGMENT
??_C@_08FACDBJHD@WorkRect@ DB 'WorkRect', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BNFMFEHO@InnerClipRect@
CONST	SEGMENT
??_C@_0O@BNFMFEHO@InnerClipRect@ DB 'InnerClipRect', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PPJHMOMF@InnerRect@
CONST	SEGMENT
??_C@_09PPJHMOMF@InnerRect@ DB 'InnerRect', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CJNOCIFN@OuterRectClipped@
CONST	SEGMENT
??_C@_0BB@CJNOCIFN@OuterRectClipped@ DB 'OuterRectClipped', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DBGHEPMN@OuterRect@
CONST	SEGMENT
??_C@_09DBGHEPMN@OuterRect@ DB 'OuterRect', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NBPNMJGC@?$CFd?5active?5allocations@
CONST	SEGMENT
??_C@_0BG@NBPNMJGC@?$CFd?5active?5allocations@ DB '%d active allocations', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OPGGNCEP@?$CFd?5active?5windows?5?$CI?$CFd?5visible?$CJ@
CONST	SEGMENT
??_C@_0BP@OPGGNCEP@?$CFd?5active?5windows?5?$CI?$CFd?5visible?$CJ@ DB '%d'
	DB	' active windows (%d visible)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@HHKODNBE@?$CFd?5vertices?0?5?$CFd?5indices?5?$CI?$CFd?5tri@
CONST	SEGMENT
??_C@_0CH@HHKODNBE@?$CFd?5vertices?0?5?$CFd?5indices?5?$CI?$CFd?5tri@ DB '%'
	DB	'd vertices, %d indices (%d triangles)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@EIPBEGMP@Application?5average?5?$CF?43f?5ms?1fra@
CONST	SEGMENT
??_C@_0CN@EIPBEGMP@Application?5average?5?$CF?43f?5ms?1fra@ DB 'Applicati'
	DB	'on average %.3f ms/frame (%.1f FPS)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NCHBJMJF@Dear?5ImGui?5?$CFs@
CONST	SEGMENT
??_C@_0O@NCHBJMJF@Dear?5ImGui?5?$CFs@ DB 'Dear ImGui %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@CNHCNFCK@Dear?5ImGui?5Metrics?1Debugger@
CONST	SEGMENT
??_C@_0BM@CNHCNFCK@Dear?5ImGui?5Metrics?1Debugger@ DB 'Dear ImGui Metrics'
	DB	'/Debugger', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03NAEMJKHE@?$CI?$DP?$CJ@
CONST	SEGMENT
??_C@_03NAEMJKHE@?$CI?$DP?$CJ@ DB '(?)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@MPBIDJHA@?$AAg?$AA?4?$AAV?$AAi?$AAe?$AAw?$AAp?$AAo?$AAr?$AAt?$AAs?$AA?4?$AAS?$AAi?$AAz@
CONST	SEGMENT
??_C@_1CM@MPBIDJHA@?$AAg?$AA?4?$AAV?$AAi?$AAe?$AAw?$AAp?$AAo?$AAr?$AAt?$AAs?$AA?4?$AAS?$AAi?$AAz@ DB 'g'
	DB	00H, '.', 00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, 'p', 00H
	DB	'o', 00H, 'r', 00H, 't', 00H, 's', 00H, '.', 00H, 'S', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'1', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??UpdateViewportsNewFrame@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??UpdateViewportsNewFrame@ImGui@@YAXXZ@4JA DD 029aeH ; `ImGui::UpdateViewportsNewFrame'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JAFHMCKE@Collapsed?$DN?$CFd?6@
CONST	SEGMENT
??_C@_0O@JAFHMCKE@Collapsed?$DN?$CFd?6@ DB 'Collapsed=%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CFANMDMP@Size?$DN?$CFd?0?$CFd?6@
CONST	SEGMENT
??_C@_0M@CFANMDMP@Size?$DN?$CFd?0?$CFd?6@ DB 'Size=%d,%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DDMADIHO@Pos?$DN?$CFd?0?$CFd?6@
CONST	SEGMENT
??_C@_0L@DDMADIHO@Pos?$DN?$CFd?0?$CFd?6@ DB 'Pos=%d,%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HNFDDBIF@?$FL?$CFs?$FN?$FL?$CFs?$FN?6@
CONST	SEGMENT
??_C@_09HNFDDBIF@?$FL?$CFs?$FN?$FL?$CFs?$FN?6@ DB '[%s][%s]', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@BLKMIOLK@?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AA?9?$AA?$DO?$AAI?$AAD?$AA?5?$AA?$DN?$AA?$DN@
CONST	SEGMENT
??_C@_1DG@BLKMIOLK@?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AA?9?$AA?$DO?$AAI?$AAD?$AA?5?$AA?$DN?$AA?$DN@ DB 's'
	DB	00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	's', 00H, '-', 00H, '>', 00H, 'I', 00H, 'D', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd', 00H
	DB	'o', 00H, 'w', 00H, '-', 00H, '>', 00H, 'I', 00H, 'D', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??WindowSettingsHandler_WriteAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAUImGuiTextBuffer@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??WindowSettingsHandler_WriteAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAUImGuiTextBuffer@@@Z@4JA DD 02979H ; `WindowSettingsHandler_WriteAll'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0N@IAKNMBB@Collapsed?$DN?$CFd@
CONST	SEGMENT
??_C@_0N@IAKNMBB@Collapsed?$DN?$CFd@ DB 'Collapsed=%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MPPKDMFA@Size?$DN?$CFi?0?$CFi@
CONST	SEGMENT
??_C@_0L@MPPKDMFA@Size?$DN?$CFi?0?$CFi@ DB 'Size=%i,%i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GOMOMIIP@Pos?$DN?$CFi?0?$CFi@
CONST	SEGMENT
??_C@_09GOMOMIIP@Pos?$DN?$CFi?0?$CFi@ DB 'Pos=%i,%i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02BKFDOEMK@wt@
CONST	SEGMENT
??_C@_02BKFDOEMK@wt@ DB 'wt', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??LoadIniSettingsFromMemory@ImGui@@YAXPEBD_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??LoadIniSettingsFromMemory@ImGui@@YAXPEBD_K@Z@4JA DD 028e9H ; `ImGui::LoadIniSettingsFromMemory'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02JDPG@rb@
CONST	SEGMENT
??_C@_02JDPG@rb@ DB 'rb', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03OIJOKPOL@?$CD?$CD?$CD@
CONST	SEGMENT
??_C@_03OIJOKPOL@?$CD?$CD?$CD@ DB '###', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@BLONNHPO@?$AAg?$AA?4?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AAW?$AAi?$AAn?$AAd?$AAo@
CONST	SEGMENT
??_C@_1DE@BLONNHPO@?$AAg?$AA?4?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AAW?$AAi?$AAn?$AAd?$AAo@ DB 'g'
	DB	00H, '.', 00H, 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, 's', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 's', 00H, '.', 00H, 'e', 00H, 'm', 00H
	DB	'p', 00H, 't', 00H, 'y', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??UpdateSettings@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??UpdateSettings@ImGui@@YAXXZ@4JA DD 0287bH ; `ImGui::UpdateSettings'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0O@CONALMON@Default?5Depth@
CONST	SEGMENT
??_C@_0O@CONALMON@Default?5Depth@ DB 'Default Depth', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CPOBJDKM@Log?5To?5Clipboard@
CONST	SEGMENT
??_C@_0BB@CPOBJDKM@Log?5To?5Clipboard@ DB 'Log To Clipboard', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KAEBEAHF@Log?5To?5File@
CONST	SEGMENT
??_C@_0M@KAEBEAHF@Log?5To?5File@ DB 'Log To File', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@COILDFG@Log?5To?5TTY@
CONST	SEGMENT
??_C@_0L@COILDFG@Log?5To?5TTY@ DB 'Log To TTY', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DMNDGOCF@LogButtons@
CONST	SEGMENT
??_C@_0L@DMNDGOCF@LogButtons@ DB 'LogButtons', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??LogFinish@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??LogFinish@ImGui@@YAXXZ@4JA DD 02829H	; `ImGui::LogFinish'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02BOGAIONP@ab@
CONST	SEGMENT
??_C@_02BOGAIONP@ab@ DB 'ab', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??LogToFile@ImGui@@YAXHPEBD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??LogToFile@ImGui@@YAXHPEBD@Z@4JA DD 02800H ; `ImGui::LogToFile'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CI@CDGOCLNI@?$AAg?$AA?4?$AAL?$AAo?$AAg?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAe?$AAm?$AAp@
CONST	SEGMENT
??_C@_1CI@CDGOCLNI@?$AAg?$AA?4?$AAL?$AAo?$AAg?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAe?$AAm?$AAp@ DB 'g'
	DB	00H, '.', 00H, 'L', 00H, 'o', 00H, 'g', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'e', 00H, 'm'
	DB	00H, 'p', 00H, 't', 00H, 'y', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@HOGBMEAE@?$AAg?$AA?4?$AAL?$AAo?$AAg?$AAF?$AAi?$AAl?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BO@HOGBMEAE@?$AAg?$AA?4?$AAL?$AAo?$AAg?$AAF?$AAi?$AAl?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'g'
	DB	00H, '.', 00H, 'L', 00H, 'o', 00H, 'g', 00H, 'F', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@DLAMPOKC@?$AAg?$AA?4?$AAL?$AAo?$AAg?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?5?$AA?$DN?$AA?$DN@
CONST	SEGMENT
??_C@_1CM@DLAMPOKC@?$AAg?$AA?4?$AAL?$AAo?$AAg?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?5?$AA?$DN?$AA?$DN@ DB 'g'
	DB	00H, '.', 00H, 'L', 00H, 'o', 00H, 'g', 00H, 'E', 00H, 'n', 00H
	DB	'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, 'f', 00H, 'a', 00H, 'l', 00H, 's', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??LogBegin@ImGui@@YAXW4ImGuiLogType@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??LogBegin@ImGui@@YAXW4ImGuiLogType@@H@Z@4JA DD 027dbH ; `ImGui::LogBegin'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_07LFDEMEGD@?$CF?$CKs?$CF?4?$CKs@
CONST	SEGMENT
??_C@_07LFDEMEGD@?$CF?$CKs?$CF?4?$CKs@ DB '%*s%.*s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02PCIJFNDE@?$AN?6@
CONST	SEGMENT
??_C@_02PCIJFNDE@?$AN?6@ DB 0dH, 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@LEPEHAFL@?$AAg?$AA?4?$AAD?$AAr?$AAa?$AAg?$AAD?$AAr?$AAo?$AAp?$AAW?$AAi?$AAt?$AAh?$AAi@
CONST	SEGMENT
??_C@_1CO@LEPEHAFL@?$AAg?$AA?4?$AAD?$AAr?$AAa?$AAg?$AAD?$AAr?$AAo?$AAp?$AAW?$AAi?$AAt?$AAh?$AAi@ DB 'g'
	DB	00H, '.', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'g', 00H, 'D', 00H
	DB	'r', 00H, 'o', 00H, 'p', 00H, 'W', 00H, 'i', 00H, 't', 00H, 'h'
	DB	00H, 'i', 00H, 'n', 00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H
	DB	'e', 00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??EndDragDropTarget@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??EndDragDropTarget@ImGui@@YAXXZ@4JA DD 0276aH ; `ImGui::EndDragDropTarget'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DK@OHFCBLGB@?$AAp?$AAa?$AAy?$AAl?$AAo?$AAa?$AAd?$AA?4?$AAD?$AAa?$AAt?$AAa?$AAF?$AAr?$AAa@
CONST	SEGMENT
??_C@_1DK@OHFCBLGB@?$AAp?$AAa?$AAy?$AAl?$AAo?$AAa?$AAd?$AA?4?$AAD?$AAa?$AAt?$AAa?$AAF?$AAr?$AAa@ DB 'p'
	DB	00H, 'a', 00H, 'y', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H
	DB	'.', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 'F', 00H, 'r'
	DB	00H, 'a', 00H, 'm', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'u', 00H
	DB	'n', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '-'
	DB	00H, '1', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z@4JA DD 0273eH ; `ImGui::AcceptDragDropPayload'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??BeginDragDropTarget@ImGui@@YA_NXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??BeginDragDropTarget@ImGui@@YA_NXZ@4JA DD 0271dH ; `ImGui::BeginDragDropTarget'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1EA@CHPNIKA@?$AAg?$AA?4?$AAD?$AAr?$AAa?$AAg?$AAD?$AAr?$AAo?$AAp?$AAW?$AAi?$AAt?$AAh?$AAi@
CONST	SEGMENT
??_C@_1EA@CHPNIKA@?$AAg?$AA?4?$AAD?$AAr?$AAa?$AAg?$AAD?$AAr?$AAo?$AAp?$AAW?$AAi?$AAt?$AAh?$AAi@ DB 'g'
	DB	00H, '.', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'g', 00H, 'D', 00H
	DB	'r', 00H, 'o', 00H, 'p', 00H, 'W', 00H, 'i', 00H, 't', 00H, 'h'
	DB	00H, 'i', 00H, 'n', 00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H
	DB	'e', 00H, 't', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??BeginDragDropTargetCustom@ImGui@@YA_NAEBUImRect@@I@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??BeginDragDropTargetCustom@ImGui@@YA_NAEBUImRect@@I@Z@4JA DD 02702H ; `ImGui::BeginDragDropTargetCustom'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CM@DLJODDMB@?$AAp?$AAa?$AAy?$AAl?$AAo?$AAa?$AAd?$AA?4?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAI@
CONST	SEGMENT
??_C@_1CM@DLJODDMB@?$AAp?$AAa?$AAy?$AAl?$AAo?$AAa?$AAd?$AA?4?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAI@ DB 'p'
	DB	00H, 'a', 00H, 'y', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H
	DB	'.', 00H, 'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 'I', 00H, 'd', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1GG@ONMAEHAO@?$AAc?$AAo?$AAn?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAI?$AAm?$AAG?$AAu?$AAi?$AAC?$AAo@
CONST	SEGMENT
??_C@_1GG@ONMAEHAO@?$AAc?$AAo?$AAn?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAI?$AAm?$AAG?$AAu?$AAi?$AAC?$AAo@ DB 'c'
	DB	00H, 'o', 00H, 'n', 00H, 'd', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u', 00H, 'i', 00H, 'C'
	DB	00H, 'o', 00H, 'n', 00H, 'd', 00H, '_', 00H, 'A', 00H, 'l', 00H
	DB	'w', 00H, 'a', 00H, 'y', 00H, 's', 00H, ' ', 00H, '|', 00H, '|'
	DB	00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'd', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u'
	DB	00H, 'i', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 'd', 00H, '_', 00H
	DB	'O', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HM@NCOAFGFM@?$AA?$CI?$AAd?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAd@
CONST	SEGMENT
??_C@_1HM@NCOAFGFM@?$AA?$CI?$AAd?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAd@ DB '('
	DB	00H, 'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' '
	DB	00H, 'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, '_', 00H, 's', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0'
	DB	00H, ')', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, '(', 00H
	DB	'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H
	DB	'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, '_', 00H, 's', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BAG@HHAODBGF@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAt?$AAy?$AAp?$AAe?$AA?$CJ?$AA?5?$AA?$DM?$AA?5@
CONST	SEGMENT
??_C@_1BAG@HHAODBGF@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAt?$AAy?$AAp?$AAe?$AA?$CJ?$AA?5?$AA?$DM?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'r', 00H, 'l', 00H, 'e', 00H, 'n', 00H, '(', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ')', 00H, ' ', 00H, '<'
	DB	00H, ' ', 00H, '(', 00H, '(', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	')', 00H, '(', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'o'
	DB	00H, 'f', 00H, '(', 00H, 'p', 00H, 'a', 00H, 'y', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, '.', 00H, 'D', 00H, 'a', 00H, 't'
	DB	00H, 'a', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ')', 00H
	DB	' ', 00H, '/', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e'
	DB	00H, 'o', 00H, 'f', 00H, '(', 00H, '*', 00H, '(', 00H, 'p', 00H
	DB	'a', 00H, 'y', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, '.'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 'T', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, ')', 00H, ')', 00H, ')', 00H, ')', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'P', 00H, 'a', 00H
	DB	'y', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, ' ', 00H, 't'
	DB	00H, 'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H, 'c', 00H, 'a', 00H
	DB	'n', 00H, ' ', 00H, 'b', 00H, 'e', 00H, ' ', 00H, 'a', 00H, 't'
	DB	00H, ' ', 00H, 'm', 00H, 'o', 00H, 's', 00H, 't', 00H, ' ', 00H
	DB	'3', 00H, '2', 00H, ' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, 'a', 00H, 'c', 00H, 't', 00H, 'e', 00H, 'r', 00H, 's', 00H
	DB	' ', 00H, 'l', 00H, 'o', 00H, 'n', 00H, 'g', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@PLNIIIKE@Payload?5type?5can?5be?5at?5most?532?5@
CONST	SEGMENT
??_C@_0CP@PLNIIIKE@Payload?5type?5can?5be?5at?5most?532?5@ DB 'Payload ty'
	DB	'pe can be at most 32 characters long', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@MGJHACMG@?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BE@MGJHACMG@?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 't'
	DB	00H, 'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H, '!', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SetDragDropPayload@ImGui@@YA_NPEBDPEBX_KH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetDragDropPayload@ImGui@@YA_NPEBDPEBX_KH@Z@4JA DD 026d7H ; `ImGui::SetDragDropPayload'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1HO@KPNGOBLC@?$AAg?$AA?4?$AAD?$AAr?$AAa?$AAg?$AAD?$AAr?$AAo?$AAp?$AAW?$AAi?$AAt?$AAh?$AAi@
CONST	SEGMENT
??_C@_1HO@KPNGOBLC@?$AAg?$AA?4?$AAD?$AAr?$AAa?$AAg?$AAD?$AAr?$AAo?$AAp?$AAW?$AAi?$AAt?$AAh?$AAi@ DB 'g'
	DB	00H, '.', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'g', 00H, 'D', 00H
	DB	'r', 00H, 'o', 00H, 'p', 00H, 'W', 00H, 'i', 00H, 't', 00H, 'h'
	DB	00H, 'i', 00H, 'n', 00H, 'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H
	DB	'c', 00H, 'e', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"'
	DB	00H, 'N', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'a', 00H, 'f', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'B'
	DB	00H, 'e', 00H, 'g', 00H, 'i', 00H, 'n', 00H, 'D', 00H, 'r', 00H
	DB	'a', 00H, 'g', 00H, 'D', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 'S'
	DB	00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '(', 00H
	DB	')', 00H, '?', 00H, '"', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@GALGOANB@Not?5after?5a?5BeginDragDropSource@
CONST	SEGMENT
??_C@_0CD@GALGOANB@Not?5after?5a?5BeginDragDropSource@ DB 'Not after a Be'
	DB	'ginDragDropSource()?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@NMCEOFEI@?$AAg?$AA?4?$AAD?$AAr?$AAa?$AAg?$AAD?$AAr?$AAo?$AAp?$AAA?$AAc?$AAt?$AAi?$AAv@
CONST	SEGMENT
??_C@_1CC@NMCEOFEI@?$AAg?$AA?4?$AAD?$AAr?$AAa?$AAg?$AAD?$AAr?$AAo?$AAp?$AAA?$AAc?$AAt?$AAi?$AAv@ DB 'g'
	DB	00H, '.', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'g', 00H, 'D', 00H
	DB	'r', 00H, 'o', 00H, 'p', 00H, 'A', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'v', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??EndDragDropSource@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??EndDragDropSource@ImGui@@YAXXZ@4JA DD 026c7H ; `ImGui::EndDragDropSource'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BO@PJLJNAI@?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA_?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BO@PJLJNAI@?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA_?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 's'
	DB	00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '_', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KMAIKFAM@?$CDSourceExtern@
CONST	SEGMENT
??_C@_0O@KMAIKFAM@?$CDSourceExtern@ DB '#SourceExtern', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??BeginDragDropSource@ImGui@@YA_NH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??BeginDragDropSource@ImGui@@YA_NH@Z@4JA DD 02657H ; `ImGui::BeginDragDropSource'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BE@EBHFKNCA@?$CD?$CD?$CDNavWindowingList@
CONST	SEGMENT
??_C@_0BE@EBHFKNCA@?$CD?$CD?$CDNavWindowingList@ DB '###NavWindowingList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@DBGGCEBB@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAi?$AAn?$AAg?$AAT@
CONST	SEGMENT
??_C@_1DE@DBGGCEBB@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAi?$AAn?$AAg?$AAT@ DB 'g'
	DB	00H, '.', 00H, 'N', 00H, 'a', 00H, 'v', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??NavUpdateWindowingOverlay@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??NavUpdateWindowingOverlay@ImGui@@YAXXZ@4JA DD 0261fH ; `ImGui::NavUpdateWindowingOverlay'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0L@JOJOIPFK@?$CIUntitled?$CJ@
CONST	SEGMENT
??_C@_0L@JOJOIPFK@?$CIUntitled?$CJ@ DB '(Untitled)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KDPNEDEH@?$CIMain?5menu?5bar?$CJ@
CONST	SEGMENT
??_C@_0BA@KDPNEDEH@?$CIMain?5menu?5bar?$CJ@ DB '(Main menu bar)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BKOLOJFE@?$CD?$CDMainMenuBar@
CONST	SEGMENT
??_C@_0O@BKOLOJFE@?$CD?$CDMainMenuBar@ DB '##MainMenuBar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NPLNEKJH@?$CIPopup?$CJ@
CONST	SEGMENT
??_C@_07NPLNEKJH@?$CIPopup?$CJ@ DB '(Popup)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@OIBCGJMF@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAi?$AAn?$AAg?$AAT@
CONST	SEGMENT
??_C@_1CK@OIBCGJMF@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAi?$AAn?$AAg?$AAT@ DB 'g'
	DB	00H, '.', 00H, 'N', 00H, 'a', 00H, 'v', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??NavUpdateWindowingHighlightWindow@@YAXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??NavUpdateWindowingHighlightWindow@@YAXH@Z@4JA DD 0256bH ; `NavUpdateWindowingHighlightWindow'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1EK@IMFCDJFP@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AAF?$AAo?$AAc?$AAu?$AAs?$AAO@
CONST	SEGMENT
??_C@_1EK@IMFCDJFP@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AAF?$AAo?$AAc?$AAu?$AAs?$AAO@ DB 'g'
	DB	00H, '.', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, 's', 00H, 'F', 00H, 'o', 00H, 'c', 00H, 'u', 00H, 's'
	DB	00H, 'O', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '[', 00H
	DB	'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, ']', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??FindWindowFocusIndex@ImGui@@YAHPEAUImGuiWindow@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??FindWindowFocusIndex@ImGui@@YAHPEAUImGuiWindow@@@Z@4JA DD 02559H ; `ImGui::FindWindowFocusIndex'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CA@PADPOC@?$AAm?$AAo?$AAv?$AAe?$AA_?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1CA@PADPOC@?$AAm?$AAo?$AAv?$AAe?$AA_?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'm'
	DB	00H, 'o', 00H, 'v', 00H, 'e', 00H, '_', 00H, 'f', 00H, 'l', 00H
	DB	'a', 00H, 'g', 00H, 's', 00H, ' ', 00H, '!', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??NavEndFrame@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??NavEndFrame@ImGui@@YAXXZ@4JA DD 0251bH	; `ImGui::NavEndFrame'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DM@EKPCIOHK@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1DM@EKPCIOHK@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB 'g'
	DB	00H, '.', 00H, 'N', 00H, 'a', 00H, 'v', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 'r', 00H, 'e', 00H, 's', 00H, 'u', 00H, 'l', 00H
	DB	't', 00H, '-', 00H, '>', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??NavUpdateMoveResult@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??NavUpdateMoveResult@ImGui@@YAXXZ@4JA DD 02491H ; `ImGui::NavUpdateMoveResult'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DO@NFHNJCFP@?$AA?$CB?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAS?$AAc?$AAo?$AAr?$AAi?$AAn?$AAg?$AAR?$AAe@
CONST	SEGMENT
??_C@_1DO@NFHNJCFP@?$AA?$CB?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAS?$AAc?$AAo?$AAr?$AAi?$AAn?$AAg?$AAR?$AAe@ DB '!'
	DB	00H, 'g', 00H, '.', 00H, 'N', 00H, 'a', 00H, 'v', 00H, 'S', 00H
	DB	'c', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'R'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, '.', 00H, 'I', 00H, 's', 00H
	DB	'I', 00H, 'n', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 't', 00H, 'e'
	DB	00H, 'd', 00H, '(', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1HC@ODAAGLGB@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAM?$AAo?$AAv?$AAe?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs@
CONST	SEGMENT
??_C@_1HC@ODAAGLGB@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAM?$AAo?$AAv?$AAe?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs@ DB 'g'
	DB	00H, '.', 00H, 'N', 00H, 'a', 00H, 'v', 00H, 'M', 00H, 'o', 00H
	DB	'v', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'q', 00H, 'u', 00H, 'e'
	DB	00H, 's', 00H, 't', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'w', 00H
	DB	'a', 00H, 'r', 00H, 'd', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u', 00H, 'i', 00H, 'N', 00H
	DB	'a', 00H, 'v', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'w', 00H, 'a'
	DB	00H, 'r', 00H, 'd', 00H, '_', 00H, 'F', 00H, 'o', 00H, 'r', 00H
	DB	'w', 00H, 'a', 00H, 'r', 00H, 'd', 00H, 'Q', 00H, 'u', 00H, 'e'
	DB	00H, 'u', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IG@KDKGHOJC@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAM?$AAo?$AAv?$AAe?$AAD?$AAi?$AAr?$AA?5?$AA?$CB?$AA?$DN@
CONST	SEGMENT
??_C@_1IG@KDKGHOJC@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAM?$AAo?$AAv?$AAe?$AAD?$AAi?$AAr?$AA?5?$AA?$CB?$AA?$DN@ DB 'g'
	DB	00H, '.', 00H, 'N', 00H, 'a', 00H, 'v', 00H, 'M', 00H, 'o', 00H
	DB	'v', 00H, 'e', 00H, 'D', 00H, 'i', 00H, 'r', 00H, ' ', 00H, '!'
	DB	00H, '=', 00H, ' ', 00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u', 00H
	DB	'i', 00H, 'D', 00H, 'i', 00H, 'r', 00H, '_', 00H, 'N', 00H, 'o'
	DB	00H, 'n', 00H, 'e', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H
	DB	'g', 00H, '.', 00H, 'N', 00H, 'a', 00H, 'v', 00H, 'M', 00H, 'o'
	DB	00H, 'v', 00H, 'e', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'p', 00H
	DB	'D', 00H, 'i', 00H, 'r', 00H, ' ', 00H, '!', 00H, '=', 00H, ' '
	DB	00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u', 00H, 'i', 00H, 'D', 00H
	DB	'i', 00H, 'r', 00H, '_', 00H, 'N', 00H, 'o', 00H, 'n', 00H, 'e'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@NJCLOIHM@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAe?$AAD?$AAo@
CONST	SEGMENT
??_C@_1EO@NJCLOIHM@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAe?$AAD?$AAo@ DB 'g'
	DB	00H, '.', 00H, 'N', 00H, 'a', 00H, 'v', 00H, 'A', 00H, 'c', 00H
	DB	't', 00H, 'i', 00H, 'v', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'D'
	DB	00H, 'o', 00H, 'w', 00H, 'n', 00H, 'I', 00H, 'd', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'g', 00H, '.', 00H, 'N', 00H, 'a'
	DB	00H, 'v', 00H, 'A', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'v', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'I', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@HPGLIPGM@?$AAc?$AAh?$AAi?$AAl?$AAd?$AA_?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAC@
CONST	SEGMENT
??_C@_1DG@HPGLIPGM@?$AAc?$AAh?$AAi?$AAl?$AAd?$AA_?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAC@ DB 'c'
	DB	00H, 'h', 00H, 'i', 00H, 'l', 00H, 'd', 00H, '_', 00H, 'w', 00H
	DB	'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '-', 00H, '>'
	DB	00H, 'C', 00H, 'h', 00H, 'i', 00H, 'l', 00H, 'd', 00H, 'I', 00H
	DB	'd', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@OLANNBKO@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAL?$AAa?$AAy?$AAe?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1EG@OLANNBKO@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAL?$AAa?$AAy?$AAe?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'g'
	DB	00H, '.', 00H, 'N', 00H, 'a', 00H, 'v', 00H, 'L', 00H, 'a', 00H
	DB	'y', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'g', 00H
	DB	'.', 00H, 'N', 00H, 'a', 00H, 'v', 00H, 'L', 00H, 'a', 00H, 'y'
	DB	00H, 'e', 00H, 'r', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'1', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@PCNOPHOI@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAM?$AAo?$AAv?$AAe?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs@
CONST	SEGMENT
??_C@_1CC@PCNOPHOI@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAM?$AAo?$AAv?$AAe?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs@ DB 'g'
	DB	00H, '.', 00H, 'N', 00H, 'a', 00H, 'v', 00H, 'M', 00H, 'o', 00H
	DB	'v', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'q', 00H, 'u', 00H, 'e'
	DB	00H, 's', 00H, 't', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??NavUpdate@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??NavUpdate@ImGui@@YAXXZ@4JA DD 02365H	; `ImGui::NavUpdate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CM@NGAIJMCF@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAg?$AA?4?$AAN?$AAa?$AAv@
CONST	SEGMENT
??_C@_1CM@NGAIJMCF@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAg?$AA?4?$AAN?$AAa?$AAv@ DB 'w'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'g', 00H, '.', 00H, 'N', 00H, 'a'
	DB	00H, 'v', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??NavInitWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??NavInitWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z@4JA DD 0230cH ; `ImGui::NavInitWindow'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??NavUpdateAnyRequestFlag@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??NavUpdateAnyRequestFlag@ImGui@@YAXXZ@4JA DD 02303H ; `ImGui::NavUpdateAnyRequestFlag'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1GA@HNMFLEAL@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAM?$AAo?$AAv?$AAe?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs@
CONST	SEGMENT
??_C@_1GA@HNMFLEAL@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAM?$AAo?$AAv?$AAe?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs@ DB 'g'
	DB	00H, '.', 00H, 'N', 00H, 'a', 00H, 'v', 00H, 'M', 00H, 'o', 00H
	DB	'v', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'q', 00H, 'u', 00H, 'e'
	DB	00H, 's', 00H, 't', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'w', 00H
	DB	'a', 00H, 'r', 00H, 'd', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u', 00H, 'i', 00H, 'N', 00H
	DB	'a', 00H, 'v', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'w', 00H, 'a'
	DB	00H, 'r', 00H, 'd', 00H, '_', 00H, 'N', 00H, 'o', 00H, 'n', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??NavMoveRequestForward@ImGui@@YAXHHAEBUImRect@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??NavMoveRequestForward@ImGui@@YAXHHAEBUImRect@@H@Z@4JA DD 022c6H ; `ImGui::NavMoveRequestForward'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1IK@IGCCKHOG@?$AA?$CI?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1IK@IGCCKHOG@?$AA?$CI?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5@ DB '('
	DB	00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H
	DB	'-', 00H, '>', 00H, 'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's'
	DB	00H, ' ', 00H, '|', 00H, ' ', 00H, 'g', 00H, '.', 00H, 'N', 00H
	DB	'a', 00H, 'v', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, '-', 00H, '>', 00H, 'F', 00H, 'l', 00H, 'a', 00H
	DB	'g', 00H, 's', 00H, ')', 00H, ' ', 00H, '&', 00H, ' ', 00H, 'I'
	DB	00H, 'm', 00H, 'G', 00H, 'u', 00H, 'i', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'F', 00H, 'l', 00H, 'a'
	DB	00H, 'g', 00H, 's', 00H, '_', 00H, 'N', 00H, 'a', 00H, 'v', 00H
	DB	'F', 00H, 'l', 00H, 'a', 00H, 't', 00H, 't', 00H, 'e', 00H, 'n'
	DB	00H, 'e', 00H, 'd', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??NavScoreItem@ImGui@@YA_NPEAUImGuiNavItemData@@UImRect@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??NavScoreItem@ImGui@@YA_NPEAUImGuiNavItemData@@UImRect@@@Z@4JA DD 021f1H ; `ImGui::NavScoreItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SetFocusID@ImGui@@YAXIPEAUImGuiWindow@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetFocusID@ImGui@@YAXIPEAUImGuiWindow@@@Z@4JA DD 021baH ; `ImGui::SetFocusID'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1IG@LOIIGJJB@?$AAn?$AAa?$AAv?$AA_?$AAl?$AAa?$AAy?$AAe?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAI?$AAm@
CONST	SEGMENT
??_C@_1IG@LOIIGJJB@?$AAn?$AAa?$AAv?$AA_?$AAl?$AAa?$AAy?$AAe?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAI?$AAm@ DB 'n'
	DB	00H, 'a', 00H, 'v', 00H, '_', 00H, 'l', 00H, 'a', 00H, 'y', 00H
	DB	'e', 00H, 'r', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'I'
	DB	00H, 'm', 00H, 'G', 00H, 'u', 00H, 'i', 00H, 'N', 00H, 'a', 00H
	DB	'v', 00H, 'L', 00H, 'a', 00H, 'y', 00H, 'e', 00H, 'r', 00H, '_'
	DB	00H, 'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, ' ', 00H, '|', 00H
	DB	'|', 00H, ' ', 00H, 'n', 00H, 'a', 00H, 'v', 00H, '_', 00H, 'l'
	DB	00H, 'a', 00H, 'y', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u', 00H, 'i'
	DB	00H, 'N', 00H, 'a', 00H, 'v', 00H, 'L', 00H, 'a', 00H, 'y', 00H
	DB	'e', 00H, 'r', 00H, '_', 00H, 'M', 00H, 'e', 00H, 'n', 00H, 'u'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@BGDNHLPI@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5@
CONST	SEGMENT
??_C@_1CC@BGDNHLPI@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5@ DB 'g'
	DB	00H, '.', 00H, 'N', 00H, 'a', 00H, 'v', 00H, 'W', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H, '!', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SetNavID@ImGui@@YAXIW4ImGuiNavLayer@@IAEBUImRect@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetNavID@ImGui@@YAXIW4ImGuiNavLayer@@IAEBUImRect@@@Z@4JA DD 021acH ; `ImGui::SetNavID'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DE@NAFIGFGG@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@
CONST	SEGMENT
??_C@_1DE@NAFIGFGG@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@ DB 'g'
	DB	00H, '.', 00H, 'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'w', 00H
	DB	'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z@4JA DD 0217fH ; `ImGui::FindBestWindowPosForPopup'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0N@OOFNFKBH@void_context@
CONST	SEGMENT
??_C@_0N@OOFNFKBH@void_context@ DB 'void_context', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DCJGJLLM@window_context@
CONST	SEGMENT
??_C@_0P@DCJGJLLM@window_context@ DB 'window_context', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??BeginPopupContextItem@ImGui@@YA_NPEBDH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??BeginPopupContextItem@ImGui@@YA_NPEBDH@Z@4JA DD 020feH ; `ImGui::BeginPopupContextItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OpenPopupOnItemClick@ImGui@@YAXPEBDH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OpenPopupOnItemClick@ImGui@@YAXPEBDH@Z@4JA DD 020e2H ; `ImGui::OpenPopupOnItemClick'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DG@NPFLFCJJ@?$AAg?$AA?4?$AAB?$AAe?$AAg?$AAi?$AAn?$AAP?$AAo?$AAp?$AAu?$AAp?$AAS?$AAt?$AAa@
CONST	SEGMENT
??_C@_1DG@NPFLFCJJ@?$AAg?$AA?4?$AAB?$AAe?$AAg?$AAi?$AAn?$AAP?$AAo?$AAp?$AAu?$AAp?$AAS?$AAt?$AAa@ DB 'g'
	DB	00H, '.', 00H, 'B', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 'n', 00H
	DB	'P', 00H, 'o', 00H, 'p', 00H, 'u', 00H, 'p', 00H, 'S', 00H, 't'
	DB	00H, 'a', 00H, 'c', 00H, 'k', 00H, '.', 00H, 'S', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@MGPJKAKN@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG@
CONST	SEGMENT
??_C@_1EO@MGPJKAKN@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG@ DB 'w'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '-', 00H
	DB	'>', 00H, 'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, ' '
	DB	00H, '&', 00H, ' ', 00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u', 00H
	DB	'i', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w'
	DB	00H, 'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, '_', 00H
	DB	'P', 00H, 'o', 00H, 'p', 00H, 'u', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??EndPopup@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??EndPopup@ImGui@@YAXXZ@4JA DD 020cdH	; `ImGui::EndPopup'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0N@PIPFDMLM@?$CD?$CDPopup_?$CF08x@
CONST	SEGMENT
??_C@_0N@PIPFDMLM@?$CD?$CDPopup_?$CF08x@ DB '##Popup_%08x', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NANGKBBK@?$CD?$CDMenu_?$CF02d@
CONST	SEGMENT
??_C@_0M@NANGKBBK@?$CD?$CDMenu_?$CF02d@ DB '##Menu_%02d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GI@BPADGCJE@?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5@
CONST	SEGMENT
??_C@_1GI@BPADGCJE@?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5@ DB 'r'
	DB	00H, 'e', 00H, 'm', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'r', 00H, 'e', 00H
	DB	'm', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, 'g', 00H, '.', 00H, 'O', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'P', 00H, 'o', 00H, 'p', 00H, 'u'
	DB	00H, 'p', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'c', 00H, 'k', 00H
	DB	'.', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??ClosePopupToLevel@ImGui@@YAXH_N@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ClosePopupToLevel@ImGui@@YAXH_N@Z@4JA DD 0204dH ; `ImGui::ClosePopupToLevel'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1GI@FJFNMD@?$AA?$CI?$AAp?$AAo?$AAp?$AAu?$AAp?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO@
CONST	SEGMENT
??_C@_1GI@FJFNMD@?$AA?$CI?$AAp?$AAo?$AAp?$AAu?$AAp?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO@ DB '('
	DB	00H, 'p', 00H, 'o', 00H, 'p', 00H, 'u', 00H, 'p', 00H, '.', 00H
	DB	'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '-'
	DB	00H, '>', 00H, 'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H
	DB	' ', 00H, '&', 00H, ' ', 00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u'
	DB	00H, 'i', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, 'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, '_'
	DB	00H, 'P', 00H, 'o', 00H, 'p', 00H, 'u', 00H, 'p', 00H, ')', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??ClosePopupsOverWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ClosePopupsOverWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z@4JA DD 02021H ; `ImGui::ClosePopupsOverWindow'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1KI@JIHIJAJC@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAu?$AAs@
CONST	SEGMENT
??_C@_1KI@JIHIJAJC@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAu?$AAs@ DB '0'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'C', 00H
	DB	'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'u'
	DB	00H, 's', 00H, 'e', 00H, ' ', 00H, 'I', 00H, 's', 00H, 'P', 00H
	DB	'o', 00H, 'p', 00H, 'u', 00H, 'p', 00H, 'O', 00H, 'p', 00H, 'e'
	DB	00H, 'n', 00H, '(', 00H, ')', 00H, ' ', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'I'
	DB	00H, 'm', 00H, 'G', 00H, 'u', 00H, 'i', 00H, 'P', 00H, 'o', 00H
	DB	'p', 00H, 'u', 00H, 'p', 00H, 'F', 00H, 'l', 00H, 'a', 00H, 'g'
	DB	00H, 's', 00H, '_', 00H, 'A', 00H, 'n', 00H, 'y', 00H, 'P', 00H
	DB	'o', 00H, 'p', 00H, 'u', 00H, 'p', 00H, 'L', 00H, 'e', 00H, 'v'
	DB	00H, 'e', 00H, 'l', 00H, '.', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??IsPopupOpen@ImGui@@YA_NPEBDH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??IsPopupOpen@ImGui@@YA_NPEBDH@Z@4JA DD 01fceH ; `ImGui::IsPopupOpen'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BA@OHMFOIK@?$AAi?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BA@OHMFOIK@?$AAi?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'i', 00H
	DB	'd', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??IsPopupOpen@ImGui@@YA_NIH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??IsPopupOpen@ImGui@@YA_NIH@Z@4JA DD 01fafH ; `ImGui::IsPopupOpen'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1HC@IKPEGHCP@?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo@
CONST	SEGMENT
??_C@_1HC@IKPEGHCP@?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo@ DB 'G'
	DB	00H, 'e', 00H, 't', 00H, 'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'd', 00H
	DB	'(', 00H, ')', 00H, '-', 00H, '>', 00H, 'F', 00H, 'l', 00H, 'a'
	DB	00H, 'g', 00H, 's', 00H, ' ', 00H, '&', 00H, ' ', 00H, 'I', 00H
	DB	'm', 00H, 'G', 00H, 'u', 00H, 'i', 00H, 'W', 00H, 'i', 00H, 'n'
	DB	00H, 'd', 00H, 'o', 00H, 'w', 00H, 'F', 00H, 'l', 00H, 'a', 00H
	DB	'g', 00H, 's', 00H, '_', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l'
	DB	00H, 't', 00H, 'i', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??EndTooltip@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??EndTooltip@ImGui@@YAXXZ@4JA DD 01f95H	; `ImGui::EndTooltip'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0P@DHLMFJKK@?$CD?$CDTooltip_?$CF02d@
CONST	SEGMENT
??_C@_0P@DHLMFJKK@?$CD?$CDTooltip_?$CF02d@ DB '##Tooltip_%02d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@LDEACFFC@?$AAc?$AAe?$AAn?$AAt?$AAe?$AAr?$AA_?$AAy?$AA_?$AAr?$AAa?$AAt?$AAi?$AAo?$AA?5@
CONST	SEGMENT
??_C@_1GC@LDEACFFC@?$AAc?$AAe?$AAn?$AAt?$AAe?$AAr?$AA_?$AAy?$AA_?$AAr?$AAa?$AAt?$AAi?$AAo?$AA?5@ DB 'c'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, '_', 00H
	DB	'y', 00H, '_', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, '.', 00H
	DB	'0', 00H, 'f', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'c'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, '_', 00H
	DB	'y', 00H, '_', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '1', 00H, '.', 00H
	DB	'0', 00H, 'f', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SetScrollFromPosY@ImGui@@YAXPEAUImGuiWindow@@MM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetScrollFromPosY@ImGui@@YAXPEAUImGuiWindow@@MM@Z@4JA DD 01f3cH ; `ImGui::SetScrollFromPosY'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1GC@BIJJIADH@?$AAc?$AAe?$AAn?$AAt?$AAe?$AAr?$AA_?$AAx?$AA_?$AAr?$AAa?$AAt?$AAi?$AAo?$AA?5@
CONST	SEGMENT
??_C@_1GC@BIJJIADH@?$AAc?$AAe?$AAn?$AAt?$AAe?$AAr?$AA_?$AAx?$AA_?$AAr?$AAa?$AAt?$AAi?$AAo?$AA?5@ DB 'c'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, '_', 00H
	DB	'x', 00H, '_', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, '.', 00H
	DB	'0', 00H, 'f', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'c'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, '_', 00H
	DB	'x', 00H, '_', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '1', 00H, '.', 00H
	DB	'0', 00H, 'f', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SetScrollFromPosX@ImGui@@YAXPEAUImGuiWindow@@MM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetScrollFromPosX@ImGui@@YAXPEAUImGuiWindow@@MM@Z@4JA DD 01f34H ; `ImGui::SetScrollFromPosX'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1EE@BNODPOAB@?$AAg?$AAr?$AAo?$AAu?$AAp?$AA_?$AAd?$AAa?$AAt?$AAa?$AA?4?$AAW?$AAi?$AAn?$AAd@
CONST	SEGMENT
??_C@_1EE@BNODPOAB@?$AAg?$AAr?$AAo?$AAu?$AAp?$AA_?$AAd?$AAa?$AAt?$AAa?$AA?4?$AAW?$AAi?$AAn?$AAd@ DB 'g'
	DB	00H, 'r', 00H, 'o', 00H, 'u', 00H, 'p', 00H, '_', 00H, 'd', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, '.', 00H, 'W', 00H, 'i', 00H, 'n'
	DB	00H, 'd', 00H, 'o', 00H, 'w', 00H, 'I', 00H, 'D', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, '-', 00H, '>', 00H, 'I', 00H, 'D', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@HMCHNBOE@?$AAg?$AA?4?$AAG?$AAr?$AAo?$AAu?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAS?$AAi@
CONST	SEGMENT
??_C@_1CM@HMCHNBOE@?$AAg?$AA?4?$AAG?$AAr?$AAo?$AAu?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAS?$AAi@ DB 'g'
	DB	00H, '.', 00H, 'G', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 'p', 00H
	DB	'S', 00H, 't', 00H, 'a', 00H, 'c', 00H, 'k', 00H, '.', 00H, 'S'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??EndGroup@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??EndGroup@ImGui@@YAXXZ@4JA DD 01e65H	; `ImGui::EndGroup'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1LI@DNMDNCBF@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAF?$AAo?$AAc?$AAu?$AAs?$AAS?$AAc?$AAo?$AAp@
CONST	SEGMENT
??_C@_1LI@DNMDNCBF@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAF?$AAo?$AAc?$AAu?$AAs?$AAS?$AAc?$AAo?$AAp@ DB 'S'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, 'O', 00H, 'f', 00H, 'F', 00H
	DB	'o', 00H, 'c', 00H, 'u', 00H, 's', 00H, 'S', 00H, 'c', 00H, 'o'
	DB	00H, 'p', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'c', 00H
	DB	'k', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'g', 00H, '.'
	DB	00H, 'F', 00H, 'o', 00H, 'c', 00H, 'u', 00H, 's', 00H, 'S', 00H
	DB	'c', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'a'
	DB	00H, 'c', 00H, 'k', 00H, '.', 00H, 'S', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'P'
	DB	00H, 'u', 00H, 's', 00H, 'h', 00H, 'F', 00H, 'o', 00H, 'c', 00H
	DB	'u', 00H, 's', 00H, 'S', 00H, 'c', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, '/', 00H, 'P', 00H, 'o', 00H, 'p', 00H, 'F', 00H, 'o', 00H
	DB	'c', 00H, 'u', 00H, 's', 00H, 'S', 00H, 'c', 00H, 'o', 00H, 'p'
	DB	00H, 'e', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 's', 00H, 'm', 00H
	DB	'a', 00H, 't', 00H, 'c', 00H, 'h', 00H, '!', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@BLGIKBOK@PushFocusScope?1PopFocusScope?5Mi@
CONST	SEGMENT
??_C@_0CH@BLGIKBOK@PushFocusScope?1PopFocusScope?5Mi@ DB 'PushFocusScope/'
	DB	'PopFocusScope Mismatch!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1II@EKMLEPAG@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAF?$AAo?$AAn?$AAt?$AAS?$AAt?$AAa?$AAc?$AAk@
CONST	SEGMENT
??_C@_1II@EKMLEPAG@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAF?$AAo?$AAn?$AAt?$AAS?$AAt?$AAa?$AAc?$AAk@ DB 'S'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, 'O', 00H, 'f', 00H, 'F', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'c'
	DB	00H, 'k', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, 'g', 00H
	DB	'.', 00H, 'F', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'S', 00H, 't'
	DB	00H, 'a', 00H, 'c', 00H, 'k', 00H, '.', 00H, 'S', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"'
	DB	00H, 'P', 00H, 'u', 00H, 's', 00H, 'h', 00H, 'F', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, '/', 00H, 'P', 00H, 'o', 00H, 'p', 00H, 'F'
	DB	00H, 'o', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'M', 00H, 'i', 00H
	DB	's', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'c', 00H, 'h', 00H, '!'
	DB	00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JNELFKGN@PushFont?1PopFont?5Mismatch?$CB@
CONST	SEGMENT
??_C@_0BL@JNELFKGN@PushFont?1PopFont?5Mismatch?$CB@ DB 'PushFont/PopFont '
	DB	'Mismatch!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1KI@DHADCEOH@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAS?$AAt?$AAy?$AAl?$AAe?$AAV?$AAa?$AAr?$AAS@
CONST	SEGMENT
??_C@_1KI@DHADCEOH@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAS?$AAt?$AAy?$AAl?$AAe?$AAV?$AAa?$AAr?$AAS@ DB 'S'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, 'O', 00H, 'f', 00H, 'S', 00H
	DB	't', 00H, 'y', 00H, 'l', 00H, 'e', 00H, 'V', 00H, 'a', 00H, 'r'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'c', 00H, 'k', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, 'g', 00H, '.', 00H, 'S', 00H, 't'
	DB	00H, 'y', 00H, 'l', 00H, 'e', 00H, 'V', 00H, 'a', 00H, 'r', 00H
	DB	'S', 00H, 't', 00H, 'a', 00H, 'c', 00H, 'k', 00H, '.', 00H, 'S'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '&', 00H, '&', 00H
	DB	' ', 00H, '"', 00H, 'P', 00H, 'u', 00H, 's', 00H, 'h', 00H, 'S'
	DB	00H, 't', 00H, 'y', 00H, 'l', 00H, 'e', 00H, 'V', 00H, 'a', 00H
	DB	'r', 00H, '/', 00H, 'P', 00H, 'o', 00H, 'p', 00H, 'S', 00H, 't'
	DB	00H, 'y', 00H, 'l', 00H, 'e', 00H, 'V', 00H, 'a', 00H, 'r', 00H
	DB	' ', 00H, 'M', 00H, 'i', 00H, 's', 00H, 'm', 00H, 'a', 00H, 't'
	DB	00H, 'c', 00H, 'h', 00H, '!', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@DKPEIHNP@PushStyleVar?1PopStyleVar?5Mismat@
CONST	SEGMENT
??_C@_0CD@DKPEIHNP@PushStyleVar?1PopStyleVar?5Mismat@ DB 'PushStyleVar/Po'
	DB	'pStyleVar Mismatch!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1KE@NCANFJNK@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAC?$AAo?$AAl?$AAo?$AAr?$AAS?$AAt?$AAa?$AAc@
CONST	SEGMENT
??_C@_1KE@NCANFJNK@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAC?$AAo?$AAl?$AAo?$AAr?$AAS?$AAt?$AAa?$AAc@ DB 'S'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, 'O', 00H, 'f', 00H, 'C', 00H
	DB	'o', 00H, 'l', 00H, 'o', 00H, 'r', 00H, 'S', 00H, 't', 00H, 'a'
	DB	00H, 'c', 00H, 'k', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H
	DB	'g', 00H, '.', 00H, 'C', 00H, 'o', 00H, 'l', 00H, 'o', 00H, 'r'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'c', 00H, 'k', 00H, '.', 00H
	DB	'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '"', 00H, 'P', 00H, 'u', 00H, 's', 00H, 'h', 00H
	DB	'S', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e', 00H, 'C', 00H, 'o'
	DB	00H, 'l', 00H, 'o', 00H, 'r', 00H, '/', 00H, 'P', 00H, 'o', 00H
	DB	'p', 00H, 'S', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e', 00H, 'C'
	DB	00H, 'o', 00H, 'l', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'M', 00H
	DB	'i', 00H, 's', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'c', 00H, 'h'
	DB	00H, '!', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@CECAGKKJ@PushStyleColor?1PopStyleColor?5Mi@
CONST	SEGMENT
??_C@_0CH@CECAGKKJ@PushStyleColor?1PopStyleColor?5Mi@ DB 'PushStyleColor/'
	DB	'PopStyleColor Mismatch!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@IJOEJOEN@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAB?$AAe?$AAg?$AAi?$AAn?$AAP?$AAo?$AAp?$AAu@
CONST	SEGMENT
??_C@_1NA@IJOEJOEN@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAB?$AAe?$AAg?$AAi?$AAn?$AAP?$AAo?$AAp?$AAu@ DB 'S'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, 'O', 00H, 'f', 00H, 'B', 00H
	DB	'e', 00H, 'g', 00H, 'i', 00H, 'n', 00H, 'P', 00H, 'o', 00H, 'p'
	DB	00H, 'u', 00H, 'p', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'c', 00H
	DB	'k', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'g', 00H, '.'
	DB	00H, 'B', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 'n', 00H, 'P', 00H
	DB	'o', 00H, 'p', 00H, 'u', 00H, 'p', 00H, 'S', 00H, 't', 00H, 'a'
	DB	00H, 'c', 00H, 'k', 00H, '.', 00H, 'S', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'B'
	DB	00H, 'e', 00H, 'g', 00H, 'i', 00H, 'n', 00H, 'P', 00H, 'o', 00H
	DB	'p', 00H, 'u', 00H, 'p', 00H, '/', 00H, 'E', 00H, 'n', 00H, 'd'
	DB	00H, 'P', 00H, 'o', 00H, 'p', 00H, 'u', 00H, 'p', 00H, ' ', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 'B', 00H, 'e', 00H, 'g', 00H, 'i'
	DB	00H, 'n', 00H, 'M', 00H, 'e', 00H, 'n', 00H, 'u', 00H, '/', 00H
	DB	'E', 00H, 'n', 00H, 'd', 00H, 'M', 00H, 'e', 00H, 'n', 00H, 'u'
	DB	00H, ' ', 00H, 'M', 00H, 'i', 00H, 's', 00H, 'm', 00H, 'a', 00H
	DB	't', 00H, 'c', 00H, 'h', 00H, '!', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@CEJDOFG@BeginPopup?1EndPopup?5or?5BeginMen@
CONST	SEGMENT
??_C@_0DD@CEJDOFG@BeginPopup?1EndPopup?5or?5BeginMen@ DB 'BeginPopup/EndP'
	DB	'opup or BeginMenu/EndMenu Mismatch!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1JC@FNBHEOLL@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAG?$AAr?$AAo?$AAu?$AAp?$AAS?$AAt?$AAa?$AAc@
CONST	SEGMENT
??_C@_1JC@FNBHEOLL@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAG?$AAr?$AAo?$AAu?$AAp?$AAS?$AAt?$AAa?$AAc@ DB 'S'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, 'O', 00H, 'f', 00H, 'G', 00H
	DB	'r', 00H, 'o', 00H, 'u', 00H, 'p', 00H, 'S', 00H, 't', 00H, 'a'
	DB	00H, 'c', 00H, 'k', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'g', 00H, '.', 00H, 'G', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 'p'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'c', 00H, 'k', 00H, '.', 00H
	DB	'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '"', 00H, 'B', 00H, 'e', 00H, 'g', 00H, 'i', 00H
	DB	'n', 00H, 'G', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 'p', 00H, '/'
	DB	00H, 'E', 00H, 'n', 00H, 'd', 00H, 'G', 00H, 'r', 00H, 'o', 00H
	DB	'u', 00H, 'p', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 's', 00H, 'm'
	DB	00H, 'a', 00H, 't', 00H, 'c', 00H, 'h', 00H, '!', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@DCHDJEI@BeginGroup?1EndGroup?5Mismatch?$CB@
CONST	SEGMENT
??_C@_0BO@DCHDJEI@BeginGroup?1EndGroup?5Mismatch?$CB@ DB 'BeginGroup/EndG'
	DB	'roup Mismatch!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1KM@GPENMPEF@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAI?$AAD?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?5?$AA?$DN@
CONST	SEGMENT
??_C@_1KM@GPENMPEF@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAI?$AAD?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?5?$AA?$DN@ DB 'S'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, 'O', 00H, 'f', 00H, 'I', 00H
	DB	'D', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'c', 00H, 'k', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, '-', 00H, '>', 00H, 'I', 00H, 'D'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'c', 00H, 'k', 00H, '.', 00H
	DB	'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '"', 00H, 'P', 00H, 'u', 00H, 's', 00H, 'h', 00H
	DB	'I', 00H, 'D', 00H, '/', 00H, 'P', 00H, 'o', 00H, 'p', 00H, 'I'
	DB	00H, 'D', 00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, 'N', 00H, 'o', 00H, 'd', 00H, 'e'
	DB	00H, '/', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'P', 00H
	DB	'o', 00H, 'p', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 's', 00H, 'm'
	DB	00H, 'a', 00H, 't', 00H, 'c', 00H, 'h', 00H, '!', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@ILEOFLMG@PushID?1PopID?5or?5TreeNode?1TreePo@
CONST	SEGMENT
??_C@_0CL@ILEOFLMG@PushID?1PopID?5or?5TreeNode?1TreePo@ DB 'PushID/PopID '
	DB	'or TreeNode/TreePop Mismatch!', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??CompareWithCurrentState@ImGuiStackSizes@@QEAAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??CompareWithCurrentState@ImGuiStackSizes@@QEAAXXZ@4JA DD 01ca4H ; `ImGuiStackSizes::CompareWithCurrentState'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CG@PCFKFCHL@Recovered?5from?5missing?5End?$CI?$CJ?5fo@
CONST	SEGMENT
??_C@_0CG@PCFKFCHL@Recovered?5from?5missing?5End?$CI?$CJ?5fo@ DB 'Recover'
	DB	'ed from missing End() for ''%s''', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@PKEBJEJO@Recovered?5from?5missing?5EndChild@
CONST	SEGMENT
??_C@_0CL@PKEBJEJO@Recovered?5from?5missing?5EndChild@ DB 'Recovered from'
	DB	' missing EndChild() for ''%s''', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@IPHBHHKI@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAg?$AA?4?$AAC?$AAu?$AAr@
CONST	SEGMENT
??_C@_1DE@IPHBHHKI@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAg?$AA?4?$AAC?$AAu?$AAr@ DB 'w'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'g', 00H, '.', 00H, 'C', 00H, 'u'
	DB	00H, 'r', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'W', 00H
	DB	'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@JEPGGIKH@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@
CONST	SEGMENT
??_C@_1EE@JEPGGIKH@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@ DB 'g'
	DB	00H, '.', 00H, 'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, '-', 00H, '>', 00H, 'I', 00H, 's', 00H, 'F', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'b', 00H, 'a', 00H, 'c', 00H, 'k'
	DB	00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@NEGGJCEB@Recovered?5from?5missing?5PopFocus@
CONST	SEGMENT
??_C@_0CP@NEGGJCEB@Recovered?5from?5missing?5PopFocus@ DB 'Recovered from'
	DB	' missing PopFocusScope() in ''%s''', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@EFPNNJDL@Recovered?5from?5missing?5PopStyle@
CONST	SEGMENT
??_C@_0CN@EFPNNJDL@Recovered?5from?5missing?5PopStyle@ DB 'Recovered from'
	DB	' missing PopStyleVar() in ''%s''', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@GKCPPFKN@Recovered?5from?5missing?5PopStyle@
CONST	SEGMENT
??_C@_0DP@GKCPPFKN@Recovered?5from?5missing?5PopStyle@ DB 'Recovered from'
	DB	' missing PopStyleColor() in ''%s'' for ImGuiCol_%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@CBEJECIE@Recovered?5from?5missing?5PopID?$CI?$CJ?5@
CONST	SEGMENT
??_C@_0CH@CBEJECIE@Recovered?5from?5missing?5PopID?$CI?$CJ?5@ DB 'Recover'
	DB	'ed from missing PopID() in ''%s''', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@EIGPLJIB@Recovered?5from?5missing?5EndGroup@
CONST	SEGMENT
??_C@_0CK@EIGPLJIB@Recovered?5from?5missing?5EndGroup@ DB 'Recovered from'
	DB	' missing EndGroup() in ''%s''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@OIELACHL@Recovered?5from?5missing?5TreePop?$CI@
CONST	SEGMENT
??_C@_0CJ@OIELACHL@Recovered?5from?5missing?5TreePop?$CI@ DB 'Recovered f'
	DB	'rom missing TreePop() in ''%s''', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@PFJDIEBE@Recovered?5from?5missing?5EndTabBa@
CONST	SEGMENT
??_C@_0CL@PFJDIEBE@Recovered?5from?5missing?5EndTabBa@ DB 'Recovered from'
	DB	' missing EndTabBar() in ''%s''', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@JFIKNFKH@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BI@JFIKNFKH@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'w'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@MCEMIAFO@Recovered?5from?5missing?5EndTable@
CONST	SEGMENT
??_C@_0CK@MCEMIAFO@Recovered?5from?5missing?5EndTable@ DB 'Recovered from'
	DB	' missing EndTable() in ''%s''', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??ErrorCheckEndFrameRecover@ImGui@@YAXP6AXPEAXPEBDZZ0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ErrorCheckEndFrameRecover@ImGui@@YAXP6AXPEAXPEBDZZ0@Z@4JA DD 01c52H ; `ImGui::ErrorCheckEndFrameRecover'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1GK@BADAAGFG@?$AA?$CI?$AAg?$AA?4?$AAG?$AAr?$AAo?$AAu?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAS@
CONST	SEGMENT
??_C@_1GK@BADAAGFG@?$AA?$CI?$AAg?$AA?4?$AAG?$AAr?$AAo?$AAu?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAS@ DB '('
	DB	00H, 'g', 00H, '.', 00H, 'G', 00H, 'r', 00H, 'o', 00H, 'u', 00H
	DB	'p', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'c', 00H, 'k', 00H, '.'
	DB	00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, ')', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '"', 00H, 'M', 00H, 'i', 00H, 's', 00H, 's', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'E', 00H, 'n', 00H, 'd'
	DB	00H, 'G', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 'p', 00H, ' ', 00H
	DB	'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, '!', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DOAAHNFO@Missing?5EndGroup?5call?$CB@
CONST	SEGMENT
??_C@_0BH@DOAAHNFO@Missing?5EndGroup?5call?$CB@ DB 'Missing EndGroup call'
	DB	'!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1PK@KPEOFHN@?$AA?$CI?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo@
CONST	SEGMENT
??_C@_1PK@KPEOFHN@?$AA?$CI?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo@ DB '('
	DB	00H, 'g', 00H, '.', 00H, 'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'c', 00H
	DB	'k', 00H, '.', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '1', 00H, ')', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'M', 00H, 'i', 00H, 's'
	DB	00H, 'm', 00H, 'a', 00H, 't', 00H, 'c', 00H, 'h', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'B', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 'n'
	DB	00H, '/', 00H, 'B', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 'n', 00H
	DB	'C', 00H, 'h', 00H, 'i', 00H, 'l', 00H, 'd', 00H, ' ', 00H, 'v'
	DB	00H, 's', 00H, ' ', 00H, 'E', 00H, 'n', 00H, 'd', 00H, '/', 00H
	DB	'E', 00H, 'n', 00H, 'd', 00H, 'C', 00H, 'h', 00H, 'i', 00H, 'l'
	DB	00H, 'd', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, ':', 00H, ' ', 00H, 'd', 00H, 'i', 00H, 'd', 00H, ' '
	DB	00H, 'y', 00H, 'o', 00H, 'u', 00H, ' ', 00H, 'c', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, ' ', 00H, 'E', 00H, 'n', 00H, 'd', 00H, '/'
	DB	00H, 'E', 00H, 'n', 00H, 'd', 00H, 'C', 00H, 'h', 00H, 'i', 00H
	DB	'l', 00H, 'd', 00H, ' ', 00H, 't', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'u', 00H, 'c', 00H, 'h', 00H, '?', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@BPHEKLEJ@Mismatched?5Begin?1BeginChild?5vs?5@
CONST	SEGMENT
??_C@_0FH@BPHEKLEJ@Mismatched?5Begin?1BeginChild?5vs?5@ DB 'Mismatched Be'
	DB	'gin/BeginChild vs End/EndChild calls: did you call End/EndChi'
	DB	'ld too much?', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1PM@PNPJAGAO@?$AA?$CI?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo@
CONST	SEGMENT
??_C@_1PM@PNPJAGAO@?$AA?$CI?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo@ DB '('
	DB	00H, 'g', 00H, '.', 00H, 'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'c', 00H
	DB	'k', 00H, '.', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '1', 00H, ')', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'M', 00H, 'i', 00H, 's'
	DB	00H, 'm', 00H, 'a', 00H, 't', 00H, 'c', 00H, 'h', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'B', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 'n'
	DB	00H, '/', 00H, 'B', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 'n', 00H
	DB	'C', 00H, 'h', 00H, 'i', 00H, 'l', 00H, 'd', 00H, ' ', 00H, 'v'
	DB	00H, 's', 00H, ' ', 00H, 'E', 00H, 'n', 00H, 'd', 00H, '/', 00H
	DB	'E', 00H, 'n', 00H, 'd', 00H, 'C', 00H, 'h', 00H, 'i', 00H, 'l'
	DB	00H, 'd', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, ':', 00H, ' ', 00H, 'd', 00H, 'i', 00H, 'd', 00H, ' '
	DB	00H, 'y', 00H, 'o', 00H, 'u', 00H, ' ', 00H, 'f', 00H, 'o', 00H
	DB	'r', 00H, 'g', 00H, 'e', 00H, 't', 00H, ' ', 00H, 't', 00H, 'o'
	DB	00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'd', 00H, '/', 00H, 'E', 00H, 'n', 00H, 'd'
	DB	00H, 'C', 00H, 'h', 00H, 'i', 00H, 'l', 00H, 'd', 00H, '?', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FI@LNDFABED@Mismatched?5Begin?1BeginChild?5vs?5@
CONST	SEGMENT
??_C@_0FI@LNDFABED@Mismatched?5Begin?1BeginChild?5vs?5@ DB 'Mismatched Be'
	DB	'gin/BeginChild vs End/EndChild calls: did you forget to call '
	DB	'End/EndChild?', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BAE@HHDAPELE@?$AA?$CI?$AAk?$AAe?$AAy?$AA_?$AAm?$AAo?$AAd?$AA_?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BAE@HHDAPELE@?$AA?$CI?$AAk?$AAe?$AAy?$AA_?$AAm?$AAo?$AAd?$AA_?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5@ DB '('
	DB	00H, 'k', 00H, 'e', 00H, 'y', 00H, '_', 00H, 'm', 00H, 'o', 00H
	DB	'd', 00H, '_', 00H, 'f', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H
	DB	'|', 00H, '|', 00H, ' ', 00H, 'g', 00H, '.', 00H, 'I', 00H, 'O'
	DB	00H, '.', 00H, 'K', 00H, 'e', 00H, 'y', 00H, 'M', 00H, 'o', 00H
	DB	'd', 00H, 's', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'k'
	DB	00H, 'e', 00H, 'y', 00H, '_', 00H, 'm', 00H, 'o', 00H, 'd', 00H
	DB	'_', 00H, 'f', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, ')'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'M', 00H
	DB	'i', 00H, 's', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'c', 00H, 'h'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'i', 00H, 'o', 00H
	DB	'.', 00H, 'K', 00H, 'e', 00H, 'y', 00H, 'C', 00H, 't', 00H, 'r'
	DB	00H, 'l', 00H, '/', 00H, 'i', 00H, 'o', 00H, '.', 00H, 'K', 00H
	DB	'e', 00H, 'y', 00H, 'S', 00H, 'h', 00H, 'i', 00H, 'f', 00H, 't'
	DB	00H, '/', 00H, 'i', 00H, 'o', 00H, '.', 00H, 'K', 00H, 'e', 00H
	DB	'y', 00H, 'A', 00H, 'l', 00H, 't', 00H, '/', 00H, 'i', 00H, 'o'
	DB	00H, '.', 00H, 'K', 00H, 'e', 00H, 'y', 00H, 'S', 00H, 'u', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'v', 00H, 's', 00H, ' '
	DB	00H, 'i', 00H, 'o', 00H, '.', 00H, 'K', 00H, 'e', 00H, 'y', 00H
	DB	'M', 00H, 'o', 00H, 'd', 00H, 's', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@IKLAPCIG@Mismatching?5io?4KeyCtrl?1io?4KeySh@
CONST	SEGMENT
??_C@_0EH@IKLAPCIG@Mismatching?5io?4KeyCtrl?1io?4KeySh@ DB 'Mismatching i'
	DB	'o.KeyCtrl/io.KeyShift/io.KeyAlt/io.KeySuper vs io.KeyMods', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??ErrorCheckEndFrameSanityChecks@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ErrorCheckEndFrameSanityChecks@ImGui@@YAXXZ@4JA DD 01c29H ; `ImGui::ErrorCheckEndFrameSanityChecks'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1MO@ONPFNFPJ@?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAK?$AAe?$AAy?$AAM?$AAa?$AAp?$AA?$FL?$AAI?$AAm?$AAG@
CONST	SEGMENT
??_C@_1MO@ONPFNFPJ@?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAK?$AAe?$AAy?$AAM?$AAa?$AAp?$AA?$FL?$AAI?$AAm?$AAG@ DB 'g'
	DB	00H, '.', 00H, 'I', 00H, 'O', 00H, '.', 00H, 'K', 00H, 'e', 00H
	DB	'y', 00H, 'M', 00H, 'a', 00H, 'p', 00H, '[', 00H, 'I', 00H, 'm'
	DB	00H, 'G', 00H, 'u', 00H, 'i', 00H, 'K', 00H, 'e', 00H, 'y', 00H
	DB	'_', 00H, 'S', 00H, 'p', 00H, 'a', 00H, 'c', 00H, 'e', 00H, ']'
	DB	00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '-', 00H, '1', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'I', 00H, 'm'
	DB	00H, 'G', 00H, 'u', 00H, 'i', 00H, 'K', 00H, 'e', 00H, 'y', 00H
	DB	'_', 00H, 'S', 00H, 'p', 00H, 'a', 00H, 'c', 00H, 'e', 00H, ' '
	DB	00H, 'i', 00H, 's', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'm', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'e', 00H, 'd'
	DB	00H, ',', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'q', 00H, 'u', 00H
	DB	'i', 00H, 'r', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'k', 00H, 'e', 00H, 'y', 00H, 'b', 00H
	DB	'o', 00H, 'a', 00H, 'r', 00H, 'd', 00H, ' ', 00H, 'n', 00H, 'a'
	DB	00H, 'v', 00H, 'i', 00H, 'g', 00H, 'a', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, '.', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@IDFJHFOM@ImGuiKey_Space?5is?5not?5mapped?0?5r@
CONST	SEGMENT
??_C@_0EA@IDFJHFOM@ImGuiKey_Space?5is?5not?5mapped?0?5r@ DB 'ImGuiKey_Spa'
	DB	'ce is not mapped, required for keyboard navigation.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BHO@ICEKAIPC@?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAK?$AAe?$AAy?$AAM?$AAa?$AAp?$AA?$FL?$AAn?$AA?$FN?$AA?5@
CONST	SEGMENT
??_C@_1BHO@ICEKAIPC@?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAK?$AAe?$AAy?$AAM?$AAa?$AAp?$AA?$FL?$AAn?$AA?$FN?$AA?5@ DB 'g'
	DB	00H, '.', 00H, 'I', 00H, 'O', 00H, '.', 00H, 'K', 00H, 'e', 00H
	DB	'y', 00H, 'M', 00H, 'a', 00H, 'p', 00H, '[', 00H, 'n', 00H, ']'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '-', 00H, '1', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'g', 00H, '.', 00H, 'I'
	DB	00H, 'O', 00H, '.', 00H, 'K', 00H, 'e', 00H, 'y', 00H, 'M', 00H
	DB	'a', 00H, 'p', 00H, '[', 00H, 'n', 00H, ']', 00H, ' ', 00H, '<'
	DB	00H, ' ', 00H, '(', 00H, '(', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	')', 00H, '(', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'o'
	DB	00H, 'f', 00H, '(', 00H, 'g', 00H, '.', 00H, 'I', 00H, 'O', 00H
	DB	'.', 00H, 'K', 00H, 'e', 00H, 'y', 00H, 's', 00H, 'D', 00H, 'o'
	DB	00H, 'w', 00H, 'n', 00H, ')', 00H, ' ', 00H, '/', 00H, ' ', 00H
	DB	's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H, '('
	DB	00H, '*', 00H, '(', 00H, 'g', 00H, '.', 00H, 'I', 00H, 'O', 00H
	DB	'.', 00H, 'K', 00H, 'e', 00H, 'y', 00H, 's', 00H, 'D', 00H, 'o'
	DB	00H, 'w', 00H, 'n', 00H, ')', 00H, ')', 00H, ')', 00H, ')', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'i', 00H, 'o'
	DB	00H, '.', 00H, 'K', 00H, 'e', 00H, 'y', 00H, 'M', 00H, 'a', 00H
	DB	'p', 00H, '[', 00H, ']', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 's', 00H, ' ', 00H
	DB	'a', 00H, 'n', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, ' '
	DB	00H, 'o', 00H, 'f', 00H, ' ', 00H, 'b', 00H, 'o', 00H, 'u', 00H
	DB	'n', 00H, 'd', 00H, ' ', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'u'
	DB	00H, 'e', 00H, ' ', 00H, '(', 00H, 'n', 00H, 'e', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'b', 00H, 'e'
	DB	00H, ' ', 00H, '0', 00H, '.', 00H, '.', 00H, '5', 00H, '1', 00H
	DB	'2', 00H, ',', 00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '-'
	DB	00H, '1', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'u', 00H, 'n', 00H, 'm', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, 'k', 00H, 'e', 00H, 'y', 00H, ')', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@NIAAMBB@io?4KeyMap?$FL?$FN?5contains?5an?5out?5of?5@
CONST	SEGMENT
??_C@_0FH@NIAAMBB@io?4KeyMap?$FL?$FN?5contains?5an?5out?5of?5@ DB 'io.Key'
	DB	'Map[] contains an out of bound value (need to be 0..512, or -'
	DB	'1 for unmapped key)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BDK@FANHHEDI@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAM@
CONST	SEGMENT
??_C@_1BDK@FANHHEDI@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAM@ DB 'g'
	DB	00H, '.', 00H, 'S', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e', 00H
	DB	'.', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w'
	DB	00H, 'M', 00H, 'e', 00H, 'n', 00H, 'u', 00H, 'B', 00H, 'u', 00H
	DB	't', 00H, 't', 00H, 'o', 00H, 'n', 00H, 'P', 00H, 'o', 00H, 's'
	DB	00H, 'i', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u'
	DB	00H, 'i', 00H, 'D', 00H, 'i', 00H, 'r', 00H, '_', 00H, 'N', 00H
	DB	'o', 00H, 'n', 00H, 'e', 00H, ' ', 00H, '|', 00H, '|', 00H, ' '
	DB	00H, 'g', 00H, '.', 00H, 'S', 00H, 't', 00H, 'y', 00H, 'l', 00H
	DB	'e', 00H, '.', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 'M', 00H, 'e', 00H, 'n', 00H, 'u', 00H, 'B', 00H
	DB	'u', 00H, 't', 00H, 't', 00H, 'o', 00H, 'n', 00H, 'P', 00H, 'o'
	DB	00H, 's', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'I', 00H, 'm', 00H, 'G'
	DB	00H, 'u', 00H, 'i', 00H, 'D', 00H, 'i', 00H, 'r', 00H, '_', 00H
	DB	'L', 00H, 'e', 00H, 'f', 00H, 't', 00H, ' ', 00H, '|', 00H, '|'
	DB	00H, ' ', 00H, 'g', 00H, '.', 00H, 'S', 00H, 't', 00H, 'y', 00H
	DB	'l', 00H, 'e', 00H, '.', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 'M', 00H, 'e', 00H, 'n', 00H, 'u', 00H
	DB	'B', 00H, 'u', 00H, 't', 00H, 't', 00H, 'o', 00H, 'n', 00H, 'P'
	DB	00H, 'o', 00H, 's', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'I', 00H, 'm'
	DB	00H, 'G', 00H, 'u', 00H, 'i', 00H, 'D', 00H, 'i', 00H, 'r', 00H
	DB	'_', 00H, 'R', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1LO@BODAGONP@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAM@
CONST	SEGMENT
??_C@_1LO@BODAGONP@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAM@ DB 'g'
	DB	00H, '.', 00H, 'S', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e', 00H
	DB	'.', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w'
	DB	00H, 'M', 00H, 'i', 00H, 'n', 00H, 'S', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '.', 00H, 'x', 00H, ' ', 00H, '>', 00H, '=', 00H, ' '
	DB	00H, '1', 00H, '.', 00H, '0', 00H, 'f', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, 'g', 00H, '.', 00H, 'S', 00H, 't', 00H, 'y'
	DB	00H, 'l', 00H, 'e', 00H, '.', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 'M', 00H, 'i', 00H, 'n', 00H, 'S'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, '.', 00H, 'y', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, '1', 00H, '.', 00H, '0', 00H, 'f'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'I', 00H
	DB	'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e', 00H, ' ', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, '.', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MHAAAKJO@Invalid?5style?5setting?4@
CONST	SEGMENT
??_C@_0BH@MHAAAKJO@Invalid?5style?5setting?4@ DB 'Invalid style setting.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JG@HBCMMEC@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAA?$AAl?$AAp?$AAh?$AAa?$AA?5?$AA?$DO@
CONST	SEGMENT
??_C@_1JG@HBCMMEC@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAA?$AAl?$AAp?$AAh?$AAa?$AA?5?$AA?$DO@ DB 'g'
	DB	00H, '.', 00H, 'S', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e', 00H
	DB	'.', 00H, 'A', 00H, 'l', 00H, 'p', 00H, 'h', 00H, 'a', 00H, ' '
	DB	00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, '.', 00H, '0', 00H
	DB	'f', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'g', 00H, '.'
	DB	00H, 'S', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e', 00H, '.', 00H
	DB	'A', 00H, 'l', 00H, 'p', 00H, 'h', 00H, 'a', 00H, ' ', 00H, '<'
	DB	00H, '=', 00H, ' ', 00H, '1', 00H, '.', 00H, '0', 00H, 'f', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'I', 00H, 'n'
	DB	00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 's'
	DB	00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	'!', 00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@BBAKCECH@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAC?$AAi?$AAr?$AAc?$AAl?$AAe?$AAT@
CONST	SEGMENT
??_C@_1IM@BBAKCECH@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAC?$AAi?$AAr?$AAc?$AAl?$AAe?$AAT@ DB 'g'
	DB	00H, '.', 00H, 'S', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e', 00H
	DB	'.', 00H, 'C', 00H, 'i', 00H, 'r', 00H, 'c', 00H, 'l', 00H, 'e'
	DB	00H, 'T', 00H, 'e', 00H, 's', 00H, 's', 00H, 'e', 00H, 'l', 00H
	DB	'l', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'M'
	DB	00H, 'a', 00H, 'x', 00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H, '.', 00H, '0'
	DB	00H, 'f', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H
	DB	'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 's', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, '!', 00H, '"', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IA@HHCKGFKM@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAC?$AAu?$AAr?$AAv?$AAe?$AAT?$AAe@
CONST	SEGMENT
??_C@_1IA@HHCKGFKM@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAC?$AAu?$AAr?$AAv?$AAe?$AAT?$AAe@ DB 'g'
	DB	00H, '.', 00H, 'S', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e', 00H
	DB	'.', 00H, 'C', 00H, 'u', 00H, 'r', 00H, 'v', 00H, 'e', 00H, 'T'
	DB	00H, 'e', 00H, 's', 00H, 's', 00H, 'e', 00H, 'l', 00H, 'l', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'T', 00H, 'o'
	DB	00H, 'l', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H, '.', 00H
	DB	'0', 00H, 'f', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"'
	DB	00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 's', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 's', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, '!', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EAJIBGFB@Invalid?5style?5setting?$CB@
CONST	SEGMENT
??_C@_0BH@EAJIBGFB@Invalid?5style?5setting?$CB@ DB 'Invalid style setting'
	DB	'!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BIO@NEOCPKAM@?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAF?$AAo?$AAn?$AAt?$AAs?$AA?9?$AA?$DO?$AAI?$AAs?$AAB@
CONST	SEGMENT
??_C@_1BIO@NEOCPKAM@?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAF?$AAo?$AAn?$AAt?$AAs?$AA?9?$AA?$DO?$AAI?$AAs?$AAB@ DB 'g'
	DB	00H, '.', 00H, 'I', 00H, 'O', 00H, '.', 00H, 'F', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 's', 00H, '-', 00H, '>', 00H, 'I', 00H, 's'
	DB	00H, 'B', 00H, 'u', 00H, 'i', 00H, 'l', 00H, 't', 00H, '(', 00H
	DB	')', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'F'
	DB	00H, 'o', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'A', 00H, 't', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't'
	DB	00H, ' ', 00H, 'b', 00H, 'u', 00H, 'i', 00H, 'l', 00H, 't', 00H
	DB	'!', 00H, ' ', 00H, 'M', 00H, 'a', 00H, 'k', 00H, 'e', 00H, ' '
	DB	00H, 's', 00H, 'u', 00H, 'r', 00H, 'e', 00H, ' ', 00H, 'y', 00H
	DB	'o', 00H, 'u', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l'
	DB	00H, 'e', 00H, 'd', 00H, ' ', 00H, 'I', 00H, 'm', 00H, 'G', 00H
	DB	'u', 00H, 'i', 00H, '_', 00H, 'I', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, 'X', 00H, 'X', 00H, 'X', 00H, 'X', 00H, '_', 00H, 'N', 00H
	DB	'e', 00H, 'w', 00H, 'F', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e'
	DB	00H, '(', 00H, ')', 00H, ' ', 00H, 'f', 00H, 'u', 00H, 'n', 00H
	DB	'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'f'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'b'
	DB	00H, 'a', 00H, 'c', 00H, 'k', 00H, 'e', 00H, 'n', 00H, 'd', 00H
	DB	',', 00H, ' ', 00H, 'w', 00H, 'h', 00H, 'i', 00H, 'c', 00H, 'h'
	DB	00H, ' ', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'u', 00H, 'l', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' '
	DB	00H, 'i', 00H, 'o', 00H, '.', 00H, 'F', 00H, 'o', 00H, 'n', 00H
	DB	't', 00H, 's', 00H, '-', 00H, '>', 00H, 'G', 00H, 'e', 00H, 't'
	DB	00H, 'T', 00H, 'e', 00H, 'x', 00H, 'D', 00H, 'a', 00H, 't', 00H
	DB	'a', 00H, 'A', 00H, 's', 00H, 'R', 00H, 'G', 00H, 'B', 00H, 'A'
	DB	00H, '3', 00H, '2', 00H, '(', 00H, ')', 00H, ' ', 00H, '/', 00H
	DB	' ', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'T', 00H, 'e', 00H, 'x'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, 'A', 00H, 's', 00H
	DB	'A', 00H, 'l', 00H, 'p', 00H, 'h', 00H, 'a', 00H, '8', 00H, '('
	DB	00H, ')', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0KM@BGIGOFPN@Font?5Atlas?5not?5built?$CB?5Make?5sure@
CONST	SEGMENT
??_C@_0KM@BGIGOFPN@Font?5Atlas?5not?5built?$CB?5Make?5sure@ DB 'Font Atla'
	DB	's not built! Make sure you called ImGui_ImplXXXX_NewFrame() f'
	DB	'unction for renderer backend, which should call io.Fonts->Get'
	DB	'TexDataAsRGBA32() / GetTexDataAsAlpha8()', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1LC@PGGPGCKP@?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAS?$AAi?$AAz@
CONST	SEGMENT
??_C@_1LC@PGGPGCKP@?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAS?$AAi?$AAz@ DB 'g'
	DB	00H, '.', 00H, 'I', 00H, 'O', 00H, '.', 00H, 'D', 00H, 'i', 00H
	DB	's', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'S', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, '.', 00H, 'x', 00H, ' ', 00H, '>', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, '.', 00H, '0', 00H, 'f', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, 'g', 00H, '.', 00H, 'I', 00H
	DB	'O', 00H, '.', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'p', 00H, 'l'
	DB	00H, 'a', 00H, 'y', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	'.', 00H, 'y', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, '.', 00H, '0', 00H, 'f', 00H, ' ', 00H, '&', 00H, '&', 00H
	DB	' ', 00H, '"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l'
	DB	00H, 'i', 00H, 'd', 00H, ' ', 00H, 'D', 00H, 'i', 00H, 's', 00H
	DB	'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, ' ', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'u', 00H
	DB	'e', 00H, '!', 00H, '"', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LDNBLEGM@Invalid?5DisplaySize?5value?$CB@
CONST	SEGMENT
??_C@_0BL@LDNBLEGM@Invalid?5DisplaySize?5value?$CB@ DB 'Invalid DisplaySi'
	DB	'ze value!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BAM@KGEBLPLP@?$AA?$CI?$AAg?$AA?4?$AAF?$AAr?$AAa?$AAm?$AAe?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN@
CONST	SEGMENT
??_C@_1BAM@KGEBLPLP@?$AA?$CI?$AAg?$AA?4?$AAF?$AAr?$AAa?$AAm?$AAe?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN@ DB '('
	DB	00H, 'g', 00H, '.', 00H, 'F', 00H, 'r', 00H, 'a', 00H, 'm', 00H
	DB	'e', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '|', 00H
	DB	'|', 00H, ' ', 00H, 'g', 00H, '.', 00H, 'F', 00H, 'r', 00H, 'a'
	DB	00H, 'm', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H
	DB	't', 00H, 'E', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'g', 00H, '.', 00H, 'F', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'u'
	DB	00H, 'n', 00H, 't', 00H, ')', 00H, ' ', 00H, '&', 00H, '&', 00H
	DB	' ', 00H, '"', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'g', 00H, 'o'
	DB	00H, 't', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'R', 00H, 'e', 00H, 'n'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ' ', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 'E', 00H, 'n', 00H, 'd', 00H, 'F'
	DB	00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '(', 00H, ')', 00H
	DB	' ', 00H, 'a', 00H, 't', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e'
	DB	00H, ' ', 00H, 'e', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'o', 00H
	DB	'f', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'p'
	DB	00H, 'r', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'o', 00H, 'u', 00H
	DB	's', 00H, ' ', 00H, 'f', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e'
	DB	00H, '?', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@GHMDJNFG@Forgot?5to?5call?5Render?$CI?$CJ?5or?5EndF@
CONST	SEGMENT
??_C@_0EI@GHMDJNFG@Forgot?5to?5call?5Render?$CI?$CJ?5or?5EndF@ DB 'Forgot'
	DB	' to call Render() or EndFrame() at the end of the previous fr'
	DB	'ame?', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1JK@GMCNDFJ@?$AA?$CI?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAD?$AAe?$AAl?$AAt?$AAa?$AAT?$AAi?$AAm?$AAe@
CONST	SEGMENT
??_C@_1JK@GMCNDFJ@?$AA?$CI?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAD?$AAe?$AAl?$AAt?$AAa?$AAT?$AAi?$AAm?$AAe@ DB '('
	DB	00H, 'g', 00H, '.', 00H, 'I', 00H, 'O', 00H, '.', 00H, 'D', 00H
	DB	'e', 00H, 'l', 00H, 't', 00H, 'a', 00H, 'T', 00H, 'i', 00H, 'm'
	DB	00H, 'e', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H, '.', 00H
	DB	'0', 00H, 'f', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'g'
	DB	00H, '.', 00H, 'F', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, ')', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'N', 00H, 'e', 00H, 'e', 00H, 'd'
	DB	00H, ' ', 00H, 'a', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 's', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'v', 00H, 'e', 00H, ' ', 00H, 'D'
	DB	00H, 'e', 00H, 'l', 00H, 't', 00H, 'a', 00H, 'T', 00H, 'i', 00H
	DB	'm', 00H, 'e', 00H, '!', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@INIAEKJF@Need?5a?5positive?5DeltaTime?$CB@
CONST	SEGMENT
??_C@_0BL@INIAEKJF@Need?5a?5positive?5DeltaTime?$CB@ DB 'Need a positive '
	DB	'DeltaTime!', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ@4JA DD 01c05H ; `ImGui::ErrorCheckNewFrameSanityChecks'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1HG@IIMLENED@?$AAs?$AAz?$AA_?$AAi?$AAd?$AAx?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo@
CONST	SEGMENT
??_C@_1HG@IIMLENED@?$AAs?$AAz?$AA_?$AAi?$AAd?$AAx?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo@ DB 's'
	DB	00H, 'z', 00H, '_', 00H, 'i', 00H, 'd', 00H, 'x', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e'
	DB	00H, 'o', 00H, 'f', 00H, '(', 00H, 'I', 00H, 'm', 00H, 'D', 00H
	DB	'r', 00H, 'a', 00H, 'w', 00H, 'I', 00H, 'd', 00H, 'x', 00H, ')'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'M', 00H
	DB	'i', 00H, 's', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'c', 00H, 'h'
	DB	00H, 'e', 00H, 'd', 00H, ' ', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'l', 00H, 'a', 00H, 'y'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, '!', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HK@HMLAJPFG@?$AAs?$AAz?$AA_?$AAv?$AAe?$AAr?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe@
CONST	SEGMENT
??_C@_1HK@HMLAJPFG@?$AAs?$AAz?$AA_?$AAv?$AAe?$AAr?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe@ DB 's'
	DB	00H, 'z', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 't', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 'I', 00H, 'm', 00H
	DB	'D', 00H, 'r', 00H, 'a', 00H, 'w', 00H, 'V', 00H, 'e', 00H, 'r'
	DB	00H, 't', 00H, ')', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H
	DB	'"', 00H, 'M', 00H, 'i', 00H, 's', 00H, 'm', 00H, 'a', 00H, 't'
	DB	00H, 'c', 00H, 'h', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'l'
	DB	00H, 'a', 00H, 'y', 00H, 'o', 00H, 'u', 00H, 't', 00H, '!', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1HC@CFCKCFEN@?$AAs?$AAz?$AA_?$AAv?$AAe?$AAc?$AA4?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe@
CONST	SEGMENT
??_C@_1HC@CFCKCFEN@?$AAs?$AAz?$AA_?$AAv?$AAe?$AAc?$AA4?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe@ DB 's'
	DB	00H, 'z', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, '4', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 'I', 00H, 'm', 00H
	DB	'V', 00H, 'e', 00H, 'c', 00H, '4', 00H, ')', 00H, ' ', 00H, '&'
	DB	00H, '&', 00H, ' ', 00H, '"', 00H, 'M', 00H, 'i', 00H, 's', 00H
	DB	'm', 00H, 'a', 00H, 't', 00H, 'c', 00H, 'h', 00H, 'e', 00H, 'd'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'o', 00H, 'u'
	DB	00H, 't', 00H, '!', 00H, '"', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1HC@KAEGCKOM@?$AAs?$AAz?$AA_?$AAv?$AAe?$AAc?$AA2?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe@
CONST	SEGMENT
??_C@_1HC@KAEGCKOM@?$AAs?$AAz?$AA_?$AAv?$AAe?$AAc?$AA2?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe@ DB 's'
	DB	00H, 'z', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, '2', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 'I', 00H, 'm', 00H
	DB	'V', 00H, 'e', 00H, 'c', 00H, '2', 00H, ')', 00H, ' ', 00H, '&'
	DB	00H, '&', 00H, ' ', 00H, '"', 00H, 'M', 00H, 'i', 00H, 's', 00H
	DB	'm', 00H, 'a', 00H, 't', 00H, 'c', 00H, 'h', 00H, 'e', 00H, 'd'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'o', 00H, 'u'
	DB	00H, 't', 00H, '!', 00H, '"', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1HM@KECEGJKN@?$AAs?$AAz?$AA_?$AAs?$AAt?$AAy?$AAl?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz@
CONST	SEGMENT
??_C@_1HM@KECEGJKN@?$AAs?$AAz?$AA_?$AAs?$AAt?$AAy?$AAl?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz@ DB 's'
	DB	00H, 'z', 00H, '_', 00H, 's', 00H, 't', 00H, 'y', 00H, 'l', 00H
	DB	'e', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 's', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 'I', 00H
	DB	'm', 00H, 'G', 00H, 'u', 00H, 'i', 00H, 'S', 00H, 't', 00H, 'y'
	DB	00H, 'l', 00H, 'e', 00H, ')', 00H, ' ', 00H, '&', 00H, '&', 00H
	DB	' ', 00H, '"', 00H, 'M', 00H, 'i', 00H, 's', 00H, 'm', 00H, 'a'
	DB	00H, 't', 00H, 'c', 00H, 'h', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, 'l', 00H, 'a', 00H, 'y', 00H, 'o', 00H, 'u', 00H, 't', 00H
	DB	'!', 00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@BDEJLFJB@?$AAs?$AAz?$AA_?$AAi?$AAo?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf@
CONST	SEGMENT
??_C@_1HA@BDEJLFJB@?$AAs?$AAz?$AA_?$AAi?$AAo?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf@ DB 's'
	DB	00H, 'z', 00H, '_', 00H, 'i', 00H, 'o', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'o'
	DB	00H, 'f', 00H, '(', 00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u', 00H
	DB	'i', 00H, 'I', 00H, 'O', 00H, ')', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '"', 00H, 'M', 00H, 'i', 00H, 's', 00H, 'm', 00H
	DB	'a', 00H, 't', 00H, 'c', 00H, 'h', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H
	DB	' ', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'o', 00H, 'u', 00H, 't'
	DB	00H, '!', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FMAIDOGC@Mismatched?5struct?5layout?$CB@
CONST	SEGMENT
??_C@_0BK@FMAIDOGC@Mismatched?5struct?5layout?$CB@ DB 'Mismatched struct '
	DB	'layout!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1IC@BBJPBEHP@?$AAs?$AAt?$AAr?$AAc?$AAm?$AAp?$AA?$CI?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?0@
CONST	SEGMENT
??_C@_1IC@BBJPBEHP@?$AAs?$AAt?$AAr?$AAc?$AAm?$AAp?$AA?$CI?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?0@ DB 's'
	DB	00H, 't', 00H, 'r', 00H, 'c', 00H, 'm', 00H, 'p', 00H, '(', 00H
	DB	'v', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 'o', 00H, 'n'
	DB	00H, ',', 00H, ' ', 00H, '"', 00H, '1', 00H, '.', 00H, '8', 00H
	DB	'4', 00H, ' ', 00H, 'W', 00H, 'I', 00H, 'P', 00H, '"', 00H, ')'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'M', 00H, 'i', 00H, 's'
	DB	00H, 'm', 00H, 'a', 00H, 't', 00H, 'c', 00H, 'h', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, ' ', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, '!', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NJMNENPC@Mismatched?5version?5string?$CB@
CONST	SEGMENT
??_C@_0BL@NJMNENPC@Mismatched?5version?5string?$CB@ DB 'Mismatched versio'
	DB	'n string!', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??DebugCheckVersionAndDataLayout@ImGui@@YA_NPEBD_K11111@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??DebugCheckVersionAndDataLayout@ImGui@@YA_NPEBD_K11111@Z@4JA DD 01bf8H ; `ImGui::DebugCheckVersionAndDataLayout'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DC@KOOPJPAL@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAI?$AAD?$AAS?$AAt?$AAa?$AAc?$AAk@
CONST	SEGMENT
??_C@_1DC@KOOPJPAL@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAI?$AAD?$AAS?$AAt?$AAa?$AAc?$AAk@ DB 'w'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '-', 00H
	DB	'>', 00H, 'I', 00H, 'D', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'c'
	DB	00H, 'k', 00H, '.', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '1', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??PopID@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??PopID@ImGui@@YAXXZ@4JA DD 01bc9H	; `ImGui::PopID'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BK@BEOECDF@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA?9?$AA1@
CONST	SEGMENT
??_C@_1BK@BEOECDF@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA?9?$AA1@ DB 'o'
	DB	00H, 'f', 00H, 'f', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, '-', 00H, '1', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SetKeyboardFocusHere@ImGui@@YAXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetKeyboardFocusHere@ImGui@@YAXH@Z@4JA DD 01b6cH ; `ImGui::SetKeyboardFocusHere'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DG@FEBJKFDF@?$AAg?$AA?4?$AAF?$AAo?$AAc?$AAu?$AAs?$AAS?$AAc?$AAo?$AAp?$AAe?$AAS?$AAt?$AAa@
CONST	SEGMENT
??_C@_1DG@FEBJKFDF@?$AAg?$AA?4?$AAF?$AAo?$AAc?$AAu?$AAs?$AAS?$AAc?$AAo?$AAp?$AAe?$AAS?$AAt?$AAa@ DB 'g'
	DB	00H, '.', 00H, 'F', 00H, 'o', 00H, 'c', 00H, 'u', 00H, 's', 00H
	DB	'S', 00H, 'c', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'S', 00H, 't'
	DB	00H, 'a', 00H, 'c', 00H, 'k', 00H, '.', 00H, 'S', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??PopFocusScope@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??PopFocusScope@ImGui@@YAXXZ@4JA DD 01b63H ; `ImGui::PopFocusScope'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BK@JIIMNACC@?$AAs?$AAc?$AAa?$AAl?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AA0?$AAf@
CONST	SEGMENT
??_C@_1BK@JIIMNACC@?$AAs?$AAc?$AAa?$AAl?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AA0?$AAf@ DB 's'
	DB	00H, 'c', 00H, 'a', 00H, 'l', 00H, 'e', 00H, ' ', 00H, '>', 00H
	DB	' ', 00H, '0', 00H, '.', 00H, '0', 00H, 'f', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SetWindowFontScale@ImGui@@YAXM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetWindowFontScale@ImGui@@YAXM@Z@4JA DD 01b4cH ; `ImGui::SetWindowFontScale'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SetNextWindowCollapsed@ImGui@@YAX_NH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetNextWindowCollapsed@ImGui@@YAX_NH@Z@4JA DD 01b21H ; `ImGui::SetNextWindowCollapsed'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SetNextWindowSize@ImGui@@YAXAEBUImVec2@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetNextWindowSize@ImGui@@YAXAEBUImVec2@@H@Z@4JA DD 01affH ; `ImGui::SetNextWindowSize'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SetNextWindowPos@ImGui@@YAXAEBUImVec2@@H0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetNextWindowPos@ImGui@@YAXAEBUImVec2@@H0@Z@4JA DD 01af5H ; `ImGui::SetNextWindowPos'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DO@GKCJBPLO@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAH?$AAi?$AAt?$AAT?$AAe?$AAs?$AAt@
CONST	SEGMENT
??_C@_1DO@GKCJBPLO@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAH?$AAi?$AAt?$AAT?$AAe?$AAs?$AAt@ DB 'w'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '-', 00H
	DB	'>', 00H, 'H', 00H, 'i', 00H, 't', 00H, 'T', 00H, 'e', 00H, 's'
	DB	00H, 't', 00H, 'H', 00H, 'o', 00H, 'l', 00H, 'e', 00H, 'S', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, '.', 00H, 'x', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SetWindowHitTestHole@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@1@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetWindowHitTestHole@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@1@Z@4JA DD 01ac5H ; `ImGui::SetWindowHitTestHole'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??SetWindowSize@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetWindowSize@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z@4JA DD 01a8fH ; `ImGui::SetWindowSize'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1EE@PBEDMJFL@?$AAc?$AAo?$AAn?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAI?$AAm@
CONST	SEGMENT
??_C@_1EE@PBEDMJFL@?$AAc?$AAo?$AAn?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAI?$AAm@ DB 'c'
	DB	00H, 'o', 00H, 'n', 00H, 'd', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'I'
	DB	00H, 'm', 00H, 'I', 00H, 's', 00H, 'P', 00H, 'o', 00H, 'w', 00H
	DB	'e', 00H, 'r', 00H, 'O', 00H, 'f', 00H, 'T', 00H, 'w', 00H, 'o'
	DB	00H, '(', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'd', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z@4JA DD 01a69H ; `ImGui::SetWindowPos'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CA@CLMFAGNB@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@
CONST	SEGMENT
??_C@_1CA@CLMFAGNB@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@ DB 'g'
	DB	00H, '.', 00H, 'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??IsWindowFocused@ImGui@@YA_NH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??IsWindowFocused@ImGui@@YA_NH@Z@4JA DD 01a39H ; `ImGui::IsWindowFocused'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1GK@LMFCIBAK@?$AA?$CI?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AAI?$AAm?$AAG?$AAu?$AAi?$AAH@
CONST	SEGMENT
??_C@_1GK@LMFCIBAK@?$AA?$CI?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AAI?$AAm?$AAG?$AAu?$AAi?$AAH@ DB '('
	DB	00H, 'f', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, ' ', 00H
	DB	'&', 00H, ' ', 00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u', 00H, 'i'
	DB	00H, 'H', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 'e', 00H
	DB	'd', 00H, 'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, '_'
	DB	00H, 'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'w', 00H, 'W', 00H
	DB	'h', 00H, 'e', 00H, 'n', 00H, 'O', 00H, 'v', 00H, 'e', 00H, 'r'
	DB	00H, 'l', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'e', 00H, 'd', 00H
	DB	')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??IsWindowHovered@ImGui@@YA_NH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??IsWindowHovered@ImGui@@YA_NH@Z@4JA DD 01a12H ; `ImGui::IsWindowHovered'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DE@LBPOLBMJ@?$AAg?$AA?4?$AAI?$AAt?$AAe?$AAm?$AAF?$AAl?$AAa?$AAg?$AAs?$AAS?$AAt?$AAa?$AAc@
CONST	SEGMENT
??_C@_1DE@LBPOLBMJ@?$AAg?$AA?4?$AAI?$AAt?$AAe?$AAm?$AAF?$AAl?$AAa?$AAg?$AAs?$AAS?$AAt?$AAa?$AAc@ DB 'g'
	DB	00H, '.', 00H, 'I', 00H, 't', 00H, 'e', 00H, 'm', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, 'S', 00H, 't', 00H, 'a'
	DB	00H, 'c', 00H, 'k', 00H, '.', 00H, 'S', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, ' ', 00H, '>', 00H, ' ', 00H, '1', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??PopItemFlag@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??PopItemFlag@ImGui@@YAXXZ@4JA DD 019b6H	; `ImGui::PopItemFlag'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1EM@MHLLLNGK@?$AAi?$AAt?$AAe?$AAm?$AA_?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAg@
CONST	SEGMENT
??_C@_1EM@MHLLLNGK@?$AAi?$AAt?$AAe?$AAm?$AA_?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAg@ DB 'i'
	DB	00H, 't', 00H, 'e', 00H, 'm', 00H, '_', 00H, 'f', 00H, 'l', 00H
	DB	'a', 00H, 'g', 00H, 's', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'g', 00H, '.', 00H, 'I', 00H, 't', 00H, 'e', 00H, 'm', 00H
	DB	'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, 'S', 00H, 't'
	DB	00H, 'a', 00H, 'c', 00H, 'k', 00H, '.', 00H, 'b', 00H, 'a', 00H
	DB	'c', 00H, 'k', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??PushItemFlag@ImGui@@YAXH_N@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??PushItemFlag@ImGui@@YAXH_N@Z@4JA DD 019a9H ; `ImGui::PushItemFlag'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CG@FNLEAELN@?$AAf?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAS?$AAc?$AAa?$AAl?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1CG@FNLEAELN@?$AAf?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAS?$AAc?$AAa?$AAl?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@ DB 'f'
	DB	00H, 'o', 00H, 'n', 00H, 't', 00H, '-', 00H, '>', 00H, 'S', 00H
	DB	'c', 00H, 'a', 00H, 'l', 00H, 'e', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '0', 00H, '.', 00H, '0', 00H, 'f', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@JABAIOEL@?$AAf?$AAo?$AAn?$AAt?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAf?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAI@
CONST	SEGMENT
??_C@_1DC@JABAIOEL@?$AAf?$AAo?$AAn?$AAt?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAf?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAI@ DB 'f'
	DB	00H, 'o', 00H, 'n', 00H, 't', 00H, ' ', 00H, '&', 00H, '&', 00H
	DB	' ', 00H, 'f', 00H, 'o', 00H, 'n', 00H, 't', 00H, '-', 00H, '>'
	DB	00H, 'I', 00H, 's', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H
	DB	'e', 00H, 'd', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SetCurrentFont@ImGui@@YAXPEAUImFont@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetCurrentFont@ImGui@@YAXPEAUImFont@@@Z@4JA DD 01987H ; `ImGui::SetCurrentFont'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??FocusTopMostWindowUnderOne@ImGui@@YAXPEAUImGuiWindow@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??FocusTopMostWindowUnderOne@ImGui@@YAXPEAUImGuiWindow@@0@Z@4JA DD 01971H ; `ImGui::FocusTopMostWindowUnderOne'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1EO@CDDKCBBF@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5@
CONST	SEGMENT
??_C@_1EO@CDDKCBBF@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5@ DB 'w'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '|', 00H, '|'
	DB	00H, ' ', 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, '-', 00H, '>', 00H, 'R', 00H, 'o', 00H, 'o', 00H, 't'
	DB	00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z@4JA DD 01946H ; `ImGui::FocusWindow'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1FA@BPAOPAIC@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AAF?$AAo?$AAc?$AAu?$AAs?$AAO@
CONST	SEGMENT
??_C@_1FA@BPAOPAIC@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AAF?$AAo?$AAc?$AAu?$AAs?$AAO@ DB 'g'
	DB	00H, '.', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, 's', 00H, 'F', 00H, 'o', 00H, 'c', 00H, 'u', 00H, 's'
	DB	00H, 'O', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '[', 00H
	DB	'n', 00H, ']', 00H, '-', 00H, '>', 00H, 'F', 00H, 'o', 00H, 'c'
	DB	00H, 'u', 00H, 's', 00H, 'O', 00H, 'r', 00H, 'd', 00H, 'e', 00H
	DB	'r', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'n', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1FC@LPBCMIDE@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AAF?$AAo?$AAc?$AAu?$AAs?$AAO@
CONST	SEGMENT
??_C@_1FC@LPBCMIDE@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AAF?$AAo?$AAc?$AAu?$AAs?$AAO@ DB 'g'
	DB	00H, '.', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, 's', 00H, 'F', 00H, 'o', 00H, 'c', 00H, 'u', 00H, 's'
	DB	00H, 'O', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '[', 00H
	DB	'c', 00H, 'u', 00H, 'r', 00H, '_', 00H, 'o', 00H, 'r', 00H, 'd'
	DB	00H, 'e', 00H, 'r', 00H, ']', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@MAFHBAAP@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAw?$AAi?$AAn?$AAd?$AAo@
CONST	SEGMENT
??_C@_1DK@MAFHBAAP@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAw?$AAi?$AAn?$AAd?$AAo@ DB 'w'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, '-', 00H, '>', 00H, 'R', 00H, 'o', 00H
	DB	'o', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??BringWindowToFocusFront@ImGui@@YAXPEAUImGuiWindow@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??BringWindowToFocusFront@ImGui@@YAXPEAUImGuiWindow@@@Z@4JA DD 01913H ; `ImGui::BringWindowToFocusFront'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1HI@MIOLBHIM@?$AA?$CI?$AAg?$AA?4?$AAW?$AAi?$AAt?$AAh?$AAi?$AAn?$AAE?$AAn?$AAd?$AAC?$AAh?$AAi@
CONST	SEGMENT
??_C@_1HI@MIOLBHIM@?$AA?$CI?$AAg?$AA?4?$AAW?$AAi?$AAt?$AAh?$AAi?$AAn?$AAE?$AAn?$AAd?$AAC?$AAh?$AAi@ DB '('
	DB	00H, 'g', 00H, '.', 00H, 'W', 00H, 'i', 00H, 't', 00H, 'h', 00H
	DB	'i', 00H, 'n', 00H, 'E', 00H, 'n', 00H, 'd', 00H, 'C', 00H, 'h'
	DB	00H, 'i', 00H, 'l', 00H, 'd', 00H, ')', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'M', 00H, 'u', 00H, 's', 00H, 't'
	DB	00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'd', 00H, 'C', 00H, 'h', 00H, 'i', 00H, 'l'
	DB	00H, 'd', 00H, '(', 00H, ')', 00H, ' ', 00H, 'a', 00H, 'n', 00H
	DB	'd', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'E'
	DB	00H, 'n', 00H, 'd', 00H, '(', 00H, ')', 00H, '!', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@DEHLBEMA@Must?5call?5EndChild?$CI?$CJ?5and?5not?5En@
CONST	SEGMENT
??_C@_0CE@DEHLBEMA@Must?5call?5EndChild?$CI?$CJ?5and?5not?5En@ DB 'Must c'
	DB	'all EndChild() and not End()!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@FOOGCAMP@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@
CONST	SEGMENT
??_C@_1DM@FOOGCAMP@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@ DB 'g'
	DB	00H, '.', 00H, 'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'c', 00H, 'k', 00H
	DB	'.', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IG@DKOLGHNA@?$AA?$CI?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo@
CONST	SEGMENT
??_C@_1IG@DKOLGHNA@?$AA?$CI?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo@ DB '('
	DB	00H, 'g', 00H, '.', 00H, 'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'c', 00H
	DB	'k', 00H, '.', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '1', 00H, ')', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'C', 00H, 'a', 00H, 'l', 00H, 'l'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'E', 00H, 'n', 00H
	DB	'd', 00H, '(', 00H, ')', 00H, ' ', 00H, 't', 00H, 'o', 00H, 'o'
	DB	00H, ' ', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H
	DB	't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 's', 00H, '!', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JOGPJJCM@Calling?5End?$CI?$CJ?5too?5many?5times?$CB@
CONST	SEGMENT
??_C@_0BO@JOGPJJCM@Calling?5End?$CI?$CJ?5too?5many?5times?$CB@ DB 'Callin'
	DB	'g End() too many times!', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??End@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??End@ImGui@@YAXXZ@4JA DD 018f1H		; `ImGui::End'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1FG@JPKHCDHL@?$AA?$CI?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AAI?$AAm?$AAG?$AAu?$AAi?$AAW@
CONST	SEGMENT
??_C@_1FG@JPKHCDHL@?$AA?$CI?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AAI?$AAm?$AAG?$AAu?$AAi?$AAW@ DB '('
	DB	00H, 'f', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, ' ', 00H
	DB	'&', 00H, ' ', 00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u', 00H, 'i'
	DB	00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H
	DB	'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, '_', 00H, 'N'
	DB	00H, 'o', 00H, 'T', 00H, 'i', 00H, 't', 00H, 'l', 00H, 'e', 00H
	DB	'B', 00H, 'a', 00H, 'r', 00H, ')', 00H, ' ', 00H, '!', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OFKBALAI@?$CDFOCUSSCOPE@
CONST	SEGMENT
??_C@_0M@OFKBALAI@?$CDFOCUSSCOPE@ DB '#FOCUSSCOPE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1KO@GJELMBN@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAD?$AAr?$AAa?$AAw?$AAL?$AAi?$AAs@
CONST	SEGMENT
??_C@_1KO@GJELMBN@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAD?$AAr?$AAa?$AAw?$AAL?$AAi?$AAs@ DB 'w'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '-', 00H
	DB	'>', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '-', 00H, '>', 00H, 'C', 00H, 'm', 00H
	DB	'd', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, '.', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, '1', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, '-', 00H, '>', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '-', 00H, '>', 00H
	DB	'C', 00H, 'm', 00H, 'd', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, '[', 00H, '0', 00H, ']', 00H, '.', 00H
	DB	'E', 00H, 'l', 00H, 'e', 00H, 'm', 00H, 'C', 00H, 'o', 00H, 'u'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@GBMDJNAA@?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA_?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CG@
CONST	SEGMENT
??_C@_1EO@GBMDJNAA@?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA_?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CG@ DB 'p'
	DB	00H, 'a', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, '_', 00H
	DB	'w', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, 'p', 00H, 'a', 00H, 'r', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, '_', 00H, 'w', 00H, 'i', 00H, 'n'
	DB	00H, 'd', 00H, 'o', 00H, 'w', 00H, '-', 00H, '>', 00H, 'A', 00H
	DB	'c', 00H, 't', 00H, 'i', 00H, 'v', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HM@BDHFFAHO@?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA_?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CB@
CONST	SEGMENT
??_C@_1HM@BDHFFAHO@?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA_?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CB@ DB 'p'
	DB	00H, 'a', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, '_', 00H
	DB	'w', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '|', 00H
	DB	'|', 00H, ' ', 00H, '!', 00H, '(', 00H, 'f', 00H, 'l', 00H, 'a'
	DB	00H, 'g', 00H, 's', 00H, ' ', 00H, '&', 00H, ' ', 00H, 'I', 00H
	DB	'm', 00H, 'G', 00H, 'u', 00H, 'i', 00H, 'W', 00H, 'i', 00H, 'n'
	DB	00H, 'd', 00H, 'o', 00H, 'w', 00H, 'F', 00H, 'l', 00H, 'a', 00H
	DB	'g', 00H, 's', 00H, '_', 00H, 'C', 00H, 'h', 00H, 'i', 00H, 'l'
	DB	00H, 'd', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@IADLALGG@?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AAI?$AAm?$AAG?$AAu?$AAi?$AAW?$AAi@
CONST	SEGMENT
??_C@_1EK@IADLALGG@?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AAI?$AAm?$AAG?$AAu?$AAi?$AAW?$AAi@ DB 'f'
	DB	00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, ' ', 00H, '&', 00H
	DB	' ', 00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u', 00H, 'i', 00H, 'W'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'F', 00H
	DB	'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, '_', 00H, 'C', 00H, 'h'
	DB	00H, 'i', 00H, 'l', 00H, 'd', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@GGBMECGG@?$AAg?$AA?4?$AAF?$AAr?$AAa?$AAm?$AAe?$AAC?$AAo?$AAu?$AAn?$AAt?$AAE?$AAn?$AAd@
CONST	SEGMENT
??_C@_1EE@GGBMECGG@?$AAg?$AA?4?$AAF?$AAr?$AAa?$AAm?$AAe?$AAC?$AAo?$AAu?$AAn?$AAt?$AAE?$AAn?$AAd@ DB 'g'
	DB	00H, '.', 00H, 'F', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, 'E', 00H, 'n'
	DB	00H, 'd', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '!', 00H, '=', 00H
	DB	' ', 00H, 'g', 00H, '.', 00H, 'F', 00H, 'r', 00H, 'a', 00H, 'm'
	DB	00H, 'e', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@FEBKCKMN@?$AAg?$AA?4?$AAW?$AAi?$AAt?$AAh?$AAi?$AAn?$AAF?$AAr?$AAa?$AAm?$AAe?$AAS?$AAc@
CONST	SEGMENT
??_C@_1CG@FEBKCKMN@?$AAg?$AA?4?$AAW?$AAi?$AAt?$AAh?$AAi?$AAn?$AAF?$AAr?$AAa?$AAm?$AAe?$AAS?$AAc@ DB 'g'
	DB	00H, '.', 00H, 'W', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'i', 00H
	DB	'n', 00H, 'F', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 'S'
	DB	00H, 'c', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@CDEKKEL@?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AAa@
CONST	SEGMENT
??_C@_1DK@CDEKKEL@?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AAa@ DB 'n'
	DB	00H, 'a', 00H, 'm', 00H, 'e', 00H, ' ', 00H, '!', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'n'
	DB	00H, 'a', 00H, 'm', 00H, 'e', 00H, '[', 00H, '0', 00H, ']', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '''', 00H, '\', 00H, '0'
	DB	00H, '''', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Begin@ImGui@@YA_NPEBDPEA_NH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Begin@ImGui@@YA_NPEBDPEA_NH@Z@4JA DD 0166dH ; `ImGui::Begin'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1FI@JBDNHGBD@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAR?$AAo?$AAo?$AAt?$AAW?$AAi?$AAn@
CONST	SEGMENT
??_C@_1FI@JBDNHGBD@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAR?$AAo?$AAo?$AAt?$AAW?$AAi?$AAn@ DB 'w'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '-', 00H
	DB	'>', 00H, 'R', 00H, 'o', 00H, 'o', 00H, 't', 00H, 'W', 00H, 'i'
	DB	00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'F', 00H, 'o', 00H
	DB	'r', 00H, 'N', 00H, 'a', 00H, 'v', 00H, '-', 00H, '>', 00H, 'P'
	DB	00H, 'a', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'W', 00H
	DB	'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H, '!'
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??UpdateWindowParentAndRootLinks@ImGui@@YAXPEAUImGuiWindow@@H0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??UpdateWindowParentAndRootLinks@ImGui@@YAXPEAUImGuiWindow@@H0@Z@4JA DD 01657H ; `ImGui::UpdateWindowParentAndRootLinks'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06KIIKKNMI@?$CDCLOSE@
CONST	SEGMENT
??_C@_06KIIKKNMI@?$CDCLOSE@ DB '#CLOSE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09BJOGEADB@?$CDCOLLAPSE@
CONST	SEGMENT
??_C@_09BJOGEADB@?$CDCOLLAPSE@ DB '#COLLAPSE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@CEGNFBKM@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAB?$AAe?$AAg?$AAi?$AAn?$AAC?$AAo@
CONST	SEGMENT
??_C@_1DA@CEGNFBKM@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAB?$AAe?$AAg?$AAi?$AAn?$AAC?$AAo@ DB 'w'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '-', 00H
	DB	'>', 00H, 'B', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 'n', 00H, 'C'
	DB	00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z@4JA DD 015acH ; `ImGui::RenderWindowDecorations'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CI@OAHDFFF@?$AAd?$AAi?$AAr?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAd?$AAi?$AAr@
CONST	SEGMENT
??_C@_1CI@OAHDFFF@?$AAd?$AAi?$AAr?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAd?$AAi?$AAr@ DB 'd'
	DB	00H, 'i', 00H, 'r', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'd', 00H, 'i'
	DB	00H, 'r', 00H, ' ', 00H, '<', 00H, ' ', 00H, '4', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??GetWindowResizeBorderID@ImGui@@YAIPEAUImGuiWindow@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetWindowResizeBorderID@ImGui@@YAIPEAUImGuiWindow@@H@Z@4JA DD 014fbH ; `ImGui::GetWindowResizeBorderID'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_07HDHBJEOI@?$CDRESIZE@
CONST	SEGMENT
??_C@_07HDHBJEOI@?$CDRESIZE@ DB '#RESIZE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@EBHOHNJC@?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AA?5?$AA?$DM?$AA?5?$AA4@
CONST	SEGMENT
??_C@_1CA@EBHOHNJC@?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AA?5?$AA?$DM?$AA?5?$AA4@ DB 'n'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, 'n', 00H, ' ', 00H, '<', 00H, ' '
	DB	00H, '4', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??GetWindowResizeCornerID@ImGui@@YAIPEAUImGuiWindow@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetWindowResizeCornerID@ImGui@@YAIPEAUImGuiWindow@@H@Z@4JA DD 014f1H ; `ImGui::GetWindowResizeCornerID'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z@4JA DD 014e3H ; `GetResizeBorderRect'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1FK@ONDIMCKL@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG@
CONST	SEGMENT
??_C@_1FK@ONDIMCKL@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG@ DB 'w'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '-', 00H
	DB	'>', 00H, 'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, ' '
	DB	00H, '&', 00H, ' ', 00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u', 00H
	DB	'i', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w'
	DB	00H, 'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, '_', 00H
	DB	'C', 00H, 'h', 00H, 'i', 00H, 'l', 00H, 'd', 00H, 'W', 00H, 'i'
	DB	00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@LOOJAFFK@?$AAg?$AA?4?$AAW?$AAi?$AAt?$AAh?$AAi?$AAn?$AAE?$AAn?$AAd?$AAC?$AAh?$AAi?$AAl@
CONST	SEGMENT
??_C@_1DE@LOOJAFFK@?$AAg?$AA?4?$AAW?$AAi?$AAt?$AAh?$AAi?$AAn?$AAE?$AAn?$AAd?$AAC?$AAh?$AAi?$AAl@ DB 'g'
	DB	00H, '.', 00H, 'W', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'i', 00H
	DB	'n', 00H, 'E', 00H, 'n', 00H, 'd', 00H, 'C', 00H, 'h', 00H, 'i'
	DB	00H, 'l', 00H, 'd', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'f', 00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??EndChild@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??EndChild@ImGui@@YAXXZ@4JA DD 013b6H	; `ImGui::EndChild'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BA@DDOODPOM@?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BA@DDOODPOM@?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'i', 00H
	DB	'd', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??BeginChild@ImGui@@YA_NIAEBUImVec2@@_NH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??BeginChild@ImGui@@YA_NIAEBUImVec2@@_NH@Z@4JA DD 013b0H ; `ImGui::BeginChild'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_07KBCBAKFA@?$CFs?1?$CF08X@
CONST	SEGMENT
??_C@_07KBCBAKFA@?$CFs?1?$CF08X@ DB '%s/%08X', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BDFLDJGI@?$CFs?1?$CFs_?$CF08X@
CONST	SEGMENT
??_C@_0L@BDFLDJGI@?$CFs?1?$CFs_?$CF08X@ DB '%s/%s_%08X', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@MJFBPLLL@?$AAg?$AA?4?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AAI?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1CA@MJFBPLLL@?$AAg?$AA?4?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AAI?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'g'
	DB	00H, '.', 00H, 'A', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'v', 00H
	DB	'e', 00H, 'I', 00H, 'd', 00H, ' ', 00H, '!', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SetActiveIdUsingNavAndKeys@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetActiveIdUsingNavAndKeys@ImGui@@YAXXZ@4JA DD 0135cH ; `ImGui::SetActiveIdUsingNavAndKeys'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??ResetMouseDragDelta@ImGui@@YAXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ResetMouseDragDelta@ImGui@@YAXH@Z@4JA DD 012c8H ; `ImGui::ResetMouseDragDelta'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??GetMouseDragDelta@ImGui@@YA?AUImVec2@@HM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetMouseDragDelta@ImGui@@YA?AUImVec2@@HM@Z@4JA DD 012bbH ; `ImGui::GetMouseDragDelta'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BI@DLHMADOF@?$AAG?$AAI?$AAm?$AAG?$AAu?$AAi?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BI@DLHMADOF@?$AAG?$AAI?$AAm?$AAG?$AAu?$AAi?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'G'
	DB	00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u', 00H, 'i', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z@4JA DD 012a5H ; `ImGui::IsMousePosValid'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??IsMouseDragging@ImGui@@YA_NHM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??IsMouseDragging@ImGui@@YA_NHM@Z@4JA DD 0128cH ; `ImGui::IsMouseDragging'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??IsMouseDragPastThreshold@ImGui@@YA_NHM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??IsMouseDragPastThreshold@ImGui@@YA_NHM@Z@4JA DD 01283H ; `ImGui::IsMouseDragPastThreshold'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??IsMouseDoubleClicked@ImGui@@YA_NH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??IsMouseDoubleClicked@ImGui@@YA_NH@Z@4JA DD 0127aH ; `ImGui::IsMouseDoubleClicked'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??IsMouseReleased@ImGui@@YA_NH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??IsMouseReleased@ImGui@@YA_NH@Z@4JA DD 01273H ; `ImGui::IsMouseReleased'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??IsMouseClicked@ImGui@@YA_NH_N@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??IsMouseClicked@ImGui@@YA_NH_N@Z@4JA DD 01261H ; `ImGui::IsMouseClicked'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1KI@IKDPMEHK@?$AAb?$AAu?$AAt?$AAt?$AAo?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1KI@IKDPMEHK@?$AAb?$AAu?$AAt?$AAt?$AAo?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB 'b'
	DB	00H, 'u', 00H, 't', 00H, 't', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 'b', 00H, 'u', 00H, 't', 00H, 't', 00H, 'o', 00H
	DB	'n', 00H, ' ', 00H, '<', 00H, ' ', 00H, '(', 00H, '(', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, ')', 00H, '(', 00H, 's', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 'g', 00H, '.'
	DB	00H, 'I', 00H, 'O', 00H, '.', 00H, 'M', 00H, 'o', 00H, 'u', 00H
	DB	's', 00H, 'e', 00H, 'D', 00H, 'o', 00H, 'w', 00H, 'n', 00H, ')'
	DB	00H, ' ', 00H, '/', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, '*', 00H, '(', 00H, 'g'
	DB	00H, '.', 00H, 'I', 00H, 'O', 00H, '.', 00H, 'M', 00H, 'o', 00H
	DB	'u', 00H, 's', 00H, 'e', 00H, 'D', 00H, 'o', 00H, 'w', 00H, 'n'
	DB	00H, ')', 00H, ')', 00H, ')', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??IsMouseDown@ImGui@@YA_NH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??IsMouseDown@ImGui@@YA_NH@Z@4JA DD 0125aH ; `ImGui::IsMouseDown'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??IsKeyReleased@ImGui@@YA_NH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??IsKeyReleased@ImGui@@YA_NH@Z@4JA DD 01252H ; `ImGui::IsKeyReleased'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??IsKeyPressed@ImGui@@YA_NH_N@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??IsKeyPressed@ImGui@@YA_NH_N@Z@4JA DD 01244H ; `ImGui::IsKeyPressed'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1LA@MNMNDIA@?$AAk?$AAe?$AAy?$AA_?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5@
CONST	SEGMENT
??_C@_1LA@MNMNDIA@?$AAk?$AAe?$AAy?$AA_?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5@ DB 'k'
	DB	00H, 'e', 00H, 'y', 00H, '_', 00H, 'i', 00H, 'n', 00H, 'd', 00H
	DB	'e', 00H, 'x', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'k', 00H, 'e', 00H
	DB	'y', 00H, '_', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, '(', 00H, '(', 00H, 'i', 00H
	DB	'n', 00H, 't', 00H, ')', 00H, '(', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 'g', 00H, '.', 00H
	DB	'I', 00H, 'O', 00H, '.', 00H, 'K', 00H, 'e', 00H, 'y', 00H, 's'
	DB	00H, 'D', 00H, 'o', 00H, 'w', 00H, 'n', 00H, ')', 00H, ' ', 00H
	DB	'/', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'o'
	DB	00H, 'f', 00H, '(', 00H, '*', 00H, '(', 00H, 'g', 00H, '.', 00H
	DB	'I', 00H, 'O', 00H, '.', 00H, 'K', 00H, 'e', 00H, 'y', 00H, 's'
	DB	00H, 'D', 00H, 'o', 00H, 'w', 00H, 'n', 00H, ')', 00H, ')', 00H
	DB	')', 00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??GetKeyPressedAmount@ImGui@@YAHHMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetKeyPressedAmount@ImGui@@YAHHMM@Z@4JA DD 0123aH ; `ImGui::GetKeyPressedAmount'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1ME@GKDHJBBA@?$AAu?$AAs?$AAe?$AAr?$AA_?$AAk?$AAe?$AAy?$AA_?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5@
CONST	SEGMENT
??_C@_1ME@GKDHJBBA@?$AAu?$AAs?$AAe?$AAr?$AA_?$AAk?$AAe?$AAy?$AA_?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5@ DB 'u'
	DB	00H, 's', 00H, 'e', 00H, 'r', 00H, '_', 00H, 'k', 00H, 'e', 00H
	DB	'y', 00H, '_', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x'
	DB	00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '_', 00H, 'k', 00H, 'e', 00H, 'y', 00H, '_', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, ' ', 00H, '<', 00H, ' '
	DB	00H, '(', 00H, '(', 00H, 'i', 00H, 'n', 00H, 't', 00H, ')', 00H
	DB	'(', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'o', 00H, 'f'
	DB	00H, '(', 00H, 'g', 00H, '.', 00H, 'I', 00H, 'O', 00H, '.', 00H
	DB	'K', 00H, 'e', 00H, 'y', 00H, 's', 00H, 'D', 00H, 'o', 00H, 'w'
	DB	00H, 'n', 00H, ')', 00H, ' ', 00H, '/', 00H, ' ', 00H, 's', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, '*'
	DB	00H, '(', 00H, 'g', 00H, '.', 00H, 'I', 00H, 'O', 00H, '.', 00H
	DB	'K', 00H, 'e', 00H, 'y', 00H, 's', 00H, 'D', 00H, 'o', 00H, 'w'
	DB	00H, 'n', 00H, ')', 00H, ')', 00H, ')', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??IsKeyDown@ImGui@@YA_NH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??IsKeyDown@ImGui@@YA_NH@Z@4JA DD 0121fH	; `ImGui::IsKeyDown'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1FK@NOIPPDJE@?$AAi?$AAm?$AAg?$AAu?$AAi?$AA_?$AAk?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5@
CONST	SEGMENT
??_C@_1FK@NOIPPDJE@?$AAi?$AAm?$AAg?$AAu?$AAi?$AA_?$AAk?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5@ DB 'i'
	DB	00H, 'm', 00H, 'g', 00H, 'u', 00H, 'i', 00H, '_', 00H, 'k', 00H
	DB	'e', 00H, 'y', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'i', 00H, 'm', 00H
	DB	'g', 00H, 'u', 00H, 'i', 00H, '_', 00H, 'k', 00H, 'e', 00H, 'y'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, 'I', 00H, 'm', 00H, 'G', 00H
	DB	'u', 00H, 'i', 00H, 'K', 00H, 'e', 00H, 'y', 00H, '_', 00H, 'C'
	DB	00H, 'O', 00H, 'U', 00H, 'N', 00H, 'T', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??GetKeyIndex@ImGui@@YAHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetKeyIndex@ImGui@@YAHH@Z@4JA DD 01216H ; `ImGui::GetKeyIndex'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??Render@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Render@ImGui@@YAXXZ@4JA DD 01173H	; `ImGui::Render'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1FO@HCCAMJFH@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1FO@HCCAMJFH@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5@ DB 'g'
	DB	00H, '.', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, 's', 00H, '.', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'g', 00H, '.', 00H
	DB	'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 's'
	DB	00H, 'T', 00H, 'e', 00H, 'm', 00H, 'p', 00H, 'S', 00H, 'o', 00H
	DB	'r', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, '.', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_03KHICJKCI@?4?4?4@
CONST	SEGMENT
??_C@_03KHICJKCI@?4?4?4@ DB '...', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1HE@BFIFNNBB@?$AAg?$AA?4?$AAW?$AAi?$AAt?$AAh?$AAi?$AAn?$AAF?$AAr?$AAa?$AAm?$AAe?$AAS?$AAc@
CONST	SEGMENT
??_C@_1HE@BFIFNNBB@?$AAg?$AA?4?$AAW?$AAi?$AAt?$AAh?$AAi?$AAn?$AAF?$AAr?$AAa?$AAm?$AAe?$AAS?$AAc@ DB 'g'
	DB	00H, '.', 00H, 'W', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'i', 00H
	DB	'n', 00H, 'F', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 'S'
	DB	00H, 'c', 00H, 'o', 00H, 'p', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'g'
	DB	00H, 'o', 00H, 't', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H
	DB	'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'I', 00H, 'm'
	DB	00H, 'G', 00H, 'u', 00H, 'i', 00H, ':', 00H, ':', 00H, 'N', 00H
	DB	'e', 00H, 'w', 00H, 'F', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e'
	DB	00H, '(', 00H, ')', 00H, '?', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@DPHJAHCA@Forgot?5to?5call?5ImGui?3?3NewFrame?$CI@
CONST	SEGMENT
??_C@_0CC@DPHJAHCA@Forgot?5to?5call?5ImGui?3?3NewFrame?$CI@ DB 'Forgot to'
	DB	' call ImGui::NewFrame()?', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@ICEHPMG@?$AAg?$AA?4?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd@
CONST	SEGMENT
??_C@_1BM@ICEHPMG@?$AAg?$AA?4?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd@ DB 'g'
	DB	00H, '.', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??EndFrame@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??EndFrame@ImGui@@YAXXZ@4JA DD 0111eH	; `ImGui::EndFrame'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1OI@BGNIEPFI@?$AAd?$AAr?$AAa?$AAw?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AA_?$AAV?$AAt?$AAx@
CONST	SEGMENT
??_C@_1OI@BGNIEPFI@?$AAd?$AAr?$AAa?$AAw?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AA_?$AAV?$AAt?$AAx@ DB 'd'
	DB	00H, 'r', 00H, 'a', 00H, 'w', 00H, '_', 00H, 'l', 00H, 'i', 00H
	DB	's', 00H, 't', 00H, '-', 00H, '>', 00H, '_', 00H, 'V', 00H, 't'
	DB	00H, 'x', 00H, 'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 'I', 00H, 'd', 00H, 'x', 00H, ' ', 00H, '<'
	DB	00H, ' ', 00H, '(', 00H, '1', 00H, ' ', 00H, '<', 00H, '<', 00H
	DB	' ', 00H, '1', 00H, '6', 00H, ')', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' ', 00H
	DB	'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'v', 00H, 'e'
	DB	00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 's', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'I', 00H, 'm', 00H, 'D'
	DB	00H, 'r', 00H, 'a', 00H, 'w', 00H, 'L', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, ' ', 00H, 'u', 00H, 's', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, '1', 00H, '6', 00H, '-', 00H, 'b', 00H, 'i', 00H
	DB	't', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'i', 00H, 'c'
	DB	00H, 'e', 00H, 's', 00H, '.', 00H, ' ', 00H, 'R', 00H, 'e', 00H
	DB	'a', 00H, 'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'a', 00H, 'b', 00H
	DB	'o', 00H, 'v', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@CDENJONN@Too?5many?5vertices?5in?5ImDrawList@
CONST	SEGMENT
??_C@_0EJ@CDENJONN@Too?5many?5vertices?5in?5ImDrawList@ DB 'Too many vert'
	DB	'ices in ImDrawList using 16-bit indices. Read comment above', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HI@ENCAIJO@?$AA?$CI?$AAi?$AAn?$AAt?$AA?$CJ?$AAd?$AAr?$AAa?$AAw?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?9@
CONST	SEGMENT
??_C@_1HI@ENCAIJO@?$AA?$CI?$AAi?$AAn?$AAt?$AA?$CJ?$AAd?$AAr?$AAa?$AAw?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?9@ DB '('
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, ')', 00H, 'd', 00H, 'r', 00H
	DB	'a', 00H, 'w', 00H, '_', 00H, 'l', 00H, 'i', 00H, 's', 00H, 't'
	DB	00H, '-', 00H, '>', 00H, '_', 00H, 'V', 00H, 't', 00H, 'x', 00H
	DB	'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, 'I', 00H, 'd', 00H, 'x', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, 'd', 00H, 'r', 00H, 'a', 00H, 'w', 00H, '_', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, '-', 00H, '>', 00H, 'V', 00H
	DB	't', 00H, 'x', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, '.', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1OG@ICPLNDEC@?$AAd?$AAr?$AAa?$AAw?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AAI?$AAd?$AAx?$AAB@
CONST	SEGMENT
??_C@_1OG@ICPLNDEC@?$AAd?$AAr?$AAa?$AAw?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AAI?$AAd?$AAx?$AAB@ DB 'd'
	DB	00H, 'r', 00H, 'a', 00H, 'w', 00H, '_', 00H, 'l', 00H, 'i', 00H
	DB	's', 00H, 't', 00H, '-', 00H, '>', 00H, 'I', 00H, 'd', 00H, 'x'
	DB	00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H
	DB	'.', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '|', 00H, '|', 00H
	DB	' ', 00H, 'd', 00H, 'r', 00H, 'a', 00H, 'w', 00H, '_', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, '-', 00H, '>', 00H, '_', 00H
	DB	'I', 00H, 'd', 00H, 'x', 00H, 'W', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, 'P', 00H, 't', 00H, 'r', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, 'd', 00H, 'r', 00H, 'a', 00H, 'w', 00H, '_'
	DB	00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H, '-', 00H, '>', 00H
	DB	'I', 00H, 'd', 00H, 'x', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, '.', 00H, 'D', 00H, 'a', 00H, 't', 00H
	DB	'a', 00H, ' ', 00H, '+', 00H, ' ', 00H, 'd', 00H, 'r', 00H, 'a'
	DB	00H, 'w', 00H, '_', 00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'-', 00H, '>', 00H, 'I', 00H, 'd', 00H, 'x', 00H, 'B', 00H, 'u'
	DB	00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'S', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1OG@INBPPELJ@?$AAd?$AAr?$AAa?$AAw?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AAV?$AAt?$AAx?$AAB@
CONST	SEGMENT
??_C@_1OG@INBPPELJ@?$AAd?$AAr?$AAa?$AAw?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AAV?$AAt?$AAx?$AAB@ DB 'd'
	DB	00H, 'r', 00H, 'a', 00H, 'w', 00H, '_', 00H, 'l', 00H, 'i', 00H
	DB	's', 00H, 't', 00H, '-', 00H, '>', 00H, 'V', 00H, 't', 00H, 'x'
	DB	00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H
	DB	'.', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '|', 00H, '|', 00H
	DB	' ', 00H, 'd', 00H, 'r', 00H, 'a', 00H, 'w', 00H, '_', 00H, 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, '-', 00H, '>', 00H, '_', 00H
	DB	'V', 00H, 't', 00H, 'x', 00H, 'W', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, 'P', 00H, 't', 00H, 'r', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, 'd', 00H, 'r', 00H, 'a', 00H, 'w', 00H, '_'
	DB	00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H, '-', 00H, '>', 00H
	DB	'V', 00H, 't', 00H, 'x', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, '.', 00H, 'D', 00H, 'a', 00H, 't', 00H
	DB	'a', 00H, ' ', 00H, '+', 00H, ' ', 00H, 'd', 00H, 'r', 00H, 'a'
	DB	00H, 'w', 00H, '_', 00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'-', 00H, '>', 00H, 'V', 00H, 't', 00H, 'x', 00H, 'B', 00H, 'u'
	DB	00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'S', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??AddDrawListToDrawData@@YAXPEAU?$ImVector@PEAUImDrawList@@@@PEAUImDrawList@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??AddDrawListToDrawData@@YAXPEAU?$ImVector@PEAUImDrawList@@@@PEAUImDrawList@@@Z@4JA DD 010acH ; `AddDrawListToDrawData'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06BKKJGDHO@Window@
CONST	SEGMENT
??_C@_06BKKJGDHO@Window@ DB 'Window', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@IBBBPCIN@?$AA?$CB?$AAg?$AA?4?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1EI@IBBBPCIN@?$AA?$CB?$AAg?$AA?4?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AA?5@ DB '!'
	DB	00H, 'g', 00H, '.', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H
	DB	'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'd'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '!', 00H, 'g', 00H
	DB	'.', 00H, 'S', 00H, 'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 's', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H
	DB	'e', 00H, 'd', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Initialize@ImGui@@YAXPEAUImGuiContext@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Initialize@ImGui@@YAXPEAUImGuiContext@@@Z@4JA DD 01026H ; `ImGui::Initialize'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BM@OPIPEIJO@Click?5to?5break?5in?5debugger?$CB@
CONST	SEGMENT
??_C@_0BM@OPIPEIJO@Click?5to?5break?5in?5debugger?$CB@ DB 'Click to break'
	DB	' in debugger!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IIPBLKLJ@Press?5ESC?5to?5abort?5picking?4@
CONST	SEGMENT
??_C@_0BM@IIPBLKLJ@Press?5ESC?5to?5abort?5picking?4@ DB 'Press ESC to abo'
	DB	'rt picking.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JHPKFIGH@HoveredId?3?50x?$CF08X@
CONST	SEGMENT
??_C@_0BC@JHPKFIGH@HoveredId?3?50x?$CF08X@ DB 'HoveredId: 0x%08X', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FE@JJEPGBAD@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@
CONST	SEGMENT
??_C@_1FE@JJEPGBAD@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@ DB 'g'
	DB	00H, '.', 00H, 'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, '-', 00H, '>', 00H, 'I', 00H, 's', 00H, 'F', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'b', 00H, 'a', 00H, 'c', 00H, 'k'
	DB	00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 't', 00H, 'r', 00H, 'u'
	DB	00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IMLDNMEK@Debug?$CD?$CDDefault@
CONST	SEGMENT
??_C@_0P@IMLDNMEK@Debug?$CD?$CDDefault@ DB 'Debug##Default', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@PEGMPHDA@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AAF?$AAo?$AAc?$AAu?$AAs?$AAO@
CONST	SEGMENT
??_C@_1FG@PEGMPHDA@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AAF?$AAo?$AAc?$AAu?$AAs?$AAO@ DB 'g'
	DB	00H, '.', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, 's', 00H, 'F', 00H, 'o', 00H, 'c', 00H, 'u', 00H, 's'
	DB	00H, 'O', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '.', 00H
	DB	'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '<', 00H, '='
	DB	00H, ' ', 00H, 'g', 00H, '.', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, 's', 00H, '.', 00H, 'S', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@DCCAIGN@?$AAg?$AA?4?$AAF?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAI?$AAs?$AAL?$AAo?$AAa?$AAd?$AAe@
CONST	SEGMENT
??_C@_1CG@DCCAIGN@?$AAg?$AA?4?$AAF?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAI?$AAs?$AAL?$AAo?$AAa?$AAd?$AAe@ DB 'g'
	DB	00H, '.', 00H, 'F', 00H, 'o', 00H, 'n', 00H, 't', 00H, '-', 00H
	DB	'>', 00H, 'I', 00H, 's', 00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd'
	DB	00H, 'e', 00H, 'd', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??NewFrame@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??NewFrame@ImGui@@YAXXZ@4JA DD 0f43H	; `ImGui::NewFrame'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1FK@PIJFGHBG@?$AAg?$AA?4?$AAM?$AAo?$AAv?$AAi?$AAn?$AAg?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5@
CONST	SEGMENT
??_C@_1FK@PIJFGHBG@?$AAg?$AA?4?$AAM?$AAo?$AAv?$AAi?$AAn?$AAg?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5@ DB 'g'
	DB	00H, '.', 00H, 'M', 00H, 'o', 00H, 'v', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'g', 00H, '.', 00H
	DB	'M', 00H, 'o', 00H, 'v', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'W'
	DB	00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, '-', 00H
	DB	'>', 00H, 'R', 00H, 'o', 00H, 'o', 00H, 't', 00H, 'W', 00H, 'i'
	DB	00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??UpdateMouseMovingWindowNewFrame@ImGui@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??UpdateMouseMovingWindowNewFrame@ImGui@@YAXXZ@4JA DD 0ddaH ; `ImGui::UpdateMouseMovingWindowNewFrame'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0N@MFHPHIIJ@?$CD?$CDForeground@
CONST	SEGMENT
??_C@_0N@MFHPHIIJ@?$CD?$CDForeground@ DB '##Foreground', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MFFOHPLI@?$CD?$CDBackground@
CONST	SEGMENT
??_C@_0N@MFFOHPLI@?$CD?$CDBackground@ DB '##Background', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1KI@ECMHEDEI@?$AAd?$AAr?$AAa?$AAw?$AAl?$AAi?$AAs?$AAt?$AA_?$AAn?$AAo?$AA?5?$AA?$DM?$AA?5?$AA?$CI@
CONST	SEGMENT
??_C@_1KI@ECMHEDEI@?$AAd?$AAr?$AAa?$AAw?$AAl?$AAi?$AAs?$AAt?$AA_?$AAn?$AAo?$AA?5?$AA?$DM?$AA?5?$AA?$CI@ DB 'd'
	DB	00H, 'r', 00H, 'a', 00H, 'w', 00H, 'l', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, '_', 00H, 'n', 00H, 'o', 00H, ' ', 00H, '<', 00H, ' '
	DB	00H, '(', 00H, '(', 00H, 'i', 00H, 'n', 00H, 't', 00H, ')', 00H
	DB	'(', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 'o', 00H, 'f'
	DB	00H, '(', 00H, 'v', 00H, 'i', 00H, 'e', 00H, 'w', 00H, 'p', 00H
	DB	'o', 00H, 'r', 00H, 't', 00H, '-', 00H, '>', 00H, 'D', 00H, 'r'
	DB	00H, 'a', 00H, 'w', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	's', 00H, ')', 00H, ' ', 00H, '/', 00H, ' ', 00H, 's', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, '*', 00H
	DB	'(', 00H, 'v', 00H, 'i', 00H, 'e', 00H, 'w', 00H, 'p', 00H, 'o'
	DB	00H, 'r', 00H, 't', 00H, '-', 00H, '>', 00H, 'D', 00H, 'r', 00H
	DB	'a', 00H, 'w', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 's'
	DB	00H, ')', 00H, ')', 00H, ')', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z@4JA DD 0d8eH ; `GetViewportDrawList'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??GetIO@ImGui@@YAAEAUImGuiIO@@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetIO@ImGui@@YAAEAUImGuiIO@@XZ@4JA DD 0d76H ; `ImGui::GetIO'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BK@LEOMHFJC@?$AAh?$AAo?$AAo?$AAk?$AA_?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@LEOMHFJC@?$AAh?$AAo?$AAo?$AAk?$AA_?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'h'
	DB	00H, 'o', 00H, 'o', 00H, 'k', 00H, '_', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??RemoveContextHook@ImGui@@YAXPEAUImGuiContext@@I@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??RemoveContextHook@ImGui@@YAXPEAUImGuiContext@@I@Z@4JA DD 0d63H ; `ImGui::RemoveContextHook'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1LO@DGOFJFDA@?$AAh?$AAo?$AAo?$AAk?$AA?9?$AA?$DO?$AAC?$AAa?$AAl?$AAl?$AAb?$AAa?$AAc?$AAk?$AA?5@
CONST	SEGMENT
??_C@_1LO@DGOFJFDA@?$AAh?$AAo?$AAo?$AAk?$AA?9?$AA?$DO?$AAC?$AAa?$AAl?$AAl?$AAb?$AAa?$AAc?$AAk?$AA?5@ DB 'h'
	DB	00H, 'o', 00H, 'o', 00H, 'k', 00H, '-', 00H, '>', 00H, 'C', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'b', 00H, 'a', 00H, 'c', 00H, 'k'
	DB	00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, 'h', 00H, 'o', 00H, 'o', 00H, 'k'
	DB	00H, '-', 00H, '>', 00H, 'H', 00H, 'o', 00H, 'o', 00H, 'k', 00H
	DB	'I', 00H, 'd', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'h', 00H, 'o', 00H
	DB	'o', 00H, 'k', 00H, '-', 00H, '>', 00H, 'T', 00H, 'y', 00H, 'p'
	DB	00H, 'e', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, 'I', 00H
	DB	'm', 00H, 'G', 00H, 'u', 00H, 'i', 00H, 'C', 00H, 'o', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'x', 00H, 't', 00H, 'H', 00H, 'o', 00H
	DB	'o', 00H, 'k', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, '_'
	DB	00H, 'P', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 'R', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'a'
	DB	00H, 'l', 00H, '_', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??AddContextHook@ImGui@@YAIPEAUImGuiContext@@PEBUImGuiContextHook@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??AddContextHook@ImGui@@YAIPEAUImGuiContext@@PEBUImGuiContextHook@@@Z@4JA DD 0d59H ; `ImGui::AddContextHook'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_08JKMMBCCO@1?484?5WIP@
CONST	SEGMENT
??_C@_08JKMMBCCO@1?484?5WIP@ DB '1.84 WIP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@PKFFHMKO@?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AAd?$AA?5?$AA?$DN@
CONST	SEGMENT
??_C@_1EO@PKFFHMKO@?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AAd?$AA?5?$AA?$DN@ DB 'i'
	DB	00H, 'd', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'i', 00H, 'd', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, '-', 00H, '>', 00H, 'D', 00H, 'C'
	DB	00H, '.', 00H, 'L', 00H, 'a', 00H, 's', 00H, 't', 00H, 'I', 00H
	DB	't', 00H, 'e', 00H, 'm', 00H, 'I', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??ItemFocusable@ImGui@@YAXPEAUImGuiWindow@@I@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ItemFocusable@ImGui@@YAXPEAUImGuiWindow@@I@Z@4JA DD 0cbeH ; `ImGui::ItemFocusable'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1JO@PPIAHLHG@?$AA?$CI?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AAI?$AAm?$AAG?$AAu?$AAi@
CONST	SEGMENT
??_C@_1JO@PPIAHLHG@?$AA?$CI?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AAI?$AAm?$AAG?$AAu?$AAi@ DB '('
	DB	00H, 'f', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, ' ', 00H
	DB	'&', 00H, ' ', 00H, '(', 00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u'
	DB	00H, 'i', 00H, 'H', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'r', 00H
	DB	'e', 00H, 'd', 00H, 'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's'
	DB	00H, '_', 00H, 'R', 00H, 'o', 00H, 'o', 00H, 't', 00H, 'W', 00H
	DB	'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, ' ', 00H, '|'
	DB	00H, ' ', 00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u', 00H, 'i', 00H
	DB	'H', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'd'
	DB	00H, 'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, '_', 00H
	DB	'C', 00H, 'h', 00H, 'i', 00H, 'l', 00H, 'd', 00H, 'W', 00H, 'i'
	DB	00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 's', 00H, ')', 00H
	DB	')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??IsItemHovered@ImGui@@YA_NH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??IsItemHovered@ImGui@@YA_NH@Z@4JA DD 0c54H ; `ImGui::IsItemHovered'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1HA@DMBDPHAC@?$AAg?$AA?4?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AAI?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAi@
CONST	SEGMENT
??_C@_1HA@DMBDPHAC@?$AAg?$AA?4?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AAI?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAi@ DB 'g'
	DB	00H, '.', 00H, 'A', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'v', 00H
	DB	'e', 00H, 'I', 00H, 'd', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'i', 00H, 'd', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H
	DB	'g', 00H, '.', 00H, 'A', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'v'
	DB	00H, 'e', 00H, 'I', 00H, 'd', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'g'
	DB	00H, '.', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'g', 00H, 'D', 00H
	DB	'r', 00H, 'o', 00H, 'p', 00H, 'A', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'v', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??MarkItemEdited@ImGui@@YAXI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??MarkItemEdited@ImGui@@YAXI@Z@4JA DD 0c31H ; `ImGui::MarkItemEdited'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DE@OJBIPCGA@?$AAD?$AAr?$AAa?$AAw?$AAL?$AAi?$AAs?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CG?$AAD?$AAr@
CONST	SEGMENT
??_C@_1DE@OJBIPCGA@?$AAD?$AAr?$AAa?$AAw?$AAL?$AAi?$AAs?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CG?$AAD?$AAr@ DB 'D'
	DB	00H, 'r', 00H, 'a', 00H, 'w', 00H, 'L', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '&', 00H, 'D'
	DB	00H, 'r', 00H, 'a', 00H, 'w', 00H, 'L', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'I', 00H, 'n', 00H, 's', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???1ImGuiWindow@@QEAA@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1ImGuiWindow@@QEAA@XZ@4JA DD 0b6fH	; `ImGuiWindow::~ImGuiWindow'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_05EJCOBEBF@?$CDMOVE@
CONST	SEGMENT
??_C@_05EJCOBEBF@?$CDMOVE@ DB '#MOVE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NBCGADJA@Unknown@
CONST	SEGMENT
??_C@_07NBCGADJA@Unknown@ DB 'Unknown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JOEAHKNC@ModalWindowDimBg@
CONST	SEGMENT
??_C@_0BB@JOEAHKNC@ModalWindowDimBg@ DB 'ModalWindowDimBg', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JHKONDGH@NavWindowingDimBg@
CONST	SEGMENT
??_C@_0BC@JHKONDGH@NavWindowingDimBg@ DB 'NavWindowingDimBg', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MCGDEFOI@NavWindowingHighlight@
CONST	SEGMENT
??_C@_0BG@MCGDEFOI@NavWindowingHighlight@ DB 'NavWindowingHighlight', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ENCIHEPH@NavHighlight@
CONST	SEGMENT
??_C@_0N@ENCIHEPH@NavHighlight@ DB 'NavHighlight', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GDDMCLOI@DragDropTarget@
CONST	SEGMENT
??_C@_0P@GDDMCLOI@DragDropTarget@ DB 'DragDropTarget', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IBBLAEBJ@TextSelectedBg@
CONST	SEGMENT
??_C@_0P@IBBLAEBJ@TextSelectedBg@ DB 'TextSelectedBg', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FGPLHMKP@TableRowBgAlt@
CONST	SEGMENT
??_C@_0O@FGPLHMKP@TableRowBgAlt@ DB 'TableRowBgAlt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LLALIFOE@TableRowBg@
CONST	SEGMENT
??_C@_0L@LLALIFOE@TableRowBg@ DB 'TableRowBg', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IPAPNNJD@TableBorderLight@
CONST	SEGMENT
??_C@_0BB@IPAPNNJD@TableBorderLight@ DB 'TableBorderLight', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EJINMLMM@TableBorderStrong@
CONST	SEGMENT
??_C@_0BC@EJINMLMM@TableBorderStrong@ DB 'TableBorderStrong', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OAEMMJAA@TableHeaderBg@
CONST	SEGMENT
??_C@_0O@OAEMMJAA@TableHeaderBg@ DB 'TableHeaderBg', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GJALJGDC@PlotHistogramHovered@
CONST	SEGMENT
??_C@_0BF@GJALJGDC@PlotHistogramHovered@ DB 'PlotHistogramHovered', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EEKOCENA@PlotHistogram@
CONST	SEGMENT
??_C@_0O@EEKOCENA@PlotHistogram@ DB 'PlotHistogram', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OMALNJLN@PlotLinesHovered@
CONST	SEGMENT
??_C@_0BB@OMALNJLN@PlotLinesHovered@ DB 'PlotLinesHovered', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HDJFFJLL@PlotLines@
CONST	SEGMENT
??_C@_09HDJFFJLL@PlotLines@ DB 'PlotLines', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JMEALEPP@TabUnfocusedActive@
CONST	SEGMENT
??_C@_0BD@JMEALEPP@TabUnfocusedActive@ DB 'TabUnfocusedActive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KLEENDFP@TabUnfocused@
CONST	SEGMENT
??_C@_0N@KLEENDFP@TabUnfocused@ DB 'TabUnfocused', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BLMKPFCF@TabActive@
CONST	SEGMENT
??_C@_09BLMKPFCF@TabActive@ DB 'TabActive', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JFDLBKBD@TabHovered@
CONST	SEGMENT
??_C@_0L@JFDLBKBD@TabHovered@ DB 'TabHovered', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03IEAKBACE@Tab@
CONST	SEGMENT
??_C@_03IEAKBACE@Tab@ DB 'Tab', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NBBKHKIC@ResizeGripActive@
CONST	SEGMENT
??_C@_0BB@NBBKHKIC@ResizeGripActive@ DB 'ResizeGripActive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NNEDPMNH@ResizeGripHovered@
CONST	SEGMENT
??_C@_0BC@NNEDPMNH@ResizeGripHovered@ DB 'ResizeGripHovered', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NGBDNFNJ@ResizeGrip@
CONST	SEGMENT
??_C@_0L@NGBDNFNJ@ResizeGrip@ DB 'ResizeGrip', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BPNGFOJM@SeparatorActive@
CONST	SEGMENT
??_C@_0BA@BPNGFOJM@SeparatorActive@ DB 'SeparatorActive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CHICANJA@SeparatorHovered@
CONST	SEGMENT
??_C@_0BB@CHICANJA@SeparatorHovered@ DB 'SeparatorHovered', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09IBFEOKHN@Separator@
CONST	SEGMENT
??_C@_09IBFEOKHN@Separator@ DB 'Separator', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HILFCJOI@HeaderActive@
CONST	SEGMENT
??_C@_0N@HILFCJOI@HeaderActive@ DB 'HeaderActive', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HAINNLMC@HeaderHovered@
CONST	SEGMENT
??_C@_0O@HAINNLMC@HeaderHovered@ DB 'HeaderHovered', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06OENKJGA@Header@
CONST	SEGMENT
??_C@_06OENKJGA@Header@ DB 'Header', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IMHOFKJ@ButtonActive@
CONST	SEGMENT
??_C@_0N@IMHOFKJ@ButtonActive@ DB 'ButtonActive', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HBCGNIAI@ButtonHovered@
CONST	SEGMENT
??_C@_0O@HBCGNIAI@ButtonHovered@ DB 'ButtonHovered', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LKBCGDFD@Button@
CONST	SEGMENT
??_C@_06LKBCGDFD@Button@ DB 'Button', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HBOBMOMP@SliderGrabActive@
CONST	SEGMENT
??_C@_0BB@HBOBMOMP@SliderGrabActive@ DB 'SliderGrabActive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LAMBADIC@SliderGrab@
CONST	SEGMENT
??_C@_0L@LAMBADIC@SliderGrab@ DB 'SliderGrab', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09DMKAANGE@CheckMark@
CONST	SEGMENT
??_C@_09DMKAANGE@CheckMark@ DB 'CheckMark', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GODMFNCF@ScrollbarGrabActive@
CONST	SEGMENT
??_C@_0BE@GODMFNCF@ScrollbarGrabActive@ DB 'ScrollbarGrabActive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JFEOOMLL@ScrollbarGrabHovered@
CONST	SEGMENT
??_C@_0BF@JFEOOMLL@ScrollbarGrabHovered@ DB 'ScrollbarGrabHovered', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HABIDNBE@ScrollbarGrab@
CONST	SEGMENT
??_C@_0O@HABIDNBE@ScrollbarGrab@ DB 'ScrollbarGrab', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MFDHPFJF@ScrollbarBg@
CONST	SEGMENT
??_C@_0M@MFDHPFJF@ScrollbarBg@ DB 'ScrollbarBg', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09GEKCKLDE@MenuBarBg@
CONST	SEGMENT
??_C@_09GEKCKLDE@MenuBarBg@ DB 'MenuBarBg', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EGCOMBJG@TitleBgCollapsed@
CONST	SEGMENT
??_C@_0BB@EGCOMBJG@TitleBgCollapsed@ DB 'TitleBgCollapsed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JHBFJHNE@TitleBgActive@
CONST	SEGMENT
??_C@_0O@JHBFJHNE@TitleBgActive@ DB 'TitleBgActive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MMLEKCPI@TitleBg@
CONST	SEGMENT
??_C@_07MMLEKCPI@TitleBg@ DB 'TitleBg', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BGDCDDEA@FrameBgActive@
CONST	SEGMENT
??_C@_0O@BGDCDDEA@FrameBgActive@ DB 'FrameBgActive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KIOOHHAC@FrameBgHovered@
CONST	SEGMENT
??_C@_0P@KIOOHHAC@FrameBgHovered@ DB 'FrameBgHovered', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07PJIIOGAC@FrameBg@
CONST	SEGMENT
??_C@_07PJIIOGAC@FrameBg@ DB 'FrameBg', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DECGFAEC@BorderShadow@
CONST	SEGMENT
??_C@_0N@DECGFAEC@BorderShadow@ DB 'BorderShadow', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06CMOGDIBK@Border@
CONST	SEGMENT
??_C@_06CMOGDIBK@Border@ DB 'Border', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LKIIIJHA@PopupBg@
CONST	SEGMENT
??_C@_07LKIIIJHA@PopupBg@ DB 'PopupBg', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07BLEJOHFO@ChildBg@
CONST	SEGMENT
??_C@_07BLEJOHFO@ChildBg@ DB 'ChildBg', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DMKFNKPN@WindowBg@
CONST	SEGMENT
??_C@_08DMKFNKPN@WindowBg@ DB 'WindowBg', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LNHHFNPK@TextDisabled@
CONST	SEGMENT
??_C@_0N@LNHHFNPK@TextDisabled@ DB 'TextDisabled', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04OJAHODMC@Text@
CONST	SEGMENT
??_C@_04OJAHODMC@Text@ DB 'Text', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??GetStyleColorName@ImGui@@YAPEBDH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetStyleColorName@ImGui@@YAPEBDH@Z@4JA DD 0a1dH ; `ImGui::GetStyleColorName'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1JE@EECEMJDC@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?5?$AAP?$AAu@
CONST	SEGMENT
??_C@_1JE@EECEMJDC@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?5?$AAP?$AAu@ DB '0'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'C', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'P'
	DB	00H, 'u', 00H, 's', 00H, 'h', 00H, 'S', 00H, 't', 00H, 'y', 00H
	DB	'l', 00H, 'e', 00H, 'V', 00H, 'a', 00H, 'r', 00H, '(', 00H, ')'
	DB	00H, ' ', 00H, 'I', 00H, 'm', 00H, 'V', 00H, 'e', 00H, 'c', 00H
	DB	'2', 00H, ' ', 00H, 'v', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'a'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, 'b', 00H, 'u', 00H, 't', 00H
	DB	' ', 00H, 'v', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 'b'
	DB	00H, 'l', 00H, 'e', 00H, ' ', 00H, 'i', 00H, 's', 00H, ' ', 00H
	DB	'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'I'
	DB	00H, 'm', 00H, 'V', 00H, 'e', 00H, 'c', 00H, '2', 00H, '!', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??PushStyleVar@ImGui@@YAXHAEBUImVec2@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??PushStyleVar@ImGui@@YAXHAEBUImVec2@@@Z@4JA DD 09ffH ; `ImGui::PushStyleVar'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1JA@BICGEIG@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?5?$AAP?$AAu@
CONST	SEGMENT
??_C@_1JA@BICGEIG@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?5?$AAP?$AAu@ DB '0'
	DB	00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'C', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'P'
	DB	00H, 'u', 00H, 's', 00H, 'h', 00H, 'S', 00H, 't', 00H, 'y', 00H
	DB	'l', 00H, 'e', 00H, 'V', 00H, 'a', 00H, 'r', 00H, '(', 00H, ')'
	DB	00H, ' ', 00H, 'f', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 't', 00H
	DB	' ', 00H, 'v', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 'n'
	DB	00H, 't', 00H, ' ', 00H, 'b', 00H, 'u', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, ' ', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'n', 00H
	DB	'o', 00H, 't', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'f', 00H, 'l'
	DB	00H, 'o', 00H, 'a', 00H, 't', 00H, '!', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??PushStyleVar@ImGui@@YAXHM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??PushStyleVar@ImGui@@YAXHM@Z@4JA DD 09f1H ; `ImGui::PushStyleVar'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1EM@KGOACLAI@?$AAi?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AAd?$AAx@
CONST	SEGMENT
??_C@_1EM@KGOACLAI@?$AAi?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AAd?$AAx@ DB 'i'
	DB	00H, 'd', 00H, 'x', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'i', 00H, 'd'
	DB	00H, 'x', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'I', 00H, 'm', 00H
	DB	'G', 00H, 'u', 00H, 'i', 00H, 'S', 00H, 't', 00H, 'y', 00H, 'l'
	DB	00H, 'e', 00H, 'V', 00H, 'a', 00H, 'r', 00H, '_', 00H, 'C', 00H
	DB	'O', 00H, 'U', 00H, 'N', 00H, 'T', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??GetStyleVarInfo@@YAPEBUImGuiStyleVarInfo@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetStyleVarInfo@@YAPEBUImGuiStyleVarInfo@@H@Z@4JA DD 09eaH ; `GetStyleVarInfo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1NE@MGLAEJCB@?$AAG?$AAI?$AAm?$AAG?$AAu?$AAi?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1NE@MGLAEJCB@?$AAG?$AAI?$AAm?$AAG?$AAu?$AAi?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB 'G'
	DB	00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u', 00H, 'i', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '"', 00H, 'N', 00H, 'o', 00H, ' ', 00H, 'c', 00H
	DB	'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' '
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, '.', 00H, ' ', 00H, 'D', 00H, 'i', 00H, 'd', 00H, ' '
	DB	00H, 'y', 00H, 'o', 00H, 'u', 00H, ' ', 00H, 'c', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, ' ', 00H, 'I', 00H, 'm', 00H, 'G', 00H, 'u'
	DB	00H, 'i', 00H, ':', 00H, ':', 00H, 'C', 00H, 'r', 00H, 'e', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't'
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, '(', 00H, ')', 00H, ' ', 00H
	DB	'a', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'I', 00H, 'm', 00H, 'G'
	DB	00H, 'u', 00H, 'i', 00H, ':', 00H, ':', 00H, 'S', 00H, 'e', 00H
	DB	't', 00H, 'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H, 'n'
	DB	00H, 't', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'x', 00H, 't', 00H, '(', 00H, ')', 00H, ' ', 00H, '?', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FJ@JBAFLEHG@No?5current?5context?4?5Did?5you?5cal@
CONST	SEGMENT
??_C@_0FJ@JBAFLEHG@No?5current?5context?4?5Did?5you?5cal@ DB 'No current '
	DB	'context. Did you call ImGui::CreateContext() and ImGui::SetCu'
	DB	'rrentContext() ?', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ@4JA DD 097fH ; `ImGui::GetStyle'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CG@FEFCFAEB@?$AAI?$AAt?$AAe?$AAm?$AAs?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1CG@FEFCFAEB@?$AAI?$AAt?$AAe?$AAm?$AAs?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0@ DB 'I'
	DB	00H, 't', 00H, 'e', 00H, 'm', 00H, 's', 00H, 'H', 00H, 'e', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '0', 00H, '.', 00H, '0', 00H, 'f', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@DHHMFPNJ@?$AAI?$AAt?$AAe?$AAm?$AAs?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1NA@DHHMFPNJ@?$AAI?$AAt?$AAe?$AAm?$AAs?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0@ DB 'I'
	DB	00H, 't', 00H, 'e', 00H, 'm', 00H, 's', 00H, 'H', 00H, 'e', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '0', 00H, '.', 00H, '0', 00H, 'f', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b'
	DB	00H, 'l', 00H, 'e', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H
	DB	'c', 00H, 'a', 00H, 'l', 00H, 'c', 00H, 'u', 00H, 'l', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'm', 00H, ' ', 00H, 'h', 00H, 'e', 00H, 'i', 00H, 'g', 00H, 'h'
	DB	00H, 't', 00H, '!', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'r', 00H
	DB	's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'm'
	DB	00H, ' ', 00H, 'h', 00H, 'a', 00H, 's', 00H, 'n', 00H, '''', 00H
	DB	't', 00H, ' ', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'd'
	DB	00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'c', 00H
	DB	'u', 00H, 'r', 00H, 's', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'v'
	DB	00H, 'e', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'y', 00H, '!', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@HACOCONG@Unable?5to?5calculate?5item?5height@
CONST	SEGMENT
??_C@_0FA@HACOCONG@Unable?5to?5calculate?5item?5height@ DB 'Unable to cal'
	DB	'culate item height! First item hasn''t moved the cursor verti'
	DB	'cally!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@EMDFCODN@?$AAI?$AAt?$AAe?$AAm?$AAs?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5@
CONST	SEGMENT
??_C@_1CI@EMDFCODN@?$AAI?$AAt?$AAe?$AAm?$AAs?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5@ DB 'I'
	DB	00H, 't', 00H, 'e', 00H, 'm', 00H, 's', 00H, 'H', 00H, 'e', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, ' ', 00H, '<', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, '.', 00H, '0', 00H, 'f', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Step@ImGuiListClipper@@QEAA_NXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Step@ImGuiListClipper@@QEAA_NXZ@4JA DD 0914H ; `ImGuiListClipper::Step'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1IM@IGMMBPBP@?$AAI?$AAt?$AAe?$AAm?$AAs?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?9@
CONST	SEGMENT
??_C@_1IM@IGMMBPBP@?$AAI?$AAt?$AAe?$AAm?$AAs?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?9@ DB 'I'
	DB	00H, 't', 00H, 'e', 00H, 'm', 00H, 's', 00H, 'C', 00H, 'o', 00H
	DB	'u', 00H, 'n', 00H, 't', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, '-', 00H, '1', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H
	DB	'"', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'g', 00H, 'o', 00H, 't'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'c', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, ' ', 00H, 'E', 00H, 'n', 00H, 'd', 00H, '('
	DB	00H, ')', 00H, ',', 00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'e', 00H, 'p'
	DB	00H, '(', 00H, ')', 00H, ' ', 00H, 'u', 00H, 'n', 00H, 't', 00H
	DB	'i', 00H, 'l', 00H, ' ', 00H, 'f', 00H, 'a', 00H, 'l', 00H, 's'
	DB	00H, 'e', 00H, '?', 00H, '"', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@BHONNBHO@Forgot?5to?5call?5End?$CI?$CJ?0?5or?5to?5Ste@
CONST	SEGMENT
??_C@_0DA@BHONNBHO@Forgot?5to?5call?5End?$CI?$CJ?0?5or?5to?5Ste@ DB 'Forg'
	DB	'ot to call End(), or to Step() until false?', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???1ImGuiListClipper@@QEAA@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1ImGuiListClipper@@QEAA@XZ@4JA DD 08eeH ; `ImGuiListClipper::~ImGuiListClipper'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@MDBCLFOC@?$AAf?$AAi?$AAl?$AAe?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAm?$AAo?$AAd@
CONST	SEGMENT
??_C@_1CC@MDBCLFOC@?$AAf?$AAi?$AAl?$AAe?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAm?$AAo?$AAd@ DB 'f'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'a', 00H, 'm', 00H
	DB	'e', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'm', 00H, 'o'
	DB	00H, 'd', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??ImFileLoadToMemory@@YAPEAXPEBD0PEA_KH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ImFileLoadToMemory@@YAPEAXPEBD0PEA_KH@Z@4JA DD 0626H ; `ImFileLoadToMemory'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CA@PELHDBHK@?$AAt?$AAe?$AAs?$AAs?$AA_?$AAt?$AAo?$AAl?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AA0?$AAf@
CONST	SEGMENT
??_C@_1CA@PELHDBHK@?$AAt?$AAe?$AAs?$AAs?$AA_?$AAt?$AAo?$AAl?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AA0?$AAf@ DB 't'
	DB	00H, 'e', 00H, 's', 00H, 's', 00H, '_', 00H, 't', 00H, 'o', 00H
	DB	'l', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H, '.', 00H, '0'
	DB	00H, 'f', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU2@0000M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU2@0000M@Z@4JA DD 04d6H ; `ImBezierCubicClosestPointCasteljau'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CC@OJIGCPJC@?$AAn?$AAu?$AAm?$AA_?$AAs?$AAe?$AAg?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?5?$AA?$DO?$AA?5@
CONST	SEGMENT
??_C@_1CC@OJIGCPJC@?$AAn?$AAu?$AAm?$AA_?$AAs?$AAe?$AAg?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?5?$AA?$DO?$AA?5@ DB 'n'
	DB	00H, 'u', 00H, 'm', 00H, '_', 00H, 's', 00H, 'e', 00H, 'g', 00H
	DB	'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, 's', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
CONST	SEGMENT
??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'd', 00H, 'e', 00H, 'v', 00H, '\', 00H
	DB	'R', 00H, 'a', 00H, 'i', 00H, 's', 00H, 'i', 00H, 'n', 00H, '\'
	DB	00H, 'R', 00H, 'a', 00H, 'i', 00H, 's', 00H, 'i', 00H, 'n', 00H
	DB	'\', 00H, 's', 00H, 'r', 00H, 'c', 00H, '\', 00H, 'R', 00H, 'a'
	DB	00H, 'i', 00H, 's', 00H, 'i', 00H, 'n', 00H, '\', 00H, 'i', 00H
	DB	'm', 00H, 'g', 00H, 'u', 00H, 'i', 00H, '\', 00H, 'i', 00H, 'm'
	DB	00H, 'g', 00H, 'u', 00H, 'i', 00H, '.', 00H, 'c', 00H, 'p', 00H
	DB	'p', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU2@0000H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU2@0000H@Z@4JA DD 049cH ; `ImBezierCubicClosestPoint'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0O@HCOAADPE@imgui_log?4txt@
CONST	SEGMENT
??_C@_0O@HCOAADPE@imgui_log?4txt@ DB 'imgui_log.txt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BJIHMJFE@imgui?4ini@
CONST	SEGMENT
??_C@_09BJIHMJFE@imgui?4ini@ DB 'imgui.ini', 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
?GImAllocatorAllocFunc@@3P6APEAX_KPEAX@ZEA DQ FLAT:?MallocWrapper@@YAPEAX_KPEAX@Z ; GImAllocatorAllocFunc
?GImAllocatorFreeFunc@@3P6AXPEAX0@ZEA DQ FLAT:?FreeWrapper@@YAXPEAX0@Z ; GImAllocatorFreeFunc
_DATA	ENDS
;	COMDAT ??_C@_1BC@LLDLMHEG@?$AAk?$AAe?$AAy?$AA?5?$AA?$DM?$AA?5?$AA6?$AA4@
CONST	SEGMENT
??_C@_1BC@LLDLMHEG@?$AAk?$AAe?$AAy?$AA?5?$AA?$DM?$AA?5?$AA6?$AA4@ DB 'k', 00H
	DB	'e', 00H, 'y', 00H, ' ', 00H, '<', 00H, ' ', 00H, '6', 00H, '4'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??IsActiveIdUsingKey@ImGui@@YA_NH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??IsActiveIdUsingKey@ImGui@@YA_NH@Z@4JA DD 09a7H ; `ImGui::IsActiveIdUsingKey'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_13COJANIEC@?$AA0@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0@ DB '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1HM@PJKJLKEH@?$AAt?$AAa?$AAb?$AA?9?$AA?$DO?$AAN?$AAa?$AAm?$AAe?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt@
CONST	SEGMENT
??_C@_1HM@PJKJLKEH@?$AAt?$AAa?$AAb?$AA?9?$AA?$DO?$AAN?$AAa?$AAm?$AAe?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt@ DB 't'
	DB	00H, 'a', 00H, 'b', 00H, '-', 00H, '>', 00H, 'N', 00H, 'a', 00H
	DB	'm', 00H, 'e', 00H, 'O', 00H, 'f', 00H, 'f', 00H, 's', 00H, 'e'
	DB	00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '-', 00H
	DB	'1', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 't', 00H, 'a'
	DB	00H, 'b', 00H, '-', 00H, '>', 00H, 'N', 00H, 'a', 00H, 'm', 00H
	DB	'e', 00H, 'O', 00H, 'f', 00H, 'f', 00H, 's', 00H, 'e', 00H, 't'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, 'T', 00H, 'a', 00H, 'b', 00H
	DB	's', 00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 's', 00H, '.'
	DB	00H, 'B', 00H, 'u', 00H, 'f', 00H, '.', 00H, 'S', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1GO@IOCEAJPC@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
CONST	SEGMENT
??_C@_1GO@IOCEAJPC@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'd', 00H, 'e', 00H, 'v', 00H, '\', 00H
	DB	'R', 00H, 'a', 00H, 'i', 00H, 's', 00H, 'i', 00H, 'n', 00H, '\'
	DB	00H, 'R', 00H, 'a', 00H, 'i', 00H, 's', 00H, 'i', 00H, 'n', 00H
	DB	'\', 00H, 's', 00H, 'r', 00H, 'c', 00H, '\', 00H, 'R', 00H, 'a'
	DB	00H, 'i', 00H, 's', 00H, 'i', 00H, 'n', 00H, '\', 00H, 'i', 00H
	DB	'm', 00H, 'g', 00H, 'u', 00H, 'i', 00H, '\', 00H, 'i', 00H, 'm'
	DB	00H, 'g', 00H, 'u', 00H, 'i', 00H, '_', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 'l', 00H, '.'
	DB	00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@IIGHOJGM@?$AAi?$AAd?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA1@
CONST	SEGMENT
??_C@_1BC@IIGHOJGM@?$AAi?$AAd?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA1@ DB 'i'
	DB	00H, 'd', 00H, 'x', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H
	DB	'1', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
CONST	SEGMENT
??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'd', 00H, 'e', 00H, 'v', 00H, '\', 00H
	DB	'R', 00H, 'a', 00H, 'i', 00H, 's', 00H, 'i', 00H, 'n', 00H, '\'
	DB	00H, 'R', 00H, 'a', 00H, 'i', 00H, 's', 00H, 'i', 00H, 'n', 00H
	DB	'\', 00H, 's', 00H, 'r', 00H, 'c', 00H, '\', 00H, 'R', 00H, 'a'
	DB	00H, 'i', 00H, 's', 00H, 'i', 00H, 'n', 00H, '\', 00H, 'i', 00H
	DB	'm', 00H, 'g', 00H, 'u', 00H, 'i', 00H, '\', 00H, 'i', 00H, 'm'
	DB	00H, 'g', 00H, 'u', 00H, 'i', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$IM_DELETE@UImGuiWindow@@@@YAXPEAUImGuiWindow@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$IM_DELETE@UImGuiViewportP@@@@YAXPEAUImGuiViewportP@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	041H
	DW	030aH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWindowRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiWindow@@H@Z DD 025064819H
	DD	0119231eH
	DD	070120036H
	DD	050106011H
	DD	imagerel __GSHandlerCheck
	DD	01a0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?GetWindowRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiWindow@@H@Z$rtcName$0 DB 06dH ; `ImGui::ShowMetricsWindow'::`2'::Funcs::GetWindowRect
	DB	069H
	DB	06eH
	DB	00H
?GetWindowRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiWindow@@H@Z$rtcName$1 DB 06dH ; `ImGui::ShowMetricsWindow'::`2'::Funcs::GetWindowRect
	DB	069H
	DB	06eH
	DB	00H
	ORG $+8
?GetWindowRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiWindow@@H@Z$rtcVarDesc DD 048H ; `ImGui::ShowMetricsWindow'::`2'::Funcs::GetWindowRect
	DD	08H
	DQ	FLAT:?GetWindowRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiWindow@@H@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?GetWindowRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiWindow@@H@Z$rtcName$0
	ORG $+96
?GetWindowRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiWindow@@H@Z$rtcFrameData DD 02H ; `ImGui::ShowMetricsWindow'::`2'::Funcs::GetWindowRect
	DD	00H
	DQ	FLAT:?GetWindowRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiWindow@@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetTableRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiTable@@HH@Z DD 035062301H
	DD	011e3323H
	DD	07017003aH
	DD	050156016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?MetricsHelpMarker@@YAXPEBD@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02aH
	DW	02b5H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderViewportsThumbnails@@YAXXZ DD 035053119H
	DD	010a330fH
	DD	07003008bH
	DD	05002H
	DD	imagerel __GSHandlerCheck
	DD	0448H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?RenderViewportsThumbnails@@YAXXZ$rtcName$0 DB 062H	; RenderViewportsThumbnails
	DB	062H
	DB	05fH
	DB	066H
	DB	075H
	DB	06cH
	DB	06cH
	DB	00H
?RenderViewportsThumbnails@@YAXXZ$rtcName$1 DB 070H	; RenderViewportsThumbnails
	DB	00H
	ORG $+2
?RenderViewportsThumbnails@@YAXXZ$rtcName$2 DB 06fH	; RenderViewportsThumbnails
	DB	066H
	DB	066H
	DB	00H
?RenderViewportsThumbnails@@YAXXZ$rtcName$3 DB 076H	; RenderViewportsThumbnails
	DB	069H
	DB	065H
	DB	077H
	DB	070H
	DB	06fH
	DB	072H
	DB	074H
	DB	05fH
	DB	064H
	DB	072H
	DB	061H
	DB	077H
	DB	05fH
	DB	062H
	DB	062H
	DB	00H
	ORG $+15
?RenderViewportsThumbnails@@YAXXZ$rtcVarDesc DD 0168H	; RenderViewportsThumbnails
	DD	010H
	DQ	FLAT:?RenderViewportsThumbnails@@YAXXZ$rtcName$3
	DD	0108H
	DD	08H
	DQ	FLAT:?RenderViewportsThumbnails@@YAXXZ$rtcName$2
	DD	0e8H
	DD	08H
	DQ	FLAT:?RenderViewportsThumbnails@@YAXXZ$rtcName$1
	DD	098H
	DD	010H
	DQ	FLAT:?RenderViewportsThumbnails@@YAXXZ$rtcName$0
	ORG $+192
?RenderViewportsThumbnails@@YAXXZ$rtcFrameData DD 04H	; RenderViewportsThumbnails
	DD	00H
	DQ	FLAT:?RenderViewportsThumbnails@@YAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LogTextV@@YAXAEAUImGuiContext@@PEBDPEAD@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetFallbackWindowNameForWindowingList@@YAPEBDPEAUImGuiWindow@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavUpdateWindowingHighlightWindow@@YAXH@Z DD 025051201H
	DD	010d2312H
	DD	070060029H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FindWindowNavFocusable@@YAPEAUImGuiWindow@@HHH@Z DD 025051b01H
	DD	0116231bH
	DD	0700f0025H
	DD	0500eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavClampRectToVisibleAreaForMoveDir@@YAXHAEAUImRect@@AEBU1@@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavScoreItemDistInterval@@YAMMMMM@Z DD 035052601H
	DD	01213326H
	DD	0701a001fH
	DD	05019H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$ImLerp@M@@YAMMMM@Z DD 035052001H
	DD	011b3320H
	DD	07014001fH
	DD	05013H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcScrollEdgeSnap@@YAMMMMMM@Z DD 035052601H
	DD	01213326H
	DD	0701a001fH
	DD	05019H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03bH
	DW	0112H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClampWindowRect@@YAXPEAUImGuiWindow@@AEBUImRect@@@Z DD 025054219H
	DD	01132318H
	DD	0700c0033H
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0180H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ClampWindowRect@@YAXPEAUImGuiWindow@@AEBUImRect@@@Z$rtcName$0 DB 073H ; ClampWindowRect
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	066H
	DB	06fH
	DB	072H
	DB	05fH
	DB	063H
	DB	06cH
	DB	061H
	DB	06dH
	DB	070H
	DB	069H
	DB	06eH
	DB	067H
	DB	00H
	ORG $+14
?ClampWindowRect@@YAXPEAUImGuiWindow@@AEBUImRect@@@Z$rtcVarDesc DD 048H ; ClampWindowRect
	DD	08H
	DQ	FLAT:?ClampWindowRect@@YAXPEAUImGuiWindow@@AEBUImRect@@@Z$rtcName$0
	ORG $+48
?ClampWindowRect@@YAXPEAUImGuiWindow@@AEBUImRect@@@Z$rtcFrameData DD 01H ; ClampWindowRect
	DD	00H
	DQ	FLAT:?ClampWindowRect@@YAXPEAUImGuiWindow@@AEBUImRect@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	046H
	DW	02b6H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z DD 035054d19H
	DD	011e3323H
	DD	070170029H
	DD	05016H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z$rtcName$0 DB 072H ; GetResizeBorderRect
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+11
?GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z$rtcVarDesc DD 038H ; GetResizeBorderRect
	DD	010H
	DQ	FLAT:?GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z$rtcName$0
	ORG $+48
?GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z$rtcFrameData DD 01H ; GetResizeBorderRect
	DD	00H
	DQ	FLAT:?GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Eresize_border_def@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Eresize_grip_def@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	018dH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z DD 025054c19H
	DD	011d2322H
	DD	070160031H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0178H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z$rtcName$0 DB 070H ; CalcResizePosSizeFromAnyCorner
	DB	06fH
	DB	073H
	DB	05fH
	DB	06dH
	DB	069H
	DB	06eH
	DB	00H
?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z$rtcName$1 DB 070H ; CalcResizePosSizeFromAnyCorner
	DB	06fH
	DB	073H
	DB	05fH
	DB	06dH
	DB	061H
	DB	078H
	DB	00H
?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z$rtcName$2 DB 073H ; CalcResizePosSizeFromAnyCorner
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	065H
	DB	078H
	DB	070H
	DB	065H
	DB	063H
	DB	074H
	DB	065H
	DB	064H
	DB	00H
	ORG $+2
?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z$rtcName$3 DB 073H ; CalcResizePosSizeFromAnyCorner
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	063H
	DB	06fH
	DB	06eH
	DB	073H
	DB	074H
	DB	072H
	DB	061H
	DB	069H
	DB	06eH
	DB	065H
	DB	064H
	DB	00H
	ORG $+15
?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z$rtcVarDesc DD 088H ; CalcResizePosSizeFromAnyCorner
	DD	08H
	DQ	FLAT:?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z$rtcName$3
	DD	068H
	DD	08H
	DQ	FLAT:?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z$rtcName$2
	DD	048H
	DD	08H
	DQ	FLAT:?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z$rtcName$0
	ORG $+192
?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z$rtcFrameData DD 04H ; CalcResizePosSizeFromAnyCorner
	DD	00H
	DQ	FLAT:?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWindowBgColorIdxFromFlags@@YAHH@Z DD 025051201H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	040H
	DW	03fbH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z DD 025054719H
	DD	0118231dH
	DD	070110087H
	DD	05010H
	DD	imagerel __GSHandlerCheck
	DD	0428H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcName$0 DB 073H ; CalcWindowAutoFitSize
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	070H
	DB	061H
	DB	064H
	DB	00H
	ORG $+7
?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcName$1 DB 073H ; CalcWindowAutoFitSize
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	064H
	DB	065H
	DB	073H
	DB	069H
	DB	072H
	DB	065H
	DB	064H
	DB	00H
	ORG $+3
?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcName$2 DB 073H ; CalcWindowAutoFitSize
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	06dH
	DB	069H
	DB	06eH
	DB	00H
	ORG $+7
?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcName$3 DB 061H ; CalcWindowAutoFitSize
	DB	076H
	DB	061H
	DB	069H
	DB	06cH
	DB	05fH
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+5
?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcName$4 DB 073H ; CalcWindowAutoFitSize
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	061H
	DB	075H
	DB	074H
	DB	06fH
	DB	05fH
	DB	066H
	DB	069H
	DB	074H
	DB	00H
	ORG $+2
?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcName$5 DB 073H ; CalcWindowAutoFitSize
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	061H
	DB	075H
	DB	074H
	DB	06fH
	DB	05fH
	DB	066H
	DB	069H
	DB	074H
	DB	05fH
	DB	061H
	DB	066H
	DB	074H
	DB	065H
	DB	072H
	DB	05fH
	DB	063H
	DB	06fH
	DB	06eH
	DB	073H
	DB	074H
	DB	072H
	DB	061H
	DB	069H
	DB	06eH
	DB	074H
	DB	00H
	ORG $+1
?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcVarDesc DD 0168H ; CalcWindowAutoFitSize
	DD	08H
	DQ	FLAT:?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcName$5
	DD	0148H
	DD	08H
	DQ	FLAT:?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcName$4
	DD	0128H
	DD	08H
	DQ	FLAT:?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcName$3
	DD	0108H
	DD	08H
	DQ	FLAT:?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcName$2
	DD	0a8H
	DD	08H
	DQ	FLAT:?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcName$1
	DD	088H
	DD	08H
	DQ	FLAT:?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcName$0
	ORG $+288
?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcFrameData DD 06H ; CalcWindowAutoFitSize
	DD	00H
	DQ	FLAT:?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcWindowContentSizes@@YAXPEAUImGuiWindow@@PEAUImVec2@@1@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	041H
	DW	02d4H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z DD 025064819H
	DD	0119231eH
	DD	070120040H
	DD	050106011H
	DD	imagerel __GSHandlerCheck
	DD	01f0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcName$0 DB 06eH ; CalcWindowSizeAfterConstraint
	DB	065H
	DB	077H
	DB	05fH
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+3
?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcName$1 DB 063H ; CalcWindowSizeAfterConstraint
	DB	072H
	DB	00H
	ORG $+1
?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcName$2 DB 064H ; CalcWindowSizeAfterConstraint
	DB	061H
	DB	074H
	DB	061H
	DB	00H
	ORG $+3
?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcFrameData DD 03H ; CalcWindowSizeAfterConstraint
	DD	00H
	DQ	FLAT:?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcVarDesc
	ORG $+8
?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcVarDesc DD 098H ; CalcWindowSizeAfterConstraint
	DD	020H
	DQ	FLAT:?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcName$2
	DD	068H
	DD	010H
	DQ	FLAT:?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcName$1
	DD	048H
	DD	08H
	DQ	FLAT:?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ApplyWindowSettings@@YAXPEAUImGuiWindow@@PEAUImGuiWindowSettings@@@Z DD 025051801H
	DD	01132318H
	DD	0700c002dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetWindowConditionAllowFlags@@YAXPEAUImGuiWindow@@H_N@Z DD 025051c01H
	DD	0117231cH
	DD	07010001fH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetupViewportDrawData@@YAXPEAUImGuiViewportP@@PEAU?$ImVector@PEAUImDrawList@@@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0029H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddRootWindowToDrawData@@YAXPEAUImGuiWindow@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddWindowToDrawData@@YAXPEAUImGuiWindow@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b002dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ChildWindowComparer@@YAHPEBX0@Z DD 025051801H
	DD	01132318H
	DD	0700c002dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$IM_DELETE@UImFontAtlas@@@@YAXPEAUImFontAtlas@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$ImClamp@M@@YAMMMM@Z DD 035052001H
	DD	011b3320H
	DD	070140021H
	DD	05013H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?StartLockWheelingWindow@@YAXPEAUImGuiWindow@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsWindowActiveAndVisible@@YA_NPEAUImGuiWindow@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	0dH, 03H
	DB	02H
	DB	08aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z DB 028H
	DD	imagerel $stateUnwindMap$?GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z
	DD	imagerel $ip2state$?GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z DD 025051d11H
	DD	0118231dH
	DD	070110045H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$IM_DELETE@UImGuiContext@@@@YAXPEAUImGuiContext@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsWindowContentHoverable@@YA_NPEAUImGuiWindow@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b0025H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$IM_DELETE@D@@YAXPEAD@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetStyleVarInfo@@YAPEBUImGuiStyleVarInfo@@H@Z DD 025051201H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetVarPtr@ImGuiStyleVarInfo@@QEBAPEAXPEAUImGuiStyle@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetCursorPosYAndSetupForPrevLine@@YAXMM@Z DD 025051a01H
	DD	0115231aH
	DD	0700e0035H
	DD	0500dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$ImClamp@H@@YAHHHH@Z DD 025051b01H
	DD	0116231bH
	DD	0700f001fH
	DD	0500eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSkipItemForListClipping@@YA_NXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PairCompareByID@StaticFunc@?1??BuildSortByKey@ImGuiStorage@@QEAAXXZ@SAHPEBX0@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LowerBound@@YAPEAUImGuiStoragePair@ImGuiStorage@@AEAU?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@I@Z DD 025051701H
	DD	01122317H
	DD	0700b0031H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$ImSwap@M@@YAXAEAM0@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$ImLerp@H@@YAHHHM@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImTextCountUtf8BytesFromChar@@YAHI@Z DD 025051201H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImTextCharToUtf8_inline@@YAHPEADHI@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	0554H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImBezierCubicClosestPointCasteljauStep@@YAXAEBUImVec2@@AEAU1@1AEAMMMMMMMMMMH@Z DD 075054c19H
	DD	011d7322H
	DD	07016008fH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0468H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ImBezierCubicClosestPointCasteljauStep@@YAXAEBUImVec2@@AEAU1@1AEAMMMMMMMMMMH@Z$rtcName$0 DB 070H ; ImBezierCubicClosestPointCasteljauStep
	DB	05fH
	DB	063H
	DB	075H
	DB	072H
	DB	072H
	DB	065H
	DB	06eH
	DB	074H
	DB	00H
	ORG $+2
?ImBezierCubicClosestPointCasteljauStep@@YAXAEBUImVec2@@AEAU1@1AEAMMMMMMMMMMH@Z$rtcName$1 DB 070H ; ImBezierCubicClosestPointCasteljauStep
	DB	05fH
	DB	06cH
	DB	069H
	DB	06eH
	DB	065H
	DB	00H
	ORG $+13
?ImBezierCubicClosestPointCasteljauStep@@YAXAEBUImVec2@@AEAU1@1AEAMMMMMMMMMMH@Z$rtcVarDesc DD 0118H ; ImBezierCubicClosestPointCasteljauStep
	DD	08H
	DQ	FLAT:?ImBezierCubicClosestPointCasteljauStep@@YAXAEBUImVec2@@AEAU1@1AEAMMMMMMMMMMH@Z$rtcName$1
	DD	0f8H
	DD	08H
	DQ	FLAT:?ImBezierCubicClosestPointCasteljauStep@@YAXAEBUImVec2@@AEAU1@1AEAMMMMMMMMMMH@Z$rtcName$0
	ORG $+96
?ImBezierCubicClosestPointCasteljauStep@@YAXAEBUImVec2@@AEAU1@1AEAMMMMMMMMMMH@Z$rtcFrameData DD 02H ; ImBezierCubicClosestPointCasteljauStep
	DD	00H
	DQ	FLAT:?ImBezierCubicClosestPointCasteljauStep@@YAXAEBUImVec2@@AEAU1@1AEAMMMMMMMMMMH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FreeWrapper@@YAXPEAX0@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?MallocWrapper@@YAPEAX_KPEAX@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateViewportsNewFrame@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030035H
	DD	05002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	0784H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z DD 045054c19H
	DD	011d4322H
	DD	07016009fH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	04e8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z$rtcName$0 DB 063H ; ImGui::RenderWindowTitleBarContents
	DB	06cH
	DB	06fH
	DB	073H
	DB	065H
	DB	05fH
	DB	062H
	DB	075H
	DB	074H
	DB	074H
	DB	06fH
	DB	06eH
	DB	05fH
	DB	070H
	DB	06fH
	DB	073H
	DB	00H
	ORG $+7
?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z$rtcName$1 DB 063H ; ImGui::RenderWindowTitleBarContents
	DB	06fH
	DB	06cH
	DB	06cH
	DB	061H
	DB	070H
	DB	073H
	DB	065H
	DB	05fH
	DB	062H
	DB	075H
	DB	074H
	DB	074H
	DB	06fH
	DB	06eH
	DB	05fH
	DB	070H
	DB	06fH
	DB	073H
	DB	00H
	ORG $+4
?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z$rtcName$2 DB 074H ; ImGui::RenderWindowTitleBarContents
	DB	065H
	DB	078H
	DB	074H
	DB	05fH
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+6
?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z$rtcName$3 DB 06cH ; ImGui::RenderWindowTitleBarContents
	DB	061H
	DB	079H
	DB	06fH
	DB	075H
	DB	074H
	DB	05fH
	DB	072H
	DB	00H
	ORG $+3
?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z$rtcName$4 DB 063H ; ImGui::RenderWindowTitleBarContents
	DB	06cH
	DB	069H
	DB	070H
	DB	05fH
	DB	072H
	DB	00H
	ORG $+5
?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z$rtcName$5 DB 06dH ; ImGui::RenderWindowTitleBarContents
	DB	061H
	DB	072H
	DB	06bH
	DB	065H
	DB	072H
	DB	05fH
	DB	070H
	DB	06fH
	DB	073H
	DB	00H
	ORG $+5
?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z$rtcFrameData DD 06H ; ImGui::RenderWindowTitleBarContents
	DD	00H
	DQ	FLAT:?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z$rtcVarDesc
	ORG $+8
?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z$rtcVarDesc DD 0288H ; ImGui::RenderWindowTitleBarContents
	DD	08H
	DQ	FLAT:?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z$rtcName$5
	DD	0258H
	DD	010H
	DQ	FLAT:?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z$rtcName$4
	DD	0228H
	DD	010H
	DQ	FLAT:?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z$rtcName$3
	DD	01c8H
	DD	08H
	DQ	FLAT:?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z$rtcName$2
	DD	0188H
	DD	08H
	DQ	FLAT:?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z$rtcName$1
	DD	0168H
	DD	08H
	DQ	FLAT:?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z$rtcName$0
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	099cH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z DD 035054c19H
	DD	011d3322H
	DD	0701600ebH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0748H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z$rtcName$0 DB 06dH ; ImGui::RenderWindowDecorations
	DB	065H
	DB	06eH
	DB	075H
	DB	05fH
	DB	062H
	DB	061H
	DB	072H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+2
?RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z$rtcName$1 DB 063H ; ImGui::RenderWindowDecorations
	DB	06fH
	DB	072H
	DB	06eH
	DB	065H
	DB	072H
	DB	00H
	ORG $+9
?RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z$rtcVarDesc DD 0208H ; ImGui::RenderWindowDecorations
	DD	08H
	DQ	FLAT:?RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z$rtcName$1
	DD	0198H
	DD	010H
	DQ	FLAT:?RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z$rtcName$0
	ORG $+96
?RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z$rtcFrameData DD 02H ; ImGui::RenderWindowDecorations
	DD	00H
	DQ	FLAT:?RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	036H
	DW	05aaH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderWindowOuterBorders@ImGui@@YAXPEAUImGuiWindow@@@Z DD 045053d19H
	DD	010e4313H
	DD	070070093H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0480H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?RenderWindowOuterBorders@ImGui@@YAXPEAUImGuiWindow@@@Z$rtcName$0 DB 062H ; ImGui::RenderWindowOuterBorders
	DB	06fH
	DB	072H
	DB	064H
	DB	065H
	DB	072H
	DB	05fH
	DB	072H
	DB	00H
	ORG $+7
?RenderWindowOuterBorders@ImGui@@YAXPEAUImGuiWindow@@@Z$rtcVarDesc DD 0e8H ; ImGui::RenderWindowOuterBorders
	DD	010H
	DQ	FLAT:?RenderWindowOuterBorders@ImGui@@YAXPEAUImGuiWindow@@@Z$rtcName$0
	ORG $+48
?RenderWindowOuterBorders@ImGui@@YAXPEAUImGuiWindow@@@Z$rtcFrameData DD 01H ; ImGui::RenderWindowOuterBorders
	DD	00H
	DQ	FLAT:?RenderWindowOuterBorders@ImGui@@YAXPEAUImGuiWindow@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	0deaH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z DD 035054c19H
	DD	011d3322H
	DD	07016013fH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	09e8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$0 DB 070H ; ImGui::UpdateWindowManualResize
	DB	06fH
	DB	073H
	DB	05fH
	DB	074H
	DB	061H
	DB	072H
	DB	067H
	DB	065H
	DB	074H
	DB	00H
	ORG $+5
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$1 DB 073H ; ImGui::UpdateWindowManualResize
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	074H
	DB	061H
	DB	072H
	DB	067H
	DB	065H
	DB	074H
	DB	00H
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$2 DB 063H ; ImGui::UpdateWindowManualResize
	DB	06fH
	DB	072H
	DB	06eH
	DB	065H
	DB	072H
	DB	00H
	ORG $+5
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$3 DB 068H ; ImGui::UpdateWindowManualResize
	DB	06fH
	DB	076H
	DB	065H
	DB	072H
	DB	065H
	DB	064H
	DB	00H
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$4 DB 068H ; ImGui::UpdateWindowManualResize
	DB	065H
	DB	06cH
	DB	064H
	DB	00H
	ORG $+3
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$5 DB 072H ; ImGui::UpdateWindowManualResize
	DB	065H
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+4
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$6 DB 063H ; ImGui::UpdateWindowManualResize
	DB	06cH
	DB	061H
	DB	06dH
	DB	070H
	DB	05fH
	DB	06dH
	DB	069H
	DB	06eH
	DB	00H
	ORG $+6
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$7 DB 063H ; ImGui::UpdateWindowManualResize
	DB	06cH
	DB	061H
	DB	06dH
	DB	070H
	DB	05fH
	DB	06dH
	DB	061H
	DB	078H
	DB	00H
	ORG $+6
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$8 DB 063H ; ImGui::UpdateWindowManualResize
	DB	06fH
	DB	072H
	DB	06eH
	DB	065H
	DB	072H
	DB	05fH
	DB	074H
	DB	061H
	DB	072H
	DB	067H
	DB	065H
	DB	074H
	DB	00H
	ORG $+2
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$9 DB 068H ; ImGui::UpdateWindowManualResize
	DB	06fH
	DB	076H
	DB	065H
	DB	072H
	DB	065H
	DB	064H
	DB	00H
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$10 DB 068H ; ImGui::UpdateWindowManualResize
	DB	065H
	DB	06cH
	DB	064H
	DB	00H
	ORG $+3
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$11 DB 062H ; ImGui::UpdateWindowManualResize
	DB	06fH
	DB	072H
	DB	064H
	DB	065H
	DB	072H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+4
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$12 DB 063H ; ImGui::UpdateWindowManualResize
	DB	06cH
	DB	061H
	DB	06dH
	DB	070H
	DB	05fH
	DB	06dH
	DB	069H
	DB	06eH
	DB	00H
	ORG $+6
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$13 DB 063H ; ImGui::UpdateWindowManualResize
	DB	06cH
	DB	061H
	DB	06dH
	DB	070H
	DB	05fH
	DB	06dH
	DB	061H
	DB	078H
	DB	00H
	ORG $+6
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$14 DB 062H ; ImGui::UpdateWindowManualResize
	DB	06fH
	DB	072H
	DB	064H
	DB	065H
	DB	072H
	DB	05fH
	DB	074H
	DB	061H
	DB	072H
	DB	067H
	DB	065H
	DB	074H
	DB	00H
	ORG $+2
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$15 DB 06eH ; ImGui::UpdateWindowManualResize
	DB	061H
	DB	076H
	DB	05fH
	DB	072H
	DB	065H
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	064H
	DB	065H
	DB	06cH
	DB	074H
	DB	061H
	DB	00H
	ORG $+7
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcVarDesc DD 03f8H ; ImGui::UpdateWindowManualResize
	DD	08H
	DQ	FLAT:?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$15
	DD	03d8H
	DD	08H
	DQ	FLAT:?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$14
	DD	03b8H
	DD	08H
	DQ	FLAT:?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$13
	DD	0398H
	DD	08H
	DQ	FLAT:?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$12
	DD	0348H
	DD	010H
	DQ	FLAT:?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$11
	DD	0324H
	DD	01H
	DQ	FLAT:?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$10
	DD	0304H
	DD	01H
	DQ	FLAT:?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$9
	DD	0288H
	DD	08H
	DQ	FLAT:?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$8
	DD	0268H
	DD	08H
	DQ	FLAT:?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$7
	DD	0248H
	DD	08H
	DQ	FLAT:?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$6
	DD	01f8H
	DD	010H
	DQ	FLAT:?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$5
	DD	01d4H
	DD	01H
	DQ	FLAT:?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$4
	DD	01b4H
	DD	01H
	DQ	FLAT:?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$3
	DD	0198H
	DD	08H
	DQ	FLAT:?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$2
	DD	0138H
	DD	08H
	DQ	FLAT:?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$1
	DD	0118H
	DD	08H
	DQ	FLAT:?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcName$0
	ORG $+768
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcFrameData DD 010H ; ImGui::UpdateWindowManualResize
	DD	00H
	DQ	FLAT:?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateDebugToolItemPicker@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030025H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateTabFocus@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030025H
	DD	05002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02aH
	DW	06e9H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateMouseWheel@ImGui@@YAXXZ DD 025053119H
	DD	010a230fH
	DD	07003008dH
	DD	05002H
	DD	imagerel __GSHandlerCheck
	DD	0450H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?UpdateMouseWheel@ImGui@@YAXXZ$rtcName$0 DB 06fH	; ImGui::UpdateMouseWheel
	DB	066H
	DB	066H
	DB	073H
	DB	065H
	DB	074H
	DB	00H
	ORG $+9
?UpdateMouseWheel@ImGui@@YAXXZ$rtcVarDesc DD 0a8H	; ImGui::UpdateMouseWheel
	DD	08H
	DQ	FLAT:?UpdateMouseWheel@ImGui@@YAXXZ$rtcName$0
	ORG $+48
?UpdateMouseWheel@ImGui@@YAXXZ$rtcFrameData DD 01H	; ImGui::UpdateMouseWheel
	DD	00H
	DQ	FLAT:?UpdateMouseWheel@ImGui@@YAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02aH
	DW	06d8H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateMouseInputs@ImGui@@YAXXZ DD 025053119H
	DD	010a230fH
	DD	070030057H
	DD	05002H
	DD	imagerel __GSHandlerCheck
	DD	02a0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?UpdateMouseInputs@ImGui@@YAXXZ$rtcName$0 DB 064H	; ImGui::UpdateMouseInputs
	DB	065H
	DB	06cH
	DB	074H
	DB	061H
	DB	05fH
	DB	066H
	DB	072H
	DB	06fH
	DB	06dH
	DB	05fH
	DB	063H
	DB	06cH
	DB	069H
	DB	063H
	DB	06bH
	DB	05fH
	DB	070H
	DB	06fH
	DB	073H
	DB	00H
	ORG $+3
?UpdateMouseInputs@ImGui@@YAXXZ$rtcName$1 DB 064H	; ImGui::UpdateMouseInputs
	DB	065H
	DB	06cH
	DB	074H
	DB	061H
	DB	05fH
	DB	066H
	DB	072H
	DB	06fH
	DB	06dH
	DB	05fH
	DB	063H
	DB	06cH
	DB	069H
	DB	063H
	DB	06bH
	DB	05fH
	DB	070H
	DB	06fH
	DB	073H
	DB	00H
	ORG $+3
?UpdateMouseInputs@ImGui@@YAXXZ$rtcVarDesc DD 088H	; ImGui::UpdateMouseInputs
	DD	08H
	DQ	FLAT:?UpdateMouseInputs@ImGui@@YAXXZ$rtcName$1
	DD	068H
	DD	08H
	DQ	FLAT:?UpdateMouseInputs@ImGui@@YAXXZ$rtcName$0
	ORG $+96
?UpdateMouseInputs@ImGui@@YAXXZ$rtcFrameData DD 02H	; ImGui::UpdateMouseInputs
	DD	00H
	DQ	FLAT:?UpdateMouseInputs@ImGui@@YAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateSettings@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ErrorCheckEndFrameSanityChecks@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030025H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030025H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FindWindowFocusIndex@ImGui@@YAHPEAUImGuiWindow@@@Z DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavRestoreLayer@ImGui@@YAXW4ImGuiNavLayer@@@Z DD 025051201H
	DD	010d2312H
	DD	070060025H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavRestoreLastChildNavWindow@ImGui@@YAPEAUImGuiWindow@@PEAU2@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavSaveLastChildNavWindowIntoParent@ImGui@@YAXPEAUImGuiWindow@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	036H
	DW	0276H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavCalcPreferredRefPos@ImGui@@YA?AUImVec2@@XZ DD 025053d19H
	DD	010e2313H
	DD	07007003fH
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	01e0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?NavCalcPreferredRefPos@ImGui@@YA?AUImVec2@@XZ$rtcName$0 DB 070H ; ImGui::NavCalcPreferredRefPos
	DB	06fH
	DB	073H
	DB	00H
	ORG $+12
?NavCalcPreferredRefPos@ImGui@@YA?AUImVec2@@XZ$rtcVarDesc DD 068H ; ImGui::NavCalcPreferredRefPos
	DD	08H
	DQ	FLAT:?NavCalcPreferredRefPos@ImGui@@YA?AUImVec2@@XZ$rtcName$0
	ORG $+48
?NavCalcPreferredRefPos@ImGui@@YA?AUImVec2@@XZ$rtcFrameData DD 01H ; ImGui::NavCalcPreferredRefPos
	DD	00H
	DQ	FLAT:?NavCalcPreferredRefPos@ImGui@@YA?AUImVec2@@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	041H
	DW	0447H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavProcessItem@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@I@Z DD 025064819H
	DD	0119231eH
	DD	07012004cH
	DD	050106011H
	DD	imagerel __GSHandlerCheck
	DD	0258H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?NavProcessItem@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@I@Z$rtcName$0 DB 06eH ; ImGui::NavProcessItem
	DB	061H
	DB	076H
	DB	05fH
	DB	062H
	DB	062H
	DB	05fH
	DB	072H
	DB	065H
	DB	06cH
	DB	00H
	ORG $+5
?NavProcessItem@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@I@Z$rtcVarDesc DD 068H ; ImGui::NavProcessItem
	DD	010H
	DQ	FLAT:?NavProcessItem@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@I@Z$rtcName$0
	ORG $+48
?NavProcessItem@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@I@Z$rtcFrameData DD 01H ; ImGui::NavProcessItem
	DD	00H
	DQ	FLAT:?NavProcessItem@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@I@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavApplyItemToResult@ImGui@@YAXPEAUImGuiNavItemData@@PEAUImGuiWindow@@IAEBUImRect@@@Z DD 025062301H
	DD	011e2323H
	DD	07017001cH
	DD	050156016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavScoreItem@ImGui@@YA_NPEAUImGuiNavItemData@@UImRect@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0057H
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02bH
	DW	0399H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavEndFrame@ImGui@@YAXXZ DD 025063219H
	DD	010b2310H
	DD	070040032H
	DD	050026003H
	DD	imagerel __GSHandlerCheck
	DD	0188H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?NavEndFrame@ImGui@@YAXXZ$rtcName$0 DB 062H		; ImGui::NavEndFrame
	DB	062H
	DB	05fH
	DB	072H
	DB	065H
	DB	06cH
	DB	00H
	ORG $+9
?NavEndFrame@ImGui@@YAXXZ$rtcVarDesc DD 088H		; ImGui::NavEndFrame
	DD	010H
	DQ	FLAT:?NavEndFrame@ImGui@@YAXXZ$rtcName$0
	ORG $+48
?NavEndFrame@ImGui@@YAXXZ$rtcFrameData DD 01H		; ImGui::NavEndFrame
	DD	00H
	DQ	FLAT:?NavEndFrame@ImGui@@YAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavUpdateAnyRequestFlag@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavUpdatePageUpPageDown@ImGui@@YAMXZ DD 035050f01H
	DD	010a330fH
	DD	070030047H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavUpdateInitResult@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02aH
	DW	0403H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavUpdateMoveResult@ImGui@@YAXXZ DD 025053119H
	DD	010a230fH
	DD	070030041H
	DD	05002H
	DD	imagerel __GSHandlerCheck
	DD	01f8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?NavUpdateMoveResult@ImGui@@YAXXZ$rtcName$0 DB 064H	; ImGui::NavUpdateMoveResult
	DB	065H
	DB	06cH
	DB	074H
	DB	061H
	DB	05fH
	DB	073H
	DB	063H
	DB	072H
	DB	06fH
	DB	06cH
	DB	06cH
	DB	00H
	ORG $+3
?NavUpdateMoveResult@ImGui@@YAXXZ$rtcName$1 DB 072H	; ImGui::NavUpdateMoveResult
	DB	065H
	DB	063H
	DB	074H
	DB	05fH
	DB	061H
	DB	062H
	DB	073H
	DB	00H
	ORG $+7
?NavUpdateMoveResult@ImGui@@YAXXZ$rtcVarDesc DD 0a8H	; ImGui::NavUpdateMoveResult
	DD	010H
	DQ	FLAT:?NavUpdateMoveResult@ImGui@@YAXXZ$rtcName$1
	DD	068H
	DD	08H
	DQ	FLAT:?NavUpdateMoveResult@ImGui@@YAXXZ$rtcName$0
	ORG $+96
?NavUpdateMoveResult@ImGui@@YAXXZ$rtcFrameData DD 02H	; ImGui::NavUpdateMoveResult
	DD	00H
	DQ	FLAT:?NavUpdateMoveResult@ImGui@@YAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavUpdateWindowingOverlay@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	07003004bH
	DD	05002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02aH
	DW	0a2cH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavUpdateWindowing@ImGui@@YAXXZ DD 035053119H
	DD	010a330fH
	DD	070030089H
	DD	05002H
	DD	imagerel __GSHandlerCheck
	DD	0430H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?NavUpdateWindowing@ImGui@@YAXXZ$rtcName$0 DB 06dH	; ImGui::NavUpdateWindowing
	DB	06fH
	DB	076H
	DB	065H
	DB	05fH
	DB	064H
	DB	065H
	DB	06cH
	DB	074H
	DB	061H
	DB	00H
	ORG $+5
?NavUpdateWindowing@ImGui@@YAXXZ$rtcVarDesc DD 0158H	; ImGui::NavUpdateWindowing
	DD	08H
	DQ	FLAT:?NavUpdateWindowing@ImGui@@YAXXZ$rtcName$0
	ORG $+48
?NavUpdateWindowing@ImGui@@YAXXZ$rtcFrameData DD 01H	; ImGui::NavUpdateWindowing
	DD	00H
	DQ	FLAT:?NavUpdateWindowing@ImGui@@YAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02bH
	DW	018faH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavUpdate@ImGui@@YAXXZ DD 035063219H
	DD	010b3310H
	DD	0700400fcH
	DD	050026003H
	DD	imagerel __GSHandlerCheck
	DD	07d8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?NavUpdate@ImGui@@YAXXZ$rtcName$0 DB 063H		; ImGui::NavUpdate
	DB	068H
	DB	069H
	DB	06cH
	DB	064H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+5
?NavUpdate@ImGui@@YAXXZ$rtcName$1 DB 073H		; ImGui::NavUpdate
	DB	063H
	DB	072H
	DB	06fH
	DB	06cH
	DB	06cH
	DB	05fH
	DB	064H
	DB	069H
	DB	072H
	DB	00H
	ORG $+5
?NavUpdate@ImGui@@YAXXZ$rtcName$2 DB 077H		; ImGui::NavUpdate
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	05fH
	DB	072H
	DB	065H
	DB	06cH
	DB	00H
?NavUpdate@ImGui@@YAXXZ$rtcName$3 DB 06eH		; ImGui::NavUpdate
	DB	061H
	DB	076H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	05fH
	DB	072H
	DB	065H
	DB	06cH
	DB	00H
	ORG $+3
?NavUpdate@ImGui@@YAXXZ$rtcVarDesc DD 0298H		; ImGui::NavUpdate
	DD	010H
	DQ	FLAT:?NavUpdate@ImGui@@YAXXZ$rtcName$3
	DD	0248H
	DD	010H
	DQ	FLAT:?NavUpdate@ImGui@@YAXXZ$rtcName$2
	DD	0208H
	DD	08H
	DQ	FLAT:?NavUpdate@ImGui@@YAXXZ$rtcName$1
	DD	0118H
	DD	010H
	DQ	FLAT:?NavUpdate@ImGui@@YAXXZ$rtcName$0
	ORG $+192
?NavUpdate@ImGui@@YAXXZ$rtcFrameData DD 04H		; ImGui::NavUpdate
	DD	00H
	DQ	FLAT:?NavUpdate@ImGui@@YAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	038H
	DB	0c1H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImeSetInputScreenPosFn_DefaultImpl@@YAXHH@Z DD 025053f19H
	DD	01112316H
	DD	0700a0031H
	DD	05009H
	DD	imagerel __GSHandlerCheck
	DD	0178H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ImeSetInputScreenPosFn_DefaultImpl@@YAXHH@Z$rtcName$0 DB 063H ; ImeSetInputScreenPosFn_DefaultImpl
	DB	066H
	DB	00H
	ORG $+13
?ImeSetInputScreenPosFn_DefaultImpl@@YAXHH@Z$rtcVarDesc DD 088H ; ImeSetInputScreenPosFn_DefaultImpl
	DD	01cH
	DQ	FLAT:?ImeSetInputScreenPosFn_DefaultImpl@@YAXHH@Z$rtcName$0
	ORG $+48
?ImeSetInputScreenPosFn_DefaultImpl@@YAXHH@Z$rtcFrameData DD 01H ; ImeSetInputScreenPosFn_DefaultImpl
	DD	00H
	DQ	FLAT:?ImeSetInputScreenPosFn_DefaultImpl@@YAXHH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetClipboardTextFn_DefaultImpl@@YAXPEAXPEBD@Z DD 035051801H
	DD	01133318H
	DD	0700c002bH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetClipboardTextFn_DefaultImpl@@YAPEBDPEAX@Z DD 045051301H
	DD	010e4313H
	DD	070070031H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WindowSettingsHandler_WriteAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAUImGuiTextBuffer@@@Z DD 025051d01H
	DD	0118231dH
	DD	07011003fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WindowSettingsHandler_ApplyAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0029H
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	013cH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WindowSettingsHandler_ReadLine@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAXPEBD@Z DD 025054c19H
	DD	011d2322H
	DD	070160035H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0198H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?WindowSettingsHandler_ReadLine@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAXPEBD@Z$rtcName$0 DB 078H ; WindowSettingsHandler_ReadLine
	DB	00H
	ORG $+2
?WindowSettingsHandler_ReadLine@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAXPEBD@Z$rtcName$1 DB 079H ; WindowSettingsHandler_ReadLine
	DB	00H
	ORG $+2
?WindowSettingsHandler_ReadLine@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAXPEBD@Z$rtcName$2 DB 069H ; WindowSettingsHandler_ReadLine
	DB	00H
	ORG $+6
?WindowSettingsHandler_ReadLine@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAXPEBD@Z$rtcVarDesc DD 084H ; WindowSettingsHandler_ReadLine
	DD	04H
	DQ	FLAT:?WindowSettingsHandler_ReadLine@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAXPEBD@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:?WindowSettingsHandler_ReadLine@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAXPEBD@Z$rtcName$1
	DD	044H
	DD	04H
	DQ	FLAT:?WindowSettingsHandler_ReadLine@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAXPEBD@Z$rtcName$0
	ORG $+144
?WindowSettingsHandler_ReadLine@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAXPEBD@Z$rtcFrameData DD 03H ; WindowSettingsHandler_ReadLine
	DD	00H
	DQ	FLAT:?WindowSettingsHandler_ReadLine@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAXPEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WindowSettingsHandler_ReadOpen@@YAPEAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEBD@Z DD 025061e01H
	DD	0119231eH
	DD	07012002aH
	DD	050106011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WindowSettingsHandler_ClearAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddWindowToSortBuffer@@YAXPEAU?$ImVector@PEAUImGuiWindow@@@@PEAUImGuiWindow@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0029H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddDrawListToDrawData@@YAXPEAU?$ImVector@PEAUImDrawList@@@@PEAUImDrawList@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03bH
	DW	0359H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcNextScrollFromScrollTargetAndClamp@@YA?AUImVec2@@PEAUImGuiWindow@@@Z DD 035054219H
	DD	01133318H
	DD	0700c004bH
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0248H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?CalcNextScrollFromScrollTargetAndClamp@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$0 DB 073H ; CalcNextScrollFromScrollTargetAndClamp
	DB	063H
	DB	072H
	DB	06fH
	DB	06cH
	DB	06cH
	DB	00H
	ORG $+9
?CalcNextScrollFromScrollTargetAndClamp@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcVarDesc DD 038H ; CalcNextScrollFromScrollTargetAndClamp
	DD	08H
	DQ	FLAT:?CalcNextScrollFromScrollTargetAndClamp@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$0
	ORG $+48
?CalcNextScrollFromScrollTargetAndClamp@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcFrameData DD 01H ; CalcNextScrollFromScrollTargetAndClamp
	DD	00H
	DQ	FLAT:?CalcNextScrollFromScrollTargetAndClamp@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03aH
	DW	0371H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z DB 06H
	DB	00H
	DB	00H
	DB	'e', 02H
	DB	02H
	DB	086H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z DB 028H
	DD	imagerel $stateUnwindMap$?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z
	DD	imagerel $ip2state$?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z DD 025054119H
	DD	01122317H
	DD	0700b004fH
	DD	0500aH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z
	DD	026aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z$rtcName$0 DB 077H ; CreateNewWindow
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	00H
	ORG $+9
?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z$rtcVarDesc DD 048H ; CreateNewWindow
	DD	08H
	DQ	FLAT:?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z$rtcName$0
	ORG $+48
?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z$rtcFrameData DD 01H ; CreateNewWindow
	DD	00H
	DQ	FLAT:?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02bH
	DW	0393H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FindHoveredWindow@@YAXXZ DD 025063219H
	DD	010b2310H
	DD	070040056H
	DD	050026003H
	DD	imagerel __GSHandlerCheck
	DD	02a0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?FindHoveredWindow@@YAXXZ$rtcName$0 DB 070H		; FindHoveredWindow
	DB	061H
	DB	064H
	DB	064H
	DB	069H
	DB	06eH
	DB	067H
	DB	05fH
	DB	072H
	DB	065H
	DB	067H
	DB	075H
	DB	06cH
	DB	061H
	DB	072H
	DB	00H
?FindHoveredWindow@@YAXXZ$rtcName$1 DB 070H		; FindHoveredWindow
	DB	061H
	DB	064H
	DB	064H
	DB	069H
	DB	06eH
	DB	067H
	DB	05fH
	DB	066H
	DB	06fH
	DB	072H
	DB	05fH
	DB	072H
	DB	065H
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+1
?FindHoveredWindow@@YAXXZ$rtcName$2 DB 062H		; FindHoveredWindow
	DB	062H
	DB	00H
	ORG $+1
?FindHoveredWindow@@YAXXZ$rtcName$3 DB 068H		; FindHoveredWindow
	DB	06fH
	DB	06cH
	DB	065H
	DB	05fH
	DB	070H
	DB	06fH
	DB	073H
	DB	00H
	ORG $+7
?FindHoveredWindow@@YAXXZ$rtcName$4 DB 068H		; FindHoveredWindow
	DB	06fH
	DB	06cH
	DB	065H
	DB	05fH
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+14
?FindHoveredWindow@@YAXXZ$rtcVarDesc DD 0158H		; FindHoveredWindow
	DD	08H
	DQ	FLAT:?FindHoveredWindow@@YAXXZ$rtcName$4
	DD	0138H
	DD	08H
	DQ	FLAT:?FindHoveredWindow@@YAXXZ$rtcName$3
	DD	0108H
	DD	010H
	DQ	FLAT:?FindHoveredWindow@@YAXXZ$rtcName$2
	DD	0a8H
	DD	08H
	DQ	FLAT:?FindHoveredWindow@@YAXXZ$rtcName$1
	DD	088H
	DD	08H
	DQ	FLAT:?FindHoveredWindow@@YAXXZ$rtcName$0
	ORG $+240
?FindHoveredWindow@@YAXXZ$rtcFrameData DD 05H		; FindHoveredWindow
	DD	00H
	DQ	FLAT:?FindHoveredWindow@@YAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetCurrentWindow@@YAXPEAUImGuiWindow@@@Z DD 025051301H
	DD	010e2313H
	DD	070070023H
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	041H
	DW	06c0H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z DD 055064819H
	DD	0119531eH
	DD	0701200d4H
	DD	050106011H
	DD	imagerel __GSHandlerCheck
	DD	0690H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z$rtcName$0 DB 073H ; ImGui::DebugRenderViewportThumbnail
	DB	063H
	DB	061H
	DB	06cH
	DB	065H
	DB	00H
	ORG $+2
?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z$rtcName$1 DB 06fH ; ImGui::DebugRenderViewportThumbnail
	DB	066H
	DB	066H
	DB	00H
	ORG $+4
?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z$rtcName$2 DB 074H ; ImGui::DebugRenderViewportThumbnail
	DB	068H
	DB	075H
	DB	06dH
	DB	062H
	DB	05fH
	DB	072H
	DB	00H
?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z$rtcName$3 DB 074H ; ImGui::DebugRenderViewportThumbnail
	DB	069H
	DB	074H
	DB	06cH
	DB	065H
	DB	05fH
	DB	072H
	DB	00H
?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z$rtcVarDesc DD 0168H ; ImGui::DebugRenderViewportThumbnail
	DD	010H
	DQ	FLAT:?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z$rtcName$3
	DD	0138H
	DD	010H
	DQ	FLAT:?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z$rtcName$2
	DD	0b8H
	DD	08H
	DQ	FLAT:?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z$rtcName$1
	DD	098H
	DD	08H
	DQ	FLAT:?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z$rtcName$0
	ORG $+192
?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z$rtcFrameData DD 04H ; ImGui::DebugRenderViewportThumbnail
	DD	00H
	DQ	FLAT:?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DebugNodeViewport@ImGui@@YAXPEAUImGuiViewportP@@@Z DD 055092101H
	DD	0187821H
	DD	019681aH
	DD	010e5313H
	DD	070070035H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DebugNodeWindowsList@ImGui@@YAXPEAU?$ImVector@PEAUImGuiWindow@@@@PEBD@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DebugNodeWindowSettings@ImGui@@YAXPEAUImGuiWindowSettings@@@Z DD 045051301H
	DD	010e4313H
	DD	070070027H
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	04aH
	DW	0a4fH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DebugNodeWindow@ImGui@@YAXPEAUImGuiWindow@@PEBD@Z DD 0650a5119H
	DD	02e7827H
	DD	02f6820H
	DD	01146319H
	DD	0700d0060H
	DD	0500b600cH
	DD	imagerel __GSHandlerCheck
	DD	02d0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?DebugNodeWindow@ImGui@@YAXPEAUImGuiWindow@@PEBD@Z$rtcName$0 DB 072H ; ImGui::DebugNodeWindow
	DB	00H
	ORG $+14
?DebugNodeWindow@ImGui@@YAXPEAUImGuiWindow@@PEBD@Z$rtcVarDesc DD 0128H ; ImGui::DebugNodeWindow
	DD	010H
	DQ	FLAT:?DebugNodeWindow@ImGui@@YAXPEAUImGuiWindow@@PEBD@Z$rtcName$0
	ORG $+48
?DebugNodeWindow@ImGui@@YAXPEAUImGuiWindow@@PEBD@Z$rtcFrameData DD 01H ; ImGui::DebugNodeWindow
	DD	00H
	DQ	FLAT:?DebugNodeWindow@ImGui@@YAXPEAUImGuiWindow@@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03bH
	DW	06caH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DebugNodeTabBar@ImGui@@YAXPEAUImGuiTabBar@@PEBD@Z DD 045054219H
	DD	01134318H
	DD	0700c0097H
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	04a0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?DebugNodeTabBar@ImGui@@YAXPEAUImGuiTabBar@@PEBD@Z$rtcName$0 DB 062H ; ImGui::DebugNodeTabBar
	DB	075H
	DB	066H
	DB	00H
	ORG $+12
?DebugNodeTabBar@ImGui@@YAXPEAUImGuiTabBar@@PEBD@Z$rtcVarDesc DD 050H ; ImGui::DebugNodeTabBar
	DD	0100H
	DQ	FLAT:?DebugNodeTabBar@ImGui@@YAXPEAUImGuiTabBar@@PEBD@Z$rtcName$0
	ORG $+48
?DebugNodeTabBar@ImGui@@YAXPEAUImGuiTabBar@@PEBD@Z$rtcFrameData DD 01H ; ImGui::DebugNodeTabBar
	DD	00H
	DQ	FLAT:?DebugNodeTabBar@ImGui@@YAXPEAUImGuiTabBar@@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DebugNodeStorage@ImGui@@YAXPEAUImGuiStorage@@PEBD@Z DD 035051801H
	DD	01133318H
	DD	0700c0027H
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	036H
	DW	092dH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z DD 045053d19H
	DD	010e4313H
	DD	070070085H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0410H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z$rtcName$0 DB 063H ; ImGui::DebugNodeFont
	DB	05fH
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+2
?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z$rtcName$1 DB 062H ; ImGui::DebugNodeFont
	DB	061H
	DB	073H
	DB	065H
	DB	05fH
	DB	070H
	DB	06fH
	DB	073H
	DB	00H
	ORG $+7
?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z$rtcName$2 DB 063H ; ImGui::DebugNodeFont
	DB	065H
	DB	06cH
	DB	06cH
	DB	05fH
	DB	070H
	DB	031H
	DB	00H
?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z$rtcName$3 DB 063H ; ImGui::DebugNodeFont
	DB	065H
	DB	06cH
	DB	06cH
	DB	05fH
	DB	070H
	DB	032H
	DB	00H
	ORG $+8
?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z$rtcVarDesc DD 0228H ; ImGui::DebugNodeFont
	DD	08H
	DQ	FLAT:?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z$rtcName$3
	DD	0208H
	DD	08H
	DQ	FLAT:?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z$rtcName$2
	DD	01c8H
	DD	08H
	DQ	FLAT:?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z$rtcName$1
	DD	064H
	DD	05H
	DQ	FLAT:?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z$rtcName$0
	ORG $+192
?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z$rtcFrameData DD 04H ; ImGui::DebugNodeFont
	DD	00H
	DQ	FLAT:?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	0394H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU2@PEBUImDrawCmd@@_N3@Z DD 045054c19H
	DD	011d4322H
	DD	070160059H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	02b8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU2@PEBUImDrawCmd@@_N3@Z$rtcName$0 DB 063H ; ImGui::DebugNodeDrawCmdShowMeshAndBoundingBox
	DB	06cH
	DB	069H
	DB	070H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+6
?DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU2@PEBUImDrawCmd@@_N3@Z$rtcName$1 DB 076H ; ImGui::DebugNodeDrawCmdShowMeshAndBoundingBox
	DB	074H
	DB	078H
	DB	073H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+6
?DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU2@PEBUImDrawCmd@@_N3@Z$rtcName$2 DB 074H ; ImGui::DebugNodeDrawCmdShowMeshAndBoundingBox
	DB	072H
	DB	069H
	DB	061H
	DB	06eH
	DB	067H
	DB	06cH
	DB	065H
	DB	00H
	ORG $+7
?DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU2@PEBUImDrawCmd@@_N3@Z$rtcVarDesc DD 0128H ; ImGui::DebugNodeDrawCmdShowMeshAndBoundingBox
	DD	018H
	DQ	FLAT:?DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU2@PEBUImDrawCmd@@_N3@Z$rtcName$2
	DD	0b8H
	DD	010H
	DQ	FLAT:?DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU2@PEBUImDrawCmd@@_N3@Z$rtcName$1
	DD	088H
	DD	010H
	DQ	FLAT:?DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU2@PEBUImDrawCmd@@_N3@Z$rtcName$0
	ORG $+144
?DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU2@PEBUImDrawCmd@@_N3@Z$rtcFrameData DD 03H ; ImGui::DebugNodeDrawCmdShowMeshAndBoundingBox
	DD	00H
	DQ	FLAT:?DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU2@PEBUImDrawCmd@@_N3@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	040H
	DW	0a0cH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'a', 01aH
	DB	02H
	DB	'9', 0dH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z DB 028H
	DD	imagerel $stateUnwindMap$?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z
	DD	imagerel $ip2state$?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z DD 055054719H
	DD	0118531dH
	DD	0701100f5H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z
	DD	079aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z$rtcName$0 DB 062H ; ImGui::DebugNodeDrawList
	DB	075H
	DB	066H
	DB	00H
	ORG $+4
?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z$rtcName$1 DB 074H ; ImGui::DebugNodeDrawList
	DB	072H
	DB	069H
	DB	061H
	DB	06eH
	DB	067H
	DB	06cH
	DB	065H
	DB	00H
	ORG $+7
?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z$rtcName$2 DB 063H ; ImGui::DebugNodeDrawList
	DB	06cH
	DB	069H
	DB	070H
	DB	070H
	DB	065H
	DB	072H
	DB	00H
?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z$rtcName$3 DB 074H ; ImGui::DebugNodeDrawList
	DB	072H
	DB	069H
	DB	061H
	DB	06eH
	DB	067H
	DB	06cH
	DB	065H
	DB	00H
	ORG $+7
?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z$rtcVarDesc DD 0418H ; ImGui::DebugNodeDrawList
	DD	018H
	DQ	FLAT:?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z$rtcName$3
	DD	0358H
	DD	01cH
	DQ	FLAT:?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z$rtcName$2
	DD	0308H
	DD	018H
	DQ	FLAT:?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z$rtcName$1
	DD	0120H
	DD	012cH
	DQ	FLAT:?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z$rtcName$0
	ORG $+192
?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z$rtcFrameData DD 04H ; ImGui::DebugNodeDrawList
	DD	00H
	DQ	FLAT:?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DebugNodeColumns@ImGui@@YAXPEAUImGuiOldColumns@@@Z DD 035051301H
	DD	010e3313H
	DD	070070027H
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	036H
	DW	0200H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ShowFontAtlas@ImGui@@YAXPEAUImFontAtlas@@@Z DD 035053d19H
	DD	010e3313H
	DD	070070043H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0208H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ShowFontAtlas@ImGui@@YAXPEAUImFontAtlas@@@Z$rtcName$0 DB 074H ; ImGui::ShowFontAtlas
	DB	069H
	DB	06eH
	DB	074H
	DB	05fH
	DB	063H
	DB	06fH
	DB	06cH
	DB	00H
	ORG $+7
?ShowFontAtlas@ImGui@@YAXPEAUImFontAtlas@@@Z$rtcName$1 DB 062H ; ImGui::ShowFontAtlas
	DB	06fH
	DB	072H
	DB	064H
	DB	065H
	DB	072H
	DB	05fH
	DB	063H
	DB	06fH
	DB	06cH
	DB	00H
	ORG $+5
?ShowFontAtlas@ImGui@@YAXPEAUImFontAtlas@@@Z$rtcVarDesc DD 0a8H ; ImGui::ShowFontAtlas
	DD	010H
	DQ	FLAT:?ShowFontAtlas@ImGui@@YAXPEAUImFontAtlas@@@Z$rtcName$1
	DD	078H
	DD	010H
	DQ	FLAT:?ShowFontAtlas@ImGui@@YAXPEAUImFontAtlas@@@Z$rtcName$0
	ORG $+96
?ShowFontAtlas@ImGui@@YAXPEAUImFontAtlas@@@Z$rtcFrameData DD 02H ; ImGui::ShowFontAtlas
	DD	00H
	DQ	FLAT:?ShowFontAtlas@ImGui@@YAXPEAUImFontAtlas@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DebugStartItemPicker@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ErrorCheckEndFrameRecover@ImGui@@YAXP6AXPEAXPEBDZZ0@Z DD 025051801H
	DD	01132318H
	DD	0700c0027H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GcAwakeTransientWindowBuffers@ImGui@@YAXPEAUImGuiWindow@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GcCompactTransientWindowBuffers@ImGui@@YAXPEAUImGuiWindow@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GcCompactTransientMiscBuffers@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03aH
	DB	0daH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWindowResizeBorderID@ImGui@@YAIPEAUImGuiWindow@@H@Z DD 025054119H
	DD	01122317H
	DD	0700b0025H
	DD	0500aH
	DD	imagerel __GSHandlerCheck
	DD	0118H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?GetWindowResizeBorderID@ImGui@@YAIPEAUImGuiWindow@@H@Z$rtcName$0 DB 06eH ; ImGui::GetWindowResizeBorderID
	DB	00H
	ORG $+14
?GetWindowResizeBorderID@ImGui@@YAIPEAUImGuiWindow@@H@Z$rtcVarDesc DD 024H ; ImGui::GetWindowResizeBorderID
	DD	04H
	DQ	FLAT:?GetWindowResizeBorderID@ImGui@@YAIPEAUImGuiWindow@@H@Z$rtcName$0
	ORG $+48
?GetWindowResizeBorderID@ImGui@@YAIPEAUImGuiWindow@@H@Z$rtcFrameData DD 01H ; ImGui::GetWindowResizeBorderID
	DD	00H
	DQ	FLAT:?GetWindowResizeBorderID@ImGui@@YAIPEAUImGuiWindow@@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWindowResizeCornerID@ImGui@@YAIPEAUImGuiWindow@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FindRenderedTextEnd@ImGui@@YAPEBDPEBD0@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	040H
	DW	0349H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderNavHighlight@ImGui@@YAXAEBUImRect@@IH@Z DD 045064719H
	DD	0118431dH
	DD	070110056H
	DD	0500f6010H
	DD	imagerel __GSHandlerCheck
	DD	02a8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?RenderNavHighlight@ImGui@@YAXAEBUImRect@@IH@Z$rtcName$0 DB 064H ; ImGui::RenderNavHighlight
	DB	069H
	DB	073H
	DB	070H
	DB	06cH
	DB	061H
	DB	079H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+3
?RenderNavHighlight@ImGui@@YAXAEBUImRect@@IH@Z$rtcVarDesc DD 0a8H ; ImGui::RenderNavHighlight
	DD	010H
	DQ	FLAT:?RenderNavHighlight@ImGui@@YAXAEBUImRect@@IH@Z$rtcName$0
	ORG $+48
?RenderNavHighlight@ImGui@@YAXAEBUImRect@@IH@Z$rtcFrameData DD 01H ; ImGui::RenderNavHighlight
	DD	00H
	DQ	FLAT:?RenderNavHighlight@ImGui@@YAXAEBUImRect@@IH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderFrameBorder@ImGui@@YAXUImVec2@@0M@Z DD 045051e01H
	DD	0119431eH
	DD	070120041H
	DD	05011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderFrame@ImGui@@YAXUImVec2@@0I_NM@Z DD 045052201H
	DD	011d4322H
	DD	070160041H
	DD	05015H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	046H
	DW	0687H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderTextEllipsis@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1MMPEBD2PEBU3@@Z DD 045054d19H
	DD	011e4323H
	DD	0701700a9H
	DD	05016H
	DD	imagerel __GSHandlerCheck
	DD	0530H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?RenderTextEllipsis@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1MMPEBD2PEBU3@@Z$rtcName$0 DB 074H ; ImGui::RenderTextEllipsis
	DB	065H
	DB	078H
	DB	074H
	DB	05fH
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+6
?RenderTextEllipsis@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1MMPEBD2PEBU3@@Z$rtcName$1 DB 074H ; ImGui::RenderTextEllipsis
	DB	065H
	DB	078H
	DB	074H
	DB	05fH
	DB	065H
	DB	06eH
	DB	064H
	DB	05fH
	DB	065H
	DB	06cH
	DB	06cH
	DB	069H
	DB	070H
	DB	073H
	DB	069H
	DB	073H
	DB	00H
	ORG $+14
?RenderTextEllipsis@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1MMPEBD2PEBU3@@Z$rtcVarDesc DD 0c8H ; ImGui::RenderTextEllipsis
	DD	08H
	DQ	FLAT:?RenderTextEllipsis@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1MMPEBD2PEBU3@@Z$rtcName$1
	DD	068H
	DD	08H
	DQ	FLAT:?RenderTextEllipsis@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1MMPEBD2PEBU3@@Z$rtcName$0
	ORG $+96
?RenderTextEllipsis@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1MMPEBD2PEBU3@@Z$rtcFrameData DD 02H ; ImGui::RenderTextEllipsis
	DD	00H
	DQ	FLAT:?RenderTextEllipsis@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1MMPEBD2PEBU3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	0381H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z DD 055054c19H
	DD	011d5322H
	DD	07016004bH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0240H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z$rtcName$0 DB 070H ; ImGui::RenderTextClippedEx
	DB	06fH
	DB	073H
	DB	00H
	ORG $+4
?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z$rtcName$1 DB 074H ; ImGui::RenderTextClippedEx
	DB	065H
	DB	078H
	DB	074H
	DB	05fH
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+6
?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z$rtcName$2 DB 066H ; ImGui::RenderTextClippedEx
	DB	069H
	DB	06eH
	DB	065H
	DB	05fH
	DB	063H
	DB	06cH
	DB	069H
	DB	070H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+9
?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z$rtcVarDesc DD 0f8H ; ImGui::RenderTextClippedEx
	DD	010H
	DQ	FLAT:?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z$rtcName$2
	DD	078H
	DD	08H
	DQ	FLAT:?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z$rtcName$1
	DD	058H
	DD	08H
	DQ	FLAT:?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z$rtcName$0
	ORG $+144
?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z$rtcFrameData DD 03H ; ImGui::RenderTextClippedEx
	DD	00H
	DQ	FLAT:?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderTextClipped@ImGui@@YAXAEBUImVec2@@0PEBD1PEBU2@0PEBUImRect@@@Z DD 045052201H
	DD	011d4322H
	DD	070160031H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderTextWrapped@ImGui@@YAXUImVec2@@PEBD1M@Z DD 055052301H
	DD	011e5323H
	DD	07017002dH
	DD	05016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderText@ImGui@@YAXUImVec2@@PEBD1_N@Z DD 055052201H
	DD	011d5322H
	DD	070160031H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsDragDropPayloadBeingAccepted@ImGui@@YA_NXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClearDragDrop@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BeginDragDropTargetCustom@ImGui@@YA_NAEBUImRect@@I@Z DD 025061801H
	DD	01132318H
	DD	0700c0028H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetMergedKeyModFlags@ImGui@@YAHXZ DD 025050f01H
	DD	010a230fH
	DD	070030025H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z DD 025051601H
	DD	01112316H
	DD	0700a001fH
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsNavInputDown@ImGui@@YA_NH@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsKeyPressedMap@ImGui@@YA_NH_N@Z DD 025051601H
	DD	01112316H
	DD	0700a0025H
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsMouseDragPastThreshold@ImGui@@YA_NHM@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsActiveIdUsingKey@ImGui@@YA_NH@Z DD 025051201H
	DD	010d2312H
	DD	070060023H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsActiveIdUsingNavInput@ImGui@@YA_NH@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsActiveIdUsingNavDir@ImGui@@YA_NH@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetActiveIdUsingNavAndKeys@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetItemUsingMouseWheel@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030025H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PopFocusScope@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030025H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushFocusScope@ImGui@@YAXI@Z DD 025051201H
	DD	010d2312H
	DD	070060025H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetNavID@ImGui@@YAXIW4ImGuiNavLayer@@IAEBUImRect@@@Z DD 025062101H
	DD	011c2321H
	DD	070150020H
	DD	050136014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ActivateItem@ImGui@@YAXI@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcTypematicRepeatAmount@ImGui@@YAHMMMM@Z DD 025052601H
	DD	01212326H
	DD	0701a0029H
	DD	05019H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	0321H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetNavInputAmount2d@ImGui@@YA?AUImVec2@@HW4ImGuiInputReadMode@@MM@Z DD 025054c19H
	DD	011d2322H
	DD	07016002fH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0168H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?GetNavInputAmount2d@ImGui@@YA?AUImVec2@@HW4ImGuiInputReadMode@@MM@Z$rtcName$0 DB 064H ; ImGui::GetNavInputAmount2d
	DB	065H
	DB	06cH
	DB	074H
	DB	061H
	DB	00H
	ORG $+10
?GetNavInputAmount2d@ImGui@@YA?AUImVec2@@HW4ImGuiInputReadMode@@MM@Z$rtcVarDesc DD 028H ; ImGui::GetNavInputAmount2d
	DD	08H
	DQ	FLAT:?GetNavInputAmount2d@ImGui@@YA?AUImVec2@@HW4ImGuiInputReadMode@@MM@Z$rtcName$0
	ORG $+48
?GetNavInputAmount2d@ImGui@@YA?AUImVec2@@HW4ImGuiInputReadMode@@MM@Z$rtcFrameData DD 01H ; ImGui::GetNavInputAmount2d
	DD	00H
	DQ	FLAT:?GetNavInputAmount2d@ImGui@@YA?AUImVec2@@HW4ImGuiInputReadMode@@MM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z DD 035051601H
	DD	01113316H
	DD	0700a0027H
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavMoveRequestTryWrapping@ImGui@@YAXPEAUImGuiWindow@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavMoveRequestForward@ImGui@@YAXHHAEBUImRect@@H@Z DD 025062101H
	DD	011c2321H
	DD	070150020H
	DD	050136014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavMoveRequestCancel@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavMoveRequestButNoResultYet@ImGui@@YA_NXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavInitWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z DD 025061801H
	DD	01132318H
	DD	0700c0032H
	DD	0500a600bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	07caH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z DD 025054c19H
	DD	011d2322H
	DD	07016008dH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0450H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z$rtcName$0 DB 062H ; ImGui::FindBestWindowPosForPopupEx
	DB	061H
	DB	073H
	DB	065H
	DB	05fH
	DB	070H
	DB	06fH
	DB	073H
	DB	05fH
	DB	063H
	DB	06cH
	DB	061H
	DB	06dH
	DB	070H
	DB	065H
	DB	064H
	DB	00H
	ORG $+7
?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z$rtcName$1 DB 064H ; ImGui::FindBestWindowPosForPopupEx
	DB	069H
	DB	072H
	DB	05fH
	DB	070H
	DB	072H
	DB	065H
	DB	066H
	DB	065H
	DB	072H
	DB	065H
	DB	064H
	DB	05fH
	DB	06fH
	DB	072H
	DB	064H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z$rtcName$2 DB 070H ; ImGui::FindBestWindowPosForPopupEx
	DB	06fH
	DB	073H
	DB	00H
?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z$rtcName$3 DB 064H ; ImGui::FindBestWindowPosForPopupEx
	DB	069H
	DB	072H
	DB	05fH
	DB	070H
	DB	072H
	DB	065H
	DB	066H
	DB	065H
	DB	072H
	DB	065H
	DB	064H
	DB	05fH
	DB	06fH
	DB	072H
	DB	064H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z$rtcName$4 DB 070H ; ImGui::FindBestWindowPosForPopupEx
	DB	06fH
	DB	073H
	DB	00H
?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z$rtcName$5 DB 070H ; ImGui::FindBestWindowPosForPopupEx
	DB	06fH
	DB	073H
	DB	00H
	ORG $+4
?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z$rtcVarDesc DD 01a8H ; ImGui::FindBestWindowPosForPopupEx
	DD	08H
	DQ	FLAT:?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z$rtcName$5
	DD	0188H
	DD	08H
	DQ	FLAT:?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z$rtcName$4
	DD	0d8H
	DD	010H
	DQ	FLAT:?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z$rtcName$3
	DD	0b8H
	DD	08H
	DQ	FLAT:?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z$rtcName$2
	DD	048H
	DD	010H
	DQ	FLAT:?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z$rtcName$0
	ORG $+288
?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z$rtcFrameData DD 06H ; ImGui::FindBestWindowPosForPopupEx
	DD	00H
	DQ	FLAT:?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03cH
	DW	0562H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z DD 045064319H
	DD	01144319H
	DD	0700d007eH
	DD	0500b600cH
	DD	imagerel __GSHandlerCheck
	DD	03e0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$0 DB 072H ; ImGui::FindBestWindowPosForPopup
	DB	05fH
	DB	06fH
	DB	075H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$1 DB 072H ; ImGui::FindBestWindowPosForPopup
	DB	05fH
	DB	061H
	DB	076H
	DB	06fH
	DB	069H
	DB	064H
	DB	00H
?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$2 DB 072H ; ImGui::FindBestWindowPosForPopup
	DB	05fH
	DB	061H
	DB	076H
	DB	06fH
	DB	069H
	DB	064H
	DB	00H
?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$3 DB 072H ; ImGui::FindBestWindowPosForPopup
	DB	065H
	DB	066H
	DB	05fH
	DB	070H
	DB	06fH
	DB	073H
	DB	00H
?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$4 DB 072H ; ImGui::FindBestWindowPosForPopup
	DB	05fH
	DB	061H
	DB	076H
	DB	06fH
	DB	069H
	DB	064H
	DB	00H
	ORG $+8
?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcVarDesc DD 0178H ; ImGui::FindBestWindowPosForPopup
	DD	010H
	DQ	FLAT:?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$4
	DD	0158H
	DD	08H
	DQ	FLAT:?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$3
	DD	0108H
	DD	010H
	DQ	FLAT:?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$2
	DD	0d8H
	DD	010H
	DQ	FLAT:?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$1
	DD	068H
	DD	010H
	DQ	FLAT:?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$0
	ORG $+240
?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcFrameData DD 05H ; ImGui::FindBestWindowPosForPopup
	DD	00H
	DQ	FLAT:?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetTopMostPopupModal@ImGui@@YAPEAUImGuiWindow@@XZ DD 025050f01H
	DD	010a230fH
	DD	070030029H
	DD	05002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03cH
	DW	0157H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetPopupAllowedExtentRect@ImGui@@YA?AUImRect@@PEAUImGuiWindow@@@Z DD 025064319H
	DD	01142319H
	DD	0700d0030H
	DD	0500b600cH
	DD	imagerel __GSHandlerCheck
	DD	0170H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?GetPopupAllowedExtentRect@ImGui@@YA?AUImRect@@PEAUImGuiWindow@@@Z$rtcName$0 DB 072H ; ImGui::GetPopupAllowedExtentRect
	DB	05fH
	DB	073H
	DB	063H
	DB	072H
	DB	065H
	DB	065H
	DB	06eH
	DB	00H
	ORG $+7
?GetPopupAllowedExtentRect@ImGui@@YA?AUImRect@@PEAUImGuiWindow@@@Z$rtcName$1 DB 070H ; ImGui::GetPopupAllowedExtentRect
	DB	061H
	DB	064H
	DB	064H
	DB	069H
	DB	06eH
	DB	067H
	DB	00H
	ORG $+8
?GetPopupAllowedExtentRect@ImGui@@YA?AUImRect@@PEAUImGuiWindow@@@Z$rtcVarDesc DD 078H ; ImGui::GetPopupAllowedExtentRect
	DD	08H
	DQ	FLAT:?GetPopupAllowedExtentRect@ImGui@@YA?AUImRect@@PEAUImGuiWindow@@@Z$rtcName$1
	DD	048H
	DD	010H
	DQ	FLAT:?GetPopupAllowedExtentRect@ImGui@@YA?AUImRect@@PEAUImGuiWindow@@@Z$rtcName$0
	ORG $+96
?GetPopupAllowedExtentRect@ImGui@@YA?AUImRect@@PEAUImGuiWindow@@@Z$rtcFrameData DD 02H ; ImGui::GetPopupAllowedExtentRect
	DD	00H
	DQ	FLAT:?GetPopupAllowedExtentRect@ImGui@@YA?AUImRect@@PEAUImGuiWindow@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	038H
	DW	01f7H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BeginTooltipEx@ImGui@@YAXHH@Z DD 025053f19H
	DD	01112316H
	DD	0700a003bH
	DD	05009H
	DD	imagerel __GSHandlerCheck
	DD	01c8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?BeginTooltipEx@ImGui@@YAXHH@Z$rtcName$0 DB 074H	; ImGui::BeginTooltipEx
	DB	06fH
	DB	06fH
	DB	06cH
	DB	074H
	DB	069H
	DB	070H
	DB	05fH
	DB	070H
	DB	06fH
	DB	073H
	DB	00H
	ORG $+4
?BeginTooltipEx@ImGui@@YAXHH@Z$rtcName$1 DB 077H	; ImGui::BeginTooltipEx
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	05fH
	DB	06eH
	DB	061H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+4
?BeginTooltipEx@ImGui@@YAXHH@Z$rtcVarDesc DD 068H	; ImGui::BeginTooltipEx
	DD	010H
	DQ	FLAT:?BeginTooltipEx@ImGui@@YAXHH@Z$rtcName$1
	DD	048H
	DD	08H
	DQ	FLAT:?BeginTooltipEx@ImGui@@YAXHH@Z$rtcName$0
	ORG $+96
?BeginTooltipEx@ImGui@@YAXHH@Z$rtcFrameData DD 02H	; ImGui::BeginTooltipEx
	DD	00H
	DQ	FLAT:?BeginTooltipEx@ImGui@@YAXHH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	038H
	DW	011cH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BeginPopupEx@ImGui@@YA_NIH@Z DD 025053f19H
	DD	01112316H
	DD	0700a002bH
	DD	05009H
	DD	imagerel __GSHandlerCheck
	DD	0148H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?BeginPopupEx@ImGui@@YA_NIH@Z$rtcName$0 DB 06eH		; ImGui::BeginPopupEx
	DB	061H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+11
?BeginPopupEx@ImGui@@YA_NIH@Z$rtcVarDesc DD 048H	; ImGui::BeginPopupEx
	DD	014H
	DQ	FLAT:?BeginPopupEx@ImGui@@YA_NIH@Z$rtcName$0
	ORG $+48
?BeginPopupEx@ImGui@@YA_NIH@Z$rtcFrameData DD 01H	; ImGui::BeginPopupEx
	DD	00H
	DQ	FLAT:?BeginPopupEx@ImGui@@YA_NIH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsPopupOpen@ImGui@@YA_NIH@Z DD 025051601H
	DD	01112316H
	DD	0700a0027H
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClosePopupsOverWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z DD 025051701H
	DD	01122317H
	DD	0700b0035H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClosePopupToLevel@ImGui@@YAXH_N@Z DD 025051601H
	DD	01112316H
	DD	0700a0029H
	DD	05009H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	038H
	DW	0251H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?OpenPopupEx@ImGui@@YAXIH@Z DD 025053f19H
	DD	01112316H
	DD	0700a003dH
	DD	05009H
	DD	imagerel __GSHandlerCheck
	DD	01d0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?OpenPopupEx@ImGui@@YAXIH@Z$rtcName$0 DB 070H		; ImGui::OpenPopupEx
	DB	06fH
	DB	070H
	DB	075H
	DB	070H
	DB	05fH
	DB	072H
	DB	065H
	DB	066H
	DB	00H
	ORG $+6
?OpenPopupEx@ImGui@@YAXIH@Z$rtcVarDesc DD 088H		; ImGui::OpenPopupEx
	DD	030H
	DQ	FLAT:?OpenPopupEx@ImGui@@YAXIH@Z$rtcName$0
	ORG $+48
?OpenPopupEx@ImGui@@YAXIH@Z$rtcFrameData DD 01H		; ImGui::OpenPopupEx
	DD	00H
	DQ	FLAT:?OpenPopupEx@ImGui@@YAXIH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	044H
	DW	0342H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BeginChildEx@ImGui@@YA_NPEBDIAEBUImVec2@@_NH@Z DD 035054b19H
	DD	011c3321H
	DD	070150041H
	DD	05014H
	DD	imagerel __GSHandlerCheck
	DD	01f0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?BeginChildEx@ImGui@@YA_NPEBDIAEBUImVec2@@_NH@Z$rtcName$0 DB 063H ; ImGui::BeginChildEx
	DB	06fH
	DB	06eH
	DB	074H
	DB	065H
	DB	06eH
	DB	074H
	DB	05fH
	DB	061H
	DB	076H
	DB	061H
	DB	069H
	DB	06cH
	DB	00H
	ORG $+2
?BeginChildEx@ImGui@@YA_NPEBDIAEBUImVec2@@_NH@Z$rtcName$1 DB 073H ; ImGui::BeginChildEx
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+11
?BeginChildEx@ImGui@@YA_NPEBDIAEBUImVec2@@_NH@Z$rtcVarDesc DD 098H ; ImGui::BeginChildEx
	DD	08H
	DQ	FLAT:?BeginChildEx@ImGui@@YA_NPEBDIAEBUImVec2@@_NH@Z$rtcName$1
	DD	078H
	DD	08H
	DQ	FLAT:?BeginChildEx@ImGui@@YA_NPEBDIAEBUImVec2@@_NH@Z$rtcName$0
	ORG $+96
?BeginChildEx@ImGui@@YA_NPEBDIAEBUImVec2@@_NH@Z$rtcFrameData DD 02H ; ImGui::BeginChildEx
	DD	00H
	DQ	FLAT:?BeginChildEx@ImGui@@YA_NPEBDIAEBUImVec2@@_NH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LogSetNextTextDecoration@ImGui@@YAXPEBD0@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LogRenderedText@ImGui@@YAXPEBUImVec2@@PEBD1@Z DD 035051d01H
	DD	0118331dH
	DD	070110051H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LogToBuffer@ImGui@@YAXH@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LogBegin@ImGui@@YAXW4ImGuiLogType@@H@Z DD 025051601H
	DD	01112316H
	DD	0700a0025H
	DD	05009H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0caH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetContentRegionMaxAbs@ImGui@@YA?AUImVec2@@XZ DD 025053d19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?GetContentRegionMaxAbs@ImGui@@YA?AUImVec2@@XZ$rtcName$0 DB 06dH ; ImGui::GetContentRegionMaxAbs
	DB	078H
	DB	00H
	ORG $+13
?GetContentRegionMaxAbs@ImGui@@YA?AUImVec2@@XZ$rtcVarDesc DD 068H ; ImGui::GetContentRegionMaxAbs
	DD	08H
	DQ	FLAT:?GetContentRegionMaxAbs@ImGui@@YA?AUImVec2@@XZ$rtcName$0
	ORG $+48
?GetContentRegionMaxAbs@ImGui@@YA?AUImVec2@@XZ$rtcFrameData DD 01H ; ImGui::GetContentRegionMaxAbs
	DD	00H
	DQ	FLAT:?GetContentRegionMaxAbs@ImGui@@YA?AUImVec2@@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsItemToggledSelection@ImGui@@YA_NXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PopDisabled@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushDisabled@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PopItemFlag@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	038H
	DW	010bH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushItemFlag@ImGui@@YAXH_N@Z DD 025053f19H
	DD	01112316H
	DD	0700a0027H
	DD	05009H
	DD	imagerel __GSHandlerCheck
	DD	0120H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PushItemFlag@ImGui@@YAXH_N@Z$rtcName$0 DB 069H		; ImGui::PushItemFlag
	DB	074H
	DB	065H
	DB	06dH
	DB	05fH
	DB	066H
	DB	06cH
	DB	061H
	DB	067H
	DB	073H
	DB	00H
	ORG $+5
?PushItemFlag@ImGui@@YAXH_N@Z$rtcVarDesc DD 044H	; ImGui::PushItemFlag
	DD	04H
	DQ	FLAT:?PushItemFlag@ImGui@@YAXH_N@Z$rtcName$0
	ORG $+48
?PushItemFlag@ImGui@@YAXH_N@Z$rtcFrameData DD 01H	; ImGui::PushItemFlag
	DD	00H
	DQ	FLAT:?PushItemFlag@ImGui@@YAXH_N@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03aH
	DW	0215H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushMultiItemsWidths@ImGui@@YAXHM@Z DD 025054119H
	DD	01132318H
	DD	0700c0037H
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	01a0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PushMultiItemsWidths@ImGui@@YAXHM@Z$rtcName$0 DB 077H	; ImGui::PushMultiItemsWidths
	DB	05fH
	DB	069H
	DB	074H
	DB	065H
	DB	06dH
	DB	05fH
	DB	06fH
	DB	06eH
	DB	065H
	DB	00H
	ORG $+5
?PushMultiItemsWidths@ImGui@@YAXHM@Z$rtcName$1 DB 077H	; ImGui::PushMultiItemsWidths
	DB	05fH
	DB	069H
	DB	074H
	DB	065H
	DB	06dH
	DB	05fH
	DB	06cH
	DB	061H
	DB	073H
	DB	074H
	DB	00H
	ORG $+4
?PushMultiItemsWidths@ImGui@@YAXHM@Z$rtcVarDesc DD 0a4H	; ImGui::PushMultiItemsWidths
	DD	04H
	DQ	FLAT:?PushMultiItemsWidths@ImGui@@YAXHM@Z$rtcName$1
	DD	084H
	DD	04H
	DQ	FLAT:?PushMultiItemsWidths@ImGui@@YAXHM@Z$rtcName$0
	ORG $+96
?PushMultiItemsWidths@ImGui@@YAXHM@Z$rtcFrameData DD 02H ; ImGui::PushMultiItemsWidths
	DD	00H
	DQ	FLAT:?PushMultiItemsWidths@ImGui@@YAXHM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcWrapWidthForPos@ImGui@@YAMAEBUImVec2@@M@Z DD 035051901H
	DD	01143319H
	DD	0700d0027H
	DD	0500cH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	047H
	DW	0192H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcItemSize@ImGui@@YA?AUImVec2@@U2@MM@Z DD 025054e19H
	DD	011f2324H
	DD	070180029H
	DD	05017H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?CalcItemSize@ImGui@@YA?AUImVec2@@U2@MM@Z$rtcName$0 DB 072H ; ImGui::CalcItemSize
	DB	065H
	DB	067H
	DB	069H
	DB	06fH
	DB	06eH
	DB	05fH
	DB	06dH
	DB	061H
	DB	078H
	DB	00H
	ORG $+5
?CalcItemSize@ImGui@@YA?AUImVec2@@U2@MM@Z$rtcVarDesc DD 048H ; ImGui::CalcItemSize
	DD	08H
	DQ	FLAT:?CalcItemSize@ImGui@@YA?AUImVec2@@U2@MM@Z$rtcName$0
	ORG $+48
?CalcItemSize@ImGui@@YA?AUImVec2@@U2@MM@Z$rtcFrameData DD 01H ; ImGui::CalcItemSize
	DD	00H
	DQ	FLAT:?CalcItemSize@ImGui@@YA?AUImVec2@@U2@MM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetLastItemData@ImGui@@YAXPEAUImGuiWindow@@IHAEBUImRect@@@Z DD 025062201H
	DD	011d2322H
	DD	07016001cH
	DD	050146015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsClippedEx@ImGui@@YA_NAEBUImRect@@I_N@Z DD 025051c01H
	DD	0117231cH
	DD	070100025H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ItemFocusable@ImGui@@YAXPEAUImGuiWindow@@I@Z DD 025051701H
	DD	01122317H
	DD	0700b0025H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ItemHoverable@ImGui@@YA_NAEBUImRect@@I@Z DD 045051701H
	DD	01124317H
	DD	0700b0029H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ItemAdd@ImGui@@YA_NAEBUImRect@@IPEBU2@H@Z DD 025062201H
	DD	011d2322H
	DD	07016002cH
	DD	050146015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ItemSize@ImGui@@YAXAEBUImRect@@M@Z DD 025051901H
	DD	01142319H
	DD	0700d0021H
	DD	0500cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ItemSize@ImGui@@YAXAEBUImVec2@@M@Z DD 025051901H
	DD	01142319H
	DD	0700d002dH
	DD	0500cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetIDWithSeed@ImGui@@YAIPEBD0I@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushOverrideID@ImGui@@YAXI@Z DD 025051201H
	DD	010d2312H
	DD	070060025H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?MarkItemEdited@ImGui@@YAXI@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?KeepAliveID@ImGui@@YAXI@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetHoveredID@ImGui@@YAXI@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetHoveredID@ImGui@@YAIXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClearActiveID@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetFocusID@ImGui@@YAXIPEAUImGuiWindow@@@Z DD 025061801H
	DD	01132318H
	DD	0700c0034H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetActiveID@ImGui@@YAXIPEAUImGuiWindow@@@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	040H
	DW	0388H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ScrollToBringRectIntoView@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@AEBUImRect@@@Z DD 025054719H
	DD	0118231dH
	DD	070110059H
	DD	05010H
	DD	imagerel __GSHandlerCheck
	DD	02b8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ScrollToBringRectIntoView@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@AEBUImRect@@@Z$rtcName$0 DB 077H ; ImGui::ScrollToBringRectIntoView
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+4
?ScrollToBringRectIntoView@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@AEBUImRect@@@Z$rtcName$1 DB 064H ; ImGui::ScrollToBringRectIntoView
	DB	065H
	DB	06cH
	DB	074H
	DB	061H
	DB	05fH
	DB	073H
	DB	063H
	DB	072H
	DB	06fH
	DB	06cH
	DB	06cH
	DB	00H
	ORG $+3
?ScrollToBringRectIntoView@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@AEBUImRect@@@Z$rtcName$2 DB 06eH ; ImGui::ScrollToBringRectIntoView
	DB	065H
	DB	078H
	DB	074H
	DB	05fH
	DB	073H
	DB	063H
	DB	072H
	DB	06fH
	DB	06cH
	DB	06cH
	DB	00H
	ORG $+4
?ScrollToBringRectIntoView@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@AEBUImRect@@@Z$rtcVarDesc DD 098H ; ImGui::ScrollToBringRectIntoView
	DD	08H
	DQ	FLAT:?ScrollToBringRectIntoView@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@AEBUImRect@@@Z$rtcName$2
	DD	078H
	DD	08H
	DQ	FLAT:?ScrollToBringRectIntoView@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@AEBUImRect@@@Z$rtcName$1
	DD	048H
	DD	010H
	DQ	FLAT:?ScrollToBringRectIntoView@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@AEBUImRect@@@Z$rtcName$0
	ORG $+144
?ScrollToBringRectIntoView@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@AEBUImRect@@@Z$rtcFrameData DD 03H ; ImGui::ScrollToBringRectIntoView
	DD	00H
	DQ	FLAT:?ScrollToBringRectIntoView@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@AEBUImRect@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetScrollFromPosY@ImGui@@YAXPEAUImGuiWindow@@MM@Z DD 025051f01H
	DD	011a231fH
	DD	070130021H
	DD	05012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetScrollFromPosX@ImGui@@YAXPEAUImGuiWindow@@MM@Z DD 025051f01H
	DD	011a231fH
	DD	07013001dH
	DD	05012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetScrollY@ImGui@@YAXPEAUImGuiWindow@@M@Z DD 025051901H
	DD	01142319H
	DD	0700d001dH
	DD	0500cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetScrollX@ImGui@@YAXPEAUImGuiWindow@@M@Z DD 025051901H
	DD	01142319H
	DD	0700d001dH
	DD	0500cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetNextWindowScroll@ImGui@@YAXAEBUImVec2@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FindSettingsHandler@ImGui@@YAPEAUImGuiSettingsHandler@@PEBD@Z DD 025051301H
	DD	010e2313H
	DD	070070029H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FindOrCreateWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FindWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@I@Z DD 025051201H
	DD	010d2312H
	DD	070060025H
	DD	05005H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	0ddH, 03H
	DB	02H
	DB	'p'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z DB 028H
	DD	imagerel $stateUnwindMap$?CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z
	DD	imagerel $ip2state$?CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z DD 025061411H
	DD	010f2314H
	DD	070080042H
	DD	050066007H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClearIniSettings@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030029H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?MarkIniSettingsDirty@ImGui@@YAXPEAUImGuiWindow@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?MarkIniSettingsDirty@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CallContextHooks@ImGui@@YAXPEAUImGuiContext@@W4ImGuiContextHookType@@@Z DD 025051701H
	DD	01122317H
	DD	0700b0029H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RemoveContextHook@ImGui@@YAXPEAUImGuiContext@@I@Z DD 025051701H
	DD	01122317H
	DD	0700b0025H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddContextHook@ImGui@@YAIPEAUImGuiContext@@PEBUImGuiContextHook@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateMouseMovingWindowEndFrame@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030037H
	DD	05002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02aH
	DW	01e9H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateMouseMovingWindowNewFrame@ImGui@@YAXXZ DD 025053119H
	DD	010a230fH
	DD	070030029H
	DD	05002H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?UpdateMouseMovingWindowNewFrame@ImGui@@YAXXZ$rtcName$0 DB 070H ; ImGui::UpdateMouseMovingWindowNewFrame
	DB	06fH
	DB	073H
	DB	00H
	ORG $+12
?UpdateMouseMovingWindowNewFrame@ImGui@@YAXXZ$rtcVarDesc DD 068H ; ImGui::UpdateMouseMovingWindowNewFrame
	DD	08H
	DQ	FLAT:?UpdateMouseMovingWindowNewFrame@ImGui@@YAXXZ$rtcName$0
	ORG $+48
?UpdateMouseMovingWindowNewFrame@ImGui@@YAXXZ$rtcFrameData DD 01H ; ImGui::UpdateMouseMovingWindowNewFrame
	DD	00H
	DQ	FLAT:?UpdateMouseMovingWindowNewFrame@ImGui@@YAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?StartMouseMovingWindow@ImGui@@YAXPEAUImGuiWindow@@@Z DD 025051301H
	DD	010e2313H
	DD	070070029H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateHoveredWindowAndCaptureFlags@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030045H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Shutdown@ImGui@@YAXPEAUImGuiContext@@@Z DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	036H
	DW	01deH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Initialize@ImGui@@YAXPEAUImGuiContext@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'u', 05H
	DB	02H
	DB	'p'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??Initialize@ImGui@@YAXPEAUImGuiContext@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z
	DD	imagerel $ip2state$?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z DD 025053d19H
	DD	010e2313H
	DD	070070049H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z
	DD	0232H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z$rtcName$0 DB 069H ; ImGui::Initialize
	DB	06eH
	DB	069H
	DB	05fH
	DB	068H
	DB	061H
	DB	06eH
	DB	064H
	DB	06cH
	DB	065H
	DB	072H
	DB	00H
	ORG $+4
?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z$rtcName$1 DB 076H ; ImGui::Initialize
	DB	069H
	DB	065H
	DB	077H
	DB	070H
	DB	06fH
	DB	072H
	DB	074H
	DB	00H
	ORG $+7
?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z$rtcVarDesc DD 0b8H ; ImGui::Initialize
	DD	08H
	DQ	FLAT:?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z$rtcName$1
	DD	050H
	DD	048H
	DQ	FLAT:?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z$rtcName$0
	ORG $+96
?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z$rtcFrameData DD 02H ; ImGui::Initialize
	DD	00H
	DQ	FLAT:?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiWindow@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDefaultFont@ImGui@@YAPEAUImFont@@XZ DD 025050f01H
	DD	010a230fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetCurrentFont@ImGui@@YAXPEAUImFont@@@Z DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BringWindowToDisplayBack@ImGui@@YAXPEAUImGuiWindow@@@Z DD 025051301H
	DD	010e2313H
	DD	070070029H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BringWindowToDisplayFront@ImGui@@YAXPEAUImGuiWindow@@@Z DD 025051301H
	DD	010e2313H
	DD	07007002dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BringWindowToFocusFront@ImGui@@YAXPEAUImGuiWindow@@@Z DD 025051301H
	DD	010e2313H
	DD	07007002fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FocusTopMostWindowUnderOne@ImGui@@YAXPEAUImGuiWindow@@0@Z DD 025051801H
	DD	01132318H
	DD	0700c0031H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z DD 025051301H
	DD	010e2313H
	DD	070070029H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetWindowHitTestHole@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@1@Z DD 025051d01H
	DD	0118231dH
	DD	070110029H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetWindowCollapsed@ImGui@@YAXPEAUImGuiWindow@@_NH@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetWindowSize@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	040H
	DW	01e6H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z DD 025054719H
	DD	0118231dH
	DD	07011002dH
	DD	05010H
	DD	imagerel __GSHandlerCheck
	DD	0158H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z$rtcName$0 DB 06fH ; ImGui::SetWindowPos
	DB	06cH
	DB	064H
	DB	05fH
	DB	070H
	DB	06fH
	DB	073H
	DB	00H
?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z$rtcName$1 DB 06fH ; ImGui::SetWindowPos
	DB	066H
	DB	066H
	DB	073H
	DB	065H
	DB	074H
	DB	00H
	ORG $+1
?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z$rtcVarDesc DD 048H ; ImGui::SetWindowPos
	DD	08H
	DQ	FLAT:?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z$rtcName$0
	ORG $+96
?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z$rtcFrameData DD 02H ; ImGui::SetWindowPos
	DD	00H
	DQ	FLAT:?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsWindowNavFocusable@ImGui@@YA_NPEAUImGuiWindow@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsWindowAbove@ImGui@@YA_NPEAUImGuiWindow@@0@Z DD 025051801H
	DD	01132318H
	DD	0700c0029H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsWindowChildOf@ImGui@@YA_NPEAUImGuiWindow@@0@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03bH
	DB	0c7H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcWindowNextAutoFitSize@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z DD 025054219H
	DD	01132318H
	DD	0700c002dH
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0158H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?CalcWindowNextAutoFitSize@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$0 DB 073H ; ImGui::CalcWindowNextAutoFitSize
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	063H
	DB	06fH
	DB	06eH
	DB	074H
	DB	065H
	DB	06eH
	DB	074H
	DB	073H
	DB	05fH
	DB	063H
	DB	075H
	DB	072H
	DB	072H
	DB	065H
	DB	06eH
	DB	074H
	DB	00H
	ORG $+2
?CalcWindowNextAutoFitSize@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$1 DB 073H ; ImGui::CalcWindowNextAutoFitSize
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	063H
	DB	06fH
	DB	06eH
	DB	074H
	DB	065H
	DB	06eH
	DB	074H
	DB	073H
	DB	05fH
	DB	069H
	DB	064H
	DB	065H
	DB	061H
	DB	06cH
	DB	00H
	ORG $+4
?CalcWindowNextAutoFitSize@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$2 DB 073H ; ImGui::CalcWindowNextAutoFitSize
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	061H
	DB	075H
	DB	074H
	DB	06fH
	DB	05fH
	DB	066H
	DB	069H
	DB	074H
	DB	00H
	ORG $+2
?CalcWindowNextAutoFitSize@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$3 DB 073H ; ImGui::CalcWindowNextAutoFitSize
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	066H
	DB	069H
	DB	06eH
	DB	061H
	DB	06cH
	DB	00H
	ORG $+5
?CalcWindowNextAutoFitSize@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcVarDesc DD 088H ; ImGui::CalcWindowNextAutoFitSize
	DD	08H
	DQ	FLAT:?CalcWindowNextAutoFitSize@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$3
	DD	068H
	DD	08H
	DQ	FLAT:?CalcWindowNextAutoFitSize@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$2
	DD	048H
	DD	08H
	DQ	FLAT:?CalcWindowNextAutoFitSize@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?CalcWindowNextAutoFitSize@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcName$0
	ORG $+192
?CalcWindowNextAutoFitSize@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcFrameData DD 04H ; ImGui::CalcWindowNextAutoFitSize
	DD	00H
	DQ	FLAT:?CalcWindowNextAutoFitSize@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateWindowParentAndRootLinks@ImGui@@YAXPEAUImGuiWindow@@H0@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FindWindowByName@ImGui@@YAPEAUImGuiWindow@@PEBD@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FindWindowByID@ImGui@@YAPEAUImGuiWindow@@I@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GImGuiTableTempData@@QEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImGuiTableTempData@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GImGuiTable@@QEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ImGuiTable@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1ImGuiTable@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1ImGuiTable@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImGuiTable@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1ImGuiTable@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImGuiTableColumnSortSpecs@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImGuiTableColumnSortSpecs@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImGuiTableColumnSortSpecs@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImGuiTableColumnSortSpecs@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImGuiTableColumnSortSpecs@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImSpan@UImGuiTableColumn@@@@QEAAAEAUImGuiTableColumn@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GImGuiTabBar@@QEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImGuiTabBar@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetTabName@ImGuiTabBar@@QEBAPEBDPEBUImGuiTabItem@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImGuiTabItem@@@@QEAAAEAUImGuiTabItem@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImGuiTabItem@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImGuiTabItem@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImGuiTabItem@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImGuiTabItem@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImGuiTabItem@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GImGuiWindow@@QEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?MenuBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ DD 035051801H
	DD	01133318H
	DD	0700c0023H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?MenuBarHeight@ImGuiWindow@@QEBAMXZ DD 035051301H
	DD	010e3313H
	DD	070070023H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TitleBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TitleBarHeight@ImGuiWindow@@QEBAMXZ DD 035051301H
	DD	010e3313H
	DD	070070023H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcFontSize@ImGuiWindow@@QEBAMXZ DD 035051301H
	DD	010e3313H
	DD	070070027H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Rect@ImGuiWindow@@QEBA?AUImRect@@XZ DD 035051801H
	DD	01133318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03bH
	DW	0117H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetIDFromRectangle@ImGuiWindow@@QEAAIAEBUImRect@@@Z DD 025054219H
	DD	01132318H
	DD	0700c002bH
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0148H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?GetIDFromRectangle@ImGuiWindow@@QEAAIAEBUImRect@@@Z$rtcName$0 DB 072H ; ImGuiWindow::GetIDFromRectangle
	DB	05fH
	DB	072H
	DB	065H
	DB	06cH
	DB	00H
	ORG $+10
?GetIDFromRectangle@ImGuiWindow@@QEAAIAEBUImRect@@@Z$rtcVarDesc DD 048H ; ImGuiWindow::GetIDFromRectangle
	DD	010H
	DQ	FLAT:?GetIDFromRectangle@ImGuiWindow@@QEAAIAEBUImRect@@@Z$rtcName$0
	ORG $+48
?GetIDFromRectangle@ImGuiWindow@@QEAAIAEBUImRect@@@Z$rtcFrameData DD 01H ; ImGuiWindow::GetIDFromRectangle
	DD	00H
	DQ	FLAT:?GetIDFromRectangle@ImGuiWindow@@QEAAIAEBUImRect@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetIDNoKeepAlive@ImGuiWindow@@QEAAIH@Z DD 025051701H
	DD	01122317H
	DD	0700b0025H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetIDNoKeepAlive@ImGuiWindow@@QEAAIPEBX@Z DD 025051801H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetIDNoKeepAlive@ImGuiWindow@@QEAAIPEBD0@Z DD 025051d01H
	DD	0118231dH
	DD	070110025H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetID@ImGuiWindow@@QEAAIH@Z DD 025051701H
	DD	01122317H
	DD	0700b0025H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetID@ImGuiWindow@@QEAAIPEBX@Z DD 025051801H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetID@ImGuiWindow@@QEAAIPEBD0@Z DD 025051d01H
	DD	0118231dH
	DD	070110025H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ImGuiWindow@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1ImGuiWindow@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1ImGuiWindow@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImGuiWindow@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1ImGuiWindow@@QEAA@XZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z DB 0eH
	DB	00H
	DB	00H
	DB	089H, 05H
	DB	02H
	DB	','
	DB	04H
	DB	'M', 03H
	DB	06H
	DB	','
	DB	08H
	DB	'F'
	DB	0aH
	DB	']', 0bH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z DB 0aH
	DB	0eH
	DD	imagerel ?dtor$0@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z DB 028H
	DD	imagerel $stateUnwindMap$??0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z
	DD	imagerel $ip2state$??0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z DD 025051d11H
	DD	0118231dH
	DD	07011002bH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImGuiOldColumns@@@@QEAAAEAUImGuiOldColumns@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear_destruct@?$ImVector@UImGuiOldColumns@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImGuiOldColumns@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImGuiOldColumns@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImGuiOldColumns@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImGuiOldColumns@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImGuiOldColumns@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImGuiOldColumns@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@UImGuiOldColumns@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImGuiWindowTempData@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ImGuiWindowTempData@@QEAA@XZ DB 0aH
	DB	00H
	DB	00H
	DB	0cdH, 04H
	DB	02H
	DB	','
	DB	04H
	DB	','
	DB	06H
	DB	','
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ImGuiWindowTempData@@QEAA@XZ DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0ImGuiWindowTempData@@QEAA@XZ DB 028H
	DD	imagerel $stateUnwindMap$??0ImGuiWindowTempData@@QEAA@XZ
	DD	imagerel $ip2state$??0ImGuiWindowTempData@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiWindowTempData@@QEAA@XZ DD 025051311H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0ImGuiWindowTempData@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GImGuiContext@@QEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImGuiContext@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$33@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$32@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$31@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$30@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$29@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$28@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$27@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$26@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$25@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$24@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$23@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$22@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$21@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$20@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$19@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$18@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$17@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$16@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$15@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$14@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$13@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$12@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$11@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$10@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$9@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$8@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$7@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z DB 'J'
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	080H
	DB	04H
	DB	','
	DB	06H
	DB	','
	DB	08H
	DB	','
	DB	0aH
	DB	','
	DB	0cH
	DB	0feH
	DB	0eH
	DB	','
	DB	010H
	DB	','
	DB	012H
	DB	','
	DB	014H
	DB	','
	DB	016H
	DB	','
	DB	018H
	DB	','
	DB	01aH
	DB	','
	DB	01cH
	DB	','
	DB	01eH
	DB	0a5H, 02H
	DB	' '
	DB	','
	DB	'"'
	DB	','
	DB	'$'
	DB	','
	DB	'&'
	DB	','
	DB	'('
	DB	','
	DB	'*'
	DB	','
	DB	','
	DB	','
	DB	'.'
	DB	'V'
	DB	'0'
	DB	','
	DB	'2'
	DB	080H
	DB	'4'
	DB	','
	DB	'6'
	DB	080H
	DB	'8'
	DB	','
	DB	':'
	DB	','
	DB	'<'
	DB	','
	DB	'>'
	DB	','
	DB	'@'
	DB	','
	DB	'B'
	DB	'y', 03H
	DB	'D'
	DB	'p'
	DB	'B'
	DB	'],'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z DB 044H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$8@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$9@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$10@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$11@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$12@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$13@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$14@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$15@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$16@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$17@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$18@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$19@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$20@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$21@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$22@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$23@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$24@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$25@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$26@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$27@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$28@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$29@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$30@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$31@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$32@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$33@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z
	DD	imagerel $ip2state$??0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z DD 025061911H
	DD	01142319H
	DD	0700d0044H
	DD	0500b600cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$ImVector@UImGuiContextHook@@@@QEAAPEAUImGuiContextHook@@PEBU2@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@UImGuiContextHook@@@@QEAAXAEBUImGuiContextHook@@@Z DD 025061901H
	DD	01142319H
	DD	0700d001cH
	DD	0500b600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImGuiContextHook@@@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_grow_capacity@?$ImVector@UImGuiContextHook@@@@QEBAHH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImGuiContextHook@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImGuiContextHook@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImGuiContextHook@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImGuiContextHook@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImGuiContextHook@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@UImGuiContextHook@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImChunkStream@UImGuiTableSettings@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImChunkStream@UImGuiTableSettings@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?chunk_size@?$ImChunkStream@UImGuiTableSettings@@@@QEAAHPEBUImGuiTableSettings@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?next_chunk@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@PEAU2@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$ImChunkStream@UImGuiTableSettings@@@@QEBAHXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImChunkStream@UImGuiWindowSettings@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImChunkStream@UImGuiWindowSettings@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ptr_from_offset@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?offset_from_ptr@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAHPEBUImGuiWindowSettings@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?chunk_size@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAHPEBUImGuiWindowSettings@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?next_chunk@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@PEAU2@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?alloc_chunk@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@_K@Z DD 025051801H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$ImChunkStream@UImGuiWindowSettings@@@@QEBAHXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?empty@?$ImChunkStream@UImGuiWindowSettings@@@@QEBA_NXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@UImGuiSettingsHandler@@@@QEAAXAEBUImGuiSettingsHandler@@@Z DD 025061901H
	DD	01142319H
	DD	0700d001cH
	DD	0500b600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImGuiSettingsHandler@@@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_grow_capacity@?$ImVector@UImGuiSettingsHandler@@@@QEBAHH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImGuiSettingsHandler@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImGuiShrinkWidthItem@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImGuiPtrOrIndex@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TryGetMapData@?$ImPool@UImGuiTabBar@@@@QEAAPEAUImGuiTabBar@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetMapSize@?$ImPool@UImGuiTabBar@@@@QEBAHXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetAliveCount@?$ImPool@UImGuiTabBar@@@@QEBAHXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clear@?$ImPool@UImGuiTabBar@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	070070027H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetByIndex@?$ImPool@UImGuiTabBar@@@@QEAAPEAUImGuiTabBar@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001fH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImPool@UImGuiTabBar@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImPool@UImGuiTabBar@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImPool@UImGuiTabBar@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImPool@UImGuiTabBar@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImPool@UImGuiTabBar@@@@QEAA@XZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$ImPool@UImGuiTabBar@@@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$ImPool@UImGuiTabBar@@@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'^'
	DB	02H
	DB	'^'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$ImPool@UImGuiTabBar@@@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$ImPool@UImGuiTabBar@@@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$ImPool@UImGuiTabBar@@@@QEAA@XZ DB 028H
	DD	imagerel $stateUnwindMap$??0?$ImPool@UImGuiTabBar@@@@QEAA@XZ
	DD	imagerel $ip2state$??0?$ImPool@UImGuiTabBar@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImPool@UImGuiTabBar@@@@QEAA@XZ DD 025051311H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$ImPool@UImGuiTabBar@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImGuiTabBar@@@@QEAAAEAUImGuiTabBar@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImGuiTabBar@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImGuiTabBar@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImGuiTabBar@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImGuiTabBar@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImGuiTabBar@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImGuiTabBar@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@UImGuiTabBar@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImGuiTableTempData@@@@QEAAAEAUImGuiTableTempData@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear_destruct@?$ImVector@UImGuiTableTempData@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImGuiTableTempData@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImGuiTableTempData@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImGuiTableTempData@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImGuiTableTempData@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImGuiTableTempData@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImGuiTableTempData@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@UImGuiTableTempData@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TryGetMapData@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetMapSize@?$ImPool@UImGuiTable@@@@QEBAHXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetAliveCount@?$ImPool@UImGuiTable@@@@QEBAHXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clear@?$ImPool@UImGuiTable@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	070070027H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetByIndex@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001fH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImPool@UImGuiTable@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImPool@UImGuiTable@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImPool@UImGuiTable@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImPool@UImGuiTable@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImPool@UImGuiTable@@@@QEAA@XZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$ImPool@UImGuiTable@@@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$ImPool@UImGuiTable@@@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'^'
	DB	02H
	DB	'^'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$ImPool@UImGuiTable@@@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$ImPool@UImGuiTable@@@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$ImPool@UImGuiTable@@@@QEAA@XZ DB 028H
	DD	imagerel $stateUnwindMap$??0?$ImPool@UImGuiTable@@@@QEAA@XZ
	DD	imagerel $ip2state$??0?$ImPool@UImGuiTable@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImPool@UImGuiTable@@@@QEAA@XZ DD 025051311H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$ImPool@UImGuiTable@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImGuiTable@@@@QEAAAEAUImGuiTable@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImGuiTable@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImGuiTable@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImGuiTable@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImGuiTable@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImGuiTable@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImGuiTable@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@UImGuiTable@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@E@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@E@@QEAAXH@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_grow_capacity@?$ImVector@E@@QEBAHH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@E@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@E@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@E@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@E@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@E@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@E@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@E@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@PEAUImGuiViewportP@@@@QEAAXAEBQEAUImGuiViewportP@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@PEAUImGuiViewportP@@@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_grow_capacity@?$ImVector@PEAUImGuiViewportP@@@@QEBAHH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear_delete@?$ImVector@PEAUImGuiViewportP@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@PEAUImGuiViewportP@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pop_back@?$ImVector@UImGuiPopupData@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@UImGuiPopupData@@@@QEAAXAEBUImGuiPopupData@@@Z DD 025061901H
	DD	01142319H
	DD	0700d001cH
	DD	0500b600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImGuiPopupData@@@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@UImGuiPopupData@@@@QEAAXH@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_grow_capacity@?$ImVector@UImGuiPopupData@@@@QEBAHH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImGuiPopupData@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImGuiPopupData@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImGuiPopupData@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImGuiPopupData@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImGuiPopupData@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImGuiPopupData@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@UImGuiPopupData@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pop_back@?$ImVector@UImGuiGroupData@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImGuiGroupData@@@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@UImGuiGroupData@@@@QEAAXH@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_grow_capacity@?$ImVector@UImGuiGroupData@@@@QEBAHH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@UImGuiGroupData@@@@QEAAAEAUImGuiGroupData@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImGuiGroupData@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImGuiGroupData@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImGuiGroupData@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImGuiGroupData@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImGuiGroupData@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImGuiGroupData@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@UImGuiGroupData@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pop_back@?$ImVector@H@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@H@@QEAAXAEBH@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@H@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@H@@QEAAXH@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_grow_capacity@?$ImVector@H@@QEBAHH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@H@@QEAAAEAHXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@H@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@H@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@H@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@H@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@H@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@H@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@H@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pop_back@?$ImVector@UImGuiStyleMod@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@UImGuiStyleMod@@@@QEAAXAEBUImGuiStyleMod@@@Z DD 025061901H
	DD	01142319H
	DD	0700d001cH
	DD	0500b600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImGuiStyleMod@@@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_grow_capacity@?$ImVector@UImGuiStyleMod@@@@QEBAHH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@UImGuiStyleMod@@@@QEAAAEAUImGuiStyleMod@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImGuiStyleMod@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImGuiStyleMod@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImGuiStyleMod@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImGuiStyleMod@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImGuiStyleMod@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImGuiStyleMod@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@UImGuiStyleMod@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pop_back@?$ImVector@UImGuiColorMod@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@UImGuiColorMod@@@@QEAAXAEBUImGuiColorMod@@@Z DD 025061901H
	DD	01142319H
	DD	0700d001cH
	DD	0500b600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImGuiColorMod@@@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_grow_capacity@?$ImVector@UImGuiColorMod@@@@QEBAHH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@UImGuiColorMod@@@@QEAAAEAUImGuiColorMod@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImGuiColorMod@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImGuiColorMod@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImGuiColorMod@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImGuiColorMod@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImGuiColorMod@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImGuiColorMod@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@UImGuiColorMod@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?insert@?$ImVector@PEAUImGuiWindow@@@@QEAAPEAPEAUImGuiWindow@@PEBQEAU2@AEBQEAU2@@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_front@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pop_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_grow_capacity@?$ImVector@PEAUImGuiWindow@@@@QEBAHH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?swap@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEAU1@@Z DD 025051801H
	DD	01132318H
	DD	0700c0029H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?empty@?$ImVector@PEAUImGuiWindow@@@@QEBA_NXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear_delete@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CompareWithCurrentState@ImGuiStackSizes@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetToCurrentState@ImGuiStackSizes@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiStackSizes@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiMetricsConfig@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiSettingsHandler@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetName@ImGuiWindowSettings@@QEAAPEADXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiWindowSettings@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$IM_DELETE@UImDrawList@@@@YAXPEAUImDrawList@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GImGuiViewportP@@QEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWorkRect@ImGuiViewportP@@QEBA?AUImRect@@XZ DD 035051801H
	DD	01133318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetMainRect@ImGuiViewportP@@QEBA?AUImRect@@XZ DD 035051801H
	DD	01133318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateWorkRect@ImGuiViewportP@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcWorkRectSize@ImGuiViewportP@@QEBA?AUImVec2@@AEBU2@0@Z DD 025052201H
	DD	011d2322H
	DD	07016001fH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcWorkRectPos@ImGuiViewportP@@QEBA?AUImVec2@@AEBU2@@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ImGuiViewportP@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1ImGuiViewportP@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1ImGuiViewportP@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImGuiViewportP@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1ImGuiViewportP@@QEAA@XZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ImGuiViewportP@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ImGuiViewportP@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	0a4H
	DB	02H
	DB	0d9H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ImGuiViewportP@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0ImGuiViewportP@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0ImGuiViewportP@@QEAA@XZ DB 028H
	DD	imagerel $stateUnwindMap$??0ImGuiViewportP@@QEAA@XZ
	DD	imagerel $ip2state$??0ImGuiViewportP@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiViewportP@@QEAA@XZ DD 025051311H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0ImGuiViewportP@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GImGuiOldColumns@@QEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImGuiOldColumns@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImGuiOldColumnData@@@@QEAAAEAUImGuiOldColumnData@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImGuiOldColumnData@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImGuiOldColumnData@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImGuiOldColumnData@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImGuiOldColumnData@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImGuiOldColumnData@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiNextItemData@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClearFlags@ImGuiNextWindowData@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiNextWindowData@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clear@ImGuiNavItemData@@QEAAXXZ DD 025061401H
	DD	010f2314H
	DD	070080022H
	DD	050066007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiNavItemData@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiPopupData@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$ImMin@H@@YAHHH@Z DD 025051601H
	DD	01112316H
	DD	0700a001fH
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImGuiInputTextState@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClearFreeMemory@ImGuiInputTextState@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0ImGuiInputTextState@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ImGuiInputTextState@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ImGuiInputTextState@@QEAA@XZ DB 08H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	'('
	DB	04H
	DB	'F'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ImGuiInputTextState@@QEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0ImGuiInputTextState@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0ImGuiInputTextState@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0ImGuiInputTextState@@QEAA@XZ DB 028H
	DD	imagerel $stateUnwindMap$??0ImGuiInputTextState@@QEAA@XZ
	DD	imagerel $ip2state$??0ImGuiInputTextState@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiInputTextState@@QEAA@XZ DD 025051311H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0ImGuiInputTextState@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiMenuColumns@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiComboPreviewData@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiStyleMod@@QEAA@HUImVec2@@@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiStyleMod@@QEAA@HM@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiColorMod@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ImDrawDataBuilder@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1ImDrawDataBuilder@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1ImDrawDataBuilder@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImDrawDataBuilder@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1ImDrawDataBuilder@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImDrawDataBuilder@@QEAA@XZ DD 035051301H
	DD	010e3313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FlattenIntoSingleLayer@ImDrawDataBuilder@@QEAAXXZ DD 025061401H
	DD	010f2314H
	DD	070080032H
	DD	050066007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDrawListCount@ImDrawDataBuilder@@QEBAHXZ DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clear@ImDrawDataBuilder@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@PEAUImDrawList@@@@QEAAXAEBQEAUImDrawList@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@PEAUImDrawList@@@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@PEAUImDrawList@@@@QEAAXH@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_grow_capacity@?$ImVector@PEAUImDrawList@@@@QEBAHH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@PEAUImDrawList@@@@QEAAAEAPEAUImDrawList@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?empty@?$ImVector@PEAUImDrawList@@@@QEBA_NXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@PEAUImDrawList@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@PEAUImDrawList@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@PEAUImDrawList@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@PEAUImDrawList@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@PEAUImDrawList@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@PEAUImDrawList@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToVec4@ImRect@@QEBA?AUImVec4@@XZ DD 035031401H
	DD	0d20f3314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsInverted@ImRect@@QEBA_NXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClipWithFull@ImRect@@QEAAXAEBU1@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClipWith@ImRect@@QEAAXAEBU1@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TranslateY@ImRect@@QEAAXM@Z DD 025031501H
	DD	0b2102315H
	DD	0500cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TranslateX@ImRect@@QEAAXM@Z DD 025031501H
	DD	0b2102315H
	DD	0500cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Expand@ImRect@@QEAAXAEBUImVec2@@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Expand@ImRect@@QEAAXM@Z DD 025031501H
	DD	0b2102315H
	DD	0500cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Add@ImRect@@QEAAXAEBU1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Add@ImRect@@QEAAXAEBUImVec2@@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Overlaps@ImRect@@QEBA_NAEBU1@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Contains@ImRect@@QEBA_NAEBU1@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Contains@ImRect@@QEBA_NAEBUImVec2@@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetBR@ImRect@@QEBA?AUImVec2@@XZ DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetBL@ImRect@@QEBA?AUImVec2@@XZ DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetHeight@ImRect@@QEBAMXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWidth@ImRect@@QEBAMXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSize@ImRect@@QEBA?AUImVec2@@XZ DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImRect@@QEAA@MMMM@Z DD 025032101H
	DD	0d21c2321H
	DD	05018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImRect@@QEAA@AEBUImVec4@@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImRect@@QEAA@AEBUImVec2@@0@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImRect@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImVec2ih@@QEAA@AEBUImVec2@@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImVec2ih@@QEAA@FF@Z DD 025031a01H
	DD	0b215231aH
	DD	05011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImVec2ih@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImVec1@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGetDirQuadrantFromDelta@@YAHMM@Z DD 025051a01H
	DD	0115231aH
	DD	0700e001fH
	DD	0500dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImTriangleArea@@YAMAEBUImVec2@@00@Z DD 035051d01H
	DD	0118331dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	0143H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImTriangleBarycentricCoords@@YAXAEBUImVec2@@000AEAM11@Z DD 025054c19H
	DD	011d2322H
	DD	07016002dH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0158H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ImTriangleBarycentricCoords@@YAXAEBUImVec2@@000AEAM11@Z$rtcName$0 DB 076H ; ImTriangleBarycentricCoords
	DB	030H
	DB	00H
	ORG $+1
?ImTriangleBarycentricCoords@@YAXAEBUImVec2@@000AEAM11@Z$rtcName$1 DB 076H ; ImTriangleBarycentricCoords
	DB	031H
	DB	00H
	ORG $+1
?ImTriangleBarycentricCoords@@YAXAEBUImVec2@@000AEAM11@Z$rtcName$2 DB 076H ; ImTriangleBarycentricCoords
	DB	032H
	DB	00H
	ORG $+5
?ImTriangleBarycentricCoords@@YAXAEBUImVec2@@000AEAM11@Z$rtcVarDesc DD 068H ; ImTriangleBarycentricCoords
	DD	08H
	DQ	FLAT:?ImTriangleBarycentricCoords@@YAXAEBUImVec2@@000AEAM11@Z$rtcName$2
	DD	048H
	DD	08H
	DQ	FLAT:?ImTriangleBarycentricCoords@@YAXAEBUImVec2@@000AEAM11@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?ImTriangleBarycentricCoords@@YAXAEBUImVec2@@000AEAM11@Z$rtcName$0
	ORG $+144
?ImTriangleBarycentricCoords@@YAXAEBUImVec2@@000AEAM11@Z$rtcFrameData DD 03H ; ImTriangleBarycentricCoords
	DD	00H
	DQ	FLAT:?ImTriangleBarycentricCoords@@YAXAEBUImVec2@@000AEAM11@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	01caH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImTriangleClosestPoint@@YA?AUImVec2@@AEBU1@000@Z DD 025054c19H
	DD	011d2322H
	DD	070160045H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0218H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ImTriangleClosestPoint@@YA?AUImVec2@@AEBU1@000@Z$rtcName$0 DB 070H ; ImTriangleClosestPoint
	DB	072H
	DB	06fH
	DB	06aH
	DB	05fH
	DB	061H
	DB	062H
	DB	00H
?ImTriangleClosestPoint@@YA?AUImVec2@@AEBU1@000@Z$rtcName$1 DB 070H ; ImTriangleClosestPoint
	DB	072H
	DB	06fH
	DB	06aH
	DB	05fH
	DB	062H
	DB	063H
	DB	00H
?ImTriangleClosestPoint@@YA?AUImVec2@@AEBU1@000@Z$rtcName$2 DB 070H ; ImTriangleClosestPoint
	DB	072H
	DB	06fH
	DB	06aH
	DB	05fH
	DB	063H
	DB	061H
	DB	00H
	ORG $+8
?ImTriangleClosestPoint@@YA?AUImVec2@@AEBU1@000@Z$rtcVarDesc DD 068H ; ImTriangleClosestPoint
	DD	08H
	DQ	FLAT:?ImTriangleClosestPoint@@YA?AUImVec2@@AEBU1@000@Z$rtcName$2
	DD	048H
	DD	08H
	DQ	FLAT:?ImTriangleClosestPoint@@YA?AUImVec2@@AEBU1@000@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?ImTriangleClosestPoint@@YA?AUImVec2@@AEBU1@000@Z$rtcName$0
	ORG $+144
?ImTriangleClosestPoint@@YA?AUImVec2@@AEBU1@000@Z$rtcFrameData DD 03H ; ImTriangleClosestPoint
	DD	00H
	DQ	FLAT:?ImTriangleClosestPoint@@YA?AUImVec2@@AEBU1@000@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImTriangleContainsPoint@@YA_NAEBUImVec2@@000@Z DD 025052201H
	DD	011d2322H
	DD	070160029H
	DD	05015H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	016dH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z DD 025054c19H
	DD	011d2322H
	DD	070160035H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0198H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z$rtcName$0 DB 061H ; ImLineClosestPoint
	DB	070H
	DB	00H
	ORG $+1
?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z$rtcName$1 DB 061H ; ImLineClosestPoint
	DB	062H
	DB	05fH
	DB	064H
	DB	069H
	DB	072H
	DB	00H
	ORG $+5
?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z$rtcVarDesc DD 048H ; ImLineClosestPoint
	DD	08H
	DQ	FLAT:?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z$rtcName$0
	ORG $+96
?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z$rtcFrameData DD 02H ; ImLineClosestPoint
	DD	00H
	DQ	FLAT:?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	0193H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU1@0000M@Z DD 075054c19H
	DD	011d7322H
	DD	070160033H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0188H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU1@0000M@Z$rtcName$0 DB 070H ; ImBezierCubicClosestPointCasteljau
	DB	05fH
	DB	06cH
	DB	061H
	DB	073H
	DB	074H
	DB	00H
	ORG $+1
?ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU1@0000M@Z$rtcName$1 DB 070H ; ImBezierCubicClosestPointCasteljau
	DB	05fH
	DB	063H
	DB	06cH
	DB	06fH
	DB	073H
	DB	065H
	DB	073H
	DB	074H
	DB	00H
	ORG $+6
?ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU1@0000M@Z$rtcName$2 DB 070H ; ImBezierCubicClosestPointCasteljau
	DB	05fH
	DB	063H
	DB	06cH
	DB	06fH
	DB	073H
	DB	065H
	DB	073H
	DB	074H
	DB	05fH
	DB	064H
	DB	069H
	DB	073H
	DB	074H
	DB	032H
	DB	00H
	ORG $+8
?ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU1@0000M@Z$rtcVarDesc DD 0b4H ; ImBezierCubicClosestPointCasteljau
	DD	04H
	DQ	FLAT:?ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU1@0000M@Z$rtcName$2
	DD	098H
	DD	08H
	DQ	FLAT:?ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU1@0000M@Z$rtcName$1
	DD	078H
	DD	08H
	DQ	FLAT:?ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU1@0000M@Z$rtcName$0
	ORG $+144
?ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU1@0000M@Z$rtcFrameData DD 03H ; ImBezierCubicClosestPointCasteljau
	DD	00H
	DQ	FLAT:?ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU1@0000M@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	01deH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU1@0000H@Z DD 035054c19H
	DD	011d3322H
	DD	070160043H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0208H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU1@0000H@Z$rtcName$0 DB 070H ; ImBezierCubicClosestPoint
	DB	05fH
	DB	06cH
	DB	061H
	DB	073H
	DB	074H
	DB	00H
	ORG $+1
?ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU1@0000H@Z$rtcName$1 DB 070H ; ImBezierCubicClosestPoint
	DB	05fH
	DB	063H
	DB	06cH
	DB	06fH
	DB	073H
	DB	065H
	DB	073H
	DB	074H
	DB	00H
	ORG $+6
?ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU1@0000H@Z$rtcName$2 DB 070H ; ImBezierCubicClosestPoint
	DB	05fH
	DB	063H
	DB	075H
	DB	072H
	DB	072H
	DB	065H
	DB	06eH
	DB	074H
	DB	00H
	ORG $+2
?ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU1@0000H@Z$rtcName$3 DB 070H ; ImBezierCubicClosestPoint
	DB	05fH
	DB	06cH
	DB	069H
	DB	06eH
	DB	065H
	DB	00H
	ORG $+5
?ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU1@0000H@Z$rtcVarDesc DD 0f8H ; ImBezierCubicClosestPoint
	DD	08H
	DQ	FLAT:?ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU1@0000H@Z$rtcName$3
	DD	0d8H
	DD	08H
	DQ	FLAT:?ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU1@0000H@Z$rtcName$2
	DD	058H
	DD	08H
	DQ	FLAT:?ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU1@0000H@Z$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:?ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU1@0000H@Z$rtcName$0
	ORG $+192
?ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU1@0000H@Z$rtcFrameData DD 04H ; ImBezierCubicClosestPoint
	DD	00H
	DQ	FLAT:?ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU1@0000H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$ImMax@M@@YAMMM@Z DD 035051a01H
	DD	0115331aH
	DD	0700e0021H
	DD	0500dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$ImMin@M@@YAMMM@Z DD 035051a01H
	DD	0115331aH
	DD	0700e0021H
	DD	0500dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImModPositive@@YAHHH@Z DD 025031201H
	DD	0b20d2312H
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImFloor@@YA?AUImVec2@@AEBU1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImFloor@@YAMM@Z DD 025031001H
	DD	0b20b2310H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImLengthSqr@@YAMAEBUImVec2@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImSaturate@@YAMM@Z DD 025031001H
	DD	0d20b2310H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImLerp@@YA?AUImVec2@@AEBU1@00@Z DD 025031e01H
	DD	0b219231eH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z DD 025031e01H
	DD	0d219231eH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImMax@@YA?AUImVec2@@AEBU1@0@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImMin@@YA?AUImVec2@@AEBU1@0@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImFileLoadToMemory@@YAPEAXPEBD0PEA_KH@Z DD 025052201H
	DD	011d2322H
	DD	070160029H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImFileWrite@@YA_KPEBX_K1PEAU_iobuf@@@Z DD 025052201H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImFileRead@@YA_KPEAX_K1PEAU_iobuf@@@Z DD 025052201H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImFileGetSize@@YA_KPEAU_iobuf@@@Z DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImFileClose@@YA_NPEAU_iobuf@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03bH
	DW	0192H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z DB 06H
	DB	00H
	DB	00H
	DB	0d1H, 02H
	DB	02H
	DB	0e1H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z DB 028H
	DD	imagerel $stateUnwindMap$?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z
	DD	imagerel $ip2state$?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z DD 035054219H
	DD	01133318H
	DD	0700c0033H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z
	DD	018aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z$rtcName$0 DB 062H	; ImFileOpen
	DB	075H
	DB	066H
	DB	00H
	ORG $+12
?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z$rtcVarDesc DD 078H	; ImFileOpen
	DD	010H
	DQ	FLAT:?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z$rtcName$0
	ORG $+48
?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z$rtcFrameData DD 01H	; ImFileOpen
	DD	00H
	DQ	FLAT:?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Z@YAAEAUImVec2@@AEAU0@AEBU0@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y@YAAEAUImVec2@@AEAU0@AEBU0@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??X@YAAEAUImVec2@@AEAU0@M@Z DD 025031501H
	DD	0b2102315H
	DD	0500cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??K@YA?AUImVec2@@AEBU0@0@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D@YA?AUImVec2@@AEBU0@0@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??G@YA?AUImVec2@@AEBU0@0@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??H@YA?AUImVec2@@AEBU0@0@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??K@YA?AUImVec2@@AEBU0@M@Z DD 025031a01H
	DD	0b215231aH
	DD	05011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D@YA?AUImVec2@@AEBU0@M@Z DD 025031a01H
	DD	0b215231aH
	DD	05011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImTextCountUtf8BytesFromStr@@YAHPEBG0@Z DD 025051801H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03bH
	DB	082H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImTextCountUtf8BytesFromChar@@YAHPEBD0@Z DD 025054219H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0f8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ImTextCountUtf8BytesFromChar@@YAHPEBD0@Z$rtcName$0 DB 075H ; ImTextCountUtf8BytesFromChar
	DB	06eH
	DB	075H
	DB	073H
	DB	065H
	DB	064H
	DB	00H
	ORG $+9
?ImTextCountUtf8BytesFromChar@@YAHPEBD0@Z$rtcVarDesc DD 024H ; ImTextCountUtf8BytesFromChar
	DD	04H
	DQ	FLAT:?ImTextCountUtf8BytesFromChar@@YAHPEBD0@Z$rtcName$0
	ORG $+48
?ImTextCountUtf8BytesFromChar@@YAHPEBD0@Z$rtcFrameData DD 01H ; ImTextCountUtf8BytesFromChar
	DD	00H
	DQ	FLAT:?ImTextCountUtf8BytesFromChar@@YAHPEBD0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03bH
	DB	0d3H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImTextCountCharsFromUtf8@@YAHPEBD0@Z DD 025054219H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0118H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ImTextCountCharsFromUtf8@@YAHPEBD0@Z$rtcName$0 DB 063H	; ImTextCountCharsFromUtf8
	DB	00H
	ORG $+14
?ImTextCountCharsFromUtf8@@YAHPEBD0@Z$rtcVarDesc DD 044H ; ImTextCountCharsFromUtf8
	DD	04H
	DQ	FLAT:?ImTextCountCharsFromUtf8@@YAHPEBD0@Z$rtcName$0
	ORG $+48
?ImTextCountCharsFromUtf8@@YAHPEBD0@Z$rtcFrameData DD 01H ; ImTextCountCharsFromUtf8
	DD	00H
	DQ	FLAT:?ImTextCountCharsFromUtf8@@YAHPEBD0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	044H
	DW	014dH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImTextStrFromUtf8@@YAHPEAGHPEBD1PEAPEBD@Z DD 025054b19H
	DD	011c2321H
	DD	070150029H
	DD	05014H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ImTextStrFromUtf8@@YAHPEAGHPEBD1PEAPEBD@Z$rtcName$0 DB 063H ; ImTextStrFromUtf8
	DB	00H
	ORG $+14
?ImTextStrFromUtf8@@YAHPEAGHPEBD1PEAPEBD@Z$rtcVarDesc DD 064H ; ImTextStrFromUtf8
	DD	04H
	DQ	FLAT:?ImTextStrFromUtf8@@YAHPEAGHPEBD1PEAPEBD@Z$rtcName$0
	ORG $+48
?ImTextStrFromUtf8@@YAHPEAGHPEBD1PEAPEBD@Z$rtcFrameData DD 01H ; ImTextStrFromUtf8
	DD	00H
	DQ	FLAT:?ImTextStrFromUtf8@@YAHPEAGHPEBD1PEAPEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z DD 025053601H
	DD	0118231dH
	DD	07011002fH
	DD	05010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z$rtcName$0 DB 073H	; ImTextCharFromUtf8
	DB	00H
	ORG $+14
?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z$rtcVarDesc DD 064H	; ImTextCharFromUtf8
	DD	04H
	DQ	FLAT:?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z$rtcName$0
	ORG $+48
?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z$rtcFrameData DD 01H	; ImTextCharFromUtf8
	DD	00H
	DQ	FLAT:?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImTextStrToUtf8@@YAHPEADHPEBG1@Z DD 025052101H
	DD	011c2321H
	DD	070150029H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImTextCharToUtf8@@YAPEBDQEADI@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImCharIsBlankA@@YA_ND@Z DD 025051201H
	DD	010d2312H
	DD	07006001fH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImFormatStringV@@YAHPEAD_KPEBD0@Z DD 025052201H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	045H
	DB	0dfH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImFormatString@@YAHPEAD_KPEBDZZ DD 025054c19H
	DD	011d2322H
	DD	070160029H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ImFormatString@@YAHPEAD_KPEBDZZ$rtcName$0 DB 061H	; ImFormatString
	DB	072H
	DB	067H
	DB	073H
	DB	00H
	ORG $+11
?ImFormatString@@YAHPEAD_KPEBDZZ$rtcVarDesc DD 028H	; ImFormatString
	DD	08H
	DQ	FLAT:?ImFormatString@@YAHPEAD_KPEBDZZ$rtcName$0
	ORG $+48
?ImFormatString@@YAHPEAD_KPEBDZZ$rtcFrameData DD 01H	; ImFormatString
	DD	00H
	DQ	FLAT:?ImFormatString@@YAHPEAD_KPEBDZZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImStrSkipBlank@@YAPEBDPEBD@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImStrTrimBlanks@@YAXPEAD@Z DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImStristr@@YAPEBDPEBD000@Z DD 025052201H
	DD	011d2322H
	DD	07016002bH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImStrbolW@@YAPEBGPEBG0@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImStreolRange@@YAPEBDPEBD0@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImStrlenW@@YAHPEBG@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImStrchrRange@@YAPEBDPEBD0D@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImStrdupcpy@@YAPEADPEADPEA_KPEBD@Z DD 025061e01H
	DD	0119231eH
	DD	070120026H
	DD	050106011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImStrdup@@YAPEADPEBD@Z DD 025061401H
	DD	010f2314H
	DD	070080026H
	DD	050066007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImStrncpy@@YAXPEADPEBD_K@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImStrnicmp@@YAHPEBD0_K@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImStricmp@@YAHPEBD0@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImIsPowerOfTwo@@YA_NH@Z DD 025051201H
	DD	010d2312H
	DD	07006001fH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImAlphaBlendColors@@YAIII@Z DD 025051601H
	DD	01112316H
	DD	0700a002dH
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImHashStr@@YAIPEBD_KI@Z DD 025051d01H
	DD	0118231dH
	DD	070110033H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImHashData@@YAIPEBX_KI@Z DD 025051d01H
	DD	0118231dH
	DD	07011002bH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$fabsf DD 035051401H
	DD	010f3314H
	DD	07008001fH
	DD	05007H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	045H
	DB	09fH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sscanf DD 025054c19H
	DD	011d2322H
	DD	070160029H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
sscanf$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
sscanf$rtcVarDesc DD 048H
	DD	08H
	DQ	FLAT:sscanf$rtcName$0
	ORG $+48
sscanf$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:sscanf$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsscanf_l DD 035052201H
	DD	011d3322H
	DD	07016001fH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsnprintf DD 035052201H
	DD	011d3322H
	DD	07016001fH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsnprintf_l DD 035052201H
	DD	011d3322H
	DD	070160023H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_scanf_options DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_printf_options DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCenter@ImGuiViewport@@QEBA?AUImVec2@@XZ DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiViewport@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsLoaded@ImFont@@QEBA_NXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pop_back@?$ImVector@M@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@M@@QEAAXAEBM@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@M@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@M@@QEAAXH@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_grow_capacity@?$ImVector@M@@QEBAHH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@M@@QEAAAEAMXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@M@@QEAAAEAMH@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@M@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@M@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@M@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@M@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@M@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@M@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@M@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GImFontAtlas@@QEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pop_back@?$ImVector@PEAUImFont@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_grow_capacity@?$ImVector@PEAUImFont@@@@QEBAHH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?empty@?$ImVector@PEAUImFont@@@@QEBA_NXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@PEAUImFont@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@PEAUImFont@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@PEAUImFont@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@PEAUImFont@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@PEAUImFont@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@PEAUImFont@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@PEAUImFont@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsBuilt@ImFontAtlas@@QEBA_NXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pop_back@?$ImVector@I@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@I@@QEAAXAEBI@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@I@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@I@@QEAAXH@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_grow_capacity@?$ImVector@I@@QEBAHH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@I@@QEAAAEAIXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@I@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@I@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@I@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@I@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@I@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@I@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@I@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clear@ImDrawData@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImDrawData@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GImDrawList@@QEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PathStroke@ImDrawList@@QEAAXIHM@Z DD 035052201H
	DD	011d3322H
	DD	07016001fH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PathFillConvex@ImDrawList@@QEAAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ImDrawList@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1ImDrawList@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1ImDrawList@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImDrawList@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1ImDrawList@@QEAA@XZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z DB 010H
	DB	00H
	DB	00H
	DB	'h'
	DB	02H
	DB	'('
	DB	04H
	DB	'('
	DB	06H
	DB	'('
	DB	08H
	DB	'('
	DB	0aH
	DB	'('
	DB	0cH
	DB	098H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z DB 0cH
	DB	0eH
	DD	imagerel ?dtor$0@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z
	DD	imagerel $ip2state$??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z DD 025051811H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@UImVec2@@@@QEAAXAEBUImVec2@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_grow_capacity@?$ImVector@UImVec2@@@@QEBAHH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImVec2@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImVec2@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImVec2@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImVec2@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImVec2@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@UImVec2@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@PEAX@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@PEAX@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@PEAX@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@PEAX@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@PEAX@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@PEAX@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@UImVec4@@@@QEAAAEAUImVec4@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImVec4@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImVec4@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImVec4@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImVec4@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImVec4@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@UImVec4@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImDrawVert@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImDrawVert@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImDrawVert@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImDrawVert@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImDrawVert@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@UImDrawVert@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ImDrawListSplitter@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1ImDrawListSplitter@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1ImDrawListSplitter@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImDrawListSplitter@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1ImDrawListSplitter@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImDrawListSplitter@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImDrawChannel@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImDrawChannel@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImDrawChannel@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImDrawChannel@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImDrawChannel@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImDrawChannel@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@UImDrawChannel@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@UImDrawCmd@@@@QEBAAEBUImDrawCmd@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?back@?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$ImVector@UImDrawCmd@@@@QEBAPEBUImDrawCmd@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImDrawCmd@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImDrawCmd@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImDrawCmd@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImDrawCmd@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImDrawCmd@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@UImDrawCmd@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImDrawCmdHeader@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Step@ImGuiListClipper@@QEAA_NXZ DD 025051301H
	DD	010e2313H
	DD	070070035H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?End@ImGuiListClipper@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Begin@ImGuiListClipper@@QEAAXHM@Z DD 025051d01H
	DD	0118231dH
	DD	070110029H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImGuiListClipper@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiListClipper@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImGuiStorage@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiStorage@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BuildSortByKey@ImGuiStorage@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetAllInt@ImGuiStorage@@QEAAXH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetVoidPtrRef@ImGuiStorage@@QEAAPEAPEAXIPEAX@Z DD 025051c01H
	DD	0117231cH
	DD	070100027H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetFloatRef@ImGuiStorage@@QEAAPEAMIM@Z DD 025051d01H
	DD	0118231dH
	DD	070110027H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetBoolRef@ImGuiStorage@@QEAAPEA_NI_N@Z DD 025051c01H
	DD	0117231cH
	DD	07010001fH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetIntRef@ImGuiStorage@@QEAAPEAHIH@Z DD 025051c01H
	DD	0117231cH
	DD	070100027H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetVoidPtr@ImGuiStorage@@QEAAXIPEAX@Z DD 025051c01H
	DD	0117231cH
	DD	070100027H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetVoidPtr@ImGuiStorage@@QEBAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetFloat@ImGuiStorage@@QEAAXIM@Z DD 025051d01H
	DD	0118231dH
	DD	070110027H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetFloat@ImGuiStorage@@QEBAMIM@Z DD 035051d01H
	DD	0118331dH
	DD	070110023H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetBool@ImGuiStorage@@QEAAXI_N@Z DD 025051c01H
	DD	0117231cH
	DD	07010001fH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetBool@ImGuiStorage@@QEBA_NI_N@Z DD 025051c01H
	DD	0117231cH
	DD	07010001fH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetInt@ImGuiStorage@@QEAAXIH@Z DD 025051c01H
	DD	0117231cH
	DD	070100027H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetInt@ImGuiStorage@@QEBAHIH@Z DD 025051c01H
	DD	0117231cH
	DD	070100021H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clear@ImGuiStorage@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?insert@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@PEBU23@AEBU23@@Z DD 025061e01H
	DD	0119231eH
	DD	070120020H
	DD	050106011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_grow_capacity@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAHH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAPEBUImGuiStoragePair@ImGuiStorage@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAAEAUImGuiStoragePair@ImGuiStorage@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size_in_bytes@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAHXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiStoragePair@ImGuiStorage@@QEAA@IPEAX@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiStoragePair@ImGuiStorage@@QEAA@IM@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiStoragePair@ImGuiStorage@@QEAA@IH@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImGuiTextBuffer@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?appendfv@ImGuiTextBuffer@@QEAAXPEBDPEAD@Z DD 025051d01H
	DD	0118231dH
	DD	070110033H
	DD	05010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	045H
	DB	092H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?appendf@ImGuiTextBuffer@@QEAAXPEBDZZ DD 025054c19H
	DD	011d2322H
	DD	070160025H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0118H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?appendf@ImGuiTextBuffer@@QEAAXPEBDZZ$rtcName$0 DB 061H	; ImGuiTextBuffer::appendf
	DB	072H
	DB	067H
	DB	073H
	DB	00H
	ORG $+11
?appendf@ImGuiTextBuffer@@QEAAXPEBDZZ$rtcVarDesc DD 028H ; ImGuiTextBuffer::appendf
	DD	08H
	DQ	FLAT:?appendf@ImGuiTextBuffer@@QEAAXPEBDZZ$rtcName$0
	ORG $+48
?appendf@ImGuiTextBuffer@@QEAAXPEBDZZ$rtcFrameData DD 01H ; ImGuiTextBuffer::appendf
	DD	00H
	DQ	FLAT:?appendf@ImGuiTextBuffer@@QEAAXPEBDZZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@ImGuiTextBuffer@@QEAAXPEBD0@Z DD 025061e01H
	DD	0119231eH
	DD	07012002eH
	DD	050106011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@ImGuiTextBuffer@@QEBAPEBDXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@ImGuiTextBuffer@@QEAAXH@Z DD 025051701H
	DD	01122317H
	DD	0700b001fH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@ImGuiTextBuffer@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?empty@ImGuiTextBuffer@@QEBA_NXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@ImGuiTextBuffer@@QEBAHXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@ImGuiTextBuffer@@QEBAPEBDXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiTextBuffer@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@D@@QEAAXAEBD@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@D@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@D@@QEAAXH@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_grow_capacity@?$ImVector@D@@QEBAHH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?front@?$ImVector@D@@QEBAAEBDXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@D@@QEAAAEADH@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@D@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@D@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@D@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@D@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@D@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@D@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@D@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXAEBUImGuiTextRange@ImGuiTextFilter@@@Z DD 025061901H
	DD	01142319H
	DD	0700d001cH
	DD	0500b600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXH@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_grow_capacity@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBAHH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBAAEBUImGuiTextRange@ImGuiTextFilter@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAAEAUImGuiTextRange@ImGuiTextFilter@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?empty@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBA_NXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?split@ImGuiTextRange@ImGuiTextFilter@@QEBAXDPEAU?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@@Z DD 025051c01H
	DD	0117231cH
	DD	070100031H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?empty@ImGuiTextRange@ImGuiTextFilter@@QEBA_NXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiTextRange@ImGuiTextFilter@@QEAA@PEBD0@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	036H
	DW	024cH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Build@ImGuiTextFilter@@QEAAXXZ DD 025053d19H
	DD	010e2313H
	DD	07007002dH
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0158H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Build@ImGuiTextFilter@@QEAAXXZ$rtcName$0 DB 069H	; ImGuiTextFilter::Build
	DB	06eH
	DB	070H
	DB	075H
	DB	074H
	DB	05fH
	DB	072H
	DB	061H
	DB	06eH
	DB	067H
	DB	065H
	DB	00H
	ORG $+4
?Build@ImGuiTextFilter@@QEAAXXZ$rtcVarDesc DD 028H	; ImGuiTextFilter::Build
	DD	010H
	DQ	FLAT:?Build@ImGuiTextFilter@@QEAAXXZ$rtcName$0
	ORG $+48
?Build@ImGuiTextFilter@@QEAAXXZ$rtcFrameData DD 01H	; ImGuiTextFilter::Build
	DD	00H
	DQ	FLAT:?Build@ImGuiTextFilter@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PassFilter@ImGuiTextFilter@@QEBA_NPEBD0@Z DD 025051d01H
	DD	0118231dH
	DD	070110025H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Draw@ImGuiTextFilter@@QEAA_NPEBDM@Z DD 035051e01H
	DD	0119331eH
	DD	070120023H
	DD	05011H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ImGuiTextFilter@@QEAA@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ImGuiTextFilter@@QEAA@PEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	0b2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ImGuiTextFilter@@QEAA@PEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0ImGuiTextFilter@@QEAA@PEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0ImGuiTextFilter@@QEAA@PEBD@Z DB 028H
	DD	imagerel $stateUnwindMap$??0ImGuiTextFilter@@QEAA@PEBD@Z
	DD	imagerel $ip2state$??0ImGuiTextFilter@@QEAA@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiTextFilter@@QEAA@PEBD@Z DD 025051811H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0ImGuiTextFilter@@QEAA@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsDataType@ImGuiPayload@@QEBA_NPEBD@Z DD 025051801H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clear@ImGuiPayload@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiPayload@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiSizeCallbackData@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ImGuiIO@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ImGuiIO@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ImGuiIO@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	0a9H, 03H
	DB	02H
	DB	'5', 010H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ImGuiIO@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0ImGuiIO@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0ImGuiIO@@QEAA@XZ DB 028H
	DD	imagerel $stateUnwindMap$??0ImGuiIO@@QEAA@XZ
	DD	imagerel $ip2state$??0ImGuiIO@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiIO@@QEAA@XZ DD 025051311H
	DD	010e2313H
	DD	07007003dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0ImGuiIO@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$ImVector@G@@QEAAXAEBG@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$ImVector@G@@QEAAXH@Z DD 025061801H
	DD	01132318H
	DD	0700c0020H
	DD	0500a600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$ImVector@G@@QEAAXH@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_grow_capacity@?$ImVector@G@@QEBAHH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$ImVector@G@@QEAAAEAGH@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$ImVector@G@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$ImVector@G@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$ImVector@G@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$ImVector@G@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ImVector@G@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$ImVector@G@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ImVector@G@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClearInputCharacters@ImGuiIO@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03bH
	DB	0d6H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddInputCharactersUTF8@ImGuiIO@@QEAAXPEBD@Z DD 025054219H
	DD	01132318H
	DD	0700c0027H
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0120H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?AddInputCharactersUTF8@ImGuiIO@@QEAAXPEBD@Z$rtcName$0 DB 063H ; ImGuiIO::AddInputCharactersUTF8
	DB	00H
	ORG $+14
?AddInputCharactersUTF8@ImGuiIO@@QEAAXPEBD@Z$rtcVarDesc DD 024H ; ImGuiIO::AddInputCharactersUTF8
	DD	04H
	DQ	FLAT:?AddInputCharactersUTF8@ImGuiIO@@QEAAXPEBD@Z$rtcName$0
	ORG $+48
?AddInputCharactersUTF8@ImGuiIO@@QEAAXPEBD@Z$rtcFrameData DD 01H ; ImGuiIO::AddInputCharactersUTF8
	DD	00H
	DQ	FLAT:?AddInputCharactersUTF8@ImGuiIO@@QEAAXPEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03bH
	DW	0194H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddInputCharacterUTF16@ImGuiIO@@QEAAXG@Z DD 025054219H
	DD	01132318H
	DD	0700c002bH
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0140H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?AddInputCharacterUTF16@ImGuiIO@@QEAAXG@Z$rtcName$0 DB 063H ; ImGuiIO::AddInputCharacterUTF16
	DB	070H
	DB	00H
	ORG $+13
?AddInputCharacterUTF16@ImGuiIO@@QEAAXG@Z$rtcVarDesc DD 024H ; ImGuiIO::AddInputCharacterUTF16
	DD	02H
	DQ	FLAT:?AddInputCharacterUTF16@ImGuiIO@@QEAAXG@Z$rtcName$0
	ORG $+48
?AddInputCharacterUTF16@ImGuiIO@@QEAAXG@Z$rtcFrameData DD 01H ; ImGuiIO::AddInputCharacterUTF16
	DD	00H
	DQ	FLAT:?AddInputCharacterUTF16@ImGuiIO@@QEAAXG@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddInputCharacter@ImGuiIO@@QEAAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b0023H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ScaleAllSizes@ImGuiStyle@@QEAAXM@Z DD 025051901H
	DD	01142319H
	DD	0700d007dH
	DD	0500cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGuiStyle@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007004dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??3@YAXPEAXUImNewWrapper@@0@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KUImNewWrapper@@PEAX@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?MemFree@ImGui@@YAXPEAX@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?MemAlloc@ImGui@@YAPEAX_K@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetAllocatorFunctions@ImGui@@YAXPEAP6APEAX_KPEAX@ZPEAP6AX11@ZPEAPEAX@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetAllocatorFunctions@ImGui@@YAXP6APEAX_KPEAX@ZP6AX11@Z1@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DebugCheckVersionAndDataLayout@ImGui@@YA_NPEBD_K11111@Z DD 025052201H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SaveIniSettingsToMemory@ImGui@@YAPEBDPEA_K@Z DD 025051301H
	DD	010e2313H
	DD	07007002dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0d3H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SaveIniSettingsToDisk@ImGui@@YAXPEBD@Z DD 025053d19H
	DD	010e2313H
	DD	07007002dH
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0158H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?SaveIniSettingsToDisk@ImGui@@YAXPEBD@Z$rtcName$0 DB 069H ; ImGui::SaveIniSettingsToDisk
	DB	06eH
	DB	069H
	DB	05fH
	DB	064H
	DB	061H
	DB	074H
	DB	061H
	DB	05fH
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+2
?SaveIniSettingsToDisk@ImGui@@YAXPEBD@Z$rtcVarDesc DD 048H ; ImGui::SaveIniSettingsToDisk
	DD	08H
	DQ	FLAT:?SaveIniSettingsToDisk@ImGui@@YAXPEBD@Z$rtcName$0
	ORG $+48
?SaveIniSettingsToDisk@ImGui@@YAXPEBD@Z$rtcFrameData DD 01H ; ImGui::SaveIniSettingsToDisk
	DD	00H
	DQ	FLAT:?SaveIniSettingsToDisk@ImGui@@YAXPEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LoadIniSettingsFromMemory@ImGui@@YAXPEBD_K@Z DD 025061901H
	DD	01142319H
	DD	0700d0054H
	DD	0500b600cH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	09eH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LoadIniSettingsFromDisk@ImGui@@YAXPEBD@Z DD 025053d19H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0118H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?LoadIniSettingsFromDisk@ImGui@@YAXPEBD@Z$rtcName$0 DB 066H ; ImGui::LoadIniSettingsFromDisk
	DB	069H
	DB	06cH
	DB	065H
	DB	05fH
	DB	064H
	DB	061H
	DB	074H
	DB	061H
	DB	05fH
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+1
?LoadIniSettingsFromDisk@ImGui@@YAXPEBD@Z$rtcVarDesc DD 028H ; ImGui::LoadIniSettingsFromDisk
	DD	08H
	DQ	FLAT:?LoadIniSettingsFromDisk@ImGui@@YAXPEBD@Z$rtcName$0
	ORG $+48
?LoadIniSettingsFromDisk@ImGui@@YAXPEBD@Z$rtcFrameData DD 01H ; ImGui::LoadIniSettingsFromDisk
	DD	00H
	DQ	FLAT:?LoadIniSettingsFromDisk@ImGui@@YAXPEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetClipboardText@ImGui@@YAXPEBD@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetClipboardText@ImGui@@YAPEBDXZ DD 025050f01H
	DD	010a230fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CaptureMouseFromApp@ImGui@@YAX_N@Z DD 025051201H
	DD	010d2312H
	DD	07006001fH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetMouseCursor@ImGui@@YAXH@Z DD 025051201H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetMouseCursor@ImGui@@YAHXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ResetMouseDragDelta@ImGui@@YAXH@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetMouseDragDelta@ImGui@@YA?AUImVec2@@HM@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsMouseDragging@ImGui@@YA_NHM@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetMousePosOnOpeningCurrentPopup@ImGui@@YA?AUImVec2@@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetMousePos@ImGui@@YA?AUImVec2@@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsAnyMouseDown@ImGui@@YA_NXZ DD 025050f01H
	DD	010a230fH
	DD	070030025H
	DD	05002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	036H
	DW	0119H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z DD 025053d19H
	DD	010e2313H
	DD	07007002bH
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0140H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z$rtcName$0 DB 070H ; ImGui::IsMousePosValid
	DB	00H
	ORG $+14
?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z$rtcVarDesc DD 048H ; ImGui::IsMousePosValid
	DD	08H
	DQ	FLAT:?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z$rtcName$0
	ORG $+48
?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z$rtcFrameData DD 01H ; ImGui::IsMousePosValid
	DD	00H
	DQ	FLAT:?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	040H
	DW	0135H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z DD 025054719H
	DD	0118231dH
	DD	070110037H
	DD	05010H
	DD	imagerel __GSHandlerCheck
	DD	01a8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z$rtcName$0 DB 072H ; ImGui::IsMouseHoveringRect
	DB	065H
	DB	063H
	DB	074H
	DB	05fH
	DB	063H
	DB	06cH
	DB	069H
	DB	070H
	DB	070H
	DB	065H
	DB	064H
	DB	00H
	ORG $+3
?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z$rtcName$1 DB 072H ; ImGui::IsMouseHoveringRect
	DB	065H
	DB	063H
	DB	074H
	DB	05fH
	DB	066H
	DB	06fH
	DB	072H
	DB	05fH
	DB	074H
	DB	06fH
	DB	075H
	DB	063H
	DB	068H
	DB	00H
	ORG $+1
?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z$rtcVarDesc DD 078H ; ImGui::IsMouseHoveringRect
	DD	010H
	DQ	FLAT:?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z$rtcName$1
	DD	048H
	DD	010H
	DQ	FLAT:?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z$rtcName$0
	ORG $+96
?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z$rtcFrameData DD 02H ; ImGui::IsMouseHoveringRect
	DD	00H
	DQ	FLAT:?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsMouseDoubleClicked@ImGui@@YA_NH@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsMouseReleased@ImGui@@YA_NH@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsMouseClicked@ImGui@@YA_NH_N@Z DD 025051601H
	DD	01112316H
	DD	0700a0029H
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsMouseDown@ImGui@@YA_NH@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CaptureKeyboardFromApp@ImGui@@YAX_N@Z DD 025051201H
	DD	010d2312H
	DD	07006001fH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetKeyPressedAmount@ImGui@@YAHHMM@Z DD 025051e01H
	DD	0119231eH
	DD	070120025H
	DD	05011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsKeyReleased@ImGui@@YA_NH@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsKeyPressed@ImGui@@YA_NH_N@Z DD 025051601H
	DD	01112316H
	DD	0700a0025H
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsKeyDown@ImGui@@YA_NH@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetKeyIndex@ImGui@@YAHH@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ColorConvertHSVtoRGB@ImGui@@YAXMMMAEAM00@Z DD 025052501H
	DD	01202325H
	DD	070190031H
	DD	05018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ColorConvertRGBtoHSV@ImGui@@YAXMMMAEAM00@Z DD 025052501H
	DD	01202325H
	DD	070190025H
	DD	05018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ColorConvertU32ToFloat4@ImGui@@YA?AUImVec4@@I@Z DD 035051701H
	DD	01123317H
	DD	0700b0023H
	DD	0500aH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	0176H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcTextSize@ImGui@@YA?AUImVec2@@PEBD0_NM@Z DD 045054c19H
	DD	011d4322H
	DD	070160035H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0198H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?CalcTextSize@ImGui@@YA?AUImVec2@@PEBD0_NM@Z$rtcName$0 DB 074H ; ImGui::CalcTextSize
	DB	065H
	DB	078H
	DB	074H
	DB	05fH
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+6
?CalcTextSize@ImGui@@YA?AUImVec2@@PEBD0_NM@Z$rtcVarDesc DD 0c8H ; ImGui::CalcTextSize
	DD	08H
	DQ	FLAT:?CalcTextSize@ImGui@@YA?AUImVec2@@PEBD0_NM@Z$rtcName$0
	ORG $+48
?CalcTextSize@ImGui@@YA?AUImVec2@@PEBD0_NM@Z$rtcFrameData DD 01H ; ImGui::CalcTextSize
	DD	00H
	DQ	FLAT:?CalcTextSize@ImGui@@YA?AUImVec2@@PEBD0_NM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EndChildFrame@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BeginChildFrame@ImGui@@YA_NIAEBUImVec2@@H@Z DD 025051c01H
	DD	0117231cH
	DD	070100029H
	DD	0500fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	02d7H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcListClipping@ImGui@@YAXHMPEAH0@Z DD 025064c19H
	DD	011e2323H
	DD	070170046H
	DD	050156016H
	DD	imagerel __GSHandlerCheck
	DD	0228H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?CalcListClipping@ImGui@@YAXHMPEAH0@Z$rtcName$0 DB 075H	; ImGui::CalcListClipping
	DB	06eH
	DB	063H
	DB	06cH
	DB	069H
	DB	070H
	DB	070H
	DB	065H
	DB	064H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+1
?CalcListClipping@ImGui@@YAXHMPEAH0@Z$rtcName$1 DB 070H	; ImGui::CalcListClipping
	DB	06fH
	DB	073H
	DB	00H
	ORG $+12
?CalcListClipping@ImGui@@YAXHMPEAH0@Z$rtcVarDesc DD 098H ; ImGui::CalcListClipping
	DD	08H
	DQ	FLAT:?CalcListClipping@ImGui@@YAXHMPEAH0@Z$rtcName$1
	DD	068H
	DD	010H
	DQ	FLAT:?CalcListClipping@ImGui@@YAXHMPEAH0@Z$rtcName$0
	ORG $+96
?CalcListClipping@ImGui@@YAXHMPEAH0@Z$rtcFrameData DD 02H ; ImGui::CalcListClipping
	DD	00H
	DQ	FLAT:?CalcListClipping@ImGui@@YAXHMPEAH0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetStateStorage@ImGui@@YAPEAUImGuiStorage@@XZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetStateStorage@ImGui@@YAXPEAUImGuiStorage@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetStyleColorName@ImGui@@YAPEBDH@Z DD 025051201H
	DD	010d2312H
	DD	07006001fH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDrawListSharedData@ImGui@@YAPEAUImDrawListSharedData@@XZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@XZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@XZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetFrameCount@ImGui@@YAHXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetTime@ImGui@@YANXZ DD 035050f01H
	DD	010a330fH
	DD	07003001fH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsRectVisible@ImGui@@YA_NAEBUImVec2@@0@Z DD 025051801H
	DD	01132318H
	DD	0700c0027H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsRectVisible@ImGui@@YA_NAEBUImVec2@@@Z DD 025051301H
	DD	010e2313H
	DD	07007002bH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetMainViewport@ImGui@@YAPEAUImGuiViewport@@XZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetItemAllowOverlap@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030025H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetItemRectSize@ImGui@@YA?AUImVec2@@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetItemRectMax@ImGui@@YA?AUImVec2@@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetItemRectMin@ImGui@@YA?AUImVec2@@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsAnyItemFocused@ImGui@@YA_NXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsAnyItemActive@ImGui@@YA_NXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsAnyItemHovered@ImGui@@YA_NXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsItemToggledOpen@ImGui@@YA_NXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsItemDeactivatedAfterEdit@ImGui@@YA_NXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsItemDeactivated@ImGui@@YA_NXZ DD 025050f01H
	DD	010a230fH
	DD	070030025H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsItemActivated@ImGui@@YA_NXZ DD 025050f01H
	DD	010a230fH
	DD	070030025H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsItemEdited@ImGui@@YA_NXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsItemVisible@ImGui@@YA_NXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsItemClicked@ImGui@@YA_NH@Z DD 025051201H
	DD	010d2312H
	DD	07006001fH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsItemFocused@ImGui@@YA_NXZ DD 025050f01H
	DD	010a230fH
	DD	070030025H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsItemActive@ImGui@@YA_NXZ DD 025050f01H
	DD	010a230fH
	DD	070030025H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsItemHovered@ImGui@@YA_NH@Z DD 025051201H
	DD	010d2312H
	DD	070060029H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetKeyboardFocusHere@ImGui@@YAXH@Z DD 025051201H
	DD	010d2312H
	DD	070060025H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetItemDefaultFocus@ImGui@@YAXXZ DD 025061001H
	DD	010b2310H
	DD	070040034H
	DD	050026003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PopClipRect@ImGui@@YAXXZ DD 025061001H
	DD	010b2310H
	DD	070040026H
	DD	050026003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushClipRect@ImGui@@YAXAEBUImVec2@@0_N@Z DD 025061e01H
	DD	0119231eH
	DD	070120026H
	DD	050106011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDragDropPayload@ImGui@@YAPEBUImGuiPayload@@XZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EndDragDropTarget@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03bH
	DW	0383H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z DD 045064219H
	DD	01134318H
	DD	0700c004eH
	DD	0500a600bH
	DD	imagerel __GSHandlerCheck
	DD	0268H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z$rtcName$0 DB 072H ; ImGui::AcceptDragDropPayload
	DB	00H
	ORG $+14
?AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z$rtcVarDesc DD 0c8H ; ImGui::AcceptDragDropPayload
	DD	010H
	DQ	FLAT:?AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z$rtcName$0
	ORG $+48
?AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z$rtcFrameData DD 01H ; ImGui::AcceptDragDropPayload
	DD	00H
	DQ	FLAT:?AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BeginDragDropTarget@ImGui@@YA_NXZ DD 025061001H
	DD	010b2310H
	DD	070040034H
	DD	050026003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EndDragDropSource@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetDragDropPayload@ImGui@@YA_NPEBDPEBX_KH@Z DD 025062301H
	DD	011e2323H
	DD	070170026H
	DD	050156016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BeginDragDropSource@ImGui@@YA_NH@Z DD 025051201H
	DD	010d2312H
	DD	070060041H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LogTextV@ImGui@@YAXPEBDPEAD@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	045H
	DB	0abH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LogText@ImGui@@YAXPEBDZZ DD 025054c19H
	DD	011d2322H
	DD	070160029H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?LogText@ImGui@@YAXPEBDZZ$rtcName$0 DB 061H		; ImGui::LogText
	DB	072H
	DB	067H
	DB	073H
	DB	00H
	ORG $+11
?LogText@ImGui@@YAXPEBDZZ$rtcVarDesc DD 048H		; ImGui::LogText
	DD	08H
	DQ	FLAT:?LogText@ImGui@@YAXPEBDZZ$rtcName$0
	ORG $+48
?LogText@ImGui@@YAXPEBDZZ$rtcFrameData DD 01H		; ImGui::LogText
	DD	00H
	DQ	FLAT:?LogText@ImGui@@YAXPEBDZZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LogButtons@ImGui@@YAXXZ DD 035050f01H
	DD	010a330fH
	DD	07003003bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LogFinish@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LogToClipboard@ImGui@@YAXH@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LogToFile@ImGui@@YAXHPEBD@Z DD 025051701H
	DD	01122317H
	DD	0700b0025H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LogToTTY@ImGui@@YAXH@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsPopupOpen@ImGui@@YA_NPEBDH@Z DD 025051701H
	DD	01122317H
	DD	0700b0025H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BeginPopupContextVoid@ImGui@@YA_NPEBDH@Z DD 025051701H
	DD	01122317H
	DD	0700b0029H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BeginPopupContextWindow@ImGui@@YA_NPEBDH@Z DD 025051701H
	DD	01122317H
	DD	0700b0029H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BeginPopupContextItem@ImGui@@YA_NPEBDH@Z DD 025051701H
	DD	01122317H
	DD	0700b0029H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CloseCurrentPopup@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030037H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?OpenPopupOnItemClick@ImGui@@YAXPEBDH@Z DD 025051701H
	DD	01122317H
	DD	0700b0029H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?OpenPopup@ImGui@@YAXIH@Z DD 025051601H
	DD	01112316H
	DD	0700a001dH
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?OpenPopup@ImGui@@YAXPEBDH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EndPopup@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030025H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BeginPopupModal@ImGui@@YA_NPEBDPEA_NH@Z DD 025051d01H
	DD	0118231dH
	DD	07011003bH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BeginPopup@ImGui@@YA_NPEBDH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetTooltipV@ImGui@@YAXPEBDPEAD@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	045H
	DB	08bH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetTooltip@ImGui@@YAXPEBDZZ DD 025054c19H
	DD	011d2322H
	DD	070160025H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0118H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?SetTooltip@ImGui@@YAXPEBDZZ$rtcName$0 DB 061H		; ImGui::SetTooltip
	DB	072H
	DB	067H
	DB	073H
	DB	00H
	ORG $+11
?SetTooltip@ImGui@@YAXPEBDZZ$rtcVarDesc DD 028H		; ImGui::SetTooltip
	DD	08H
	DQ	FLAT:?SetTooltip@ImGui@@YAXPEBDZZ$rtcName$0
	ORG $+48
?SetTooltip@ImGui@@YAXPEBDZZ$rtcFrameData DD 01H	; ImGui::SetTooltip
	DD	00H
	DQ	FLAT:?SetTooltip@ImGui@@YAXPEBDZZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EndTooltip@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BeginTooltip@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetID@ImGui@@YAIPEBX@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetID@ImGui@@YAIPEBD0@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetID@ImGui@@YAIPEBD@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PopID@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	034H
	DB	0a4H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushID@ImGui@@YAXH@Z DD 025053b19H
	DD	010d2312H
	DD	07006002bH
	DD	05005H
	DD	imagerel __GSHandlerCheck
	DD	0140H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PushID@ImGui@@YAXH@Z$rtcName$0 DB 069H			; ImGui::PushID
	DB	064H
	DB	00H
	ORG $+13
?PushID@ImGui@@YAXH@Z$rtcVarDesc DD 064H		; ImGui::PushID
	DD	04H
	DQ	FLAT:?PushID@ImGui@@YAXH@Z$rtcName$0
	ORG $+48
?PushID@ImGui@@YAXH@Z$rtcFrameData DD 01H		; ImGui::PushID
	DD	00H
	DQ	FLAT:?PushID@ImGui@@YAXH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0a7H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushID@ImGui@@YAXPEBX@Z DD 025053d19H
	DD	010e2313H
	DD	07007002bH
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0140H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PushID@ImGui@@YAXPEBX@Z$rtcName$0 DB 069H		; ImGui::PushID
	DB	064H
	DB	00H
	ORG $+13
?PushID@ImGui@@YAXPEBX@Z$rtcVarDesc DD 064H		; ImGui::PushID
	DD	04H
	DQ	FLAT:?PushID@ImGui@@YAXPEBX@Z$rtcName$0
	ORG $+48
?PushID@ImGui@@YAXPEBX@Z$rtcFrameData DD 01H		; ImGui::PushID
	DD	00H
	DQ	FLAT:?PushID@ImGui@@YAXPEBX@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03bH
	DB	0b3H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushID@ImGui@@YAXPEBD0@Z DD 025054219H
	DD	01132318H
	DD	0700c002bH
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0140H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PushID@ImGui@@YAXPEBD0@Z$rtcName$0 DB 069H		; ImGui::PushID
	DB	064H
	DB	00H
	ORG $+13
?PushID@ImGui@@YAXPEBD0@Z$rtcVarDesc DD 064H		; ImGui::PushID
	DD	04H
	DQ	FLAT:?PushID@ImGui@@YAXPEBD0@Z$rtcName$0
	ORG $+48
?PushID@ImGui@@YAXPEBD0@Z$rtcFrameData DD 01H		; ImGui::PushID
	DD	00H
	DQ	FLAT:?PushID@ImGui@@YAXPEBD0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0aaH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushID@ImGui@@YAXPEBD@Z DD 025053d19H
	DD	010e2313H
	DD	07007002bH
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0140H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PushID@ImGui@@YAXPEBD@Z$rtcName$0 DB 069H		; ImGui::PushID
	DB	064H
	DB	00H
	ORG $+13
?PushID@ImGui@@YAXPEBD@Z$rtcVarDesc DD 064H		; ImGui::PushID
	DD	04H
	DQ	FLAT:?PushID@ImGui@@YAXPEBD@Z$rtcName$0
	ORG $+48
?PushID@ImGui@@YAXPEBD@Z$rtcFrameData DD 01H		; ImGui::PushID
	DD	00H
	DQ	FLAT:?PushID@ImGui@@YAXPEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetFrameHeightWithSpacing@ImGui@@YAMXZ DD 035050f01H
	DD	010a330fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetFrameHeight@ImGui@@YAMXZ DD 035050f01H
	DD	010a330fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetTextLineHeightWithSpacing@ImGui@@YAMXZ DD 035050f01H
	DD	010a330fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetTextLineHeight@ImGui@@YAMXZ DD 035050f01H
	DD	010a330fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetCursorScreenPos@ImGui@@YAXAEBUImVec2@@@Z DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCursorScreenPos@ImGui@@YA?AUImVec2@@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCursorStartPos@ImGui@@YA?AUImVec2@@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetCursorPosY@ImGui@@YAXM@Z DD 025051401H
	DD	010f2314H
	DD	070080021H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetCursorPosX@ImGui@@YAXM@Z DD 025051401H
	DD	010f2314H
	DD	070080021H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetCursorPos@ImGui@@YAXAEBUImVec2@@@Z DD 025051301H
	DD	010e2313H
	DD	07007002dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCursorPosY@ImGui@@YAMXZ DD 035050f01H
	DD	010a330fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCursorPosX@ImGui@@YAMXZ DD 035050f01H
	DD	010a330fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCursorPos@ImGui@@YA?AUImVec2@@XZ DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02bH
	DW	0416H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EndGroup@ImGui@@YAXXZ DD 025063219H
	DD	010b2310H
	DD	070040046H
	DD	050026003H
	DD	imagerel __GSHandlerCheck
	DD	0228H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?EndGroup@ImGui@@YAXXZ$rtcName$0 DB 067H		; ImGui::EndGroup
	DB	072H
	DB	06fH
	DB	075H
	DB	070H
	DB	05fH
	DB	062H
	DB	062H
	DB	00H
	ORG $+7
?EndGroup@ImGui@@YAXXZ$rtcVarDesc DD 088H		; ImGui::EndGroup
	DD	010H
	DQ	FLAT:?EndGroup@ImGui@@YAXXZ$rtcName$0
	ORG $+48
?EndGroup@ImGui@@YAXXZ$rtcFrameData DD 01H		; ImGui::EndGroup
	DD	00H
	DQ	FLAT:?EndGroup@ImGui@@YAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BeginGroup@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	07003002dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Unindent@ImGui@@YAXM@Z DD 025051401H
	DD	010f2314H
	DD	070080025H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Indent@ImGui@@YAXM@Z DD 025051401H
	DD	010f2314H
	DD	070080025H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SameLine@ImGui@@YAXMM@Z DD 025051a01H
	DD	0115231aH
	DD	0700e0025H
	DD	0500dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetStyleColorVec4@ImGui@@YAAEBUImVec4@@H@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetColorU32@ImGui@@YAII@Z DD 025051201H
	DD	010d2312H
	DD	070060025H
	DD	05005H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	037H
	DB	0a1H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetColorU32@ImGui@@YAIAEBUImVec4@@@Z DD 025063e19H
	DD	010f2314H
	DD	070080026H
	DD	050066007H
	DD	imagerel __GSHandlerCheck
	DD	0128H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?GetColorU32@ImGui@@YAIAEBUImVec4@@@Z$rtcName$0 DB 063H	; ImGui::GetColorU32
	DB	00H
	ORG $+14
?GetColorU32@ImGui@@YAIAEBUImVec4@@@Z$rtcVarDesc DD 048H ; ImGui::GetColorU32
	DD	010H
	DQ	FLAT:?GetColorU32@ImGui@@YAIAEBUImVec4@@@Z$rtcName$0
	ORG $+48
?GetColorU32@ImGui@@YAIAEBUImVec4@@@Z$rtcFrameData DD 01H ; ImGui::GetColorU32
	DD	00H
	DQ	FLAT:?GetColorU32@ImGui@@YAIAEBUImVec4@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03bH
	DB	0c4H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetColorU32@ImGui@@YAIHM@Z DD 025064219H
	DD	01142319H
	DD	0700d0026H
	DD	0500b600cH
	DD	imagerel __GSHandlerCheck
	DD	0128H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?GetColorU32@ImGui@@YAIHM@Z$rtcName$0 DB 063H		; ImGui::GetColorU32
	DB	00H
	ORG $+14
?GetColorU32@ImGui@@YAIHM@Z$rtcVarDesc DD 048H		; ImGui::GetColorU32
	DD	010H
	DQ	FLAT:?GetColorU32@ImGui@@YAIHM@Z$rtcName$0
	ORG $+48
?GetColorU32@ImGui@@YAIHM@Z$rtcFrameData DD 01H		; ImGui::GetColorU32
	DD	00H
	DQ	FLAT:?GetColorU32@ImGui@@YAIHM@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetFontTexUvWhitePixel@ImGui@@YA?AUImVec2@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetFontSize@ImGui@@YAMXZ DD 035050f01H
	DD	010a330fH
	DD	07003001fH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetFont@ImGui@@YAPEAUImFont@@XZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PopTextWrapPos@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushTextWrapPos@ImGui@@YAXM@Z DD 025051401H
	DD	010f2314H
	DD	070080021H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcItemWidth@ImGui@@YAMXZ DD 035050f01H
	DD	010a330fH
	DD	070030033H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetNextItemWidth@ImGui@@YAXM@Z DD 025051401H
	DD	010f2314H
	DD	070080021H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PopItemWidth@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushItemWidth@ImGui@@YAXM@Z DD 025051401H
	DD	010f2314H
	DD	070080025H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PopButtonRepeat@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushButtonRepeat@ImGui@@YAX_N@Z DD 025051201H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PopAllowKeyboardFocus@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushAllowKeyboardFocus@ImGui@@YAX_N@Z DD 025051201H
	DD	010d2312H
	DD	07006001fH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PopStyleVar@ImGui@@YAXH@Z DD 025051201H
	DD	010d2312H
	DD	07006002dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushStyleVar@ImGui@@YAXHAEBUImVec2@@@Z DD 025051701H
	DD	01122317H
	DD	0700b002dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushStyleVar@ImGui@@YAXHM@Z DD 025051801H
	DD	01132318H
	DD	0700c002dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PopStyleColor@ImGui@@YAXH@Z DD 025061301H
	DD	010e2313H
	DD	070070024H
	DD	050056006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03aH
	DB	0e5H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushStyleColor@ImGui@@YAXHAEBUImVec4@@@Z DD 025064119H
	DD	01132318H
	DD	0700c0028H
	DD	0500a600bH
	DD	imagerel __GSHandlerCheck
	DD	0130H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PushStyleColor@ImGui@@YAXHAEBUImVec4@@@Z$rtcName$0 DB 062H ; ImGui::PushStyleColor
	DB	061H
	DB	063H
	DB	06bH
	DB	075H
	DB	070H
	DB	00H
	ORG $+9
?PushStyleColor@ImGui@@YAXHAEBUImVec4@@@Z$rtcVarDesc DD 048H ; ImGui::PushStyleColor
	DD	014H
	DQ	FLAT:?PushStyleColor@ImGui@@YAXHAEBUImVec4@@@Z$rtcName$0
	ORG $+48
?PushStyleColor@ImGui@@YAXHAEBUImVec4@@@Z$rtcFrameData DD 01H ; ImGui::PushStyleColor
	DD	00H
	DQ	FLAT:?PushStyleColor@ImGui@@YAXHAEBUImVec4@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	039H
	DB	0f2H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushStyleColor@ImGui@@YAXHI@Z DD 025064019H
	DD	01122317H
	DD	0700b002eH
	DD	05009600aH
	DD	imagerel __GSHandlerCheck
	DD	0160H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?PushStyleColor@ImGui@@YAXHI@Z$rtcName$0 DB 062H	; ImGui::PushStyleColor
	DB	061H
	DB	063H
	DB	06bH
	DB	075H
	DB	070H
	DB	00H
	ORG $+9
?PushStyleColor@ImGui@@YAXHI@Z$rtcVarDesc DD 048H	; ImGui::PushStyleColor
	DD	014H
	DQ	FLAT:?PushStyleColor@ImGui@@YAXHI@Z$rtcName$0
	ORG $+48
?PushStyleColor@ImGui@@YAXHI@Z$rtcFrameData DD 01H	; ImGui::PushStyleColor
	DD	00H
	DQ	FLAT:?PushStyleColor@ImGui@@YAXHI@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PopFont@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushFont@ImGui@@YAXPEAUImFont@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetScrollFromPosY@ImGui@@YAXMM@Z DD 025051a01H
	DD	0115231aH
	DD	0700e0021H
	DD	0500dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetScrollFromPosX@ImGui@@YAXMM@Z DD 025051a01H
	DD	0115231aH
	DD	0700e0021H
	DD	0500dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetScrollHereY@ImGui@@YAXM@Z DD 025051401H
	DD	010f2314H
	DD	07008002dH
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetScrollHereX@ImGui@@YAXM@Z DD 025051401H
	DD	010f2314H
	DD	07008002dH
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetScrollMaxY@ImGui@@YAMXZ DD 035050f01H
	DD	010a330fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetScrollMaxX@ImGui@@YAMXZ DD 035050f01H
	DD	010a330fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetScrollY@ImGui@@YAXM@Z DD 025051401H
	DD	010f2314H
	DD	070080021H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetScrollX@ImGui@@YAXM@Z DD 025051401H
	DD	010f2314H
	DD	070080021H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetScrollY@ImGui@@YAMXZ DD 035050f01H
	DD	010a330fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetScrollX@ImGui@@YAMXZ DD 035050f01H
	DD	010a330fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWindowContentRegionWidth@ImGui@@YAMXZ DD 035050f01H
	DD	010a330fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWindowContentRegionMax@ImGui@@YA?AUImVec2@@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWindowContentRegionMin@ImGui@@YA?AUImVec2@@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0e6H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetContentRegionMax@ImGui@@YA?AUImVec2@@XZ DD 025053d19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?GetContentRegionMax@ImGui@@YA?AUImVec2@@XZ$rtcName$0 DB 06dH ; ImGui::GetContentRegionMax
	DB	078H
	DB	00H
	ORG $+13
?GetContentRegionMax@ImGui@@YA?AUImVec2@@XZ$rtcVarDesc DD 068H ; ImGui::GetContentRegionMax
	DD	08H
	DQ	FLAT:?GetContentRegionMax@ImGui@@YA?AUImVec2@@XZ$rtcName$0
	ORG $+48
?GetContentRegionMax@ImGui@@YA?AUImVec2@@XZ$rtcFrameData DD 01H ; ImGui::GetContentRegionMax
	DD	00H
	DQ	FLAT:?GetContentRegionMax@ImGui@@YA?AUImVec2@@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetContentRegionAvail@ImGui@@YA?AUImVec2@@XZ DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetWindowFocus@ImGui@@YAXPEBD@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetWindowCollapsed@ImGui@@YAXPEBD_NH@Z DD 025051c01H
	DD	0117231cH
	DD	070100021H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetWindowSize@ImGui@@YAXPEBDAEBUImVec2@@H@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetWindowPos@ImGui@@YAXPEBDAEBUImVec2@@H@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetWindowFontScale@ImGui@@YAXM@Z DD 025051401H
	DD	010f2314H
	DD	070080025H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetWindowFocus@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetWindowCollapsed@ImGui@@YAX_NH@Z DD 025051601H
	DD	01112316H
	DD	0700a001dH
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetWindowSize@ImGui@@YAXAEBUImVec2@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetWindowPos@ImGui@@YAXAEBUImVec2@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetNextWindowBgAlpha@ImGui@@YAXM@Z DD 025051401H
	DD	010f2314H
	DD	070080021H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetNextWindowFocus@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetNextWindowCollapsed@ImGui@@YAX_NH@Z DD 025051601H
	DD	01112316H
	DD	0700a0021H
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetNextWindowContentSize@ImGui@@YAXAEBUImVec2@@@Z DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetNextWindowSizeConstraints@ImGui@@YAXAEBUImVec2@@0P6AXPEAUImGuiSizeCallbackData@@@ZPEAX@Z DD 025062301H
	DD	011e2323H
	DD	070170026H
	DD	050156016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetNextWindowSize@ImGui@@YAXAEBUImVec2@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetNextWindowPos@ImGui@@YAXAEBUImVec2@@H0@Z DD 025051c01H
	DD	0117231cH
	DD	070100021H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWindowHeight@ImGui@@YAMXZ DD 035050f01H
	DD	010a330fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWindowWidth@ImGui@@YAMXZ DD 035050f01H
	DD	010a330fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWindowSize@ImGui@@YA?AUImVec2@@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWindowPos@ImGui@@YA?AUImVec2@@XZ DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWindowDrawList@ImGui@@YAPEAUImDrawList@@XZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsWindowHovered@ImGui@@YA_NH@Z DD 025051201H
	DD	010d2312H
	DD	070060025H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsWindowFocused@ImGui@@YA_NH@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsWindowCollapsed@ImGui@@YA_NXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsWindowAppearing@ImGui@@YA_NXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02aH
	DW	0355H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EndChild@ImGui@@YAXXZ DD 025053119H
	DD	010a230fH
	DD	070030051H
	DD	05002H
	DD	imagerel __GSHandlerCheck
	DD	0270H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?EndChild@ImGui@@YAXXZ$rtcName$0 DB 073H		; ImGui::EndChild
	DB	07aH
	DB	00H
	ORG $+1
?EndChild@ImGui@@YAXXZ$rtcName$1 DB 062H		; ImGui::EndChild
	DB	062H
	DB	00H
	ORG $+9
?EndChild@ImGui@@YAXXZ$rtcVarDesc DD 0a8H		; ImGui::EndChild
	DD	010H
	DQ	FLAT:?EndChild@ImGui@@YAXXZ$rtcName$1
	DD	068H
	DD	08H
	DQ	FLAT:?EndChild@ImGui@@YAXXZ$rtcName$0
	ORG $+96
?EndChild@ImGui@@YAXXZ$rtcFrameData DD 02H		; ImGui::EndChild
	DD	00H
	DQ	FLAT:?EndChild@ImGui@@YAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BeginChild@ImGui@@YA_NIAEBUImVec2@@_NH@Z DD 035052101H
	DD	011c3321H
	DD	07015001fH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BeginChild@ImGui@@YA_NPEBDAEBUImVec2@@_NH@Z DD 035052201H
	DD	011d3322H
	DD	070160023H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?End@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030025H
	DD	05002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	047H
	DW	032f5H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Begin@ImGui@@YA_NPEBDPEA_NH@Z DD 045064e19H
	DD	011f4324H
	DD	070120268H
	DD	050106011H
	DD	imagerel __GSHandlerCheck
	DD	01338H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$0 DB 077H	; ImGui::Begin
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	00H
	ORG $+1
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$1 DB 062H	; ImGui::Begin
	DB	075H
	DB	066H
	DB	05fH
	DB	06cH
	DB	065H
	DB	06eH
	DB	00H
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$2 DB 074H	; ImGui::Begin
	DB	069H
	DB	074H
	DB	06cH
	DB	065H
	DB	05fH
	DB	062H
	DB	061H
	DB	072H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+1
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$3 DB 073H	; ImGui::Begin
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	061H
	DB	075H
	DB	074H
	DB	06fH
	DB	05fH
	DB	066H
	DB	069H
	DB	074H
	DB	00H
	ORG $+2
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$4 DB 076H	; ImGui::Begin
	DB	069H
	DB	065H
	DB	077H
	DB	070H
	DB	06fH
	DB	072H
	DB	074H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+2
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$5 DB 076H	; ImGui::Begin
	DB	069H
	DB	065H
	DB	077H
	DB	070H
	DB	06fH
	DB	072H
	DB	074H
	DB	05fH
	DB	077H
	DB	06fH
	DB	072H
	DB	06bH
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+1
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$16 DB 062H	; ImGui::Begin
	DB	062H
	DB	00H
	ORG $+1
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$6 DB 076H	; ImGui::Begin
	DB	069H
	DB	073H
	DB	069H
	DB	062H
	DB	069H
	DB	06cH
	DB	069H
	DB	074H
	DB	079H
	DB	05fH
	DB	070H
	DB	061H
	DB	064H
	DB	064H
	DB	069H
	DB	06eH
	DB	067H
	DB	00H
	ORG $+1
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$17 DB 062H	; ImGui::Begin
	DB	062H
	DB	00H
	ORG $+1
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$7 DB 076H	; ImGui::Begin
	DB	069H
	DB	073H
	DB	069H
	DB	062H
	DB	069H
	DB	06cH
	DB	069H
	DB	074H
	DB	079H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$8 DB 062H	; ImGui::Begin
	DB	06fH
	DB	072H
	DB	064H
	DB	065H
	DB	072H
	DB	05fH
	DB	068H
	DB	065H
	DB	06cH
	DB	064H
	DB	00H
	ORG $+4
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$9 DB 072H	; ImGui::Begin
	DB	065H
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	067H
	DB	072H
	DB	069H
	DB	070H
	DB	05fH
	DB	063H
	DB	06fH
	DB	06cH
	DB	00H
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$10 DB 061H	; ImGui::Begin
	DB	076H
	DB	061H
	DB	069H
	DB	06cH
	DB	05fH
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	066H
	DB	072H
	DB	06fH
	DB	06dH
	DB	05fH
	DB	063H
	DB	075H
	DB	072H
	DB	072H
	DB	065H
	DB	06eH
	DB	074H
	DB	05fH
	DB	066H
	DB	072H
	DB	061H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+2
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$11 DB 061H	; ImGui::Begin
	DB	076H
	DB	061H
	DB	069H
	DB	06cH
	DB	05fH
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	066H
	DB	072H
	DB	06fH
	DB	06dH
	DB	05fH
	DB	06cH
	DB	061H
	DB	073H
	DB	074H
	DB	05fH
	DB	066H
	DB	072H
	DB	061H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+5
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$12 DB 06eH	; ImGui::Begin
	DB	065H
	DB	065H
	DB	064H
	DB	065H
	DB	064H
	DB	05fH
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	05fH
	DB	066H
	DB	072H
	DB	06fH
	DB	06dH
	DB	05fH
	DB	06cH
	DB	061H
	DB	073H
	DB	074H
	DB	05fH
	DB	066H
	DB	072H
	DB	061H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+4
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$13 DB 068H	; ImGui::Begin
	DB	06fH
	DB	073H
	DB	074H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+6
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$14 DB 06fH	; ImGui::Begin
	DB	075H
	DB	074H
	DB	065H
	DB	072H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+5
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$15 DB 074H	; ImGui::Begin
	DB	069H
	DB	074H
	DB	06cH
	DB	065H
	DB	05fH
	DB	062H
	DB	061H
	DB	072H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+1
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcVarDesc DD 0738H	; ImGui::Begin
	DD	010H
	DQ	FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$17
	DD	0688H
	DD	010H
	DQ	FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$16
	DD	05d8H
	DD	010H
	DQ	FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$15
	DD	05a8H
	DD	010H
	DQ	FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$14
	DD	0578H
	DD	010H
	DQ	FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$13
	DD	0518H
	DD	08H
	DQ	FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$12
	DD	04f8H
	DD	08H
	DQ	FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$11
	DD	04d8H
	DD	08H
	DQ	FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$10
	DD	0468H
	DD	010H
	DQ	FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$9
	DD	0444H
	DD	04H
	DQ	FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$8
	DD	03f8H
	DD	010H
	DQ	FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$7
	DD	03d8H
	DD	08H
	DQ	FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$6
	DD	03a8H
	DD	010H
	DQ	FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$5
	DD	0378H
	DD	010H
	DQ	FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$4
	DD	02b8H
	DD	08H
	DQ	FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$3
	DD	0288H
	DD	010H
	DQ	FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$2
	DD	0248H
	DD	08H
	DQ	FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$1
	DD	088H
	DD	08H
	DQ	FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcName$0
	ORG $+864
?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcFrameData DD 012H	; ImGui::Begin
	DD	00H
	DQ	FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetVersion@ImGui@@YAPEBDXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	036H
	DW	01dd1H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ShowMetricsWindow@ImGui@@YAXPEA_N@Z DD 065053d19H
	DD	010e6313H
	DD	0700701c5H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0e18H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$0 DB 077H	; ImGui::ShowMetricsWindow
	DB	072H
	DB	074H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	073H
	DB	05fH
	DB	06eH
	DB	061H
	DB	06dH
	DB	065H
	DB	073H
	DB	00H
?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$1 DB 074H	; ImGui::ShowMetricsWindow
	DB	072H
	DB	074H
	DB	05fH
	DB	072H
	DB	065H
	DB	063H
	DB	074H
	DB	073H
	DB	05fH
	DB	06eH
	DB	061H
	DB	06dH
	DB	065H
	DB	073H
	DB	00H
?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$2 DB 072H	; ImGui::ShowMetricsWindow
	DB	00H
	ORG $+2
?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$3 DB 062H	; ImGui::ShowMetricsWindow
	DB	075H
	DB	066H
	DB	00H
?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$4 DB 072H	; ImGui::ShowMetricsWindow
	DB	00H
	ORG $+2
?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$5 DB 072H	; ImGui::ShowMetricsWindow
	DB	00H
	ORG $+2
?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$6 DB 069H	; ImGui::ShowMetricsWindow
	DB	06eH
	DB	070H
	DB	075H
	DB	074H
	DB	05fH
	DB	073H
	DB	06fH
	DB	075H
	DB	072H
	DB	063H
	DB	065H
	DB	05fH
	DB	06eH
	DB	061H
	DB	06dH
	DB	065H
	DB	073H
	DB	00H
	ORG $+1
?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$7 DB 072H	; ImGui::ShowMetricsWindow
	DB	00H
	ORG $+2
?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$8 DB 062H	; ImGui::ShowMetricsWindow
	DB	075H
	DB	066H
	DB	00H
?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$9 DB 072H	; ImGui::ShowMetricsWindow
	DB	00H
	ORG $+2
?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$10 DB 072H	; ImGui::ShowMetricsWindow
	DB	00H
	ORG $+6
?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcFrameData DD 0bH ; ImGui::ShowMetricsWindow
	DD	00H
	DQ	FLAT:?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcVarDesc
	ORG $+8
?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcVarDesc DD 07d8H ; ImGui::ShowMetricsWindow
	DD	010H
	DQ	FLAT:?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$10
	DD	0768H
	DD	010H
	DQ	FLAT:?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$9
	DD	0688H
	DD	020H
	DQ	FLAT:?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$8
	DD	0658H
	DD	010H
	DQ	FLAT:?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$7
	DD	05a8H
	DD	030H
	DQ	FLAT:?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$6
	DD	0358H
	DD	010H
	DQ	FLAT:?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$5
	DD	0328H
	DD	010H
	DQ	FLAT:?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$4
	DD	0250H
	DD	080H
	DQ	FLAT:?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$3
	DD	01d8H
	DD	010H
	DQ	FLAT:?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$2
	DD	0130H
	DD	068H
	DQ	FLAT:?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$1
	DD	0d0H
	DD	040H
	DQ	FLAT:?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDrawData@ImGui@@YAPEAUImDrawData@@XZ DD 025050f01H
	DD	010a230fH
	DD	070030025H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Render@ImGui@@YAXXZ DD 045052001H
	DD	010a430fH
	DD	070030059H
	DD	05002H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Render@ImGui@@YAXXZ$rtcName$0 DB 077H			; ImGui::Render
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	073H
	DB	05fH
	DB	074H
	DB	06fH
	DB	05fH
	DB	072H
	DB	065H
	DB	06eH
	DB	064H
	DB	065H
	DB	072H
	DB	05fH
	DB	074H
	DB	06fH
	DB	070H
	DB	05fH
	DB	06dH
	DB	06fH
	DB	073H
	DB	074H
	DB	00H
	ORG $+5
?Render@ImGui@@YAXXZ$rtcVarDesc DD 0a8H			; ImGui::Render
	DD	010H
	DQ	FLAT:?Render@ImGui@@YAXXZ$rtcName$0
	ORG $+48
?Render@ImGui@@YAXXZ$rtcFrameData DD 01H		; ImGui::Render
	DD	00H
	DQ	FLAT:?Render@ImGui@@YAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EndFrame@ImGui@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030035H
	DD	05002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02bH
	DW	0f27H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NewFrame@ImGui@@YAXXZ DD 035063219H
	DD	010b3310H
	DD	070040082H
	DD	050026003H
	DD	imagerel __GSHandlerCheck
	DD	0408H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?NewFrame@ImGui@@YAXXZ$rtcName$0 DB 076H		; ImGui::NewFrame
	DB	069H
	DB	072H
	DB	074H
	DB	075H
	DB	061H
	DB	06cH
	DB	05fH
	DB	073H
	DB	070H
	DB	061H
	DB	063H
	DB	065H
	DB	00H
	ORG $+2
?NewFrame@ImGui@@YAXXZ$rtcVarDesc DD 078H		; ImGui::NewFrame
	DD	010H
	DQ	FLAT:?NewFrame@ImGui@@YAXXZ$rtcName$0
	ORG $+48
?NewFrame@ImGui@@YAXXZ$rtcFrameData DD 01H		; ImGui::NewFrame
	DD	00H
	DQ	FLAT:?NewFrame@ImGui@@YAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetIO@ImGui@@YAAEAUImGuiIO@@XZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetCurrentContext@ImGui@@YAXPEAUImGuiContext@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCurrentContext@ImGui@@YAPEAUImGuiContext@@XZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DestroyContext@ImGui@@YAXPEAUImGuiContext@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z DB 06H
	DB	00H
	DB	00H
	DB	0c0H
	DB	02H
	DB	'~'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z
	DD	imagerel $ip2state$?CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z DD 025051311H
	DD	010e2313H
	DD	070070035H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImVec4@@QEAA@MMMM@Z DD 025032101H
	DD	0b21c2321H
	DD	05018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImVec4@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??AImVec2@@QEAAAEAM_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImVec2@@QEAA@MM@Z DD 025031b01H
	DD	0b216231bH
	DD	05012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImVec2@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD 025052201H
	DD	011d2322H
	DD	07016001fH
	DD	05015H
xdata	ENDS
CRT$XCU	SEGMENT
?resize_border_def$initializer$@@3P6AXXZEA DQ FLAT:??__Eresize_border_def@@YAXXZ ; resize_border_def$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$IM_DELETE@UImGuiWindow@@@@YAXPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
p$ = 224
??$IM_DELETE@UImGuiWindow@@@@YAXPEAUImGuiWindow@@@Z PROC ; IM_DELETE<ImGuiWindow>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1653
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	QWORD PTR p$[rbp], 0
	je	SHORT $LN2@IM_DELETE
	xor	edx, edx
	mov	rcx, QWORD PTR p$[rbp]
	call	??_GImGuiWindow@@QEAAPEAXI@Z
	mov	rcx, QWORD PTR p$[rbp]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN2@IM_DELETE:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$IM_DELETE@UImGuiWindow@@@@YAXPEAUImGuiWindow@@@Z ENDP ; IM_DELETE<ImGuiWindow>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$IM_DELETE@UImGuiViewportP@@@@YAXPEAUImGuiViewportP@@@Z
_TEXT	SEGMENT
p$ = 224
??$IM_DELETE@UImGuiViewportP@@@@YAXPEAUImGuiViewportP@@@Z PROC ; IM_DELETE<ImGuiViewportP>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1653
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	QWORD PTR p$[rbp], 0
	je	SHORT $LN2@IM_DELETE
	xor	edx, edx
	mov	rcx, QWORD PTR p$[rbp]
	call	??_GImGuiViewportP@@QEAAPEAXI@Z
	mov	rcx, QWORD PTR p$[rbp]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN2@IM_DELETE:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$IM_DELETE@UImGuiViewportP@@@@YAXPEAUImGuiViewportP@@@Z ENDP ; IM_DELETE<ImGuiViewportP>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetWindowRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiWindow@@H@Z
_TEXT	SEGMENT
min$5 = 8
min$6 = 40
$T7 = 260
$T8 = 292
$T9 = 324
$T10 = 356
tv133 = 376
tv81 = 376
__$ArrayPad$ = 384
__$ReturnUdt$ = 432
window$ = 440
rect_type$ = 448
?GetWindowRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiWindow@@H@Z PROC ; `ImGui::ShowMetricsWindow'::`2'::Funcs::GetWindowRect, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 11003
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 432				; 000001b0H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+472]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 11004
	cmp	DWORD PTR rect_type$[rbp], 0
	jne	SHORT $LN2@GetWindowR
	mov	rdx, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?Rect@ImGuiWindow@@QEBA?AUImRect@@XZ	; ImGuiWindow::Rect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetWindowR
	jmp	$LN3@GetWindowR
$LN2@GetWindowR:
; Line 11005
	cmp	DWORD PTR rect_type$[rbp], 1
	jne	SHORT $LN4@GetWindowR
	mov	rax, QWORD PTR window$[rbp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsi, QWORD PTR [rax+512]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetWindowR
	jmp	$LN5@GetWindowR
$LN4@GetWindowR:
; Line 11006
	cmp	DWORD PTR rect_type$[rbp], 2
	jne	SHORT $LN6@GetWindowR
	mov	rax, QWORD PTR window$[rbp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsi, QWORD PTR [rax+528]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetWindowR
	jmp	$LN7@GetWindowR
$LN6@GetWindowR:
; Line 11007
	cmp	DWORD PTR rect_type$[rbp], 3
	jne	SHORT $LN8@GetWindowR
	mov	rax, QWORD PTR window$[rbp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsi, QWORD PTR [rax+544]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetWindowR
	jmp	$LN9@GetWindowR
$LN8@GetWindowR:
; Line 11008
	cmp	DWORD PTR rect_type$[rbp], 4
	jne	SHORT $LN10@GetWindowR
	mov	rax, QWORD PTR window$[rbp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsi, QWORD PTR [rax+560]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetWindowR
	jmp	$LN11@GetWindowR
$LN10@GetWindowR:
; Line 11009
	cmp	DWORD PTR rect_type$[rbp], 5
	jne	$LN12@GetWindowR
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 64					; 00000040H
	mov	QWORD PTR tv81[rbp], rax
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 92					; 0000005cH
	mov	rdx, QWORD PTR window$[rbp]
	add	rdx, 528				; 00000210H
	mov	r8, rcx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rcx, QWORD PTR tv81[rbp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR min$5[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 40					; 00000028H
	mov	r8, rax
	lea	rdx, QWORD PTR min$5[rbp]
	lea	rcx, QWORD PTR $T8[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	r8, rax
	lea	rdx, QWORD PTR min$5[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetWindowR
	jmp	$LN13@GetWindowR
$LN12@GetWindowR:
; Line 11010
	cmp	DWORD PTR rect_type$[rbp], 6
	jne	$LN14@GetWindowR
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 64					; 00000040H
	mov	QWORD PTR tv133[rbp], rax
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 92					; 0000005cH
	mov	rdx, QWORD PTR window$[rbp]
	add	rdx, 528				; 00000210H
	mov	r8, rcx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rcx, QWORD PTR tv133[rbp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR min$6[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 48					; 00000030H
	mov	r8, rax
	lea	rdx, QWORD PTR min$6[rbp]
	lea	rcx, QWORD PTR $T10[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	r8, rax
	lea	rdx, QWORD PTR min$6[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@GetWindowR
	jmp	SHORT $LN15@GetWindowR
$LN14@GetWindowR:
; Line 11011
	cmp	DWORD PTR rect_type$[rbp], 7
	jne	SHORT $LN16@GetWindowR
	mov	rax, QWORD PTR window$[rbp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsi, QWORD PTR [rax+608]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@GetWindowR
$LN16@GetWindowR:
$LN15@GetWindowR:
$LN13@GetWindowR:
$LN11@GetWindowR:
$LN9@GetWindowR:
$LN7@GetWindowR:
$LN5@GetWindowR:
$LN3@GetWindowR:
; Line 11012
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN18@GetWindowR
	mov	r8d, 11012				; 00002b04H
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN18@GetWindowR:
; Line 11013
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@GetWindowR:
; Line 11014
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?GetWindowRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiWindow@@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+400]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?GetWindowRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiWindow@@H@Z ENDP ; `ImGui::ShowMetricsWindow'::`2'::Funcs::GetWindowRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetTableRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiTable@@HH@Z
_TEXT	SEGMENT
c$1 = 8
c$2 = 40
c$3 = 72
c$4 = 104
c$5 = 136
c$6 = 168
c$7 = 200
tv237 = 408
tv215 = 408
tv193 = 408
tv171 = 408
tv162 = 408
tv142 = 408
tv88 = 408
__$ReturnUdt$ = 448
table$ = 456
rect_type$ = 464
n$ = 472
?GetTableRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiTable@@HH@Z PROC ; `ImGui::ShowMetricsWindow'::`2'::Funcs::GetTableRect, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10984
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 464				; 000001d0H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10985
	cmp	DWORD PTR rect_type$[rbp], 0
	jne	SHORT $LN2@GetTableRe
	mov	rax, QWORD PTR table$[rbp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsi, QWORD PTR [rax+244]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetTableRe
	jmp	$LN3@GetTableRe
$LN2@GetTableRe:
; Line 10986
	cmp	DWORD PTR rect_type$[rbp], 1
	jne	SHORT $LN4@GetTableRe
	mov	rax, QWORD PTR table$[rbp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsi, QWORD PTR [rax+260]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetTableRe
	jmp	$LN5@GetTableRe
$LN4@GetTableRe:
; Line 10987
	cmp	DWORD PTR rect_type$[rbp], 2
	jne	SHORT $LN6@GetTableRe
	mov	rax, QWORD PTR table$[rbp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsi, QWORD PTR [rax+276]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetTableRe
	jmp	$LN7@GetTableRe
$LN6@GetTableRe:
; Line 10988
	cmp	DWORD PTR rect_type$[rbp], 3
	jne	SHORT $LN8@GetTableRe
	mov	rax, QWORD PTR table$[rbp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsi, QWORD PTR [rax+356]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetTableRe
	jmp	$LN9@GetTableRe
$LN8@GetTableRe:
; Line 10989
	cmp	DWORD PTR rect_type$[rbp], 4
	jne	SHORT $LN10@GetTableRe
	mov	rax, QWORD PTR table$[rbp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsi, QWORD PTR [rax+292]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetTableRe
	jmp	$LN11@GetTableRe
$LN10@GetTableRe:
; Line 10990
	cmp	DWORD PTR rect_type$[rbp], 5
	jne	SHORT $LN12@GetTableRe
	mov	rax, QWORD PTR table$[rbp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsi, QWORD PTR [rax+308]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetTableRe
	jmp	$LN13@GetTableRe
$LN12@GetTableRe:
; Line 10991
	cmp	DWORD PTR rect_type$[rbp], 6
	jne	$LN14@GetTableRe
	mov	rax, QWORD PTR table$[rbp]
	add	rax, 24
	mov	QWORD PTR tv88[rbp], rax
	mov	edx, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR tv88[rbp]
	call	??A?$ImSpan@UImGuiTableColumn@@@@QEAAAEAUImGuiTableColumn@@H@Z ; ImSpan<ImGuiTableColumn>::operator[]
	mov	QWORD PTR c$1[rbp], rax
	mov	rax, QWORD PTR table$[rbp]
	mov	rcx, QWORD PTR table$[rbp]
	movss	xmm0, DWORD PTR [rax+296]
	addss	xmm0, DWORD PTR [rcx+212]
	movss	DWORD PTR [rsp+32], xmm0
	mov	rax, QWORD PTR c$1[rbp]
	movss	xmm3, DWORD PTR [rax+12]
	mov	rax, QWORD PTR table$[rbp]
	movss	xmm2, DWORD PTR [rax+296]
	mov	rax, QWORD PTR c$1[rbp]
	movss	xmm1, DWORD PTR [rax+8]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetTableRe
	jmp	$LN15@GetTableRe
$LN14@GetTableRe:
; Line 10992
	cmp	DWORD PTR rect_type$[rbp], 7
	jne	SHORT $LN16@GetTableRe
	mov	rax, QWORD PTR table$[rbp]
	add	rax, 24
	mov	QWORD PTR tv142[rbp], rax
	mov	edx, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR tv142[rbp]
	call	??A?$ImSpan@UImGuiTableColumn@@@@QEAAAEAUImGuiTableColumn@@H@Z ; ImSpan<ImGuiTableColumn>::operator[]
	mov	QWORD PTR c$2[rbp], rax
	mov	rax, QWORD PTR table$[rbp]
	movss	xmm0, DWORD PTR [rax+288]
	movss	DWORD PTR [rsp+32], xmm0
	mov	rax, QWORD PTR c$2[rbp]
	movss	xmm3, DWORD PTR [rax+56]
	mov	rax, QWORD PTR table$[rbp]
	movss	xmm2, DWORD PTR [rax+280]
	mov	rax, QWORD PTR c$2[rbp]
	movss	xmm1, DWORD PTR [rax+52]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetTableRe
	jmp	$LN17@GetTableRe
$LN16@GetTableRe:
; Line 10993
	cmp	DWORD PTR rect_type$[rbp], 8
	jne	SHORT $LN18@GetTableRe
	mov	rax, QWORD PTR table$[rbp]
	add	rax, 24
	mov	QWORD PTR tv162[rbp], rax
	mov	edx, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR tv162[rbp]
	call	??A?$ImSpan@UImGuiTableColumn@@@@QEAAAEAUImGuiTableColumn@@H@Z ; ImSpan<ImGuiTableColumn>::operator[]
	mov	QWORD PTR c$3[rbp], rax
	mov	rax, QWORD PTR c$3[rbp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsi, QWORD PTR [rax+32]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetTableRe
	jmp	$LN19@GetTableRe
$LN18@GetTableRe:
; Line 10994
	cmp	DWORD PTR rect_type$[rbp], 9
	jne	$LN20@GetTableRe
	mov	rax, QWORD PTR table$[rbp]
	add	rax, 24
	mov	QWORD PTR tv171[rbp], rax
	mov	edx, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR tv171[rbp]
	call	??A?$ImSpan@UImGuiTableColumn@@@@QEAAAEAUImGuiTableColumn@@H@Z ; ImSpan<ImGuiTableColumn>::operator[]
	mov	QWORD PTR c$4[rbp], rax
	mov	rax, QWORD PTR table$[rbp]
	mov	rcx, QWORD PTR table$[rbp]
	movss	xmm0, DWORD PTR [rax+296]
	addss	xmm0, DWORD PTR [rcx+216]
	movss	DWORD PTR [rsp+32], xmm0
	mov	rax, QWORD PTR c$4[rbp]
	movss	xmm3, DWORD PTR [rax+72]
	mov	rax, QWORD PTR table$[rbp]
	movss	xmm2, DWORD PTR [rax+296]
	mov	rax, QWORD PTR c$4[rbp]
	movss	xmm1, DWORD PTR [rax+52]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetTableRe
	jmp	$LN21@GetTableRe
$LN20@GetTableRe:
; Line 10995
	cmp	DWORD PTR rect_type$[rbp], 10
	jne	$LN22@GetTableRe
	mov	rax, QWORD PTR table$[rbp]
	add	rax, 24
	mov	QWORD PTR tv193[rbp], rax
	mov	edx, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR tv193[rbp]
	call	??A?$ImSpan@UImGuiTableColumn@@@@QEAAAEAUImGuiTableColumn@@H@Z ; ImSpan<ImGuiTableColumn>::operator[]
	mov	QWORD PTR c$5[rbp], rax
	mov	rax, QWORD PTR table$[rbp]
	mov	rcx, QWORD PTR table$[rbp]
	movss	xmm0, DWORD PTR [rax+296]
	addss	xmm0, DWORD PTR [rcx+216]
	movss	DWORD PTR [rsp+32], xmm0
	mov	rax, QWORD PTR c$5[rbp]
	movss	xmm3, DWORD PTR [rax+76]
	mov	rax, QWORD PTR table$[rbp]
	movss	xmm2, DWORD PTR [rax+296]
	mov	rax, QWORD PTR c$5[rbp]
	movss	xmm1, DWORD PTR [rax+52]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetTableRe
	jmp	$LN23@GetTableRe
$LN22@GetTableRe:
; Line 10996
	cmp	DWORD PTR rect_type$[rbp], 11
	jne	$LN24@GetTableRe
	mov	rax, QWORD PTR table$[rbp]
	add	rax, 24
	mov	QWORD PTR tv215[rbp], rax
	mov	edx, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR tv215[rbp]
	call	??A?$ImSpan@UImGuiTableColumn@@@@QEAAAEAUImGuiTableColumn@@H@Z ; ImSpan<ImGuiTableColumn>::operator[]
	mov	QWORD PTR c$6[rbp], rax
	mov	rax, QWORD PTR table$[rbp]
	mov	rcx, QWORD PTR table$[rbp]
	movss	xmm0, DWORD PTR [rax+296]
	addss	xmm0, DWORD PTR [rcx+216]
	movss	DWORD PTR [rsp+32], xmm0
	mov	rax, QWORD PTR c$6[rbp]
	movss	xmm3, DWORD PTR [rax+64]
	mov	rax, QWORD PTR table$[rbp]
	movss	xmm2, DWORD PTR [rax+296]
	mov	rax, QWORD PTR c$6[rbp]
	movss	xmm1, DWORD PTR [rax+52]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetTableRe
	jmp	$LN25@GetTableRe
$LN24@GetTableRe:
; Line 10997
	cmp	DWORD PTR rect_type$[rbp], 12
	jne	$LN26@GetTableRe
	mov	rax, QWORD PTR table$[rbp]
	add	rax, 24
	mov	QWORD PTR tv237[rbp], rax
	mov	edx, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR tv237[rbp]
	call	??A?$ImSpan@UImGuiTableColumn@@@@QEAAAEAUImGuiTableColumn@@H@Z ; ImSpan<ImGuiTableColumn>::operator[]
	mov	QWORD PTR c$7[rbp], rax
	mov	rax, QWORD PTR table$[rbp]
	mov	rcx, QWORD PTR table$[rbp]
	movss	xmm0, DWORD PTR [rax+296]
	addss	xmm0, DWORD PTR [rcx+216]
	mov	rax, QWORD PTR table$[rbp]
	movss	xmm1, DWORD PTR [rax+304]
	movss	DWORD PTR [rsp+32], xmm1
	mov	rax, QWORD PTR c$7[rbp]
	movss	xmm3, DWORD PTR [rax+68]
	movaps	xmm2, xmm0
	mov	rax, QWORD PTR c$7[rbp]
	movss	xmm1, DWORD PTR [rax+52]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@GetTableRe
$LN26@GetTableRe:
$LN25@GetTableRe:
$LN23@GetTableRe:
$LN21@GetTableRe:
$LN19@GetTableRe:
$LN17@GetTableRe:
$LN15@GetTableRe:
$LN13@GetTableRe:
$LN11@GetTableRe:
$LN9@GetTableRe:
$LN7@GetTableRe:
$LN5@GetTableRe:
$LN3@GetTableRe:
; Line 10998
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN28@GetTableRe
	mov	r8d, 10998				; 00002af6H
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN28@GetTableRe:
; Line 10999
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@GetTableRe:
; Line 11000
	lea	rsp, QWORD PTR [rbp+416]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?GetTableRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiTable@@HH@Z ENDP ; `ImGui::ShowMetricsWindow'::`2'::Funcs::GetTableRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?MetricsHelpMarker@@YAXPEBD@Z
_TEXT	SEGMENT
desc$ = 224
?MetricsHelpMarker@@YAXPEBD@Z PROC			; MetricsHelpMarker, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10933
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10934
	lea	rcx, OFFSET FLAT:??_C@_03NAEMJKHE@?$CI?$DP?$CJ@
	call	?TextDisabled@ImGui@@YAXPEBDZZ		; ImGui::TextDisabled
; Line 10935
	xor	ecx, ecx
	call	?IsItemHovered@ImGui@@YA_NH@Z		; ImGui::IsItemHovered
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@MetricsHel
; Line 10937
	call	?BeginTooltip@ImGui@@YAXXZ		; ImGui::BeginTooltip
; Line 10938
	call	?GetFontSize@ImGui@@YAMXZ		; ImGui::GetFontSize
	mulss	xmm0, DWORD PTR __real@420c0000
	call	?PushTextWrapPos@ImGui@@YAXM@Z		; ImGui::PushTextWrapPos
; Line 10939
	xor	edx, edx
	mov	rcx, QWORD PTR desc$[rbp]
	call	?TextUnformatted@ImGui@@YAXPEBD0@Z	; ImGui::TextUnformatted
; Line 10940
	call	?PopTextWrapPos@ImGui@@YAXXZ		; ImGui::PopTextWrapPos
; Line 10941
	call	?EndTooltip@ImGui@@YAXXZ		; ImGui::EndTooltip
$LN2@MetricsHel:
; Line 10943
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?MetricsHelpMarker@@YAXPEBD@Z ENDP			; MetricsHelpMarker
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RenderViewportsThumbnails@@YAXXZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
SCALE$ = 68
bb_full$ = 104
n$7 = 148
p$ = 184
off$ = 216
n$8 = 244
viewport$9 = 280
viewport_draw_bb$10 = 312
$T11 = 740
$T12 = 788
$T13 = 820
$T14 = 852
$T15 = 884
$T16 = 916
$T17 = 948
$T18 = 980
$T19 = 1012
tv181 = 1032
tv138 = 1032
tv80 = 1032
tv179 = 1040
tv85 = 1040
__$ArrayPad$ = 1048
?RenderViewportsThumbnails@@YAXXZ PROC			; RenderViewportsThumbnails, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10911
	push	rbp
	push	rdi
	sub	rsp, 1112				; 00000458H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 170				; 000000aaH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10912
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10913
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 10916
	movss	xmm0, DWORD PTR __real@3e000000
	movss	DWORD PTR SCALE$[rbp], xmm0
; Line 10917
	movss	xmm0, DWORD PTR __real@ff7fffff
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@ff7fffff
	movss	xmm2, DWORD PTR __real@7f7fffff
	movss	xmm1, DWORD PTR __real@7f7fffff
	lea	rcx, QWORD PTR bb_full$[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
; Line 10918
	mov	DWORD PTR n$7[rbp], 0
	jmp	SHORT $LN4@RenderView
$LN2@RenderView:
	mov	eax, DWORD PTR n$7[rbp]
	inc	eax
	mov	DWORD PTR n$7[rbp], eax
$LN4@RenderView:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7608]
	cmp	DWORD PTR n$7[rbp], eax
	jge	SHORT $LN3@RenderView
; Line 10919
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7608				; 00001db8H
	mov	QWORD PTR tv80[rbp], rax
	mov	edx, DWORD PTR n$7[rbp]
	mov	rcx, QWORD PTR tv80[rbp]
	call	??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z ; ImVector<ImGuiViewportP *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv85[rbp], rax
	lea	rdx, QWORD PTR $T11[rbp]
	mov	rcx, QWORD PTR tv85[rbp]
	call	?GetMainRect@ImGuiViewportP@@QEBA?AUImRect@@XZ ; ImGuiViewportP::GetMainRect
	mov	rdx, rax
	lea	rcx, QWORD PTR bb_full$[rbp]
	call	?Add@ImRect@@QEAAXAEBU1@@Z		; ImRect::Add
	jmp	SHORT $LN2@RenderView
$LN3@RenderView:
; Line 10920
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+216]
	mov	QWORD PTR p$[rbp], rax
; Line 10921
	movss	xmm2, DWORD PTR SCALE$[rbp]
	lea	rdx, QWORD PTR bb_full$[rbp]
	lea	rcx, QWORD PTR $T12[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	r8, rax
	lea	rdx, QWORD PTR p$[rbp]
	lea	rcx, QWORD PTR off$[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
; Line 10922
	mov	DWORD PTR n$8[rbp], 0
	jmp	SHORT $LN7@RenderView
$LN5@RenderView:
	mov	eax, DWORD PTR n$8[rbp]
	inc	eax
	mov	DWORD PTR n$8[rbp], eax
$LN7@RenderView:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7608]
	cmp	DWORD PTR n$8[rbp], eax
	jge	$LN6@RenderView
; Line 10924
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7608				; 00001db8H
	mov	QWORD PTR tv138[rbp], rax
	mov	edx, DWORD PTR n$8[rbp]
	mov	rcx, QWORD PTR tv138[rbp]
	call	??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z ; ImVector<ImGuiViewportP *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR viewport$9[rbp], rax
; Line 10925
	mov	rax, QWORD PTR viewport$9[rbp]
	add	rax, 12
	mov	rcx, QWORD PTR viewport$9[rbp]
	add	rcx, 4
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T13[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	movss	xmm2, DWORD PTR SCALE$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T14[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	r8, rax
	lea	rdx, QWORD PTR off$[rbp]
	lea	rcx, QWORD PTR $T15[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv181[rbp], rax
	mov	rax, QWORD PTR viewport$9[rbp]
	add	rax, 4
	movss	xmm2, DWORD PTR SCALE$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T16[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	r8, rax
	lea	rdx, QWORD PTR off$[rbp]
	lea	rcx, QWORD PTR $T17[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv179[rbp], rax
	mov	r8, QWORD PTR tv181[rbp]
	mov	rdx, QWORD PTR tv179[rbp]
	lea	rcx, QWORD PTR viewport_draw_bb$10[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
; Line 10926
	lea	r8, QWORD PTR viewport_draw_bb$10[rbp]
	mov	rdx, QWORD PTR viewport$9[rbp]
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR [rax+688]
	call	?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z ; ImGui::DebugRenderViewportThumbnail
; Line 10927
	jmp	$LN5@RenderView
$LN6@RenderView:
; Line 10928
	lea	rdx, QWORD PTR $T18[rbp]
	lea	rcx, QWORD PTR bb_full$[rbp]
	call	?GetSize@ImRect@@QEBA?AUImVec2@@XZ	; ImRect::GetSize
	movss	xmm2, DWORD PTR SCALE$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T19[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	rcx, rax
	call	?Dummy@ImGui@@YAXAEBUImVec2@@@Z		; ImGui::Dummy
; Line 10929
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?RenderViewportsThumbnails@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1064]
	pop	rdi
	pop	rbp
	ret	0
?RenderViewportsThumbnails@@YAXXZ ENDP			; RenderViewportsThumbnails
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LogTextV@@YAXAEAUImGuiContext@@PEBDPEAD@Z
_TEXT	SEGMENT
tv133 = 192
tv128 = 192
tv77 = 192
tv71 = 192
tv94 = 200
tv92 = 208
g$ = 256
fmt$ = 264
args$ = 272
?LogTextV@@YAXAEAUImGuiContext@@PEBDPEAD@Z PROC		; LogTextV, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10106
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10107
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+12488], 0
	je	$LN2@LogTextV
; Line 10109
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12496				; 000030d0H
	mov	QWORD PTR tv71[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv71[rbp]
	call	?resize@?$ImVector@D@@QEAAXH@Z		; ImVector<char>::resize
; Line 10110
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12496				; 000030d0H
	mov	QWORD PTR tv77[rbp], rax
	mov	r8, QWORD PTR args$[rbp]
	mov	rdx, QWORD PTR fmt$[rbp]
	mov	rcx, QWORD PTR tv77[rbp]
	call	?appendfv@ImGuiTextBuffer@@QEAAXPEBDPEAD@Z ; ImGuiTextBuffer::appendfv
; Line 10111
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+12488]
	mov	QWORD PTR tv128[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12496				; 000030d0H
	mov	rcx, rax
	call	?size@ImGuiTextBuffer@@QEBAHXZ		; ImGuiTextBuffer::size
	cdqe
	mov	QWORD PTR tv94[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12496				; 000030d0H
	mov	rcx, rax
	call	?c_str@ImGuiTextBuffer@@QEBAPEBDXZ	; ImGuiTextBuffer::c_str
	mov	QWORD PTR tv92[rbp], rax
	mov	r9, QWORD PTR tv128[rbp]
	mov	r8, QWORD PTR tv94[rbp]
	mov	edx, 1
	mov	rcx, QWORD PTR tv92[rbp]
	call	?ImFileWrite@@YA_KPEBX_K1PEAU_iobuf@@@Z	; ImFileWrite
; Line 10112
	jmp	SHORT $LN3@LogTextV
$LN2@LogTextV:
; Line 10115
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12496				; 000030d0H
	mov	QWORD PTR tv133[rbp], rax
	mov	r8, QWORD PTR args$[rbp]
	mov	rdx, QWORD PTR fmt$[rbp]
	mov	rcx, QWORD PTR tv133[rbp]
	call	?appendfv@ImGuiTextBuffer@@QEAAXPEBDPEAD@Z ; ImGuiTextBuffer::appendfv
$LN3@LogTextV:
; Line 10117
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?LogTextV@@YAXAEAUImGuiContext@@PEBDPEAD@Z ENDP		; LogTextV
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetFallbackWindowNameForWindowingList@@YAPEBDPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
window$ = 224
?GetFallbackWindowNameForWindowingList@@YAPEBDPEAUImGuiWindow@@@Z PROC ; GetFallbackWindowNameForWindowingList, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 9749
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 9750
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	je	SHORT $LN2@GetFallbac
; Line 9751
	lea	rax, OFFSET FLAT:??_C@_07NPLNEKJH@?$CIPopup?$CJ@
	jmp	SHORT $LN1@GetFallbac
$LN2@GetFallbac:
; Line 9752
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 1024				; 00000400H
	test	eax, eax
	je	SHORT $LN3@GetFallbac
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax]
	lea	rcx, OFFSET FLAT:??_C@_0O@BKOLOJFE@?$CD?$CDMainMenuBar@
	sub	rcx, rax
$LL5@GetFallbac:
	movzx	edx, BYTE PTR [rax]
	cmp	dl, BYTE PTR [rax+rcx]
	jne	SHORT $LN7@GetFallbac
	inc	rax
	test	dl, dl
	jne	SHORT $LL5@GetFallbac
	xor	eax, eax
	jmp	SHORT $LN6@GetFallbac
$LN7@GetFallbac:
	sbb	eax, eax
	or	eax, 1
$LN6@GetFallbac:
	test	eax, eax
	jne	SHORT $LN3@GetFallbac
; Line 9753
	lea	rax, OFFSET FLAT:??_C@_0BA@KDPNEDEH@?$CIMain?5menu?5bar?$CJ@
	jmp	SHORT $LN1@GetFallbac
$LN3@GetFallbac:
; Line 9754
	lea	rax, OFFSET FLAT:??_C@_0L@JOJOIPFK@?$CIUntitled?$CJ@
$LN1@GetFallbac:
; Line 9755
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetFallbackWindowNameForWindowingList@@YAPEBDPEAUImGuiWindow@@@Z ENDP ; GetFallbackWindowNameForWindowingList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavUpdateWindowingHighlightWindow@@YAXH@Z
_TEXT	SEGMENT
g$ = 8
i_current$ = 36
window_target$ = 72
tv94 = 276
tv91 = 280
focus_change_dir$ = 320
?NavUpdateWindowingHighlightWindow@@YAXH@Z PROC		; NavUpdateWindowingHighlightWindow, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 9579
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 9580
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 9581
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	jne	SHORT $LN6@NavUpdateW
	mov	eax, DWORD PTR ?__LINE__Var@?0??NavUpdateWindowingHighlightWindow@@YAXH@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CK@OIBCGJMF@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAi?$AAn?$AAg?$AAT@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@NavUpdateW:
; Line 9582
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7928]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 134217728				; 08000000H
	test	eax, eax
	je	SHORT $LN2@NavUpdateW
; Line 9583
	jmp	$LN1@NavUpdateW
$LN2@NavUpdateW:
; Line 9585
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+7928]
	call	?FindWindowFocusIndex@ImGui@@YAHPEAUImGuiWindow@@@Z ; ImGui::FindWindowFocusIndex
	mov	DWORD PTR i_current$[rbp], eax
; Line 9586
	mov	eax, DWORD PTR focus_change_dir$[rbp]
	mov	ecx, DWORD PTR i_current$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	r8d, DWORD PTR focus_change_dir$[rbp]
	mov	edx, -2147483647			; ffffffff80000001H
	mov	ecx, eax
	call	?FindWindowNavFocusable@@YAPEAUImGuiWindow@@HHH@Z ; FindWindowNavFocusable
	mov	QWORD PTR window_target$[rbp], rax
; Line 9587
	cmp	QWORD PTR window_target$[rbp], 0
	jne	SHORT $LN3@NavUpdateW
; Line 9588
	mov	eax, DWORD PTR i_current$[rbp]
	mov	DWORD PTR tv94[rbp], eax
	cmp	DWORD PTR focus_change_dir$[rbp], 0
	jge	SHORT $LN7@NavUpdateW
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7104]
	dec	eax
	mov	DWORD PTR tv91[rbp], eax
	jmp	SHORT $LN8@NavUpdateW
$LN7@NavUpdateW:
	mov	DWORD PTR tv91[rbp], 0
$LN8@NavUpdateW:
	mov	r8d, DWORD PTR focus_change_dir$[rbp]
	mov	edx, DWORD PTR tv94[rbp]
	mov	ecx, DWORD PTR tv91[rbp]
	call	?FindWindowNavFocusable@@YAPEAUImGuiWindow@@HHH@Z ; FindWindowNavFocusable
	mov	QWORD PTR window_target$[rbp], rax
$LN3@NavUpdateW:
; Line 9589
	cmp	QWORD PTR window_target$[rbp], 0
	je	SHORT $LN4@NavUpdateW
; Line 9590
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window_target$[rbp]
	mov	QWORD PTR [rax+7936], rcx
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window_target$[rbp]
	mov	QWORD PTR [rax+7928], rcx
$LN4@NavUpdateW:
; Line 9591
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7960], 0
$LN1@NavUpdateW:
; Line 9592
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?NavUpdateWindowingHighlightWindow@@YAXH@Z ENDP		; NavUpdateWindowingHighlightWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FindWindowNavFocusable@@YAPEAUImGuiWindow@@HHH@Z
_TEXT	SEGMENT
g$ = 8
i$1 = 36
tv85 = 248
tv76 = 248
i_start$ = 288
i_stop$ = 296
dir$ = 304
?FindWindowNavFocusable@@YAPEAUImGuiWindow@@HHH@Z PROC	; FindWindowNavFocusable, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 9570
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 9571
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 9572
	mov	eax, DWORD PTR i_start$[rbp]
	mov	DWORD PTR i$1[rbp], eax
	jmp	SHORT $LN4@FindWindow
$LN2@FindWindow:
	mov	eax, DWORD PTR dir$[rbp]
	mov	ecx, DWORD PTR i$1[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR i$1[rbp], eax
$LN4@FindWindow:
	cmp	DWORD PTR i$1[rbp], 0
	jl	SHORT $LN3@FindWindow
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7104]
	cmp	DWORD PTR i$1[rbp], eax
	jge	SHORT $LN3@FindWindow
	mov	eax, DWORD PTR i_stop$[rbp]
	cmp	DWORD PTR i$1[rbp], eax
	je	SHORT $LN3@FindWindow
; Line 9573
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7104				; 00001bc0H
	mov	QWORD PTR tv76[rbp], rax
	mov	edx, DWORD PTR i$1[rbp]
	mov	rcx, QWORD PTR tv76[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rcx, QWORD PTR [rax]
	call	?IsWindowNavFocusable@ImGui@@YA_NPEAUImGuiWindow@@@Z ; ImGui::IsWindowNavFocusable
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@FindWindow
; Line 9574
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7104				; 00001bc0H
	mov	QWORD PTR tv85[rbp], rax
	mov	edx, DWORD PTR i$1[rbp]
	mov	rcx, QWORD PTR tv85[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rax, QWORD PTR [rax]
	jmp	SHORT $LN1@FindWindow
$LN5@FindWindow:
	jmp	$LN2@FindWindow
$LN3@FindWindow:
; Line 9575
	xor	eax, eax
$LN1@FindWindow:
; Line 9576
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?FindWindowNavFocusable@@YAPEAUImGuiWindow@@HHH@Z ENDP	; FindWindowNavFocusable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavClampRectToVisibleAreaForMoveDir@@YAXHAEAUImRect@@AEBU1@@Z
_TEXT	SEGMENT
move_dir$ = 224
r$ = 232
clip_rect$ = 240
?NavClampRectToVisibleAreaForMoveDir@@YAXHAEAUImRect@@AEBU1@@Z PROC ; NavClampRectToVisibleAreaForMoveDir, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8674
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8675
	cmp	DWORD PTR move_dir$[rbp], 0
	je	SHORT $LN4@NavClampRe
	cmp	DWORD PTR move_dir$[rbp], 1
	jne	SHORT $LN2@NavClampRe
$LN4@NavClampRe:
; Line 8677
	mov	rax, QWORD PTR clip_rect$[rbp]
	movss	xmm2, DWORD PTR [rax+12]
	mov	rax, QWORD PTR clip_rect$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	mov	rax, QWORD PTR r$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	call	??$ImClamp@M@@YAMMMM@Z			; ImClamp<float>
	mov	rax, QWORD PTR r$[rbp]
	movss	DWORD PTR [rax+4], xmm0
; Line 8678
	mov	rax, QWORD PTR clip_rect$[rbp]
	movss	xmm2, DWORD PTR [rax+12]
	mov	rax, QWORD PTR clip_rect$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	mov	rax, QWORD PTR r$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	call	??$ImClamp@M@@YAMMMM@Z			; ImClamp<float>
	mov	rax, QWORD PTR r$[rbp]
	movss	DWORD PTR [rax+12], xmm0
; Line 8679
	jmp	SHORT $LN3@NavClampRe
$LN2@NavClampRe:
; Line 8682
	mov	rax, QWORD PTR clip_rect$[rbp]
	movss	xmm2, DWORD PTR [rax+8]
	mov	rax, QWORD PTR clip_rect$[rbp]
	movss	xmm1, DWORD PTR [rax]
	mov	rax, QWORD PTR r$[rbp]
	movss	xmm0, DWORD PTR [rax]
	call	??$ImClamp@M@@YAMMMM@Z			; ImClamp<float>
	mov	rax, QWORD PTR r$[rbp]
	movss	DWORD PTR [rax], xmm0
; Line 8683
	mov	rax, QWORD PTR clip_rect$[rbp]
	movss	xmm2, DWORD PTR [rax+8]
	mov	rax, QWORD PTR clip_rect$[rbp]
	movss	xmm1, DWORD PTR [rax]
	mov	rax, QWORD PTR r$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	call	??$ImClamp@M@@YAMMMM@Z			; ImClamp<float>
	mov	rax, QWORD PTR r$[rbp]
	movss	DWORD PTR [rax+8], xmm0
$LN3@NavClampRe:
; Line 8685
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?NavClampRectToVisibleAreaForMoveDir@@YAXHAEAUImRect@@AEBU1@@Z ENDP ; NavClampRectToVisibleAreaForMoveDir
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavScoreItemDistInterval@@YAMMMMM@Z
_TEXT	SEGMENT
a0$ = 224
a1$ = 232
b0$ = 240
b1$ = 248
?NavScoreItemDistInterval@@YAMMMMM@Z PROC		; NavScoreItemDistInterval, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8665
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8666
	movss	xmm0, DWORD PTR b0$[rbp]
	comiss	xmm0, DWORD PTR a1$[rbp]
	jbe	SHORT $LN2@NavScoreIt
; Line 8667
	movss	xmm0, DWORD PTR a1$[rbp]
	subss	xmm0, DWORD PTR b0$[rbp]
	jmp	SHORT $LN1@NavScoreIt
$LN2@NavScoreIt:
; Line 8668
	movss	xmm0, DWORD PTR a0$[rbp]
	comiss	xmm0, DWORD PTR b1$[rbp]
	jbe	SHORT $LN3@NavScoreIt
; Line 8669
	movss	xmm0, DWORD PTR a0$[rbp]
	subss	xmm0, DWORD PTR b1$[rbp]
	jmp	SHORT $LN1@NavScoreIt
$LN3@NavScoreIt:
; Line 8670
	xorps	xmm0, xmm0
$LN1@NavScoreIt:
; Line 8671
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?NavScoreItemDistInterval@@YAMMMMM@Z ENDP		; NavScoreItemDistInterval
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$ImLerp@M@@YAMMMM@Z
_TEXT	SEGMENT
a$ = 224
b$ = 232
t$ = 240
??$ImLerp@M@@YAMMMM@Z PROC				; ImLerp<float>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 415
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	movss	xmm0, DWORD PTR b$[rbp]
	subss	xmm0, DWORD PTR a$[rbp]
	mulss	xmm0, DWORD PTR t$[rbp]
	movss	xmm1, DWORD PTR a$[rbp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$ImLerp@M@@YAMMMM@Z ENDP				; ImLerp<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CalcScrollEdgeSnap@@YAMMMMMM@Z
_TEXT	SEGMENT
target$ = 224
snap_min$ = 232
snap_max$ = 240
snap_threshold$ = 248
center_ratio$ = 256
?CalcScrollEdgeSnap@@YAMMMMMM@Z PROC			; CalcScrollEdgeSnap, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7850
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7851
	movss	xmm0, DWORD PTR snap_min$[rbp]
	addss	xmm0, DWORD PTR snap_threshold$[rbp]
	comiss	xmm0, DWORD PTR target$[rbp]
	jb	SHORT $LN2@CalcScroll
; Line 7852
	movss	xmm2, DWORD PTR center_ratio$[rbp]
	movss	xmm1, DWORD PTR target$[rbp]
	movss	xmm0, DWORD PTR snap_min$[rbp]
	call	??$ImLerp@M@@YAMMMM@Z			; ImLerp<float>
	jmp	SHORT $LN1@CalcScroll
$LN2@CalcScroll:
; Line 7853
	movss	xmm0, DWORD PTR snap_max$[rbp]
	subss	xmm0, DWORD PTR snap_threshold$[rbp]
	movss	xmm1, DWORD PTR target$[rbp]
	comiss	xmm1, xmm0
	jb	SHORT $LN3@CalcScroll
; Line 7854
	movss	xmm2, DWORD PTR center_ratio$[rbp]
	movss	xmm1, DWORD PTR snap_max$[rbp]
	movss	xmm0, DWORD PTR target$[rbp]
	call	??$ImLerp@M@@YAMMMM@Z			; ImLerp<float>
	jmp	SHORT $LN1@CalcScroll
$LN3@CalcScroll:
; Line 7855
	movss	xmm0, DWORD PTR target$[rbp]
$LN1@CalcScroll:
; Line 7856
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?CalcScrollEdgeSnap@@YAMMMMMM@Z ENDP			; CalcScrollEdgeSnap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ClampWindowRect@@YAXPEAUImGuiWindow@@AEBUImRect@@@Z
_TEXT	SEGMENT
g$ = 8
size_for_clamping$ = 40
$T4 = 260
$T5 = 292
$T6 = 328
tv89 = 344
__$ArrayPad$ = 352
window$ = 400
visibility_rect$ = 408
?ClampWindowRect@@YAXPEAUImGuiWindow@@AEBUImRect@@@Z PROC ; ClampWindowRect, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5513
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 408				; 00000198H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 46					; 0000002eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+440]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5514
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 5515
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR size_for_clamping$[rbp], rax
; Line 5516
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+205]
	test	eax, eax
	je	SHORT $LN2@ClampWindo
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 1
	test	eax, eax
	jne	SHORT $LN2@ClampWindo
; Line 5517
	mov	rcx, QWORD PTR window$[rbp]
	call	?TitleBarHeight@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::TitleBarHeight
	movss	DWORD PTR size_for_clamping$[rbp+4], xmm0
$LN2@ClampWindo:
; Line 5518
	mov	rax, QWORD PTR visibility_rect$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR $T6[rbp], rax
	mov	rax, QWORD PTR visibility_rect$[rbp]
	lea	r8, QWORD PTR size_for_clamping$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T4[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv89[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	mov	r9, QWORD PTR $T6[rbp]
	mov	r8, QWORD PTR tv89[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T5[rbp]
	call	?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z	; ImClamp
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+16], rax
; Line 5519
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?ClampWindowRect@@YAXPEAUImGuiWindow@@AEBUImRect@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+376]
	pop	rdi
	pop	rbp
	ret	0
?ClampWindowRect@@YAXPEAUImGuiWindow@@AEBUImRect@@@Z ENDP ; ClampWindowRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z
_TEXT	SEGMENT
rect$ = 8
$T4 = 244
tv144 = 260
tv134 = 260
tv92 = 260
tv82 = 260
__$ArrayPad$ = 264
__$ReturnUdt$ = 304
window$ = 312
border_n$ = 320
perp_padding$ = 328
thickness$ = 336
?GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z PROC ; GetResizeBorderRect, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5347
	movss	DWORD PTR [rsp+32], xmm3
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 22
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5348
	lea	rdx, QWORD PTR rect$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?Rect@ImGuiWindow@@QEBA?AUImRect@@XZ	; ImGuiWindow::Rect
; Line 5349
	movss	xmm0, DWORD PTR thickness$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN2@GetResizeB
	jne	SHORT $LN2@GetResizeB
; Line 5350
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T4[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rdx, rax
	lea	rcx, QWORD PTR rect$[rbp+8]
	call	??Z@YAAEAUImVec2@@AEAU0@AEBU0@@Z	; operator-=
$LN2@GetResizeB:
; Line 5351
	cmp	DWORD PTR border_n$[rbp], 0
	jne	SHORT $LN3@GetResizeB
	movss	xmm0, DWORD PTR rect$[rbp+12]
	subss	xmm0, DWORD PTR perp_padding$[rbp]
	movss	xmm1, DWORD PTR rect$[rbp]
	addss	xmm1, DWORD PTR thickness$[rbp]
	movss	xmm2, DWORD PTR rect$[rbp+4]
	addss	xmm2, DWORD PTR perp_padding$[rbp]
	movss	xmm3, DWORD PTR rect$[rbp]
	subss	xmm3, DWORD PTR thickness$[rbp]
	movss	DWORD PTR tv82[rbp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv82[rbp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetResizeB
$LN3@GetResizeB:
; Line 5352
	cmp	DWORD PTR border_n$[rbp], 1
	jne	SHORT $LN4@GetResizeB
	movss	xmm0, DWORD PTR rect$[rbp+12]
	subss	xmm0, DWORD PTR perp_padding$[rbp]
	movss	xmm1, DWORD PTR rect$[rbp+8]
	addss	xmm1, DWORD PTR thickness$[rbp]
	movss	xmm2, DWORD PTR rect$[rbp+4]
	addss	xmm2, DWORD PTR perp_padding$[rbp]
	movss	xmm3, DWORD PTR rect$[rbp+8]
	subss	xmm3, DWORD PTR thickness$[rbp]
	movss	DWORD PTR tv92[rbp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv92[rbp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetResizeB
$LN4@GetResizeB:
; Line 5353
	cmp	DWORD PTR border_n$[rbp], 2
	jne	SHORT $LN5@GetResizeB
	movss	xmm0, DWORD PTR rect$[rbp+4]
	addss	xmm0, DWORD PTR thickness$[rbp]
	movss	xmm1, DWORD PTR rect$[rbp+8]
	subss	xmm1, DWORD PTR perp_padding$[rbp]
	movss	xmm2, DWORD PTR rect$[rbp+4]
	subss	xmm2, DWORD PTR thickness$[rbp]
	movss	xmm3, DWORD PTR rect$[rbp]
	addss	xmm3, DWORD PTR perp_padding$[rbp]
	movss	DWORD PTR tv134[rbp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv134[rbp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@GetResizeB
$LN5@GetResizeB:
; Line 5354
	cmp	DWORD PTR border_n$[rbp], 3
	jne	SHORT $LN6@GetResizeB
	movss	xmm0, DWORD PTR rect$[rbp+12]
	addss	xmm0, DWORD PTR thickness$[rbp]
	movss	xmm1, DWORD PTR rect$[rbp+8]
	subss	xmm1, DWORD PTR perp_padding$[rbp]
	movss	xmm2, DWORD PTR rect$[rbp+12]
	subss	xmm2, DWORD PTR thickness$[rbp]
	movss	xmm3, DWORD PTR rect$[rbp]
	addss	xmm3, DWORD PTR perp_padding$[rbp]
	movss	DWORD PTR tv144[rbp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv144[rbp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@GetResizeB
$LN6@GetResizeB:
; Line 5355
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN8@GetResizeB
	mov	eax, DWORD PTR ?__LINE__Var@?0??GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z@4JA
	add	eax, 8
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN8@GetResizeB:
; Line 5356
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@GetResizeB:
; Line 5357
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
?GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z ENDP ; GetResizeBorderRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Eresize_border_def@@YAXXZ
text$di	SEGMENT
??__Eresize_border_def@@YAXXZ PROC			; `dynamic initializer for 'resize_border_def'', COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5344
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5340
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, OFFSET FLAT:?resize_border_def@@3QBUImGuiResizeBorderDef@@B
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	lea	rcx, OFFSET FLAT:?resize_border_def@@3QBUImGuiResizeBorderDef@@B+8
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, OFFSET FLAT:?resize_border_def@@3QBUImGuiResizeBorderDef@@B+16
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	movss	xmm0, DWORD PTR __real@40490fdb
	movss	DWORD PTR ?resize_border_def@@3QBUImGuiResizeBorderDef@@B+24, xmm0
; Line 5341
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@bf800000
	lea	rcx, OFFSET FLAT:?resize_border_def@@3QBUImGuiResizeBorderDef@@B+28
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, OFFSET FLAT:?resize_border_def@@3QBUImGuiResizeBorderDef@@B+36
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, OFFSET FLAT:?resize_border_def@@3QBUImGuiResizeBorderDef@@B+44
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	xorps	xmm0, xmm0
	movss	DWORD PTR ?resize_border_def@@3QBUImGuiResizeBorderDef@@B+52, xmm0
; Line 5342
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	lea	rcx, OFFSET FLAT:?resize_border_def@@3QBUImGuiResizeBorderDef@@B+56
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, OFFSET FLAT:?resize_border_def@@3QBUImGuiResizeBorderDef@@B+64
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, OFFSET FLAT:?resize_border_def@@3QBUImGuiResizeBorderDef@@B+72
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	movss	xmm0, DWORD PTR __real@4096cbe4
	movss	DWORD PTR ?resize_border_def@@3QBUImGuiResizeBorderDef@@B+80, xmm0
; Line 5343
	movss	xmm2, DWORD PTR __real@bf800000
	xorps	xmm1, xmm1
	lea	rcx, OFFSET FLAT:?resize_border_def@@3QBUImGuiResizeBorderDef@@B+84
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, OFFSET FLAT:?resize_border_def@@3QBUImGuiResizeBorderDef@@B+92
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	lea	rcx, OFFSET FLAT:?resize_border_def@@3QBUImGuiResizeBorderDef@@B+100
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	movss	xmm0, DWORD PTR __real@3fc90fdb
	movss	DWORD PTR ?resize_border_def@@3QBUImGuiResizeBorderDef@@B+108, xmm0
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??__Eresize_border_def@@YAXXZ ENDP			; `dynamic initializer for 'resize_border_def''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Eresize_grip_def@@YAXXZ
text$di	SEGMENT
??__Eresize_grip_def@@YAXXZ PROC			; `dynamic initializer for 'resize_grip_def'', COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5329
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5325
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, OFFSET FLAT:?resize_grip_def@@3QBUImGuiResizeGripDef@@B
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	movss	xmm2, DWORD PTR __real@bf800000
	movss	xmm1, DWORD PTR __real@bf800000
	lea	rcx, OFFSET FLAT:?resize_grip_def@@3QBUImGuiResizeGripDef@@B+8
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	DWORD PTR ?resize_grip_def@@3QBUImGuiResizeGripDef@@B+16, 0
	mov	DWORD PTR ?resize_grip_def@@3QBUImGuiResizeGripDef@@B+20, 3
; Line 5326
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	lea	rcx, OFFSET FLAT:?resize_grip_def@@3QBUImGuiResizeGripDef@@B+24
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	movss	xmm2, DWORD PTR __real@bf800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, OFFSET FLAT:?resize_grip_def@@3QBUImGuiResizeGripDef@@B+32
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	DWORD PTR ?resize_grip_def@@3QBUImGuiResizeGripDef@@B+40, 3
	mov	DWORD PTR ?resize_grip_def@@3QBUImGuiResizeGripDef@@B+44, 6
; Line 5327
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, OFFSET FLAT:?resize_grip_def@@3QBUImGuiResizeGripDef@@B+48
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, OFFSET FLAT:?resize_grip_def@@3QBUImGuiResizeGripDef@@B+56
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	DWORD PTR ?resize_grip_def@@3QBUImGuiResizeGripDef@@B+64, 6
	mov	DWORD PTR ?resize_grip_def@@3QBUImGuiResizeGripDef@@B+68, 9
; Line 5328
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, OFFSET FLAT:?resize_grip_def@@3QBUImGuiResizeGripDef@@B+72
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@bf800000
	lea	rcx, OFFSET FLAT:?resize_grip_def@@3QBUImGuiResizeGripDef@@B+80
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	DWORD PTR ?resize_grip_def@@3QBUImGuiResizeGripDef@@B+88, 9
	mov	DWORD PTR ?resize_grip_def@@3QBUImGuiResizeGripDef@@B+92, 12
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??__Eresize_grip_def@@YAXXZ ENDP			; `dynamic initializer for 'resize_grip_def''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z
_TEXT	SEGMENT
pos_min$ = 8
pos_max$ = 40
size_expected$ = 72
size_constrained$ = 104
$T7 = 324
__$ArrayPad$ = 344
window$ = 384
corner_target$ = 392
corner_norm$ = 400
out_pos$ = 408
out_size$ = 416
?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z PROC ; CalcResizePosSizeFromAnyCorner, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5303
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 42					; 0000002aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+424]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5304
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	mov	r9, QWORD PTR corner_norm$[rbp]
	mov	r8, rax
	mov	rdx, QWORD PTR corner_target$[rbp]
	lea	rcx, QWORD PTR pos_min$[rbp]
	call	?ImLerp@@YA?AUImVec2@@AEBU1@00@Z	; ImLerp
; Line 5305
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 24
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 16
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	r9, QWORD PTR corner_norm$[rbp]
	mov	r8, QWORD PTR corner_target$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR pos_max$[rbp]
	call	?ImLerp@@YA?AUImVec2@@AEBU1@00@Z	; ImLerp
; Line 5306
	lea	r8, QWORD PTR pos_min$[rbp]
	lea	rdx, QWORD PTR pos_max$[rbp]
	lea	rcx, QWORD PTR size_expected$[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
; Line 5307
	lea	r8, QWORD PTR size_expected$[rbp]
	mov	rdx, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR size_constrained$[rbp]
	call	?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z ; CalcWindowSizeAfterConstraint
; Line 5308
	mov	rax, QWORD PTR out_pos$[rbp]
	mov	rcx, QWORD PTR pos_min$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 5309
	mov	rax, QWORD PTR corner_norm$[rbp]
	movss	xmm0, DWORD PTR [rax]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN2@CalcResize
	jne	SHORT $LN2@CalcResize
; Line 5310
	movss	xmm0, DWORD PTR size_constrained$[rbp]
	subss	xmm0, DWORD PTR size_expected$[rbp]
	mov	rax, QWORD PTR out_pos$[rbp]
	movss	xmm1, DWORD PTR [rax]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR out_pos$[rbp]
	movss	DWORD PTR [rax], xmm0
$LN2@CalcResize:
; Line 5311
	mov	rax, QWORD PTR corner_norm$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN3@CalcResize
	jne	SHORT $LN3@CalcResize
; Line 5312
	movss	xmm0, DWORD PTR size_constrained$[rbp+4]
	subss	xmm0, DWORD PTR size_expected$[rbp+4]
	mov	rax, QWORD PTR out_pos$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR out_pos$[rbp]
	movss	DWORD PTR [rax+4], xmm0
$LN3@CalcResize:
; Line 5313
	mov	rax, QWORD PTR out_size$[rbp]
	mov	rcx, QWORD PTR size_constrained$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 5314
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z ENDP ; CalcResizePosSizeFromAnyCorner
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetWindowBgColorIdxFromFlags@@YAHH@Z
_TEXT	SEGMENT
flags$ = 224
?GetWindowBgColorIdxFromFlags@@YAHH@Z PROC		; GetWindowBgColorIdxFromFlags, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5294
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5295
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 100663296				; 06000000H
	test	eax, eax
	je	SHORT $LN2@GetWindowB
; Line 5296
	mov	eax, 4
	jmp	SHORT $LN1@GetWindowB
$LN2@GetWindowB:
; Line 5297
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN3@GetWindowB
; Line 5298
	mov	eax, 3
	jmp	SHORT $LN1@GetWindowB
$LN3@GetWindowB:
; Line 5299
	mov	eax, 2
$LN1@GetWindowB:
; Line 5300
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetWindowBgColorIdxFromFlags@@YAHH@Z ENDP		; GetWindowBgColorIdxFromFlags
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z
_TEXT	SEGMENT
g$ = 8
style$ = 40
decoration_up_height$ = 68
size_pad$ = 104
size_desired$ = 136
is_popup$9 = 164
is_menu$10 = 196
size_min$11 = 232
avail_size$12 = 264
size_auto_fit$13 = 296
size_auto_fit_after_constraint$14 = 328
will_have_scrollbar_x$15 = 356
will_have_scrollbar_y$16 = 388
$T17 = 804
$T18 = 836
$T19 = 868
$T20 = 900
$T21 = 932
$T22 = 964
$T23 = 996
tv195 = 1012
tv183 = 1012
tv131 = 1012
tv95 = 1012
tv66 = 1012
tv89 = 1016
tv87 = 1024
__$ArrayPad$ = 1032
__$ReturnUdt$ = 1072
window$ = 1080
size_contents$ = 1088
?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z PROC ; CalcWindowAutoFitSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5246
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1080				; 00000438H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 166				; 000000a6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1112]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5247
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 5248
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 5472				; 00001560H
	mov	QWORD PTR style$[rbp], rax
; Line 5249
	mov	rcx, QWORD PTR window$[rbp]
	call	?TitleBarHeight@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::TitleBarHeight
	movss	DWORD PTR tv66[rbp], xmm0
	mov	rcx, QWORD PTR window$[rbp]
	call	?MenuBarHeight@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::MenuBarHeight
	movss	xmm1, DWORD PTR tv66[rbp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR decoration_up_height$[rbp], xmm0
; Line 5250
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 64					; 00000040H
	movss	xmm2, DWORD PTR __real@40000000
	mov	rdx, rax
	lea	rcx, QWORD PTR size_pad$[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
; Line 5251
	movss	xmm2, DWORD PTR decoration_up_height$[rbp]
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T17[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv89[rbp], rax
	lea	r8, QWORD PTR size_pad$[rbp]
	mov	rdx, QWORD PTR size_contents$[rbp]
	lea	rcx, QWORD PTR $T18[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv87[rbp], rax
	mov	r8, QWORD PTR tv89[rbp]
	mov	rdx, QWORD PTR tv87[rbp]
	lea	rcx, QWORD PTR size_desired$[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
; Line 5252
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 33554432				; 02000000H
	test	eax, eax
	je	SHORT $LN2@CalcWindow
; Line 5255
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR size_desired$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@CalcWindow
; Line 5256
	jmp	$LN3@CalcWindow
$LN2@CalcWindow:
; Line 5260
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	je	SHORT $LN9@CalcWindow
	mov	BYTE PTR tv95[rbp], 1
	jmp	SHORT $LN10@CalcWindow
$LN9@CalcWindow:
	mov	BYTE PTR tv95[rbp], 0
$LN10@CalcWindow:
	movzx	eax, BYTE PTR tv95[rbp]
	mov	BYTE PTR is_popup$9[rbp], al
; Line 5261
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 268435456				; 10000000H
	test	eax, eax
	je	SHORT $LN11@CalcWindow
	mov	BYTE PTR tv131[rbp], 1
	jmp	SHORT $LN12@CalcWindow
$LN11@CalcWindow:
	mov	BYTE PTR tv131[rbp], 0
$LN12@CalcWindow:
	movzx	eax, BYTE PTR tv131[rbp]
	mov	BYTE PTR is_menu$10[rbp], al
; Line 5262
	mov	rax, QWORD PTR style$[rbp]
	mov	rax, QWORD PTR [rax+20]
	mov	QWORD PTR size_min$11[rbp], rax
; Line 5263
	movzx	eax, BYTE PTR is_popup$9[rbp]
	test	eax, eax
	jne	SHORT $LN5@CalcWindow
	movzx	eax, BYTE PTR is_menu$10[rbp]
	test	eax, eax
	je	SHORT $LN4@CalcWindow
$LN5@CalcWindow:
; Line 5264
	movss	xmm2, DWORD PTR __real@40800000
	movss	xmm1, DWORD PTR __real@40800000
	lea	rcx, QWORD PTR $T19[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r8, rax
	lea	rdx, QWORD PTR size_min$11[rbp]
	lea	rcx, QWORD PTR $T20[rbp]
	call	?ImMin@@YA?AUImVec2@@AEBU1@0@Z		; ImMin
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR size_min$11[rbp], rax
$LN4@CalcWindow:
; Line 5267
	call	?GetMainViewport@ImGui@@YAPEAUImGuiViewport@@XZ ; ImGui::GetMainViewport
	mov	rax, QWORD PTR [rax+12]
	mov	QWORD PTR avail_size$12[rbp], rax
; Line 5268
	mov	rax, QWORD PTR style$[rbp]
	add	rax, 172				; 000000acH
	movss	xmm2, DWORD PTR __real@40000000
	mov	rdx, rax
	lea	rcx, QWORD PTR $T21[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	r8, rax
	lea	rdx, QWORD PTR avail_size$12[rbp]
	lea	rcx, QWORD PTR $T22[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	r8, rax
	lea	rdx, QWORD PTR size_min$11[rbp]
	lea	rcx, QWORD PTR $T23[rbp]
	call	?ImMax@@YA?AUImVec2@@AEBU1@0@Z		; ImMax
	mov	r9, QWORD PTR [rax]
	lea	r8, QWORD PTR size_min$11[rbp]
	lea	rdx, QWORD PTR size_desired$[rbp]
	lea	rcx, QWORD PTR size_auto_fit$13[rbp]
	call	?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z	; ImClamp
; Line 5272
	lea	r8, QWORD PTR size_auto_fit$13[rbp]
	mov	rdx, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR size_auto_fit_after_constraint$14[rbp]
	call	?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z ; CalcWindowSizeAfterConstraint
; Line 5273
	movss	xmm0, DWORD PTR size_auto_fit_after_constraint$14[rbp]
	subss	xmm0, DWORD PTR size_pad$[rbp]
	subss	xmm0, DWORD PTR __real@00000000
	mov	rax, QWORD PTR size_contents$[rbp]
	movss	xmm1, DWORD PTR [rax]
	comiss	xmm1, xmm0
	jbe	SHORT $LN13@CalcWindow
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 8
	test	eax, eax
	jne	SHORT $LN13@CalcWindow
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 2048				; 00000800H
	test	eax, eax
	jne	SHORT $LN14@CalcWindow
$LN13@CalcWindow:
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 32768				; 00008000H
	test	eax, eax
	jne	SHORT $LN14@CalcWindow
	mov	DWORD PTR tv183[rbp], 0
	jmp	SHORT $LN15@CalcWindow
$LN14@CalcWindow:
	mov	DWORD PTR tv183[rbp], 1
$LN15@CalcWindow:
	movzx	eax, BYTE PTR tv183[rbp]
	mov	BYTE PTR will_have_scrollbar_x$15[rbp], al
; Line 5274
	movss	xmm0, DWORD PTR size_auto_fit_after_constraint$14[rbp+4]
	subss	xmm0, DWORD PTR size_pad$[rbp+4]
	subss	xmm0, DWORD PTR decoration_up_height$[rbp]
	mov	rax, QWORD PTR size_contents$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	comiss	xmm1, xmm0
	jbe	SHORT $LN16@CalcWindow
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN17@CalcWindow
$LN16@CalcWindow:
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16384				; 00004000H
	test	eax, eax
	jne	SHORT $LN17@CalcWindow
	mov	DWORD PTR tv195[rbp], 0
	jmp	SHORT $LN18@CalcWindow
$LN17@CalcWindow:
	mov	DWORD PTR tv195[rbp], 1
$LN18@CalcWindow:
	movzx	eax, BYTE PTR tv195[rbp]
	mov	BYTE PTR will_have_scrollbar_y$16[rbp], al
; Line 5275
	movzx	eax, BYTE PTR will_have_scrollbar_x$15[rbp]
	test	eax, eax
	je	SHORT $LN6@CalcWindow
; Line 5276
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR size_auto_fit$13[rbp+4]
	addss	xmm0, DWORD PTR [rax+112]
	movss	DWORD PTR size_auto_fit$13[rbp+4], xmm0
$LN6@CalcWindow:
; Line 5277
	movzx	eax, BYTE PTR will_have_scrollbar_y$16[rbp]
	test	eax, eax
	je	SHORT $LN7@CalcWindow
; Line 5278
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR size_auto_fit$13[rbp]
	addss	xmm0, DWORD PTR [rax+112]
	movss	DWORD PTR size_auto_fit$13[rbp], xmm0
$LN7@CalcWindow:
; Line 5279
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR size_auto_fit$13[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN3@CalcWindow:
$LN1@CalcWindow:
; Line 5281
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1048]
	pop	rdi
	pop	rbp
	ret	0
?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z ENDP ; CalcWindowAutoFitSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CalcWindowContentSizes@@YAXPEAUImGuiWindow@@PEAUImVec2@@1@Z
_TEXT	SEGMENT
preserve_old_content_sizes$ = 4
tv199 = 212
tv176 = 212
tv153 = 212
tv136 = 212
window$ = 256
content_size_current$ = 264
content_size_ideal$ = 272
?CalcWindowContentSizes@@YAXPEAUImGuiWindow@@PEAUImVec2@@1@Z PROC ; CalcWindowContentSizes, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5226
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5227
	mov	BYTE PTR preserve_old_content_sizes$[rbp], 0
; Line 5228
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+145]
	test	eax, eax
	je	SHORT $LN2@CalcWindow
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+168]
	test	eax, eax
	jg	SHORT $LN2@CalcWindow
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+169]
	test	eax, eax
	jg	SHORT $LN2@CalcWindow
; Line 5229
	mov	BYTE PTR preserve_old_content_sizes$[rbp], 1
	jmp	SHORT $LN3@CalcWindow
$LN2@CalcWindow:
; Line 5230
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+149]
	test	eax, eax
	je	SHORT $LN4@CalcWindow
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+177]
	test	eax, eax
	jne	SHORT $LN4@CalcWindow
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+176]
	test	eax, eax
	jle	SHORT $LN4@CalcWindow
; Line 5231
	mov	BYTE PTR preserve_old_content_sizes$[rbp], 1
$LN4@CalcWindow:
$LN3@CalcWindow:
; Line 5232
	movzx	eax, BYTE PTR preserve_old_content_sizes$[rbp]
	test	eax, eax
	je	SHORT $LN5@CalcWindow
; Line 5234
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR content_size_current$[rbp]
	mov	QWORD PTR [rcx], rax
; Line 5235
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+48]
	mov	rcx, QWORD PTR content_size_ideal$[rbp]
	mov	QWORD PTR [rcx], rax
; Line 5236
	jmp	$LN1@CalcWindow
$LN5@CalcWindow:
; Line 5239
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+56]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN18@CalcWindow
	je	SHORT $LN7@CalcWindow
$LN18@CalcWindow:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+56]
	movss	DWORD PTR tv136[rbp], xmm0
	jmp	SHORT $LN8@CalcWindow
$LN7@CalcWindow:
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+240]
	subss	xmm0, DWORD PTR [rcx+232]
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	movss	DWORD PTR tv136[rbp], xmm0
$LN8@CalcWindow:
	mov	rax, QWORD PTR content_size_current$[rbp]
	movss	xmm0, DWORD PTR tv136[rbp]
	movss	DWORD PTR [rax], xmm0
; Line 5240
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+60]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN17@CalcWindow
	je	SHORT $LN9@CalcWindow
$LN17@CalcWindow:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+60]
	movss	DWORD PTR tv153[rbp], xmm0
	jmp	SHORT $LN10@CalcWindow
$LN9@CalcWindow:
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+244]
	subss	xmm0, DWORD PTR [rcx+236]
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	movss	DWORD PTR tv153[rbp], xmm0
$LN10@CalcWindow:
	mov	rax, QWORD PTR content_size_current$[rbp]
	movss	xmm0, DWORD PTR tv153[rbp]
	movss	DWORD PTR [rax+4], xmm0
; Line 5241
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+56]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN16@CalcWindow
	je	SHORT $LN11@CalcWindow
$LN16@CalcWindow:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+56]
	movss	DWORD PTR tv176[rbp], xmm0
	jmp	SHORT $LN12@CalcWindow
$LN11@CalcWindow:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+248]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+240]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR window$[rbp]
	subss	xmm0, DWORD PTR [rax+232]
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	movss	DWORD PTR tv176[rbp], xmm0
$LN12@CalcWindow:
	mov	rax, QWORD PTR content_size_ideal$[rbp]
	movss	xmm0, DWORD PTR tv176[rbp]
	movss	DWORD PTR [rax], xmm0
; Line 5242
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+60]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN15@CalcWindow
	je	SHORT $LN13@CalcWindow
$LN15@CalcWindow:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+60]
	movss	DWORD PTR tv199[rbp], xmm0
	jmp	SHORT $LN14@CalcWindow
$LN13@CalcWindow:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+252]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+244]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR window$[rbp]
	subss	xmm0, DWORD PTR [rax+236]
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	movss	DWORD PTR tv199[rbp], xmm0
$LN14@CalcWindow:
	mov	rax, QWORD PTR content_size_ideal$[rbp]
	movss	xmm0, DWORD PTR tv199[rbp]
	movss	DWORD PTR [rax+4], xmm0
$LN1@CalcWindow:
; Line 5243
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?CalcWindowContentSizes@@YAXPEAUImGuiWindow@@PEAUImVec2@@1@Z ENDP ; CalcWindowContentSizes
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z
_TEXT	SEGMENT
g$ = 8
new_size$ = 40
cr$6 = 72
data$7 = 120
window_for_height$8 = 184
decoration_up_height$9 = 212
$T10 = 436
tv145 = 452
tv89 = 452
tv80 = 452
tv136 = 456
__$ArrayPad$ = 464
__$ReturnUdt$ = 512
window$ = 520
size_desired$ = 528
?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z PROC ; CalcWindowSizeAfterConstraint, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5191
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 512				; 00000200H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+552]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5192
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 5193
	mov	rax, QWORD PTR size_desired$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR new_size$[rbp], rax
; Line 5194
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7344]
	and	eax, 16
	test	eax, eax
	je	$LN2@CalcWindow
; Line 5197
	lea	rax, QWORD PTR cr$6[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rdi, rax
	lea	rsi, QWORD PTR [rcx+7404]
	mov	ecx, 16
	rep movsb
; Line 5198
	movss	xmm0, DWORD PTR cr$6[rbp]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN6@CalcWindow
	movss	xmm0, DWORD PTR cr$6[rbp+8]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN6@CalcWindow
	movss	xmm2, DWORD PTR cr$6[rbp+8]
	movss	xmm1, DWORD PTR cr$6[rbp]
	movss	xmm0, DWORD PTR new_size$[rbp]
	call	??$ImClamp@M@@YAMMMM@Z			; ImClamp<float>
	movss	DWORD PTR tv80[rbp], xmm0
	jmp	SHORT $LN7@CalcWindow
$LN6@CalcWindow:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+32]
	movss	DWORD PTR tv80[rbp], xmm0
$LN7@CalcWindow:
	movss	xmm0, DWORD PTR tv80[rbp]
	movss	DWORD PTR new_size$[rbp], xmm0
; Line 5199
	movss	xmm0, DWORD PTR cr$6[rbp+4]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN8@CalcWindow
	movss	xmm0, DWORD PTR cr$6[rbp+12]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN8@CalcWindow
	movss	xmm2, DWORD PTR cr$6[rbp+12]
	movss	xmm1, DWORD PTR cr$6[rbp+4]
	movss	xmm0, DWORD PTR new_size$[rbp+4]
	call	??$ImClamp@M@@YAMMMM@Z			; ImClamp<float>
	movss	DWORD PTR tv89[rbp], xmm0
	jmp	SHORT $LN9@CalcWindow
$LN8@CalcWindow:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+36]
	movss	DWORD PTR tv89[rbp], xmm0
$LN9@CalcWindow:
	movss	xmm0, DWORD PTR tv89[rbp]
	movss	DWORD PTR new_size$[rbp+4], xmm0
; Line 5200
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7424], 0
	je	SHORT $LN3@CalcWindow
; Line 5202
	lea	rcx, QWORD PTR data$7[rbp]
	call	??0ImGuiSizeCallbackData@@QEAA@XZ
; Line 5203
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7432]
	mov	QWORD PTR data$7[rbp], rax
; Line 5204
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR data$7[rbp+8], rax
; Line 5205
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+32]
	mov	QWORD PTR data$7[rbp+16], rax
; Line 5206
	mov	rax, QWORD PTR new_size$[rbp]
	mov	QWORD PTR data$7[rbp+24], rax
; Line 5207
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7424]
	mov	QWORD PTR tv136[rbp], rax
	lea	rcx, QWORD PTR data$7[rbp]
	call	QWORD PTR tv136[rbp]
; Line 5208
	mov	rax, QWORD PTR data$7[rbp+24]
	mov	QWORD PTR new_size$[rbp], rax
$LN3@CalcWindow:
; Line 5210
	cvttss2si eax, DWORD PTR new_size$[rbp]
	cvtsi2ss xmm0, eax
	movss	DWORD PTR new_size$[rbp], xmm0
; Line 5211
	cvttss2si eax, DWORD PTR new_size$[rbp+4]
	cvtsi2ss xmm0, eax
	movss	DWORD PTR new_size$[rbp+4], xmm0
$LN2@CalcWindow:
; Line 5215
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16777280				; 01000040H
	test	eax, eax
	jne	$LN4@CalcWindow
; Line 5217
	mov	rax, QWORD PTR window$[rbp]
	mov	QWORD PTR window_for_height$8[rbp], rax
; Line 5218
	mov	rcx, QWORD PTR window_for_height$8[rbp]
	call	?TitleBarHeight@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::TitleBarHeight
	movss	DWORD PTR tv145[rbp], xmm0
	mov	rcx, QWORD PTR window_for_height$8[rbp]
	call	?MenuBarHeight@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::MenuBarHeight
	movss	xmm1, DWORD PTR tv145[rbp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR decoration_up_height$9[rbp], xmm0
; Line 5219
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 5492				; 00001574H
	mov	r8, rax
	lea	rdx, QWORD PTR new_size$[rbp]
	lea	rcx, QWORD PTR $T10[rbp]
	call	?ImMax@@YA?AUImVec2@@AEBU1@0@Z		; ImMax
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR new_size$[rbp], rax
; Line 5220
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5484]
	subss	xmm0, DWORD PTR __real@3f800000
	movaps	xmm1, xmm0
	xorps	xmm0, xmm0
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	xmm1, DWORD PTR decoration_up_height$9[rbp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR new_size$[rbp+4]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR new_size$[rbp+4], xmm0
$LN4@CalcWindow:
; Line 5222
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR new_size$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 5223
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+480]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z ENDP ; CalcWindowSizeAfterConstraint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ApplyWindowSettings@@YAXPEAUImGuiWindow@@PEAUImGuiWindowSettings@@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
$T4 = 292
window$ = 352
settings$ = 360
?ApplyWindowSettings@@YAXPEAUImGuiWindow@@PEAUImGuiWindowSettings@@@Z PROC ; ApplyWindowSettings, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5131
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5132
	mov	rax, QWORD PTR settings$[rbp]
	movsx	eax, WORD PTR [rax+6]
	cvtsi2ss xmm0, eax
	mov	rax, QWORD PTR settings$[rbp]
	movsx	eax, WORD PTR [rax+4]
	cvtsi2ss xmm1, eax
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+16], rax
; Line 5133
	mov	rax, QWORD PTR settings$[rbp]
	movsx	eax, WORD PTR [rax+8]
	test	eax, eax
	jle	SHORT $LN2@ApplyWindo
	mov	rax, QWORD PTR settings$[rbp]
	movsx	eax, WORD PTR [rax+10]
	test	eax, eax
	jle	SHORT $LN2@ApplyWindo
; Line 5134
	mov	rax, QWORD PTR settings$[rbp]
	movsx	eax, WORD PTR [rax+10]
	cvtsi2ss xmm0, eax
	mov	rax, QWORD PTR settings$[rbp]
	movsx	eax, WORD PTR [rax+8]
	cvtsi2ss xmm1, eax
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR $T3[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rdx, rax
	lea	rcx, QWORD PTR $T4[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+32], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+32]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+24], rax
$LN2@ApplyWindo:
; Line 5135
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR settings$[rbp]
	movzx	ecx, BYTE PTR [rcx+12]
	mov	BYTE PTR [rax+145], cl
; Line 5136
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?ApplyWindowSettings@@YAXPEAUImGuiWindow@@PEAUImGuiWindowSettings@@@Z ENDP ; ApplyWindowSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetWindowConditionAllowFlags@@YAXPEAUImGuiWindow@@H_N@Z
_TEXT	SEGMENT
tv143 = 192
tv93 = 192
tv76 = 192
window$ = 240
flags$ = 248
enabled$ = 256
?SetWindowConditionAllowFlags@@YAXPEAUImGuiWindow@@H_N@Z PROC ; SetWindowConditionAllowFlags, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5112
	mov	BYTE PTR [rsp+24], r8b
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5113
	movzx	eax, BYTE PTR enabled$[rbp]
	test	eax, eax
	je	SHORT $LN3@SetWindowC
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+180]
	shl	eax, 24
	sar	eax, 24
	or	eax, DWORD PTR flags$[rbp]
	mov	DWORD PTR tv76[rbp], eax
	jmp	SHORT $LN4@SetWindowC
$LN3@SetWindowC:
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+180]
	shl	eax, 24
	sar	eax, 24
	mov	ecx, DWORD PTR flags$[rbp]
	not	ecx
	and	eax, ecx
	mov	DWORD PTR tv76[rbp], eax
$LN4@SetWindowC:
	mov	eax, DWORD PTR tv76[rbp]
	and	eax, 255				; 000000ffH
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+180]
	and	ecx, -256				; ffffffffffffff00H
	or	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+180], eax
; Line 5114
	movzx	eax, BYTE PTR enabled$[rbp]
	test	eax, eax
	je	SHORT $LN5@SetWindowC
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+180]
	shl	eax, 16
	sar	eax, 24
	or	eax, DWORD PTR flags$[rbp]
	mov	DWORD PTR tv93[rbp], eax
	jmp	SHORT $LN6@SetWindowC
$LN5@SetWindowC:
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+180]
	shl	eax, 16
	sar	eax, 24
	mov	ecx, DWORD PTR flags$[rbp]
	not	ecx
	and	eax, ecx
	mov	DWORD PTR tv93[rbp], eax
$LN6@SetWindowC:
	mov	eax, DWORD PTR tv93[rbp]
	and	eax, 255				; 000000ffH
	shl	eax, 8
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+180]
	and	ecx, -65281				; ffffffffffff00ffH
	or	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+180], eax
; Line 5115
	movzx	eax, BYTE PTR enabled$[rbp]
	test	eax, eax
	je	SHORT $LN7@SetWindowC
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+180]
	shl	eax, 8
	sar	eax, 24
	or	eax, DWORD PTR flags$[rbp]
	mov	DWORD PTR tv143[rbp], eax
	jmp	SHORT $LN8@SetWindowC
$LN7@SetWindowC:
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+180]
	shl	eax, 8
	sar	eax, 24
	mov	ecx, DWORD PTR flags$[rbp]
	not	ecx
	and	eax, ecx
	mov	DWORD PTR tv143[rbp], eax
$LN8@SetWindowC:
	mov	eax, DWORD PTR tv143[rbp]
	and	eax, 255				; 000000ffH
	shl	eax, 16
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+180]
	and	ecx, -16711681				; ffffffffff00ffffH
	or	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+180], eax
; Line 5116
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?SetWindowConditionAllowFlags@@YAXPEAUImGuiWindow@@H_N@Z ENDP ; SetWindowConditionAllowFlags
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetupViewportDrawData@@YAXPEAUImGuiViewportP@@PEAU?$ImVector@PEAUImDrawList@@@@@Z
_TEXT	SEGMENT
io$ = 8
draw_data$ = 40
n$1 = 68
tv71 = 280
viewport$ = 320
draw_lists$ = 328
?SetupViewportDrawData@@YAXPEAUImGuiViewportP@@PEAU?$ImVector@PEAUImDrawList@@@@@Z PROC ; SetupViewportDrawData, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4343
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4344
	call	?GetIO@ImGui@@YAAEAUImGuiIO@@XZ		; ImGui::GetIO
	mov	QWORD PTR io$[rbp], rax
; Line 4345
	mov	rax, QWORD PTR viewport$[rbp]
	add	rax, 64					; 00000040H
	mov	QWORD PTR draw_data$[rbp], rax
; Line 4346
	mov	rax, QWORD PTR draw_data$[rbp]
	mov	BYTE PTR [rax], 1
; Line 4347
	mov	rax, QWORD PTR draw_lists$[rbp]
	cmp	DWORD PTR [rax], 0
	jle	SHORT $LN6@SetupViewp
	mov	rax, QWORD PTR draw_lists$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv71[rbp], rax
	jmp	SHORT $LN7@SetupViewp
$LN6@SetupViewp:
	mov	QWORD PTR tv71[rbp], 0
$LN7@SetupViewp:
	mov	rax, QWORD PTR draw_data$[rbp]
	mov	rcx, QWORD PTR tv71[rbp]
	mov	QWORD PTR [rax+16], rcx
; Line 4348
	mov	rax, QWORD PTR draw_data$[rbp]
	mov	rcx, QWORD PTR draw_lists$[rbp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax+4], ecx
; Line 4349
	mov	rax, QWORD PTR draw_data$[rbp]
	mov	DWORD PTR [rax+8], 0
	mov	rax, QWORD PTR draw_data$[rbp]
	mov	DWORD PTR [rax+12], 0
; Line 4350
	mov	rax, QWORD PTR viewport$[rbp]
	mov	rax, QWORD PTR [rax+4]
	mov	rcx, QWORD PTR draw_data$[rbp]
	mov	QWORD PTR [rcx+24], rax
; Line 4351
	mov	rax, QWORD PTR viewport$[rbp]
	mov	rax, QWORD PTR [rax+12]
	mov	rcx, QWORD PTR draw_data$[rbp]
	mov	QWORD PTR [rcx+32], rax
; Line 4352
	mov	rax, QWORD PTR io$[rbp]
	mov	rax, QWORD PTR [rax+184]
	mov	rcx, QWORD PTR draw_data$[rbp]
	mov	QWORD PTR [rcx+40], rax
; Line 4353
	mov	DWORD PTR n$1[rbp], 0
	jmp	SHORT $LN4@SetupViewp
$LN2@SetupViewp:
	mov	eax, DWORD PTR n$1[rbp]
	inc	eax
	mov	DWORD PTR n$1[rbp], eax
$LN4@SetupViewp:
	mov	rax, QWORD PTR draw_lists$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR n$1[rbp], eax
	jge	SHORT $LN3@SetupViewp
; Line 4355
	movsxd	rax, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR draw_lists$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rcx+rax*8]
	mov	rcx, QWORD PTR draw_data$[rbp]
	mov	ecx, DWORD PTR [rcx+12]
	add	ecx, DWORD PTR [rax+32]
	mov	eax, ecx
	mov	rcx, QWORD PTR draw_data$[rbp]
	mov	DWORD PTR [rcx+12], eax
; Line 4356
	movsxd	rax, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR draw_lists$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rcx+rax*8]
	mov	rcx, QWORD PTR draw_data$[rbp]
	mov	ecx, DWORD PTR [rcx+8]
	add	ecx, DWORD PTR [rax+16]
	mov	eax, ecx
	mov	rcx, QWORD PTR draw_data$[rbp]
	mov	DWORD PTR [rcx+8], eax
; Line 4357
	jmp	SHORT $LN2@SetupViewp
$LN3@SetupViewp:
; Line 4358
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?SetupViewportDrawData@@YAXPEAUImGuiViewportP@@PEAU?$ImVector@PEAUImDrawList@@@@@Z ENDP ; SetupViewportDrawData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?AddRootWindowToDrawData@@YAXPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
layer$ = 4
tv67 = 212
window$ = 256
?AddRootWindowToDrawData@@YAXPEAUImGuiWindow@@@Z PROC	; AddRootWindowToDrawData, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4319
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4320
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 33554432				; 02000000H
	test	eax, eax
	je	SHORT $LN3@AddRootWin
	mov	DWORD PTR tv67[rbp], 1
	jmp	SHORT $LN4@AddRootWin
$LN3@AddRootWin:
	mov	DWORD PTR tv67[rbp], 0
$LN4@AddRootWin:
	mov	eax, DWORD PTR tv67[rbp]
	mov	DWORD PTR layer$[rbp], eax
; Line 4321
	mov	edx, DWORD PTR layer$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?AddWindowToDrawData@@YAXPEAUImGuiWindow@@H@Z ; AddWindowToDrawData
; Line 4322
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?AddRootWindowToDrawData@@YAXPEAUImGuiWindow@@@Z ENDP	; AddRootWindowToDrawData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?AddWindowToDrawData@@YAXPEAUImGuiWindow@@H@Z
_TEXT	SEGMENT
g$ = 8
viewport$ = 40
i$1 = 68
child$2 = 104
tv128 = 312
tv69 = 312
window$ = 352
layer$ = 360
?AddWindowToDrawData@@YAXPEAUImGuiWindow@@H@Z PROC	; AddWindowToDrawData, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4304
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4305
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4306
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7608				; 00001db8H
	mov	QWORD PTR tv69[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv69[rbp]
	call	??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z ; ImVector<ImGuiViewportP *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR viewport$[rbp], rax
; Line 4307
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+940]
	inc	eax
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+940], eax
; Line 4308
	movsxd	rax, DWORD PTR layer$[rbp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR viewport$[rbp]
	lea	rax, QWORD PTR [rcx+rax+112]
	mov	rcx, QWORD PTR window$[rbp]
	mov	rdx, QWORD PTR [rcx+688]
	mov	rcx, rax
	call	?AddDrawListToDrawData@@YAXPEAU?$ImVector@PEAUImDrawList@@@@PEAUImDrawList@@@Z ; AddDrawListToDrawData
; Line 4309
	mov	DWORD PTR i$1[rbp], 0
	jmp	SHORT $LN4@AddWindowT
$LN2@AddWindowT:
	mov	eax, DWORD PTR i$1[rbp]
	inc	eax
	mov	DWORD PTR i$1[rbp], eax
$LN4@AddWindowT:
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+400]
	cmp	DWORD PTR i$1[rbp], eax
	jge	SHORT $LN3@AddWindowT
; Line 4311
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 400				; 00000190H
	mov	QWORD PTR tv128[rbp], rax
	mov	edx, DWORD PTR i$1[rbp]
	mov	rcx, QWORD PTR tv128[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR child$2[rbp], rax
; Line 4312
	mov	rcx, QWORD PTR child$2[rbp]
	call	?IsWindowActiveAndVisible@@YA_NPEAUImGuiWindow@@@Z ; IsWindowActiveAndVisible
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@AddWindowT
; Line 4313
	mov	edx, DWORD PTR layer$[rbp]
	mov	rcx, QWORD PTR child$2[rbp]
	call	?AddWindowToDrawData@@YAXPEAUImGuiWindow@@H@Z ; AddWindowToDrawData
$LN5@AddWindowT:
; Line 4314
	jmp	SHORT $LN2@AddWindowT
$LN3@AddWindowT:
; Line 4315
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?AddWindowToDrawData@@YAXPEAUImGuiWindow@@H@Z ENDP	; AddWindowToDrawData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ChildWindowComparer@@YAHPEBX0@Z
_TEXT	SEGMENT
a$ = 8
b$ = 40
d$1 = 68
d$2 = 100
lhs$ = 352
rhs$ = 360
?ChildWindowComparer@@YAHPEBX0@Z PROC			; ChildWindowComparer, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4240
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4241
	mov	rax, QWORD PTR lhs$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR a$[rbp], rax
; Line 4242
	mov	rax, QWORD PTR rhs$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR b$[rbp], rax
; Line 4243
	mov	rax, QWORD PTR a$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 67108864				; 04000000H
	mov	rcx, QWORD PTR b$[rbp]
	mov	ecx, DWORD PTR [rcx+12]
	and	ecx, 67108864				; 04000000H
	sub	eax, ecx
	mov	DWORD PTR d$1[rbp], eax
	cmp	DWORD PTR d$1[rbp], 0
	je	SHORT $LN2@ChildWindo
; Line 4244
	mov	eax, DWORD PTR d$1[rbp]
	jmp	SHORT $LN1@ChildWindo
$LN2@ChildWindo:
; Line 4245
	mov	rax, QWORD PTR a$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 33554432				; 02000000H
	mov	rcx, QWORD PTR b$[rbp]
	mov	ecx, DWORD PTR [rcx+12]
	and	ecx, 33554432				; 02000000H
	sub	eax, ecx
	mov	DWORD PTR d$2[rbp], eax
	cmp	DWORD PTR d$2[rbp], 0
	je	SHORT $LN3@ChildWindo
; Line 4246
	mov	eax, DWORD PTR d$2[rbp]
	jmp	SHORT $LN1@ChildWindo
$LN3@ChildWindo:
; Line 4247
	mov	rax, QWORD PTR a$[rbp]
	movsx	eax, WORD PTR [rax+156]
	mov	rcx, QWORD PTR b$[rbp]
	movsx	ecx, WORD PTR [rcx+156]
	sub	eax, ecx
$LN1@ChildWindo:
; Line 4248
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?ChildWindowComparer@@YAHPEBX0@Z ENDP			; ChildWindowComparer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$IM_DELETE@UImFontAtlas@@@@YAXPEAUImFontAtlas@@@Z
_TEXT	SEGMENT
p$ = 224
??$IM_DELETE@UImFontAtlas@@@@YAXPEAUImFontAtlas@@@Z PROC ; IM_DELETE<ImFontAtlas>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1653
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	QWORD PTR p$[rbp], 0
	je	SHORT $LN2@IM_DELETE
	xor	edx, edx
	mov	rcx, QWORD PTR p$[rbp]
	call	??_GImFontAtlas@@QEAAPEAXI@Z
	mov	rcx, QWORD PTR p$[rbp]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN2@IM_DELETE:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$IM_DELETE@UImFontAtlas@@@@YAXPEAUImFontAtlas@@@Z ENDP ; IM_DELETE<ImFontAtlas>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$ImClamp@M@@YAMMMM@Z
_TEXT	SEGMENT
tv67 = 192
tv66 = 196
v$ = 240
mn$ = 248
mx$ = 256
??$ImClamp@M@@YAMMMM@Z PROC				; ImClamp<float>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 414
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	movss	xmm0, DWORD PTR mn$[rbp]
	comiss	xmm0, DWORD PTR v$[rbp]
	jbe	SHORT $LN5@ImClamp
	movss	xmm0, DWORD PTR mn$[rbp]
	movss	DWORD PTR tv67[rbp], xmm0
	jmp	SHORT $LN6@ImClamp
$LN5@ImClamp:
	movss	xmm0, DWORD PTR v$[rbp]
	comiss	xmm0, DWORD PTR mx$[rbp]
	jbe	SHORT $LN3@ImClamp
	movss	xmm0, DWORD PTR mx$[rbp]
	movss	DWORD PTR tv66[rbp], xmm0
	jmp	SHORT $LN4@ImClamp
$LN3@ImClamp:
	movss	xmm0, DWORD PTR v$[rbp]
	movss	DWORD PTR tv66[rbp], xmm0
$LN4@ImClamp:
	movss	xmm0, DWORD PTR tv66[rbp]
	movss	DWORD PTR tv67[rbp], xmm0
$LN6@ImClamp:
	movss	xmm0, DWORD PTR tv67[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??$ImClamp@M@@YAMMMM@Z ENDP				; ImClamp<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?StartLockWheelingWindow@@YAXPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
g$ = 8
window$ = 256
?StartLockWheelingWindow@@YAXPEAUImGuiWindow@@@Z PROC	; StartLockWheelingWindow, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3700
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3701
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3702
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+7216], rcx
	jne	SHORT $LN2@StartLockW
; Line 3703
	jmp	SHORT $LN1@StartLockW
$LN2@StartLockW:
; Line 3704
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax+7216], rcx
; Line 3705
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+296]
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+7224], rax
; Line 3706
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [rax+7232], xmm0
$LN1@StartLockW:
; Line 3707
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?StartLockWheelingWindow@@YAXPEAUImGuiWindow@@@Z ENDP	; StartLockWheelingWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsWindowActiveAndVisible@@YA_NPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
tv70 = 192
window$ = 240
?IsWindowActiveAndVisible@@YA_NPEAUImGuiWindow@@@Z PROC	; IsWindowActiveAndVisible, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3638
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3639
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+142]
	test	eax, eax
	je	SHORT $LN3@IsWindowAc
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+149]
	test	eax, eax
	jne	SHORT $LN3@IsWindowAc
	mov	DWORD PTR tv70[rbp], 1
	jmp	SHORT $LN4@IsWindowAc
$LN3@IsWindowAc:
	mov	DWORD PTR tv70[rbp], 0
$LN4@IsWindowAc:
	movzx	eax, BYTE PTR tv70[rbp]
; Line 3640
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?IsWindowActiveAndVisible@@YA_NPEAUImGuiWindow@@@Z ENDP	; IsWindowActiveAndVisible
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z
_TEXT	SEGMENT
g$ = 8
draw_list$ = 40
$T1 = 264
$T2 = 296
$T3 = 328
$T4 = 360
$T5 = 388
$T6 = 420
$T7 = 456
$T8 = 488
tv92 = 504
viewport$ = 544
drawlist_no$ = 552
drawlist_name$ = 560
?GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z PROC ; GetViewportDrawList, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3470
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 552				; 00000228H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3472
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3473
	cmp	QWORD PTR drawlist_no$[rbp], 2
	jb	SHORT $LN5@GetViewpor
	mov	eax, DWORD PTR ?__LINE__Var@?0??GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z@4JA
	add	eax, 3
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1KI@ECMHEDEI@?$AAd?$AAr?$AAa?$AAw?$AAl?$AAi?$AAs?$AAt?$AA_?$AAn?$AAo?$AA?5?$AA?$DM?$AA?5?$AA?$CI@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN5@GetViewpor:
; Line 3474
	mov	rax, QWORD PTR viewport$[rbp]
	mov	rcx, QWORD PTR drawlist_no$[rbp]
	mov	rax, QWORD PTR [rax+rcx*8+48]
	mov	QWORD PTR draw_list$[rbp], rax
; Line 3475
	cmp	QWORD PTR draw_list$[rbp], 0
	jne	$LN2@GetViewpor
; Line 3477
	mov	ecx, 200				; 000000c8H
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR $T3[rbp], rax
	lea	rax, QWORD PTR $T5[rbp]
	mov	QWORD PTR $T4[rbp], rax
	mov	r8, QWORD PTR $T3[rbp]
	mov	rax, QWORD PTR $T4[rbp]
	movzx	edx, BYTE PTR [rax]
	mov	ecx, 200				; 000000c8H
	call	??2@YAPEAX_KUImNewWrapper@@PEAX@Z	; operator new
	mov	QWORD PTR $T2[rbp], rax
	cmp	QWORD PTR $T2[rbp], 0
	je	SHORT $LN6@GetViewpor
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 6536				; 00001988H
	mov	rdx, rax
	mov	rcx, QWORD PTR $T2[rbp]
	call	??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z ; ImDrawList::ImDrawList
	mov	QWORD PTR tv92[rbp], rax
	jmp	SHORT $LN7@GetViewpor
$LN6@GetViewpor:
	mov	QWORD PTR tv92[rbp], 0
$LN7@GetViewpor:
	mov	rax, QWORD PTR tv92[rbp]
	mov	QWORD PTR $T1[rbp], rax
	mov	rax, QWORD PTR $T1[rbp]
	mov	QWORD PTR draw_list$[rbp], rax
; Line 3478
	mov	rax, QWORD PTR draw_list$[rbp]
	mov	rcx, QWORD PTR drawlist_name$[rbp]
	mov	QWORD PTR [rax+64], rcx
; Line 3479
	mov	rax, QWORD PTR viewport$[rbp]
	mov	rcx, QWORD PTR drawlist_no$[rbp]
	mov	rdx, QWORD PTR draw_list$[rbp]
	mov	QWORD PTR [rax+rcx*8+48], rdx
$LN2@GetViewpor:
; Line 3483
	mov	rax, QWORD PTR viewport$[rbp]
	mov	rcx, QWORD PTR drawlist_no$[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	mov	edx, DWORD PTR [rdx+7056]
	cmp	DWORD PTR [rax+rcx*4+36], edx
	je	$LN3@GetViewpor
; Line 3485
	mov	rcx, QWORD PTR draw_list$[rbp]
	call	?_ResetForNewFrame@ImDrawList@@QEAAXXZ	; ImDrawList::_ResetForNewFrame
; Line 3486
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+168]
	mov	rdx, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR draw_list$[rbp]
	call	?PushTextureID@ImDrawList@@QEAAXPEAX@Z	; ImDrawList::PushTextureID
; Line 3487
	mov	rax, QWORD PTR viewport$[rbp]
	add	rax, 12
	mov	rcx, QWORD PTR viewport$[rbp]
	add	rcx, 4
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T6[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T8[rbp], rax
	mov	rax, QWORD PTR viewport$[rbp]
	mov	rax, QWORD PTR [rax+4]
	mov	QWORD PTR $T7[rbp], rax
	xor	r9d, r9d
	mov	r8, QWORD PTR $T8[rbp]
	mov	rdx, QWORD PTR $T7[rbp]
	mov	rcx, QWORD PTR draw_list$[rbp]
	call	?PushClipRect@ImDrawList@@QEAAXUImVec2@@0_N@Z ; ImDrawList::PushClipRect
; Line 3488
	mov	rax, QWORD PTR viewport$[rbp]
	mov	rcx, QWORD PTR drawlist_no$[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	mov	edx, DWORD PTR [rdx+7056]
	mov	DWORD PTR [rax+rcx*4+36], edx
$LN3@GetViewpor:
; Line 3490
	mov	rax, QWORD PTR draw_list$[rbp]
; Line 3491
	lea	rsp, QWORD PTR [rbp+520]
	pop	rdi
	pop	rbp
	ret	0
?GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z ENDP ; GetViewportDrawList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
g$ = 8
draw_list$ = 40
$T1 = 264
$T2 = 296
$T3 = 328
$T4 = 360
$T5 = 388
$T6 = 420
$T7 = 456
$T8 = 488
tv92 = 504
viewport$ = 544
drawlist_no$ = 552
drawlist_name$ = 560
?dtor$0@?0??GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z@4HA PROC ; `GetViewportDrawList'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	r8, QWORD PTR $T3[rbp]
	mov	rax, QWORD PTR $T4[rbp]
	movzx	edx, BYTE PTR [rax]
	mov	rcx, QWORD PTR $T2[rbp]
	call	??3@YAXPEAXUImNewWrapper@@0@Z		; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z@4HA ENDP ; `GetViewportDrawList'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$IM_DELETE@UImGuiContext@@@@YAXPEAUImGuiContext@@@Z
_TEXT	SEGMENT
p$ = 224
??$IM_DELETE@UImGuiContext@@@@YAXPEAUImGuiContext@@@Z PROC ; IM_DELETE<ImGuiContext>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1653
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	QWORD PTR p$[rbp], 0
	je	SHORT $LN2@IM_DELETE
	xor	edx, edx
	mov	rcx, QWORD PTR p$[rbp]
	call	??_GImGuiContext@@QEAAPEAXI@Z
	mov	rcx, QWORD PTR p$[rbp]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN2@IM_DELETE:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$IM_DELETE@UImGuiContext@@@@YAXPEAUImGuiContext@@@Z ENDP ; IM_DELETE<ImGuiContext>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsWindowContentHoverable@@YA_NPEAUImGuiWindow@@H@Z
_TEXT	SEGMENT
g$ = 8
focused_root_window$1 = 40
window$ = 288
flags$ = 296
?IsWindowContentHoverable@@YA_NPEAUImGuiWindow@@H@Z PROC ; IsWindowContentHoverable, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3134
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3137
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3138
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN2@IsWindowCo
; Line 3139
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	rax, QWORD PTR [rax+904]
	mov	QWORD PTR focused_root_window$1[rbp], rax
	cmp	QWORD PTR focused_root_window$1[rbp], 0
	je	SHORT $LN3@IsWindowCo
; Line 3140
	mov	rax, QWORD PTR focused_root_window$1[rbp]
	movzx	eax, BYTE PTR [rax+143]
	test	eax, eax
	je	SHORT $LN4@IsWindowCo
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+904]
	cmp	QWORD PTR focused_root_window$1[rbp], rax
	je	SHORT $LN4@IsWindowCo
; Line 3144
	mov	rax, QWORD PTR focused_root_window$1[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 134217728				; 08000000H
	test	eax, eax
	je	SHORT $LN5@IsWindowCo
; Line 3145
	xor	al, al
	jmp	SHORT $LN1@IsWindowCo
$LN5@IsWindowCo:
; Line 3146
	mov	rax, QWORD PTR focused_root_window$1[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	je	SHORT $LN6@IsWindowCo
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 8
	test	eax, eax
	jne	SHORT $LN6@IsWindowCo
; Line 3147
	xor	al, al
	jmp	SHORT $LN1@IsWindowCo
$LN6@IsWindowCo:
$LN4@IsWindowCo:
$LN3@IsWindowCo:
$LN2@IsWindowCo:
; Line 3149
	mov	al, 1
$LN1@IsWindowCo:
; Line 3150
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?IsWindowContentHoverable@@YA_NPEAUImGuiWindow@@H@Z ENDP ; IsWindowContentHoverable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$IM_DELETE@D@@YAXPEAD@Z
_TEXT	SEGMENT
p$ = 224
??$IM_DELETE@D@@YAXPEAD@Z PROC				; IM_DELETE<char>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1653
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	QWORD PTR p$[rbp], 0
	je	SHORT $LN2@IM_DELETE
	mov	rcx, QWORD PTR p$[rbp]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN2@IM_DELETE:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$IM_DELETE@D@@YAXPEAD@Z ENDP				; IM_DELETE<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetStyleVarInfo@@YAPEBUImGuiStyleVarInfo@@H@Z
_TEXT	SEGMENT
idx$ = 224
?GetStyleVarInfo@@YAPEBUImGuiStyleVarInfo@@H@Z PROC	; GetStyleVarInfo, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2538
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2539
	cmp	DWORD PTR idx$[rbp], 0
	jl	SHORT $LN3@GetStyleVa
	cmp	DWORD PTR idx$[rbp], 24
	jl	SHORT $LN4@GetStyleVa
$LN3@GetStyleVa:
	mov	eax, DWORD PTR ?__LINE__Var@?0??GetStyleVarInfo@@YAPEBUImGuiStyleVarInfo@@H@Z@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EM@KGOACLAI@?$AAi?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AAd?$AAx@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@GetStyleVa:
; Line 2541
	movsxd	rax, DWORD PTR idx$[rbp]
	imul	rax, rax, 12
	lea	rcx, OFFSET FLAT:?GStyleVarInfo@@3QBUImGuiStyleVarInfo@@B
	add	rcx, rax
	mov	rax, rcx
; Line 2542
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetStyleVarInfo@@YAPEBUImGuiStyleVarInfo@@H@Z ENDP	; GetStyleVarInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetVarPtr@ImGuiStyleVarInfo@@QEBAPEAXPEAUImGuiStyle@@@Z
_TEXT	SEGMENT
this$ = 224
style$ = 232
?GetVarPtr@ImGuiStyleVarInfo@@QEBAPEAXPEAUImGuiStyle@@@Z PROC ; ImGuiStyleVarInfo::GetVarPtr, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2506
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+8]
	mov	rcx, QWORD PTR style$[rbp]
	add	rcx, rax
	mov	rax, rcx
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetVarPtr@ImGuiStyleVarInfo@@QEBAPEAXPEAUImGuiStyle@@@Z ENDP ; ImGuiStyleVarInfo::GetVarPtr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetCursorPosYAndSetupForPrevLine@@YAXMM@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
off_y$ = 68
columns$1 = 104
table$2 = 136
row_increase$3 = 164
pos_y$ = 416
line_height$ = 424
?SetCursorPosYAndSetupForPrevLine@@YAXMM@Z PROC		; SetCursorPosYAndSetupForPrevLine, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2255
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2259
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 2260
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 2261
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR pos_y$[rbp]
	subss	xmm0, DWORD PTR [rax+220]
	movss	DWORD PTR off_y$[rbp], xmm0
; Line 2262
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR pos_y$[rbp]
	movss	DWORD PTR [rax+220], xmm0
; Line 2263
	movss	xmm1, DWORD PTR pos_y$[rbp]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+244]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+244], xmm0
; Line 2264
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+220]
	subss	xmm0, DWORD PTR line_height$[rbp]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+228], xmm0
; Line 2265
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR line_height$[rbp]
	subss	xmm0, DWORD PTR [rax+5548]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+268], xmm0
; Line 2266
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+424]
	mov	QWORD PTR columns$1[rbp], rax
	cmp	QWORD PTR columns$1[rbp], 0
	je	SHORT $LN2@SetCursorP
; Line 2267
	mov	rax, QWORD PTR columns$1[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rcx+220]
	movss	DWORD PTR [rax+28], xmm0
$LN2@SetCursorP:
; Line 2268
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+8176]
	mov	QWORD PTR table$2[rbp], rax
	cmp	QWORD PTR table$2[rbp], 0
	je	SHORT $LN3@SetCursorP
; Line 2270
	mov	rax, QWORD PTR table$2[rbp]
	movzx	eax, BYTE PTR [rax+506]
	test	eax, eax
	je	SHORT $LN4@SetCursorP
; Line 2271
	mov	rcx, QWORD PTR table$2[rbp]
	call	?TableEndRow@ImGui@@YAXPEAUImGuiTable@@@Z ; ImGui::TableEndRow
$LN4@SetCursorP:
; Line 2272
	mov	rax, QWORD PTR table$2[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rcx+220]
	movss	DWORD PTR [rax+136], xmm0
; Line 2273
	movss	xmm0, DWORD PTR off_y$[rbp]
	divss	xmm0, DWORD PTR line_height$[rbp]
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si eax, xmm0
	mov	DWORD PTR row_increase$3[rbp], eax
; Line 2275
	mov	rax, QWORD PTR table$2[rbp]
	mov	eax, DWORD PTR [rax+156]
	add	eax, DWORD PTR row_increase$3[rbp]
	mov	rcx, QWORD PTR table$2[rbp]
	mov	DWORD PTR [rcx+156], eax
$LN3@SetCursorP:
; Line 2277
	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
?SetCursorPosYAndSetupForPrevLine@@YAXMM@Z ENDP		; SetCursorPosYAndSetupForPrevLine
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$ImClamp@H@@YAHHHH@Z
_TEXT	SEGMENT
tv67 = 192
tv66 = 196
v$ = 240
mn$ = 248
mx$ = 256
??$ImClamp@H@@YAHHHH@Z PROC				; ImClamp<int>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 414
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	eax, DWORD PTR mn$[rbp]
	cmp	DWORD PTR v$[rbp], eax
	jge	SHORT $LN5@ImClamp
	mov	eax, DWORD PTR mn$[rbp]
	mov	DWORD PTR tv67[rbp], eax
	jmp	SHORT $LN6@ImClamp
$LN5@ImClamp:
	mov	eax, DWORD PTR mx$[rbp]
	cmp	DWORD PTR v$[rbp], eax
	jle	SHORT $LN3@ImClamp
	mov	eax, DWORD PTR mx$[rbp]
	mov	DWORD PTR tv66[rbp], eax
	jmp	SHORT $LN4@ImClamp
$LN3@ImClamp:
	mov	eax, DWORD PTR v$[rbp]
	mov	DWORD PTR tv66[rbp], eax
$LN4@ImClamp:
	mov	eax, DWORD PTR tv66[rbp]
	mov	DWORD PTR tv67[rbp], eax
$LN6@ImClamp:
	mov	eax, DWORD PTR tv67[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??$ImClamp@H@@YAHHHH@Z ENDP				; ImClamp<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetSkipItemForListClipping@@YA_NXZ
_TEXT	SEGMENT
g$ = 8
tv70 = 212
?GetSkipItemForListClipping@@YA_NXZ PROC		; GetSkipItemForListClipping, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2206
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2207
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 2208
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+8176], 0
	je	SHORT $LN3@GetSkipIte
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+8176]
	movzx	eax, BYTE PTR [rax+519]
	mov	BYTE PTR tv70[rbp], al
	jmp	SHORT $LN4@GetSkipIte
$LN3@GetSkipIte:
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	movzx	eax, BYTE PTR [rax+147]
	mov	BYTE PTR tv70[rbp], al
$LN4@GetSkipIte:
	movzx	eax, BYTE PTR tv70[rbp]
; Line 2209
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetSkipItemForListClipping@@YA_NXZ ENDP		; GetSkipItemForListClipping
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PairCompareByID@StaticFunc@?1??BuildSortByKey@ImGuiStorage@@QEAAXXZ@SAHPEBX0@Z
_TEXT	SEGMENT
lhs$ = 224
rhs$ = 232
?PairCompareByID@StaticFunc@?1??BuildSortByKey@ImGuiStorage@@QEAAXXZ@SAHPEBX0@Z PROC ; `ImGuiStorage::BuildSortByKey'::`2'::StaticFunc::PairCompareByID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1911
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1913
	mov	rax, QWORD PTR lhs$[rbp]
	mov	rcx, QWORD PTR rhs$[rbp]
	mov	ecx, DWORD PTR [rcx]
	cmp	DWORD PTR [rax], ecx
	jbe	SHORT $LN2@PairCompar
	mov	eax, 1
	jmp	SHORT $LN1@PairCompar
$LN2@PairCompar:
; Line 1914
	mov	rax, QWORD PTR lhs$[rbp]
	mov	rcx, QWORD PTR rhs$[rbp]
	mov	ecx, DWORD PTR [rcx]
	cmp	DWORD PTR [rax], ecx
	jae	SHORT $LN3@PairCompar
	mov	eax, -1
	jmp	SHORT $LN1@PairCompar
$LN3@PairCompar:
; Line 1915
	xor	eax, eax
$LN1@PairCompar:
; Line 1916
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?PairCompareByID@StaticFunc@?1??BuildSortByKey@ImGuiStorage@@QEAAXXZ@SAHPEBX0@Z ENDP ; `ImGuiStorage::BuildSortByKey'::`2'::StaticFunc::PairCompareByID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LowerBound@@YAPEAUImGuiStoragePair@ImGuiStorage@@AEAU?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@I@Z
_TEXT	SEGMENT
first$ = 8
last$ = 40
count$ = 72
count2$1 = 104
mid$2 = 136
data$ = 384
key$ = 392
?LowerBound@@YAPEAUImGuiStoragePair@ImGuiStorage@@AEAU?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@I@Z PROC ; LowerBound, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1884
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1885
	mov	rax, QWORD PTR data$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR first$[rbp], rax
; Line 1886
	mov	rax, QWORD PTR data$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR data$[rbp]
	add	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR last$[rbp], rax
; Line 1887
	mov	rax, QWORD PTR first$[rbp]
	mov	rcx, QWORD PTR last$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 4
	mov	QWORD PTR count$[rbp], rax
$LN2@LowerBound:
; Line 1888
	cmp	QWORD PTR count$[rbp], 0
	jbe	SHORT $LN3@LowerBound
; Line 1890
	mov	rax, QWORD PTR count$[rbp]
	shr	rax, 1
	mov	QWORD PTR count2$1[rbp], rax
; Line 1891
	imul	rax, QWORD PTR count2$1[rbp], 16
	mov	rcx, QWORD PTR first$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR mid$2[rbp], rax
; Line 1892
	mov	rax, QWORD PTR mid$2[rbp]
	mov	ecx, DWORD PTR key$[rbp]
	cmp	DWORD PTR [rax], ecx
	jae	SHORT $LN4@LowerBound
; Line 1894
	mov	rax, QWORD PTR mid$2[rbp]
	add	rax, 16
	mov	QWORD PTR mid$2[rbp], rax
	mov	rax, QWORD PTR mid$2[rbp]
	mov	QWORD PTR first$[rbp], rax
; Line 1895
	mov	rax, QWORD PTR count2$1[rbp]
	inc	rax
	mov	rcx, QWORD PTR count$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR count$[rbp], rax
; Line 1896
	jmp	SHORT $LN5@LowerBound
$LN4@LowerBound:
; Line 1899
	mov	rax, QWORD PTR count2$1[rbp]
	mov	QWORD PTR count$[rbp], rax
$LN5@LowerBound:
; Line 1901
	jmp	SHORT $LN2@LowerBound
$LN3@LowerBound:
; Line 1902
	mov	rax, QWORD PTR first$[rbp]
; Line 1903
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?LowerBound@@YAPEAUImGuiStoragePair@ImGuiStorage@@AEAU?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@I@Z ENDP ; LowerBound
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$ImSwap@M@@YAXAEAM0@Z
_TEXT	SEGMENT
tmp$ = 4
a$ = 256
b$ = 264
??$ImSwap@M@@YAXAEAM0@Z PROC				; ImSwap<float>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 416
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR a$[rbp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR tmp$[rbp], xmm0
	mov	rax, QWORD PTR a$[rbp]
	mov	rcx, QWORD PTR b$[rbp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR b$[rbp]
	movss	xmm0, DWORD PTR tmp$[rbp]
	movss	DWORD PTR [rax], xmm0
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$ImSwap@M@@YAXAEAM0@Z ENDP				; ImSwap<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$ImLerp@H@@YAHHHM@Z
_TEXT	SEGMENT
a$ = 224
b$ = 232
t$ = 240
??$ImLerp@H@@YAHHHM@Z PROC				; ImLerp<int>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 415
	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	cvtsi2ss xmm0, DWORD PTR a$[rbp]
	mov	eax, DWORD PTR a$[rbp]
	mov	ecx, DWORD PTR b$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	cvtsi2ss xmm1, eax
	mulss	xmm1, DWORD PTR t$[rbp]
	addss	xmm0, xmm1
	cvttss2si eax, xmm0
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$ImLerp@H@@YAHHHM@Z ENDP				; ImLerp<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImTextCountUtf8BytesFromChar@@YAHI@Z
_TEXT	SEGMENT
c$ = 224
?ImTextCountUtf8BytesFromChar@@YAHI@Z PROC		; ImTextCountUtf8BytesFromChar, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1754
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1755
	cmp	DWORD PTR c$[rbp], 128			; 00000080H
	jae	SHORT $LN2@ImTextCoun
	mov	eax, 1
	jmp	SHORT $LN1@ImTextCoun
$LN2@ImTextCoun:
; Line 1756
	cmp	DWORD PTR c$[rbp], 2048			; 00000800H
	jae	SHORT $LN3@ImTextCoun
	mov	eax, 2
	jmp	SHORT $LN1@ImTextCoun
$LN3@ImTextCoun:
; Line 1757
	cmp	DWORD PTR c$[rbp], 65536		; 00010000H
	jae	SHORT $LN4@ImTextCoun
	mov	eax, 3
	jmp	SHORT $LN1@ImTextCoun
$LN4@ImTextCoun:
; Line 1758
	cmp	DWORD PTR c$[rbp], 1114111		; 0010ffffH
	ja	SHORT $LN5@ImTextCoun
	mov	eax, 4
	jmp	SHORT $LN1@ImTextCoun
$LN5@ImTextCoun:
; Line 1759
	mov	eax, 3
$LN1@ImTextCoun:
; Line 1760
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?ImTextCountUtf8BytesFromChar@@YAHI@Z ENDP		; ImTextCountUtf8BytesFromChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImTextCharToUtf8_inline@@YAHPEADHI@Z
_TEXT	SEGMENT
buf$ = 224
buf_size$ = 232
c$ = 240
?ImTextCharToUtf8_inline@@YAHPEADHI@Z PROC		; ImTextCharToUtf8_inline, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1705
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1706
	cmp	DWORD PTR c$[rbp], 128			; 00000080H
	jae	SHORT $LN2@ImTextChar
; Line 1708
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR buf$[rbp]
	movzx	edx, BYTE PTR c$[rbp]
	mov	BYTE PTR [rcx+rax], dl
; Line 1709
	mov	eax, 1
	jmp	$LN1@ImTextChar
$LN2@ImTextChar:
; Line 1711
	cmp	DWORD PTR c$[rbp], 2048			; 00000800H
	jae	SHORT $LN3@ImTextChar
; Line 1713
	cmp	DWORD PTR buf_size$[rbp], 2
	jge	SHORT $LN4@ImTextChar
	xor	eax, eax
	jmp	$LN1@ImTextChar
$LN4@ImTextChar:
; Line 1714
	mov	eax, DWORD PTR c$[rbp]
	shr	eax, 6
	add	eax, 192				; 000000c0H
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR buf$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 1715
	mov	eax, DWORD PTR c$[rbp]
	and	eax, 63					; 0000003fH
	add	eax, 128				; 00000080H
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR buf$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 1716
	mov	eax, 2
	jmp	$LN1@ImTextChar
$LN3@ImTextChar:
; Line 1718
	cmp	DWORD PTR c$[rbp], 65536		; 00010000H
	jae	$LN5@ImTextChar
; Line 1720
	cmp	DWORD PTR buf_size$[rbp], 3
	jge	SHORT $LN6@ImTextChar
	xor	eax, eax
	jmp	$LN1@ImTextChar
$LN6@ImTextChar:
; Line 1721
	mov	eax, DWORD PTR c$[rbp]
	shr	eax, 12
	add	eax, 224				; 000000e0H
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR buf$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 1722
	mov	eax, DWORD PTR c$[rbp]
	shr	eax, 6
	and	eax, 63					; 0000003fH
	add	eax, 128				; 00000080H
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR buf$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 1723
	mov	eax, DWORD PTR c$[rbp]
	and	eax, 63					; 0000003fH
	add	eax, 128				; 00000080H
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR buf$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 1724
	mov	eax, 3
	jmp	$LN1@ImTextChar
$LN5@ImTextChar:
; Line 1726
	cmp	DWORD PTR c$[rbp], 1114111		; 0010ffffH
	ja	$LN7@ImTextChar
; Line 1728
	cmp	DWORD PTR buf_size$[rbp], 4
	jge	SHORT $LN8@ImTextChar
	xor	eax, eax
	jmp	$LN1@ImTextChar
$LN8@ImTextChar:
; Line 1729
	mov	eax, DWORD PTR c$[rbp]
	shr	eax, 18
	add	eax, 240				; 000000f0H
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR buf$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 1730
	mov	eax, DWORD PTR c$[rbp]
	shr	eax, 12
	and	eax, 63					; 0000003fH
	add	eax, 128				; 00000080H
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR buf$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 1731
	mov	eax, DWORD PTR c$[rbp]
	shr	eax, 6
	and	eax, 63					; 0000003fH
	add	eax, 128				; 00000080H
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR buf$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 1732
	mov	eax, DWORD PTR c$[rbp]
	and	eax, 63					; 0000003fH
	add	eax, 128				; 00000080H
	mov	ecx, 1
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR buf$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 1733
	mov	eax, 4
	jmp	SHORT $LN1@ImTextChar
$LN7@ImTextChar:
; Line 1736
	xor	eax, eax
$LN1@ImTextChar:
; Line 1737
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?ImTextCharToUtf8_inline@@YAHPEADHI@Z ENDP		; ImTextCharToUtf8_inline
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImBezierCubicClosestPointCasteljauStep@@YAXAEBUImVec2@@AEAU1@1AEAMMMMMMMMMMH@Z
_TEXT	SEGMENT
dx$ = 4
dy$ = 36
d2$ = 68
d3$ = 100
p_current$5 = 136
p_line$6 = 168
dist2$7 = 196
x12$8 = 228
y12$9 = 260
x23$10 = 292
y23$11 = 324
x34$12 = 356
y34$13 = 388
x123$14 = 420
y123$15 = 452
x234$16 = 484
y234$17 = 516
x1234$18 = 548
y1234$19 = 580
$T20 = 996
tv81 = 1012
tv78 = 1012
__$ArrayPad$ = 1016
p$ = 1056
p_closest$ = 1064
p_last$ = 1072
p_closest_dist2$ = 1080
x1$ = 1088
y1$ = 1096
x2$ = 1104
y2$ = 1112
x3$ = 1120
y3$ = 1128
x4$ = 1136
y4$ = 1144
tess_tol$ = 1152
level$ = 1160
?ImBezierCubicClosestPointCasteljauStep@@YAXAEBUImVec2@@AEAU1@1AEAMMMMMMMMMMH@Z PROC ; ImBezierCubicClosestPointCasteljauStep, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1203
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1144				; 00000478H
	lea	rbp, QWORD PTR [rsp+112]
	lea	rdi, QWORD PTR [rsp+112]
	mov	ecx, 162				; 000000a2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1176]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1204
	movss	xmm0, DWORD PTR x4$[rbp]
	subss	xmm0, DWORD PTR x1$[rbp]
	movss	DWORD PTR dx$[rbp], xmm0
; Line 1205
	movss	xmm0, DWORD PTR y4$[rbp]
	subss	xmm0, DWORD PTR y1$[rbp]
	movss	DWORD PTR dy$[rbp], xmm0
; Line 1206
	movss	xmm0, DWORD PTR x2$[rbp]
	subss	xmm0, DWORD PTR x4$[rbp]
	mulss	xmm0, DWORD PTR dy$[rbp]
	movss	xmm1, DWORD PTR y2$[rbp]
	subss	xmm1, DWORD PTR y4$[rbp]
	mulss	xmm1, DWORD PTR dx$[rbp]
	subss	xmm0, xmm1
	movss	DWORD PTR d2$[rbp], xmm0
; Line 1207
	movss	xmm0, DWORD PTR x3$[rbp]
	subss	xmm0, DWORD PTR x4$[rbp]
	mulss	xmm0, DWORD PTR dy$[rbp]
	movss	xmm1, DWORD PTR y3$[rbp]
	subss	xmm1, DWORD PTR y4$[rbp]
	mulss	xmm1, DWORD PTR dx$[rbp]
	subss	xmm0, xmm1
	movss	DWORD PTR d3$[rbp], xmm0
; Line 1208
	movss	xmm0, DWORD PTR d2$[rbp]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN7@ImBezierCu
	movss	xmm0, DWORD PTR d2$[rbp]
	movss	DWORD PTR tv78[rbp], xmm0
	jmp	SHORT $LN8@ImBezierCu
$LN7@ImBezierCu:
	movss	xmm0, DWORD PTR d2$[rbp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR tv78[rbp], xmm0
$LN8@ImBezierCu:
	movss	xmm0, DWORD PTR tv78[rbp]
	movss	DWORD PTR d2$[rbp], xmm0
; Line 1209
	movss	xmm0, DWORD PTR d3$[rbp]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN9@ImBezierCu
	movss	xmm0, DWORD PTR d3$[rbp]
	movss	DWORD PTR tv81[rbp], xmm0
	jmp	SHORT $LN10@ImBezierCu
$LN9@ImBezierCu:
	movss	xmm0, DWORD PTR d3$[rbp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR tv81[rbp], xmm0
$LN10@ImBezierCu:
	movss	xmm0, DWORD PTR tv81[rbp]
	movss	DWORD PTR d3$[rbp], xmm0
; Line 1210
	movss	xmm0, DWORD PTR d2$[rbp]
	addss	xmm0, DWORD PTR d3$[rbp]
	movss	xmm1, DWORD PTR d2$[rbp]
	addss	xmm1, DWORD PTR d3$[rbp]
	mulss	xmm0, xmm1
	movss	xmm1, DWORD PTR dx$[rbp]
	mulss	xmm1, DWORD PTR dx$[rbp]
	movss	xmm2, DWORD PTR dy$[rbp]
	mulss	xmm2, DWORD PTR dy$[rbp]
	addss	xmm1, xmm2
	movss	xmm2, DWORD PTR tess_tol$[rbp]
	mulss	xmm2, xmm1
	movaps	xmm1, xmm2
	comiss	xmm1, xmm0
	jbe	$LN2@ImBezierCu
; Line 1212
	movss	xmm2, DWORD PTR y4$[rbp]
	movss	xmm1, DWORD PTR x4$[rbp]
	lea	rcx, QWORD PTR p_current$5[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
; Line 1213
	mov	r9, QWORD PTR p$[rbp]
	lea	r8, QWORD PTR p_current$5[rbp]
	mov	rdx, QWORD PTR p_last$[rbp]
	lea	rcx, QWORD PTR p_line$6[rbp]
	call	?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z ; ImLineClosestPoint
; Line 1214
	lea	r8, QWORD PTR p_line$6[rbp]
	mov	rdx, QWORD PTR p$[rbp]
	lea	rcx, QWORD PTR $T20[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rcx, rax
	call	?ImLengthSqr@@YAMAEBUImVec2@@@Z		; ImLengthSqr
	movss	DWORD PTR dist2$7[rbp], xmm0
; Line 1215
	mov	rax, QWORD PTR p_closest_dist2$[rbp]
	movss	xmm0, DWORD PTR [rax]
	comiss	xmm0, DWORD PTR dist2$7[rbp]
	jbe	SHORT $LN4@ImBezierCu
; Line 1217
	mov	rax, QWORD PTR p_closest$[rbp]
	mov	rcx, QWORD PTR p_line$6[rbp]
	mov	QWORD PTR [rax], rcx
; Line 1218
	mov	rax, QWORD PTR p_closest_dist2$[rbp]
	movss	xmm0, DWORD PTR dist2$7[rbp]
	movss	DWORD PTR [rax], xmm0
$LN4@ImBezierCu:
; Line 1220
	mov	rax, QWORD PTR p_last$[rbp]
	mov	rcx, QWORD PTR p_current$5[rbp]
	mov	QWORD PTR [rax], rcx
; Line 1221
	jmp	$LN3@ImBezierCu
$LN2@ImBezierCu:
; Line 1222
	cmp	DWORD PTR level$[rbp], 10
	jge	$LN5@ImBezierCu
; Line 1224
	movss	xmm0, DWORD PTR x1$[rbp]
	addss	xmm0, DWORD PTR x2$[rbp]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR x12$8[rbp], xmm0
	movss	xmm0, DWORD PTR y1$[rbp]
	addss	xmm0, DWORD PTR y2$[rbp]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR y12$9[rbp], xmm0
; Line 1225
	movss	xmm0, DWORD PTR x2$[rbp]
	addss	xmm0, DWORD PTR x3$[rbp]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR x23$10[rbp], xmm0
	movss	xmm0, DWORD PTR y2$[rbp]
	addss	xmm0, DWORD PTR y3$[rbp]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR y23$11[rbp], xmm0
; Line 1226
	movss	xmm0, DWORD PTR x3$[rbp]
	addss	xmm0, DWORD PTR x4$[rbp]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR x34$12[rbp], xmm0
	movss	xmm0, DWORD PTR y3$[rbp]
	addss	xmm0, DWORD PTR y4$[rbp]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR y34$13[rbp], xmm0
; Line 1227
	movss	xmm0, DWORD PTR x12$8[rbp]
	addss	xmm0, DWORD PTR x23$10[rbp]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR x123$14[rbp], xmm0
	movss	xmm0, DWORD PTR y12$9[rbp]
	addss	xmm0, DWORD PTR y23$11[rbp]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR y123$15[rbp], xmm0
; Line 1228
	movss	xmm0, DWORD PTR x23$10[rbp]
	addss	xmm0, DWORD PTR x34$12[rbp]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR x234$16[rbp], xmm0
	movss	xmm0, DWORD PTR y23$11[rbp]
	addss	xmm0, DWORD PTR y34$13[rbp]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR y234$17[rbp], xmm0
; Line 1229
	movss	xmm0, DWORD PTR x123$14[rbp]
	addss	xmm0, DWORD PTR x234$16[rbp]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR x1234$18[rbp], xmm0
	movss	xmm0, DWORD PTR y123$15[rbp]
	addss	xmm0, DWORD PTR y234$17[rbp]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR y1234$19[rbp], xmm0
; Line 1230
	mov	eax, DWORD PTR level$[rbp]
	inc	eax
	mov	DWORD PTR [rsp+104], eax
	movss	xmm0, DWORD PTR tess_tol$[rbp]
	movss	DWORD PTR [rsp+96], xmm0
	movss	xmm0, DWORD PTR y1234$19[rbp]
	movss	DWORD PTR [rsp+88], xmm0
	movss	xmm0, DWORD PTR x1234$18[rbp]
	movss	DWORD PTR [rsp+80], xmm0
	movss	xmm0, DWORD PTR y123$15[rbp]
	movss	DWORD PTR [rsp+72], xmm0
	movss	xmm0, DWORD PTR x123$14[rbp]
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR y12$9[rbp]
	movss	DWORD PTR [rsp+56], xmm0
	movss	xmm0, DWORD PTR x12$8[rbp]
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR y1$[rbp]
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR x1$[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9, QWORD PTR p_closest_dist2$[rbp]
	mov	r8, QWORD PTR p_last$[rbp]
	mov	rdx, QWORD PTR p_closest$[rbp]
	mov	rcx, QWORD PTR p$[rbp]
	call	?ImBezierCubicClosestPointCasteljauStep@@YAXAEBUImVec2@@AEAU1@1AEAMMMMMMMMMMH@Z ; ImBezierCubicClosestPointCasteljauStep
; Line 1231
	mov	eax, DWORD PTR level$[rbp]
	inc	eax
	mov	DWORD PTR [rsp+104], eax
	movss	xmm0, DWORD PTR tess_tol$[rbp]
	movss	DWORD PTR [rsp+96], xmm0
	movss	xmm0, DWORD PTR y4$[rbp]
	movss	DWORD PTR [rsp+88], xmm0
	movss	xmm0, DWORD PTR x4$[rbp]
	movss	DWORD PTR [rsp+80], xmm0
	movss	xmm0, DWORD PTR y34$13[rbp]
	movss	DWORD PTR [rsp+72], xmm0
	movss	xmm0, DWORD PTR x34$12[rbp]
	movss	DWORD PTR [rsp+64], xmm0
	movss	xmm0, DWORD PTR y234$17[rbp]
	movss	DWORD PTR [rsp+56], xmm0
	movss	xmm0, DWORD PTR x234$16[rbp]
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR y1234$19[rbp]
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR x1234$18[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9, QWORD PTR p_closest_dist2$[rbp]
	mov	r8, QWORD PTR p_last$[rbp]
	mov	rdx, QWORD PTR p_closest$[rbp]
	mov	rcx, QWORD PTR p$[rbp]
	call	?ImBezierCubicClosestPointCasteljauStep@@YAXAEBUImVec2@@AEAU1@1AEAMMMMMMMMMMH@Z ; ImBezierCubicClosestPointCasteljauStep
$LN5@ImBezierCu:
$LN3@ImBezierCu:
; Line 1233
	lea	rcx, QWORD PTR [rbp-112]
	lea	rdx, OFFSET FLAT:?ImBezierCubicClosestPointCasteljauStep@@YAXAEBUImVec2@@AEAU1@1AEAMMMMMMMMMMH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1032]
	pop	rdi
	pop	rbp
	ret	0
?ImBezierCubicClosestPointCasteljauStep@@YAXAEBUImVec2@@AEAU1@1AEAMMMMMMMMMMH@Z ENDP ; ImBezierCubicClosestPointCasteljauStep
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FreeWrapper@@YAXPEAX0@Z
_TEXT	SEGMENT
ptr$ = 224
user_data$ = 232
?FreeWrapper@@YAXPEAX0@Z PROC				; FreeWrapper, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 968
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR ptr$[rbp]
	call	QWORD PTR __imp_free
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?FreeWrapper@@YAXPEAX0@Z ENDP				; FreeWrapper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?MallocWrapper@@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
size$ = 224
user_data$ = 232
?MallocWrapper@@YAPEAX_KPEAX@Z PROC			; MallocWrapper, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 967
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR size$[rbp]
	call	QWORD PTR __imp_malloc
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?MallocWrapper@@YAPEAX_KPEAX@Z ENDP			; MallocWrapper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?UpdateViewportsNewFrame@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
main_viewport$ = 40
n$1 = 68
viewport$2 = 104
$T3 = 324
$T4 = 356
tv142 = 376
tv77 = 376
?UpdateViewportsNewFrame@ImGui@@YAXXZ PROC		; ImGui::UpdateViewportsNewFrame, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10670
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10671
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10672
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7608], 1
	je	SHORT $LN6@UpdateView
	mov	eax, DWORD PTR ?__LINE__Var@?0??UpdateViewportsNewFrame@ImGui@@YAXXZ@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CM@MPBIDJHA@?$AAg?$AA?4?$AAV?$AAi?$AAe?$AAw?$AAp?$AAo?$AAr?$AAt?$AAs?$AA?4?$AAS?$AAi?$AAz@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@UpdateView:
; Line 10676
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7608				; 00001db8H
	mov	QWORD PTR tv77[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv77[rbp]
	call	??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z ; ImVector<ImGuiViewportP *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR main_viewport$[rbp], rax
; Line 10677
	mov	rax, QWORD PTR main_viewport$[rbp]
	mov	DWORD PTR [rax], 5
; Line 10678
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T3[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR main_viewport$[rbp]
	mov	QWORD PTR [rcx+4], rax
; Line 10679
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR main_viewport$[rbp]
	mov	QWORD PTR [rcx+12], rax
; Line 10681
	mov	DWORD PTR n$1[rbp], 0
	jmp	SHORT $LN4@UpdateView
$LN2@UpdateView:
	mov	eax, DWORD PTR n$1[rbp]
	inc	eax
	mov	DWORD PTR n$1[rbp], eax
$LN4@UpdateView:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7608]
	cmp	DWORD PTR n$1[rbp], eax
	jge	$LN3@UpdateView
; Line 10683
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7608				; 00001db8H
	mov	QWORD PTR tv142[rbp], rax
	mov	edx, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR tv142[rbp]
	call	??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z ; ImVector<ImGuiViewportP *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR viewport$2[rbp], rax
; Line 10686
	mov	rax, QWORD PTR viewport$2[rbp]
	mov	rax, QWORD PTR [rax+160]
	mov	rcx, QWORD PTR viewport$2[rbp]
	mov	QWORD PTR [rcx+144], rax
; Line 10687
	mov	rax, QWORD PTR viewport$2[rbp]
	mov	rax, QWORD PTR [rax+168]
	mov	rcx, QWORD PTR viewport$2[rbp]
	mov	QWORD PTR [rcx+152], rax
; Line 10688
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T4[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR viewport$2[rbp]
	mov	QWORD PTR [rcx+168], rax
	mov	rax, QWORD PTR viewport$2[rbp]
	mov	rax, QWORD PTR [rax+168]
	mov	rcx, QWORD PTR viewport$2[rbp]
	mov	QWORD PTR [rcx+160], rax
; Line 10689
	mov	rcx, QWORD PTR viewport$2[rbp]
	call	?UpdateWorkRect@ImGuiViewportP@@QEAAXXZ	; ImGuiViewportP::UpdateWorkRect
; Line 10690
	jmp	$LN2@UpdateView
$LN3@UpdateView:
; Line 10691
	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
?UpdateViewportsNewFrame@ImGui@@YAXXZ ENDP		; ImGui::UpdateViewportsNewFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z
_TEXT	SEGMENT
g$ = 8
style$ = 40
flags$ = 68
has_close_button$ = 100
has_collapse_button$ = 132
item_flags_backup$ = 164
pad_l$ = 196
pad_r$ = 228
button_sz$ = 260
close_button_pos$ = 296
collapse_button_pos$ = 328
marker_size_x$ = 356
text_size$ = 392
centerness$9 = 420
pad_extend$10 = 452
layout_r$ = 488
clip_r$ = 536
marker_pos$11 = 584
$T12 = 996
$T13 = 1028
$T14 = 1060
$T15 = 1092
$T16 = 1124
$T17 = 1160
tv358 = 1172
tv260 = 1172
tv199 = 1172
tv72 = 1172
tv67 = 1172
tv356 = 1176
tv258 = 1176
tv217 = 1176
tv215 = 1184
__$ArrayPad$ = 1192
window$ = 1232
title_bar_rect$ = 1240
name$ = 1248
p_open$ = 1256
?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z PROC ; ImGui::RenderWindowTitleBarContents, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5632
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1272				; 000004f8H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 206				; 000000ceH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1304]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5633
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 5634
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 5472				; 00001560H
	mov	QWORD PTR style$[rbp], rax
; Line 5635
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	mov	DWORD PTR flags$[rbp], eax
; Line 5637
	cmp	QWORD PTR p_open$[rbp], 0
	je	SHORT $LN15@RenderWind
	mov	BYTE PTR tv67[rbp], 1
	jmp	SHORT $LN16@RenderWind
$LN15@RenderWind:
	mov	BYTE PTR tv67[rbp], 0
$LN16@RenderWind:
	movzx	eax, BYTE PTR tv67[rbp]
	mov	BYTE PTR has_close_button$[rbp], al
; Line 5638
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN17@RenderWind
	mov	rax, QWORD PTR style$[rbp]
	cmp	DWORD PTR [rax+36], -1
	je	SHORT $LN17@RenderWind
	mov	BYTE PTR tv72[rbp], 1
	jmp	SHORT $LN18@RenderWind
$LN17@RenderWind:
	mov	BYTE PTR tv72[rbp], 0
$LN18@RenderWind:
	movzx	eax, BYTE PTR tv72[rbp]
	mov	BYTE PTR has_collapse_button$[rbp], al
; Line 5641
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7236]
	mov	DWORD PTR item_flags_backup$[rbp], eax
; Line 5642
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7236]
	or	eax, 16
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7236], eax
; Line 5643
	mov	rax, QWORD PTR window$[rbp]
	mov	DWORD PTR [rax+332], 1
; Line 5647
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rax+56]
	movss	DWORD PTR pad_l$[rbp], xmm0
; Line 5648
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rax+56]
	movss	DWORD PTR pad_r$[rbp], xmm0
; Line 5649
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+6528]
	movss	DWORD PTR button_sz$[rbp], xmm0
; Line 5650
	lea	rcx, QWORD PTR close_button_pos$[rbp]
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
; Line 5651
	lea	rcx, QWORD PTR collapse_button_pos$[rbp]
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
; Line 5652
	movzx	eax, BYTE PTR has_close_button$[rbp]
	test	eax, eax
	je	SHORT $LN2@RenderWind
; Line 5654
	movss	xmm0, DWORD PTR pad_r$[rbp]
	addss	xmm0, DWORD PTR button_sz$[rbp]
	movss	DWORD PTR pad_r$[rbp], xmm0
; Line 5655
	mov	rax, QWORD PTR title_bar_rect$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	subss	xmm0, DWORD PTR pad_r$[rbp]
	mov	rax, QWORD PTR style$[rbp]
	subss	xmm0, DWORD PTR [rax+56]
	mov	rax, QWORD PTR title_bar_rect$[rbp]
	movss	xmm2, DWORD PTR [rax+4]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T12[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR close_button_pos$[rbp], rax
$LN2@RenderWind:
; Line 5657
	movzx	eax, BYTE PTR has_collapse_button$[rbp]
	test	eax, eax
	je	SHORT $LN3@RenderWind
	mov	rax, QWORD PTR style$[rbp]
	cmp	DWORD PTR [rax+36], 1
	jne	SHORT $LN3@RenderWind
; Line 5659
	movss	xmm0, DWORD PTR pad_r$[rbp]
	addss	xmm0, DWORD PTR button_sz$[rbp]
	movss	DWORD PTR pad_r$[rbp], xmm0
; Line 5660
	mov	rax, QWORD PTR title_bar_rect$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	subss	xmm0, DWORD PTR pad_r$[rbp]
	mov	rax, QWORD PTR style$[rbp]
	subss	xmm0, DWORD PTR [rax+56]
	mov	rax, QWORD PTR title_bar_rect$[rbp]
	movss	xmm2, DWORD PTR [rax+4]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T13[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR collapse_button_pos$[rbp], rax
$LN3@RenderWind:
; Line 5662
	movzx	eax, BYTE PTR has_collapse_button$[rbp]
	test	eax, eax
	je	SHORT $LN4@RenderWind
	mov	rax, QWORD PTR style$[rbp]
	cmp	DWORD PTR [rax+36], 0
	jne	SHORT $LN4@RenderWind
; Line 5664
	mov	rax, QWORD PTR title_bar_rect$[rbp]
	movss	xmm0, DWORD PTR [rax]
	addss	xmm0, DWORD PTR pad_l$[rbp]
	mov	rax, QWORD PTR style$[rbp]
	subss	xmm0, DWORD PTR [rax+56]
	mov	rax, QWORD PTR title_bar_rect$[rbp]
	movss	xmm2, DWORD PTR [rax+4]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T14[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR collapse_button_pos$[rbp], rax
; Line 5665
	movss	xmm0, DWORD PTR pad_l$[rbp]
	addss	xmm0, DWORD PTR button_sz$[rbp]
	movss	DWORD PTR pad_l$[rbp], xmm0
$LN4@RenderWind:
; Line 5669
	movzx	eax, BYTE PTR has_collapse_button$[rbp]
	test	eax, eax
	je	SHORT $LN5@RenderWind
; Line 5670
	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:??_C@_09BJOGEADB@?$CDCOLLAPSE@
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetID@ImGuiWindow@@QEAAIPEBD0@Z	; ImGuiWindow::GetID
	lea	rdx, QWORD PTR collapse_button_pos$[rbp]
	mov	ecx, eax
	call	?CollapseButton@ImGui@@YA_NIAEBUImVec2@@@Z ; ImGui::CollapseButton
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@RenderWind
; Line 5671
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+146], 1
$LN6@RenderWind:
$LN5@RenderWind:
; Line 5674
	movzx	eax, BYTE PTR has_close_button$[rbp]
	test	eax, eax
	je	SHORT $LN7@RenderWind
; Line 5675
	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:??_C@_06KIIKKNMI@?$CDCLOSE@
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetID@ImGuiWindow@@QEAAIPEBD0@Z	; ImGuiWindow::GetID
	lea	rdx, QWORD PTR close_button_pos$[rbp]
	mov	ecx, eax
	call	?CloseButton@ImGui@@YA_NIAEBUImVec2@@@Z	; ImGui::CloseButton
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@RenderWind
; Line 5676
	mov	rax, QWORD PTR p_open$[rbp]
	mov	BYTE PTR [rax], 0
$LN8@RenderWind:
$LN7@RenderWind:
; Line 5678
	mov	rax, QWORD PTR window$[rbp]
	mov	DWORD PTR [rax+332], 0
; Line 5679
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR item_flags_backup$[rbp]
	mov	DWORD PTR [rax+7236], ecx
; Line 5683
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 1048576				; 00100000H
	test	eax, eax
	je	SHORT $LN19@RenderWind
	movss	xmm0, DWORD PTR button_sz$[rbp]
	mulss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR tv199[rbp], xmm0
	jmp	SHORT $LN20@RenderWind
$LN19@RenderWind:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv199[rbp], xmm0
$LN20@RenderWind:
	movss	xmm0, DWORD PTR tv199[rbp]
	movss	DWORD PTR marker_size_x$[rbp], xmm0
; Line 5684
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR marker_size_x$[rbp]
	lea	rcx, QWORD PTR $T15[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv217[rbp], rax
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9b, 1
	xor	r8d, r8d
	mov	rdx, QWORD PTR name$[rbp]
	lea	rcx, QWORD PTR $T16[rbp]
	call	?CalcTextSize@ImGui@@YA?AUImVec2@@PEBD0_NM@Z ; ImGui::CalcTextSize
	mov	QWORD PTR tv215[rbp], rax
	mov	r8, QWORD PTR tv217[rbp]
	mov	rdx, QWORD PTR tv215[rbp]
	lea	rcx, QWORD PTR text_size$[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
; Line 5688
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR pad_l$[rbp]
	comiss	xmm0, DWORD PTR [rax+56]
	jbe	SHORT $LN9@RenderWind
; Line 5689
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR pad_l$[rbp]
	addss	xmm0, DWORD PTR [rax+5552]
	movss	DWORD PTR pad_l$[rbp], xmm0
$LN9@RenderWind:
; Line 5690
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR pad_r$[rbp]
	comiss	xmm0, DWORD PTR [rax+56]
	jbe	SHORT $LN10@RenderWind
; Line 5691
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR pad_r$[rbp]
	addss	xmm0, DWORD PTR [rax+5552]
	movss	DWORD PTR pad_r$[rbp], xmm0
$LN10@RenderWind:
; Line 5692
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rax+28]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	$LN11@RenderWind
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	comiss	xmm0, DWORD PTR [rax+28]
	jbe	$LN11@RenderWind
; Line 5694
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rax+28]
	subss	xmm0, DWORD PTR __real@3f000000
	call	fabsf
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	call	?ImSaturate@@YAMM@Z			; ImSaturate
	movss	DWORD PTR centerness$9[rbp], xmm0
; Line 5695
	mov	rcx, QWORD PTR title_bar_rect$[rbp]
	call	?GetWidth@ImRect@@QEBAMXZ		; ImRect::GetWidth
	subss	xmm0, DWORD PTR pad_l$[rbp]
	subss	xmm0, DWORD PTR pad_r$[rbp]
	subss	xmm0, DWORD PTR text_size$[rbp]
	movss	DWORD PTR tv260[rbp], xmm0
	movss	xmm1, DWORD PTR pad_r$[rbp]
	movss	xmm0, DWORD PTR pad_l$[rbp]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR tv258[rbp], xmm0
	movss	xmm1, DWORD PTR tv260[rbp]
	movss	xmm0, DWORD PTR tv258[rbp]
	call	??$ImMin@M@@YAMMM@Z			; ImMin<float>
	movss	DWORD PTR pad_extend$10[rbp], xmm0
; Line 5696
	movss	xmm0, DWORD PTR pad_extend$10[rbp]
	mulss	xmm0, DWORD PTR centerness$9[rbp]
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR pad_l$[rbp]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR pad_l$[rbp], xmm0
; Line 5697
	movss	xmm0, DWORD PTR pad_extend$10[rbp]
	mulss	xmm0, DWORD PTR centerness$9[rbp]
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR pad_r$[rbp]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR pad_r$[rbp], xmm0
$LN11@RenderWind:
; Line 5700
	mov	rax, QWORD PTR title_bar_rect$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	subss	xmm0, DWORD PTR pad_r$[rbp]
	mov	rax, QWORD PTR title_bar_rect$[rbp]
	movss	xmm1, DWORD PTR [rax]
	addss	xmm1, DWORD PTR pad_l$[rbp]
	mov	rax, QWORD PTR title_bar_rect$[rbp]
	movss	xmm2, DWORD PTR [rax+12]
	movss	DWORD PTR [rsp+32], xmm2
	movaps	xmm3, xmm0
	mov	rax, QWORD PTR title_bar_rect$[rbp]
	movss	xmm2, DWORD PTR [rax+4]
	lea	rcx, QWORD PTR layout_r$[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
; Line 5701
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR layout_r$[rbp+8]
	addss	xmm0, DWORD PTR [rax+5552]
	mov	rax, QWORD PTR title_bar_rect$[rbp]
	movss	xmm1, DWORD PTR [rax+8]
	call	??$ImMin@M@@YAMMM@Z			; ImMin<float>
	movss	xmm1, DWORD PTR layout_r$[rbp+12]
	movss	DWORD PTR [rsp+32], xmm1
	movaps	xmm3, xmm0
	movss	xmm2, DWORD PTR layout_r$[rbp+4]
	movss	xmm1, DWORD PTR layout_r$[rbp]
	lea	rcx, QWORD PTR clip_r$[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
; Line 5702
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 1048576				; 00100000H
	test	eax, eax
	je	$LN12@RenderWind
; Line 5704
	lea	rcx, QWORD PTR marker_pos$11[rbp]
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
; Line 5705
	lea	rcx, QWORD PTR layout_r$[rbp]
	call	?GetWidth@ImRect@@QEBAMXZ		; ImRect::GetWidth
	subss	xmm0, DWORD PTR text_size$[rbp]
	mov	rax, QWORD PTR style$[rbp]
	mulss	xmm0, DWORD PTR [rax+28]
	movss	xmm1, DWORD PTR layout_r$[rbp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	addss	xmm0, DWORD PTR text_size$[rbp]
	movss	xmm2, DWORD PTR layout_r$[rbp+8]
	movss	xmm1, DWORD PTR layout_r$[rbp]
	call	??$ImClamp@M@@YAMMMM@Z			; ImClamp<float>
	movss	DWORD PTR marker_pos$11[rbp], xmm0
; Line 5706
	movss	xmm0, DWORD PTR layout_r$[rbp+4]
	addss	xmm0, DWORD PTR layout_r$[rbp+12]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR marker_pos$11[rbp+4], xmm0
; Line 5707
	movss	xmm0, DWORD PTR marker_pos$11[rbp]
	comiss	xmm0, DWORD PTR layout_r$[rbp]
	jbe	$LN13@RenderWind
; Line 5709
	movss	xmm1, DWORD PTR __real@3f800000
	xor	ecx, ecx
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv358[rbp], eax
	mov	rax, QWORD PTR marker_pos$11[rbp]
	mov	QWORD PTR $T17[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv356[rbp], rax
	mov	r8d, DWORD PTR tv358[rbp]
	mov	rdx, QWORD PTR $T17[rbp]
	mov	rcx, QWORD PTR tv356[rbp]
	call	?RenderBullet@ImGui@@YAXPEAUImDrawList@@UImVec2@@I@Z ; ImGui::RenderBullet
; Line 5710
	movss	xmm0, DWORD PTR marker_size_x$[rbp]
	mulss	xmm0, DWORD PTR __real@3f000000
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	movss	xmm1, DWORD PTR marker_pos$11[rbp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR clip_r$[rbp+8]
	call	??$ImMin@M@@YAMMM@Z			; ImMin<float>
	movss	DWORD PTR clip_r$[rbp+8], xmm0
$LN13@RenderWind:
$LN12@RenderWind:
; Line 5715
	mov	rax, QWORD PTR style$[rbp]
	add	rax, 28
	lea	rcx, QWORD PTR clip_r$[rbp]
	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR text_size$[rbp]
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8, QWORD PTR name$[rbp]
	lea	rdx, QWORD PTR layout_r$[rbp+8]
	lea	rcx, QWORD PTR layout_r$[rbp]
	call	?RenderTextClipped@ImGui@@YAXAEBUImVec2@@0PEBD1PEBU2@0PEBUImRect@@@Z ; ImGui::RenderTextClipped
; Line 5716
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1208]
	pop	rdi
	pop	rbp
	ret	0
?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z ENDP ; ImGui::RenderWindowTitleBarContents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z
_TEXT	SEGMENT
g$ = 8
style$ = 40
flags$ = 68
window_rounding$ = 100
window_border_size$ = 132
backup_border_size$5 = 164
title_bar_col$6 = 196
bg_col$7 = 228
override_alpha$8 = 260
alpha$9 = 292
title_bar_col$10 = 324
menu_bar_rect$11 = 360
resize_grip_n$12 = 404
grip$13 = 440
corner$14 = 472
$T15 = 1076
$T16 = 1108
$T17 = 1140
$T18 = 1172
$T19 = 1220
$T20 = 1252
$T21 = 1284
$T22 = 1316
$T23 = 1348
$T24 = 1380
$T25 = 1412
$T26 = 1448
$T27 = 1476
$T28 = 1508
$T29 = 1540
$T30 = 1572
$T31 = 1608
$T32 = 1636
$T33 = 1668
$T34 = 1700
$T35 = 1732
$T36 = 1764
tv197 = 1780
tv149 = 1780
tv91 = 1780
tv440 = 1784
tv432 = 1784
tv402 = 1784
tv375 = 1784
tv338 = 1784
tv321 = 1784
tv255 = 1784
tv209 = 1784
tv190 = 1784
tv430 = 1792
tv390 = 1792
tv363 = 1792
tv287 = 1792
tv224 = 1792
tv162 = 1792
tv428 = 1796
tv285 = 1796
tv253 = 1796
tv426 = 1800
tv400 = 1800
tv373 = 1800
tv283 = 1800
tv251 = 1800
tv188 = 1800
tv281 = 1808
tv249 = 1808
tv186 = 1808
__$ArrayPad$ = 1816
window$ = 1856
title_bar_rect$ = 1864
title_bar_is_highlight$ = 1872
resize_grip_count$ = 1880
resize_grip_col$ = 1888
resize_grip_draw_size$ = 1896
?RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z PROC ; ImGui::RenderWindowDecorations, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5548
	mov	DWORD PTR [rsp+32], r9d
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1880				; 00000758H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 314				; 0000013aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1912]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5549
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 5550
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 5472				; 00001560H
	mov	QWORD PTR style$[rbp], rax
; Line 5551
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	mov	DWORD PTR flags$[rbp], eax
; Line 5554
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, WORD PTR [rax+154]
	test	eax, eax
	je	SHORT $LN17@RenderWind
	mov	eax, DWORD PTR ?__LINE__Var@?0??RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z@4JA
	add	eax, 6
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DA@CEGNFBKM@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAB?$AAe?$AAg?$AAi?$AAn?$AAC?$AAo@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN17@RenderWind:
; Line 5555
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+147], 0
; Line 5559
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+72]
	movss	DWORD PTR window_rounding$[rbp], xmm0
; Line 5560
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+76]
	movss	DWORD PTR window_border_size$[rbp], xmm0
; Line 5561
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+145]
	test	eax, eax
	je	$LN5@RenderWind
; Line 5564
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rax+68]
	movss	DWORD PTR backup_border_size$5[rbp], xmm0
; Line 5565
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rcx+76]
	movss	DWORD PTR [rax+5540], xmm0
; Line 5566
	movzx	eax, BYTE PTR title_bar_is_highlight$[rbp]
	test	eax, eax
	je	SHORT $LN18@RenderWind
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7710]
	test	eax, eax
	jne	SHORT $LN18@RenderWind
	mov	DWORD PTR tv91[rbp], 11
	jmp	SHORT $LN19@RenderWind
$LN18@RenderWind:
	mov	DWORD PTR tv91[rbp], 12
$LN19@RenderWind:
	movss	xmm1, DWORD PTR __real@3f800000
	mov	ecx, DWORD PTR tv91[rbp]
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR title_bar_col$6[rbp], eax
; Line 5567
	movss	xmm0, DWORD PTR window_rounding$[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9b, 1
	mov	r8d, DWORD PTR title_bar_col$6[rbp]
	mov	rax, QWORD PTR title_bar_rect$[rbp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR title_bar_rect$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?RenderFrame@ImGui@@YAXUImVec2@@0I_NM@Z	; ImGui::RenderFrame
; Line 5568
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR backup_border_size$5[rbp]
	movss	DWORD PTR [rax+5540], xmm0
; Line 5569
	jmp	$LN6@RenderWind
$LN5@RenderWind:
; Line 5573
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	$LN7@RenderWind
; Line 5575
	mov	ecx, DWORD PTR flags$[rbp]
	call	?GetWindowBgColorIdxFromFlags@@YAHH@Z	; GetWindowBgColorIdxFromFlags
	movss	xmm1, DWORD PTR __real@3f800000
	mov	ecx, eax
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR bg_col$7[rbp], eax
; Line 5576
	mov	BYTE PTR override_alpha$8[rbp], 0
; Line 5577
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR alpha$9[rbp], xmm0
; Line 5578
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7344]
	and	eax, 64					; 00000040H
	test	eax, eax
	je	SHORT $LN8@RenderWind
; Line 5580
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7440]
	movss	DWORD PTR alpha$9[rbp], xmm0
; Line 5581
	mov	BYTE PTR override_alpha$8[rbp], 1
$LN8@RenderWind:
; Line 5583
	movzx	eax, BYTE PTR override_alpha$8[rbp]
	test	eax, eax
	je	SHORT $LN9@RenderWind
; Line 5584
	mov	eax, DWORD PTR bg_col$7[rbp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR tv149[rbp], eax
	movss	xmm0, DWORD PTR alpha$9[rbp]
	call	?ImSaturate@@YAMM@Z			; ImSaturate
	mulss	xmm0, DWORD PTR __real@437f0000
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si eax, xmm0
	shl	eax, 24
	mov	ecx, DWORD PTR tv149[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR bg_col$7[rbp], eax
$LN9@RenderWind:
; Line 5585
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv190[rbp], rax
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN20@RenderWind
	mov	DWORD PTR tv162[rbp], 0
	jmp	SHORT $LN21@RenderWind
$LN20@RenderWind:
	mov	DWORD PTR tv162[rbp], 192		; 000000c0H
$LN21@RenderWind:
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 24
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 16
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T15[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv188[rbp], rax
	mov	rcx, QWORD PTR window$[rbp]
	call	?TitleBarHeight@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::TitleBarHeight
	movaps	xmm2, xmm0
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T16[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 16
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T17[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv186[rbp], rax
	mov	eax, DWORD PTR tv162[rbp]
	mov	DWORD PTR [rsp+40], eax
	movss	xmm0, DWORD PTR window_rounding$[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR bg_col$7[rbp]
	mov	r8, QWORD PTR tv188[rbp]
	mov	rdx, QWORD PTR tv186[rbp]
	mov	rcx, QWORD PTR tv190[rbp]
	call	?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z ; ImDrawList::AddRectFilled
$LN7@RenderWind:
; Line 5589
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 1
	test	eax, eax
	jne	$LN10@RenderWind
; Line 5591
	movzx	eax, BYTE PTR title_bar_is_highlight$[rbp]
	test	eax, eax
	je	SHORT $LN22@RenderWind
	mov	DWORD PTR tv197[rbp], 11
	jmp	SHORT $LN23@RenderWind
$LN22@RenderWind:
	mov	DWORD PTR tv197[rbp], 10
$LN23@RenderWind:
	movss	xmm1, DWORD PTR __real@3f800000
	mov	ecx, DWORD PTR tv197[rbp]
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR title_bar_col$10[rbp], eax
; Line 5592
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv209[rbp], rax
	mov	rax, QWORD PTR title_bar_rect$[rbp]
	add	rax, 8
	mov	rcx, QWORD PTR title_bar_rect$[rbp]
	mov	DWORD PTR [rsp+40], 48			; 00000030H
	movss	xmm0, DWORD PTR window_rounding$[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR title_bar_col$10[rbp]
	mov	r8, rax
	mov	rdx, rcx
	mov	rcx, QWORD PTR tv209[rbp]
	call	?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z ; ImDrawList::AddRectFilled
$LN10@RenderWind:
; Line 5596
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 1024				; 00000400H
	test	eax, eax
	je	$LN11@RenderWind
; Line 5598
	lea	rdx, QWORD PTR menu_bar_rect$11[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?MenuBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ ; ImGuiWindow::MenuBarRect
; Line 5599
	lea	rdx, QWORD PTR $T18[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?Rect@ImGuiWindow@@QEBA?AUImRect@@XZ	; ImGuiWindow::Rect
	mov	rdx, rax
	lea	rcx, QWORD PTR menu_bar_rect$11[rbp]
	call	?ClipWith@ImRect@@QEAAXAEBU1@@Z		; ImRect::ClipWith
; Line 5600
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv255[rbp], rax
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN24@RenderWind
	movss	xmm0, DWORD PTR window_rounding$[rbp]
	movss	DWORD PTR tv224[rbp], xmm0
	jmp	SHORT $LN25@RenderWind
$LN24@RenderWind:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv224[rbp], xmm0
$LN25@RenderWind:
	movss	xmm1, DWORD PTR __real@3f800000
	mov	ecx, 13
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv253[rbp], eax
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR window_border_size$[rbp]
	lea	rcx, QWORD PTR $T19[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r8, rax
	lea	rdx, QWORD PTR menu_bar_rect$11[rbp+8]
	lea	rcx, QWORD PTR $T20[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv251[rbp], rax
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR window_border_size$[rbp]
	lea	rcx, QWORD PTR $T21[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r8, rax
	lea	rdx, QWORD PTR menu_bar_rect$11[rbp]
	lea	rcx, QWORD PTR $T22[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv249[rbp], rax
	mov	DWORD PTR [rsp+40], 48			; 00000030H
	movss	xmm0, DWORD PTR tv224[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR tv253[rbp]
	mov	r8, QWORD PTR tv251[rbp]
	mov	rdx, QWORD PTR tv249[rbp]
	mov	rcx, QWORD PTR tv255[rbp]
	call	?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z ; ImDrawList::AddRectFilled
; Line 5601
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rax+68]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	$LN12@RenderWind
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+20]
	addss	xmm0, DWORD PTR [rcx+28]
	comiss	xmm0, DWORD PTR menu_bar_rect$11[rbp+12]
	jbe	$LN12@RenderWind
; Line 5602
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv321[rbp], rax
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rax+68]
	movss	DWORD PTR tv287[rbp], xmm0
	movss	xmm1, DWORD PTR __real@3f800000
	mov	ecx, 5
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv285[rbp], eax
	lea	rdx, QWORD PTR $T23[rbp]
	lea	rcx, QWORD PTR menu_bar_rect$11[rbp]
	call	?GetBR@ImRect@@QEBA?AUImVec2@@XZ	; ImRect::GetBR
	mov	QWORD PTR tv283[rbp], rax
	lea	rdx, QWORD PTR $T24[rbp]
	lea	rcx, QWORD PTR menu_bar_rect$11[rbp]
	call	?GetBL@ImRect@@QEBA?AUImVec2@@XZ	; ImRect::GetBL
	mov	QWORD PTR tv281[rbp], rax
	movss	xmm0, DWORD PTR tv287[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR tv285[rbp]
	mov	r8, QWORD PTR tv283[rbp]
	mov	rdx, QWORD PTR tv281[rbp]
	mov	rcx, QWORD PTR tv321[rbp]
	call	?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z ; ImDrawList::AddLine
$LN12@RenderWind:
$LN11@RenderWind:
; Line 5606
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+140]
	test	eax, eax
	je	SHORT $LN13@RenderWind
; Line 5607
	xor	ecx, ecx
	call	?Scrollbar@ImGui@@YAXW4ImGuiAxis@@@Z	; ImGui::Scrollbar
$LN13@RenderWind:
; Line 5608
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+141]
	test	eax, eax
	je	SHORT $LN14@RenderWind
; Line 5609
	mov	ecx, 1
	call	?Scrollbar@ImGui@@YAXW4ImGuiAxis@@@Z	; ImGui::Scrollbar
$LN14@RenderWind:
; Line 5612
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 2
	test	eax, eax
	jne	$LN15@RenderWind
; Line 5614
	mov	DWORD PTR resize_grip_n$12[rbp], 0
	jmp	SHORT $LN4@RenderWind
$LN2@RenderWind:
	mov	eax, DWORD PTR resize_grip_n$12[rbp]
	inc	eax
	mov	DWORD PTR resize_grip_n$12[rbp], eax
$LN4@RenderWind:
	mov	eax, DWORD PTR resize_grip_count$[rbp]
	cmp	DWORD PTR resize_grip_n$12[rbp], eax
	jge	$LN3@RenderWind
; Line 5616
	movsxd	rax, DWORD PTR resize_grip_n$12[rbp]
	imul	rax, rax, 24
	lea	rcx, OFFSET FLAT:?resize_grip_def@@3QBUImGuiResizeGripDef@@B
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR grip$13[rbp], rax
; Line 5617
	mov	rax, QWORD PTR grip$13[rbp]
	mov	QWORD PTR tv338[rbp], rax
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 24
	mov	rdx, QWORD PTR window$[rbp]
	add	rdx, 16
	mov	r8, rcx
	lea	rcx, QWORD PTR $T25[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 16
	mov	rdx, QWORD PTR tv338[rbp]
	mov	r9, rdx
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR corner$14[rbp]
	call	?ImLerp@@YA?AUImVec2@@AEBU1@00@Z	; ImLerp
; Line 5618
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv375[rbp], rax
	mov	eax, DWORD PTR resize_grip_n$12[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN26@RenderWind
	movss	xmm2, DWORD PTR resize_grip_draw_size$[rbp]
	movss	xmm1, DWORD PTR window_border_size$[rbp]
	lea	rcx, QWORD PTR $T27[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv363[rbp], rax
	jmp	SHORT $LN27@RenderWind
$LN26@RenderWind:
	movss	xmm2, DWORD PTR window_border_size$[rbp]
	movss	xmm1, DWORD PTR resize_grip_draw_size$[rbp]
	lea	rcx, QWORD PTR $T28[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv363[rbp], rax
$LN27@RenderWind:
	mov	rax, QWORD PTR tv363[rbp]
	mov	QWORD PTR $T26[rbp], rax
	mov	rax, QWORD PTR grip$13[rbp]
	add	rax, 8
	mov	r8, QWORD PTR $T26[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T29[rbp]
	call	??D@YA?AUImVec2@@AEBU0@0@Z		; operator*
	mov	r8, rax
	lea	rdx, QWORD PTR corner$14[rbp]
	lea	rcx, QWORD PTR $T30[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv373[rbp], rax
	mov	rdx, QWORD PTR tv373[rbp]
	mov	rcx, QWORD PTR tv375[rbp]
	call	?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z ; ImDrawList::PathLineTo
; Line 5619
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv402[rbp], rax
	mov	eax, DWORD PTR resize_grip_n$12[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN28@RenderWind
	movss	xmm2, DWORD PTR window_border_size$[rbp]
	movss	xmm1, DWORD PTR resize_grip_draw_size$[rbp]
	lea	rcx, QWORD PTR $T32[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv390[rbp], rax
	jmp	SHORT $LN29@RenderWind
$LN28@RenderWind:
	movss	xmm2, DWORD PTR resize_grip_draw_size$[rbp]
	movss	xmm1, DWORD PTR window_border_size$[rbp]
	lea	rcx, QWORD PTR $T33[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv390[rbp], rax
$LN29@RenderWind:
	mov	rax, QWORD PTR tv390[rbp]
	mov	QWORD PTR $T31[rbp], rax
	mov	rax, QWORD PTR grip$13[rbp]
	add	rax, 8
	mov	r8, QWORD PTR $T31[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T34[rbp]
	call	??D@YA?AUImVec2@@AEBU0@0@Z		; operator*
	mov	r8, rax
	lea	rdx, QWORD PTR corner$14[rbp]
	lea	rcx, QWORD PTR $T35[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv400[rbp], rax
	mov	rdx, QWORD PTR tv400[rbp]
	mov	rcx, QWORD PTR tv402[rbp]
	call	?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z ; ImDrawList::PathLineTo
; Line 5620
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv432[rbp], rax
	mov	rax, QWORD PTR grip$13[rbp]
	mov	eax, DWORD PTR [rax+20]
	mov	DWORD PTR tv430[rbp], eax
	mov	rax, QWORD PTR grip$13[rbp]
	mov	eax, DWORD PTR [rax+16]
	mov	DWORD PTR tv428[rbp], eax
	movss	xmm0, DWORD PTR window_rounding$[rbp]
	addss	xmm0, DWORD PTR window_border_size$[rbp]
	mov	rax, QWORD PTR grip$13[rbp]
	movss	xmm1, DWORD PTR [rax+12]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR corner$14[rbp+4]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR window_rounding$[rbp]
	addss	xmm1, DWORD PTR window_border_size$[rbp]
	mov	rax, QWORD PTR grip$13[rbp]
	movss	xmm2, DWORD PTR [rax+8]
	mulss	xmm2, xmm1
	movaps	xmm1, xmm2
	movss	xmm2, DWORD PTR corner$14[rbp]
	addss	xmm2, xmm1
	movaps	xmm1, xmm2
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR $T36[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv426[rbp], rax
	mov	eax, DWORD PTR tv430[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR tv428[rbp]
	movss	xmm2, DWORD PTR window_rounding$[rbp]
	mov	rdx, QWORD PTR tv426[rbp]
	mov	rcx, QWORD PTR tv432[rbp]
	call	?PathArcToFast@ImDrawList@@QEAAXAEBUImVec2@@MHH@Z ; ImDrawList::PathArcToFast
; Line 5621
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv440[rbp], rax
	movsxd	rax, DWORD PTR resize_grip_n$12[rbp]
	mov	rcx, QWORD PTR resize_grip_col$[rbp]
	mov	edx, DWORD PTR [rcx+rax*4]
	mov	rcx, QWORD PTR tv440[rbp]
	call	?PathFillConvex@ImDrawList@@QEAAXI@Z	; ImDrawList::PathFillConvex
; Line 5622
	jmp	$LN2@RenderWind
$LN3@RenderWind:
$LN15@RenderWind:
; Line 5626
	mov	rcx, QWORD PTR window$[rbp]
	call	?RenderWindowOuterBorders@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::RenderWindowOuterBorders
$LN6@RenderWind:
; Line 5628
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1832]
	pop	rdi
	pop	rbp
	ret	0
?RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z ENDP ; ImGui::RenderWindowDecorations
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RenderWindowOuterBorders@ImGui@@YAXPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
g$ = 8
rounding$ = 36
border_size$ = 68
border_held$ = 100
def$4 = 136
border_r$5 = 168
y$6 = 212
$T7 = 628
$T8 = 660
$T9 = 692
$T10 = 724
$T11 = 756
$T12 = 788
$T13 = 820
$T14 = 852
$T15 = 884
$T16 = 916
$T17 = 948
$T18 = 980
$T19 = 1012
tv301 = 1032
tv251 = 1032
tv234 = 1032
tv185 = 1032
tv93 = 1032
tv299 = 1040
tv249 = 1040
tv232 = 1040
tv183 = 1040
tv91 = 1040
tv297 = 1044
tv247 = 1044
tv230 = 1044
tv181 = 1044
tv295 = 1048
tv225 = 1048
tv176 = 1048
tv89 = 1048
tv293 = 1056
tv219 = 1056
tv170 = 1056
tv217 = 1064
tv168 = 1064
tv223 = 1072
tv174 = 1072
tv228 = 1080
tv179 = 1080
__$ArrayPad$ = 1088
window$ = 1136
?RenderWindowOuterBorders@ImGui@@YAXPEAUImGuiWindow@@@Z PROC ; ImGui::RenderWindowOuterBorders, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5522
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1176				; 00000498H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 182				; 000000b6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1208]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5523
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 5524
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+72]
	movss	DWORD PTR rounding$[rbp], xmm0
; Line 5525
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+76]
	movss	DWORD PTR border_size$[rbp], xmm0
; Line 5526
	movss	xmm0, DWORD PTR border_size$[rbp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	$LN2@RenderWind
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	$LN2@RenderWind
; Line 5527
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv93[rbp], rax
	movss	xmm1, DWORD PTR __real@3f800000
	mov	ecx, 5
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv91[rbp], eax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 24
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 16
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv89[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	movss	xmm0, DWORD PTR border_size$[rbp]
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	movss	xmm0, DWORD PTR rounding$[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR tv91[rbp]
	mov	r8, QWORD PTR tv89[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR tv93[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
$LN2@RenderWind:
; Line 5529
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+152]
	mov	DWORD PTR border_held$[rbp], eax
; Line 5530
	cmp	DWORD PTR border_held$[rbp], -1
	je	$LN3@RenderWind
; Line 5532
	movsxd	rax, DWORD PTR border_held$[rbp]
	imul	rax, rax, 28
	lea	rcx, OFFSET FLAT:?resize_border_def@@3QBUImGuiResizeBorderDef@@B
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR def$4[rbp], rax
; Line 5533
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR rounding$[rbp]
	mov	r8d, DWORD PTR border_held$[rbp]
	mov	rdx, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR border_r$5[rbp]
	call	?GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z ; GetResizeBorderRect
; Line 5534
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv185[rbp], rax
	mov	rax, QWORD PTR def$4[rbp]
	movss	xmm0, DWORD PTR [rax+24]
	movss	DWORD PTR tv183[rbp], xmm0
	mov	rax, QWORD PTR def$4[rbp]
	movss	xmm0, DWORD PTR [rax+24]
	subss	xmm0, DWORD PTR __real@3f490fdb
	movss	DWORD PTR tv181[rbp], xmm0
	mov	rax, QWORD PTR def$4[rbp]
	movss	xmm2, DWORD PTR rounding$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T8[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	QWORD PTR tv176[rbp], rax
	movss	xmm2, DWORD PTR __real@3f000000
	movss	xmm1, DWORD PTR __real@3f000000
	lea	rcx, QWORD PTR $T9[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv170[rbp], rax
	mov	rax, QWORD PTR def$4[rbp]
	add	rax, 8
	mov	r9, rax
	lea	r8, QWORD PTR border_r$5[rbp+8]
	lea	rdx, QWORD PTR border_r$5[rbp]
	lea	rcx, QWORD PTR $T10[rbp]
	call	?ImLerp@@YA?AUImVec2@@AEBU1@00@Z	; ImLerp
	mov	QWORD PTR tv168[rbp], rax
	mov	r8, QWORD PTR tv170[rbp]
	mov	rdx, QWORD PTR tv168[rbp]
	lea	rcx, QWORD PTR $T11[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv174[rbp], rax
	mov	r8, QWORD PTR tv176[rbp]
	mov	rdx, QWORD PTR tv174[rbp]
	lea	rcx, QWORD PTR $T12[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv179[rbp], rax
	mov	DWORD PTR [rsp+40], 0
	movss	xmm0, DWORD PTR tv183[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR tv181[rbp]
	movss	xmm2, DWORD PTR rounding$[rbp]
	mov	rdx, QWORD PTR tv179[rbp]
	mov	rcx, QWORD PTR tv185[rbp]
	call	?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z ; ImDrawList::PathArcTo
; Line 5535
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv234[rbp], rax
	mov	rax, QWORD PTR def$4[rbp]
	movss	xmm0, DWORD PTR [rax+24]
	addss	xmm0, DWORD PTR __real@3f490fdb
	movss	DWORD PTR tv232[rbp], xmm0
	mov	rax, QWORD PTR def$4[rbp]
	movss	xmm0, DWORD PTR [rax+24]
	movss	DWORD PTR tv230[rbp], xmm0
	mov	rax, QWORD PTR def$4[rbp]
	movss	xmm2, DWORD PTR rounding$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T13[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	QWORD PTR tv225[rbp], rax
	movss	xmm2, DWORD PTR __real@3f000000
	movss	xmm1, DWORD PTR __real@3f000000
	lea	rcx, QWORD PTR $T14[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv219[rbp], rax
	mov	rax, QWORD PTR def$4[rbp]
	add	rax, 16
	mov	r9, rax
	lea	r8, QWORD PTR border_r$5[rbp+8]
	lea	rdx, QWORD PTR border_r$5[rbp]
	lea	rcx, QWORD PTR $T15[rbp]
	call	?ImLerp@@YA?AUImVec2@@AEBU1@00@Z	; ImLerp
	mov	QWORD PTR tv217[rbp], rax
	mov	r8, QWORD PTR tv219[rbp]
	mov	rdx, QWORD PTR tv217[rbp]
	lea	rcx, QWORD PTR $T16[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv223[rbp], rax
	mov	r8, QWORD PTR tv225[rbp]
	mov	rdx, QWORD PTR tv223[rbp]
	lea	rcx, QWORD PTR $T17[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv228[rbp], rax
	mov	DWORD PTR [rsp+40], 0
	movss	xmm0, DWORD PTR tv232[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR tv230[rbp]
	movss	xmm2, DWORD PTR rounding$[rbp]
	mov	rdx, QWORD PTR tv228[rbp]
	mov	rcx, QWORD PTR tv234[rbp]
	call	?PathArcTo@ImDrawList@@QEAAXAEBUImVec2@@MMMH@Z ; ImDrawList::PathArcTo
; Line 5536
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv251[rbp], rax
	movss	xmm1, DWORD PTR border_size$[rbp]
	movss	xmm0, DWORD PTR __real@40000000
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR tv249[rbp], xmm0
	movss	xmm1, DWORD PTR __real@3f800000
	mov	ecx, 29
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv247[rbp], eax
	movss	xmm3, DWORD PTR tv249[rbp]
	xor	r8d, r8d
	mov	edx, DWORD PTR tv247[rbp]
	mov	rcx, QWORD PTR tv251[rbp]
	call	?PathStroke@ImDrawList@@QEAAXIHM@Z	; ImDrawList::PathStroke
$LN3@RenderWind:
; Line 5538
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5540]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	$LN4@RenderWind
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 1
	test	eax, eax
	jne	$LN4@RenderWind
; Line 5540
	mov	rcx, QWORD PTR window$[rbp]
	call	?TitleBarHeight@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::TitleBarHeight
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+20]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	subss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR y$6[rbp], xmm0
; Line 5541
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv301[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5540]
	movss	DWORD PTR tv299[rbp], xmm0
	movss	xmm1, DWORD PTR __real@3f800000
	mov	ecx, 5
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv297[rbp], eax
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	addss	xmm0, DWORD PTR [rcx+24]
	subss	xmm0, DWORD PTR border_size$[rbp]
	movss	xmm2, DWORD PTR y$6[rbp]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T18[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv295[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	addss	xmm0, DWORD PTR border_size$[rbp]
	movss	xmm2, DWORD PTR y$6[rbp]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T19[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv293[rbp], rax
	movss	xmm0, DWORD PTR tv299[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR tv297[rbp]
	mov	r8, QWORD PTR tv295[rbp]
	mov	rdx, QWORD PTR tv293[rbp]
	mov	rcx, QWORD PTR tv301[rbp]
	call	?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z ; ImDrawList::AddLine
$LN4@RenderWind:
; Line 5543
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:?RenderWindowOuterBorders@ImGui@@YAXPEAUImGuiWindow@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1112]
	pop	rdi
	pop	rbp
	ret	0
?RenderWindowOuterBorders@ImGui@@YAXPEAUImGuiWindow@@@Z ENDP ; ImGui::RenderWindowOuterBorders
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z
_TEXT	SEGMENT
g$ = 8
flags$ = 36
ret_auto_fit$ = 68
resize_border_count$ = 100
grip_draw_size$ = 132
grip_hover_inner_size$ = 164
grip_hover_outer_size$ = 196
pos_target$ = 232
size_target$ = 264
resize_grip_n$19 = 292
def$20 = 328
corner$21 = 360
hovered$22 = 388
held$23 = 420
resize_rect$24 = 456
resize_grip_id$25 = 500
clamp_min$26 = 536
clamp_max$27 = 568
corner_target$28 = 600
border_n$29 = 628
def$30 = 664
axis$31 = 692
hovered$32 = 724
held$33 = 756
border_rect$34 = 792
border_id$35 = 836
clamp_min$36 = 872
clamp_max$37 = 904
border_target$38 = 936
nav_resize_delta$39 = 968
NAV_RESIZE_SPEED$40 = 996
$T41 = 1796
$T42 = 1828
$T43 = 1860
$T44 = 1892
$T45 = 1924
$T46 = 1956
$T47 = 1988
$T48 = 2020
$T49 = 2052
$T50 = 2084
$T51 = 2116
$T52 = 2148
$T53 = 2180
$T54 = 2212
$T55 = 2244
$T56 = 2276
$T57 = 2308
$T58 = 2340
$T59 = 2372
$T60 = 2404
$T61 = 2436
tv488 = 2452
tv404 = 2452
tv393 = 2452
tv383 = 2452
tv360 = 2452
tv351 = 2452
tv281 = 2452
tv266 = 2452
tv242 = 2452
tv137 = 2452
tv91 = 2452
tv82 = 2452
tv503 = 2456
tv423 = 2456
tv409 = 2456
tv398 = 2456
tv348 = 2456
tv310 = 2456
tv288 = 2456
tv273 = 2456
tv189 = 2456
tv153 = 2456
tv430 = 2464
tv308 = 2464
tv187 = 2464
tv426 = 2472
tv324 = 2472
tv434 = 2480
tv322 = 2480
__$ArrayPad$ = 2488
window$ = 2528
size_auto_fit$ = 2536
border_held$ = 2544
resize_grip_count$ = 2552
resize_grip_col$ = 2560
visibility_rect$ = 2568
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z PROC ; ImGui::UpdateWindowManualResize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5383
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 2552				; 000009f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 434				; 000001b2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+2584]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5384
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 5385
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	mov	DWORD PTR flags$[rbp], eax
; Line 5387
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 2
	test	eax, eax
	jne	SHORT $LN9@UpdateWind
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 64					; 00000040H
	test	eax, eax
	jne	SHORT $LN9@UpdateWind
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+168]
	test	eax, eax
	jg	SHORT $LN9@UpdateWind
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+169]
	test	eax, eax
	jle	SHORT $LN8@UpdateWind
$LN9@UpdateWind:
; Line 5388
	xor	al, al
	jmp	$LN1@UpdateWind
$LN8@UpdateWind:
; Line 5389
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+143]
	test	eax, eax
	jne	SHORT $LN10@UpdateWind
; Line 5390
	xor	al, al
	jmp	$LN1@UpdateWind
$LN10@UpdateWind:
; Line 5392
	mov	BYTE PTR ret_auto_fit$[rbp], 0
; Line 5393
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+204]
	test	eax, eax
	je	SHORT $LN33@UpdateWind
	mov	DWORD PTR tv82[rbp], 4
	jmp	SHORT $LN34@UpdateWind
$LN33@UpdateWind:
	mov	DWORD PTR tv82[rbp], 0
$LN34@UpdateWind:
	mov	eax, DWORD PTR tv82[rbp]
	mov	DWORD PTR resize_border_count$[rbp], eax
; Line 5394
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+72]
	addss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+6528]
	mulss	xmm1, DWORD PTR __real@3e4ccccd
	addss	xmm0, xmm1
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+6528]
	mulss	xmm1, DWORD PTR __real@3faccccd
	movss	DWORD PTR tv91[rbp], xmm1
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR tv91[rbp]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	movss	DWORD PTR grip_draw_size$[rbp], xmm0
; Line 5395
	movss	xmm0, DWORD PTR grip_draw_size$[rbp]
	mulss	xmm0, DWORD PTR __real@3f400000
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	movss	DWORD PTR grip_hover_inner_size$[rbp], xmm0
; Line 5396
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+204]
	test	eax, eax
	je	SHORT $LN35@UpdateWind
	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR tv137[rbp], xmm0
	jmp	SHORT $LN36@UpdateWind
$LN35@UpdateWind:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv137[rbp], xmm0
$LN36@UpdateWind:
	movss	xmm0, DWORD PTR tv137[rbp]
	movss	DWORD PTR grip_hover_outer_size$[rbp], xmm0
; Line 5398
	movss	xmm2, DWORD PTR __real@7f7fffff
	movss	xmm1, DWORD PTR __real@7f7fffff
	lea	rcx, QWORD PTR pos_target$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
; Line 5399
	movss	xmm2, DWORD PTR __real@7f7fffff
	movss	xmm1, DWORD PTR __real@7f7fffff
	lea	rcx, QWORD PTR size_target$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
; Line 5402
	mov	rax, QWORD PTR window$[rbp]
	mov	DWORD PTR [rax+332], 1
; Line 5405
	lea	rcx, OFFSET FLAT:??_C@_07HDHBJEOI@?$CDRESIZE@
	call	?PushID@ImGui@@YAXPEBD@Z		; ImGui::PushID
; Line 5406
	mov	DWORD PTR resize_grip_n$19[rbp], 0
	jmp	SHORT $LN4@UpdateWind
$LN2@UpdateWind:
	mov	eax, DWORD PTR resize_grip_n$19[rbp]
	inc	eax
	mov	DWORD PTR resize_grip_n$19[rbp], eax
$LN4@UpdateWind:
	mov	eax, DWORD PTR resize_grip_count$[rbp]
	cmp	DWORD PTR resize_grip_n$19[rbp], eax
	jge	$LN3@UpdateWind
; Line 5408
	movsxd	rax, DWORD PTR resize_grip_n$19[rbp]
	imul	rax, rax, 24
	lea	rcx, OFFSET FLAT:?resize_grip_def@@3QBUImGuiResizeGripDef@@B
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR def$20[rbp], rax
; Line 5409
	mov	rax, QWORD PTR def$20[rbp]
	mov	QWORD PTR tv153[rbp], rax
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 24
	mov	rdx, QWORD PTR window$[rbp]
	add	rdx, 16
	mov	r8, rcx
	lea	rcx, QWORD PTR $T41[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 16
	mov	rdx, QWORD PTR tv153[rbp]
	mov	r9, rdx
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR corner$21[rbp]
	call	?ImLerp@@YA?AUImVec2@@AEBU1@00@Z	; ImLerp
; Line 5413
	mov	rax, QWORD PTR def$20[rbp]
	add	rax, 8
	movss	xmm2, DWORD PTR grip_hover_inner_size$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T42[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	r8, rax
	lea	rdx, QWORD PTR corner$21[rbp]
	lea	rcx, QWORD PTR $T43[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv189[rbp], rax
	mov	rax, QWORD PTR def$20[rbp]
	add	rax, 8
	movss	xmm2, DWORD PTR grip_hover_outer_size$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T44[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	r8, rax
	lea	rdx, QWORD PTR corner$21[rbp]
	lea	rcx, QWORD PTR $T45[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv187[rbp], rax
	mov	r8, QWORD PTR tv189[rbp]
	mov	rdx, QWORD PTR tv187[rbp]
	lea	rcx, QWORD PTR resize_rect$24[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
; Line 5414
	movss	xmm0, DWORD PTR resize_rect$24[rbp]
	comiss	xmm0, DWORD PTR resize_rect$24[rbp+8]
	jbe	SHORT $LN11@UpdateWind
	lea	rdx, QWORD PTR resize_rect$24[rbp+8]
	lea	rcx, QWORD PTR resize_rect$24[rbp]
	call	??$ImSwap@M@@YAXAEAM0@Z			; ImSwap<float>
$LN11@UpdateWind:
; Line 5415
	movss	xmm0, DWORD PTR resize_rect$24[rbp+4]
	comiss	xmm0, DWORD PTR resize_rect$24[rbp+12]
	jbe	SHORT $LN12@UpdateWind
	lea	rdx, QWORD PTR resize_rect$24[rbp+12]
	lea	rcx, QWORD PTR resize_rect$24[rbp+4]
	call	??$ImSwap@M@@YAXAEAM0@Z			; ImSwap<float>
$LN12@UpdateWind:
; Line 5416
	mov	edx, DWORD PTR resize_grip_n$19[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetID@ImGuiWindow@@QEAAIH@Z		; ImGuiWindow::GetID
	mov	DWORD PTR resize_grip_id$25[rbp], eax
; Line 5417
	mov	DWORD PTR [rsp+32], 264192		; 00040800H
	lea	r9, QWORD PTR held$23[rbp]
	lea	r8, QWORD PTR hovered$22[rbp]
	mov	edx, DWORD PTR resize_grip_id$25[rbp]
	lea	rcx, QWORD PTR resize_rect$24[rbp]
	call	?ButtonBehavior@ImGui@@YA_NAEBUImRect@@IPEA_N1H@Z ; ImGui::ButtonBehavior
; Line 5419
	movzx	eax, BYTE PTR hovered$22[rbp]
	test	eax, eax
	jne	SHORT $LN14@UpdateWind
	movzx	eax, BYTE PTR held$23[rbp]
	test	eax, eax
	je	SHORT $LN13@UpdateWind
$LN14@UpdateWind:
; Line 5420
	mov	eax, DWORD PTR resize_grip_n$19[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN37@UpdateWind
	mov	DWORD PTR tv242[rbp], 5
	jmp	SHORT $LN38@UpdateWind
$LN37@UpdateWind:
	mov	DWORD PTR tv242[rbp], 6
$LN38@UpdateWind:
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR tv242[rbp]
	mov	DWORD PTR [rax+8008], ecx
$LN13@UpdateWind:
; Line 5422
	movzx	eax, BYTE PTR held$23[rbp]
	test	eax, eax
	je	SHORT $LN15@UpdateWind
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1061]
	test	eax, eax
	je	SHORT $LN15@UpdateWind
	cmp	DWORD PTR resize_grip_n$19[rbp], 0
	jne	SHORT $LN15@UpdateWind
; Line 5425
	mov	r8, QWORD PTR size_auto_fit$[rbp]
	mov	rdx, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR $T46[rbp]
	call	?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z ; CalcWindowSizeAfterConstraint
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR size_target$[rbp], rax
; Line 5426
	mov	BYTE PTR ret_auto_fit$[rbp], 1
; Line 5427
	call	?ClearActiveID@ImGui@@YAXXZ		; ImGui::ClearActiveID
; Line 5428
	jmp	$LN16@UpdateWind
$LN15@UpdateWind:
; Line 5429
	movzx	eax, BYTE PTR held$23[rbp]
	test	eax, eax
	je	$LN17@UpdateWind
; Line 5433
	mov	rax, QWORD PTR def$20[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	ucomiss	xmm0, DWORD PTR __real@3f800000
	jp	SHORT $LN39@UpdateWind
	jne	SHORT $LN39@UpdateWind
	mov	rax, QWORD PTR visibility_rect$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR tv266[rbp], xmm0
	jmp	SHORT $LN40@UpdateWind
$LN39@UpdateWind:
	movss	xmm0, DWORD PTR __real@ff7fffff
	movss	DWORD PTR tv266[rbp], xmm0
$LN40@UpdateWind:
	mov	rax, QWORD PTR def$20[rbp]
	movss	xmm0, DWORD PTR [rax]
	ucomiss	xmm0, DWORD PTR __real@3f800000
	jp	SHORT $LN41@UpdateWind
	jne	SHORT $LN41@UpdateWind
	mov	rax, QWORD PTR visibility_rect$[rbp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR tv273[rbp], xmm0
	jmp	SHORT $LN42@UpdateWind
$LN41@UpdateWind:
	movss	xmm0, DWORD PTR __real@ff7fffff
	movss	DWORD PTR tv273[rbp], xmm0
$LN42@UpdateWind:
	movss	xmm2, DWORD PTR tv266[rbp]
	movss	xmm1, DWORD PTR tv273[rbp]
	lea	rcx, QWORD PTR clamp_min$26[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
; Line 5434
	mov	rax, QWORD PTR def$20[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN43@UpdateWind
	jne	SHORT $LN43@UpdateWind
	mov	rax, QWORD PTR visibility_rect$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	movss	DWORD PTR tv281[rbp], xmm0
	jmp	SHORT $LN44@UpdateWind
$LN43@UpdateWind:
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR tv281[rbp], xmm0
$LN44@UpdateWind:
	mov	rax, QWORD PTR def$20[rbp]
	movss	xmm0, DWORD PTR [rax]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN45@UpdateWind
	jne	SHORT $LN45@UpdateWind
	mov	rax, QWORD PTR visibility_rect$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	movss	DWORD PTR tv288[rbp], xmm0
	jmp	SHORT $LN46@UpdateWind
$LN45@UpdateWind:
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR tv288[rbp], xmm0
$LN46@UpdateWind:
	movss	xmm2, DWORD PTR tv281[rbp]
	movss	xmm1, DWORD PTR tv288[rbp]
	lea	rcx, QWORD PTR clamp_max$27[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
; Line 5435
	movss	xmm0, DWORD PTR grip_hover_inner_size$[rbp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	rax, QWORD PTR def$20[rbp]
	add	rax, 8
	movaps	xmm2, xmm0
	mov	rdx, rax
	lea	rcx, QWORD PTR $T47[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	QWORD PTR tv310[rbp], rax
	mov	rax, QWORD PTR def$20[rbp]
	add	rax, 8
	movss	xmm2, DWORD PTR grip_hover_outer_size$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T48[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	QWORD PTR tv308[rbp], rax
	mov	rax, QWORD PTR def$20[rbp]
	mov	r9, rax
	mov	r8, QWORD PTR tv310[rbp]
	mov	rdx, QWORD PTR tv308[rbp]
	lea	rcx, QWORD PTR $T49[rbp]
	call	?ImLerp@@YA?AUImVec2@@AEBU1@00@Z	; ImLerp
	mov	QWORD PTR tv324[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7296				; 00001c80H
	mov	rcx, QWORD PTR g$[rbp]
	add	rcx, 296				; 00000128H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T50[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv322[rbp], rax
	mov	r8, QWORD PTR tv324[rbp]
	mov	rdx, QWORD PTR tv322[rbp]
	lea	rcx, QWORD PTR corner_target$28[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
; Line 5436
	mov	r9, QWORD PTR clamp_max$27[rbp]
	lea	r8, QWORD PTR clamp_min$26[rbp]
	lea	rdx, QWORD PTR corner_target$28[rbp]
	lea	rcx, QWORD PTR $T51[rbp]
	call	?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z	; ImClamp
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR corner_target$28[rbp], rax
; Line 5437
	mov	rax, QWORD PTR def$20[rbp]
	lea	rcx, QWORD PTR size_target$[rbp]
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR pos_target$[rbp]
	mov	r8, rax
	lea	rdx, QWORD PTR corner_target$28[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z ; CalcResizePosSizeFromAnyCorner
$LN17@UpdateWind:
$LN16@UpdateWind:
; Line 5441
	cmp	DWORD PTR resize_grip_n$19[rbp], 0
	je	SHORT $LN19@UpdateWind
	movzx	eax, BYTE PTR held$23[rbp]
	test	eax, eax
	jne	SHORT $LN19@UpdateWind
	movzx	eax, BYTE PTR hovered$22[rbp]
	test	eax, eax
	je	SHORT $LN18@UpdateWind
$LN19@UpdateWind:
; Line 5442
	movzx	eax, BYTE PTR held$23[rbp]
	test	eax, eax
	je	SHORT $LN49@UpdateWind
	mov	DWORD PTR tv351[rbp], 32		; 00000020H
	jmp	SHORT $LN50@UpdateWind
$LN49@UpdateWind:
	movzx	eax, BYTE PTR hovered$22[rbp]
	test	eax, eax
	je	SHORT $LN47@UpdateWind
	mov	DWORD PTR tv348[rbp], 31
	jmp	SHORT $LN48@UpdateWind
$LN47@UpdateWind:
	mov	DWORD PTR tv348[rbp], 30
$LN48@UpdateWind:
	mov	eax, DWORD PTR tv348[rbp]
	mov	DWORD PTR tv351[rbp], eax
$LN50@UpdateWind:
	movss	xmm1, DWORD PTR __real@3f800000
	mov	ecx, DWORD PTR tv351[rbp]
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	movsxd	rcx, DWORD PTR resize_grip_n$19[rbp]
	mov	rdx, QWORD PTR resize_grip_col$[rbp]
	mov	DWORD PTR [rdx+rcx*4], eax
$LN18@UpdateWind:
; Line 5443
	jmp	$LN2@UpdateWind
$LN3@UpdateWind:
; Line 5444
	mov	DWORD PTR border_n$29[rbp], 0
	jmp	SHORT $LN7@UpdateWind
$LN5@UpdateWind:
	mov	eax, DWORD PTR border_n$29[rbp]
	inc	eax
	mov	DWORD PTR border_n$29[rbp], eax
$LN7@UpdateWind:
	mov	eax, DWORD PTR resize_border_count$[rbp]
	cmp	DWORD PTR border_n$29[rbp], eax
	jge	$LN6@UpdateWind
; Line 5446
	movsxd	rax, DWORD PTR border_n$29[rbp]
	imul	rax, rax, 28
	lea	rcx, OFFSET FLAT:?resize_border_def@@3QBUImGuiResizeBorderDef@@B
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR def$30[rbp], rax
; Line 5447
	cmp	DWORD PTR border_n$29[rbp], 0
	je	SHORT $LN51@UpdateWind
	cmp	DWORD PTR border_n$29[rbp], 1
	je	SHORT $LN51@UpdateWind
	mov	DWORD PTR tv360[rbp], 1
	jmp	SHORT $LN52@UpdateWind
$LN51@UpdateWind:
	mov	DWORD PTR tv360[rbp], 0
$LN52@UpdateWind:
	mov	eax, DWORD PTR tv360[rbp]
	mov	DWORD PTR axis$31[rbp], eax
; Line 5450
	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR grip_hover_inner_size$[rbp]
	mov	r8d, DWORD PTR border_n$29[rbp]
	mov	rdx, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR border_rect$34[rbp]
	call	?GetResizeBorderRect@@YA?AUImRect@@PEAUImGuiWindow@@HMM@Z ; GetResizeBorderRect
; Line 5451
	mov	eax, DWORD PTR border_n$29[rbp]
	add	eax, 4
	mov	edx, eax
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetID@ImGuiWindow@@QEAAIH@Z		; ImGuiWindow::GetID
	mov	DWORD PTR border_id$35[rbp], eax
; Line 5452
	mov	DWORD PTR [rsp+32], 2048		; 00000800H
	lea	r9, QWORD PTR held$33[rbp]
	lea	r8, QWORD PTR hovered$32[rbp]
	mov	edx, DWORD PTR border_id$35[rbp]
	lea	rcx, QWORD PTR border_rect$34[rbp]
	call	?ButtonBehavior@ImGui@@YA_NAEBUImRect@@IPEA_N1H@Z ; ImGui::ButtonBehavior
; Line 5454
	movzx	eax, BYTE PTR hovered$32[rbp]
	test	eax, eax
	je	SHORT $LN22@UpdateWind
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7252]
	comiss	xmm0, DWORD PTR __real@3d23d70a
	ja	SHORT $LN21@UpdateWind
$LN22@UpdateWind:
	movzx	eax, BYTE PTR held$33[rbp]
	test	eax, eax
	je	SHORT $LN20@UpdateWind
$LN21@UpdateWind:
; Line 5456
	cmp	DWORD PTR axis$31[rbp], 0
	jne	SHORT $LN53@UpdateWind
	mov	DWORD PTR tv383[rbp], 4
	jmp	SHORT $LN54@UpdateWind
$LN53@UpdateWind:
	mov	DWORD PTR tv383[rbp], 3
$LN54@UpdateWind:
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR tv383[rbp]
	mov	DWORD PTR [rax+8008], ecx
; Line 5457
	movzx	eax, BYTE PTR held$33[rbp]
	test	eax, eax
	je	SHORT $LN23@UpdateWind
; Line 5458
	mov	rax, QWORD PTR border_held$[rbp]
	mov	ecx, DWORD PTR border_n$29[rbp]
	mov	DWORD PTR [rax], ecx
$LN23@UpdateWind:
$LN20@UpdateWind:
; Line 5460
	movzx	eax, BYTE PTR held$33[rbp]
	test	eax, eax
	je	$LN24@UpdateWind
; Line 5462
	cmp	DWORD PTR border_n$29[rbp], 3
	jne	SHORT $LN55@UpdateWind
	mov	rax, QWORD PTR visibility_rect$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR tv393[rbp], xmm0
	jmp	SHORT $LN56@UpdateWind
$LN55@UpdateWind:
	movss	xmm0, DWORD PTR __real@ff7fffff
	movss	DWORD PTR tv393[rbp], xmm0
$LN56@UpdateWind:
	cmp	DWORD PTR border_n$29[rbp], 1
	jne	SHORT $LN57@UpdateWind
	mov	rax, QWORD PTR visibility_rect$[rbp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR tv398[rbp], xmm0
	jmp	SHORT $LN58@UpdateWind
$LN57@UpdateWind:
	movss	xmm0, DWORD PTR __real@ff7fffff
	movss	DWORD PTR tv398[rbp], xmm0
$LN58@UpdateWind:
	movss	xmm2, DWORD PTR tv393[rbp]
	movss	xmm1, DWORD PTR tv398[rbp]
	lea	rcx, QWORD PTR clamp_min$36[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
; Line 5463
	cmp	DWORD PTR border_n$29[rbp], 2
	jne	SHORT $LN59@UpdateWind
	mov	rax, QWORD PTR visibility_rect$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	movss	DWORD PTR tv404[rbp], xmm0
	jmp	SHORT $LN60@UpdateWind
$LN59@UpdateWind:
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR tv404[rbp], xmm0
$LN60@UpdateWind:
	cmp	DWORD PTR border_n$29[rbp], 0
	jne	SHORT $LN61@UpdateWind
	mov	rax, QWORD PTR visibility_rect$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	movss	DWORD PTR tv409[rbp], xmm0
	jmp	SHORT $LN62@UpdateWind
$LN61@UpdateWind:
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR tv409[rbp], xmm0
$LN62@UpdateWind:
	movss	xmm2, DWORD PTR tv404[rbp]
	movss	xmm1, DWORD PTR tv409[rbp]
	lea	rcx, QWORD PTR clamp_max$37[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
; Line 5464
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR border_target$38[rbp], rax
; Line 5465
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 296				; 00000128H
	mov	QWORD PTR tv423[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7296				; 00001c80H
	mov	QWORD PTR tv430[rbp], rax
	movsxd	rax, DWORD PTR axis$31[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR tv430[rbp]
	call	??AImVec2@@QEAAAEAM_K@Z			; ImVec2::operator[]
	mov	QWORD PTR tv426[rbp], rax
	movsxd	rcx, DWORD PTR axis$31[rbp]
	mov	rdx, rcx
	mov	rcx, QWORD PTR tv423[rbp]
	call	??AImVec2@@QEAAAEAM_K@Z			; ImVec2::operator[]
	movss	xmm0, DWORD PTR [rax]
	mov	rax, QWORD PTR tv426[rbp]
	subss	xmm0, DWORD PTR [rax]
	addss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR tv434[rbp], xmm0
	movsxd	rax, DWORD PTR axis$31[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR border_target$38[rbp]
	call	??AImVec2@@QEAAAEAM_K@Z			; ImVec2::operator[]
	movss	xmm0, DWORD PTR tv434[rbp]
	movss	DWORD PTR [rax], xmm0
; Line 5466
	mov	r9, QWORD PTR clamp_max$37[rbp]
	lea	r8, QWORD PTR clamp_min$36[rbp]
	lea	rdx, QWORD PTR border_target$38[rbp]
	lea	rcx, QWORD PTR $T52[rbp]
	call	?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z	; ImClamp
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR border_target$38[rbp], rax
; Line 5467
	mov	rax, QWORD PTR def$30[rbp]
	add	rax, 16
	mov	rcx, QWORD PTR def$30[rbp]
	add	rcx, 8
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T53[rbp]
	call	?ImMin@@YA?AUImVec2@@AEBU1@0@Z		; ImMin
	lea	rcx, QWORD PTR size_target$[rbp]
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR pos_target$[rbp]
	mov	r8, rax
	lea	rdx, QWORD PTR border_target$38[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?CalcResizePosSizeFromAnyCorner@@YAXPEAUImGuiWindow@@AEBUImVec2@@1PEAU2@2@Z ; CalcResizePosSizeFromAnyCorner
$LN24@UpdateWind:
; Line 5469
	jmp	$LN5@UpdateWind
$LN6@UpdateWind:
; Line 5470
	call	?PopID@ImGui@@YAXXZ			; ImGui::PopID
; Line 5473
	mov	rax, QWORD PTR window$[rbp]
	mov	DWORD PTR [rax+332], 0
; Line 5476
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	je	$LN25@UpdateWind
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7928]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+904], rcx
	jne	$LN25@UpdateWind
; Line 5478
	lea	rcx, QWORD PTR nav_resize_delta$39[rbp]
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
; Line 5479
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7676], 2
	jne	SHORT $LN26@UpdateWind
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+321]
	test	eax, eax
	je	SHORT $LN26@UpdateWind
; Line 5480
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T54[rbp]
	call	?GetNavInputAmount2d@ImGui@@YA?AUImVec2@@HW4ImGuiInputReadMode@@MM@Z ; ImGui::GetNavInputAmount2d
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR nav_resize_delta$39[rbp], rax
$LN26@UpdateWind:
; Line 5481
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7676], 3
	jne	SHORT $LN27@UpdateWind
; Line 5482
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xor	r8d, r8d
	mov	edx, 2
	lea	rcx, QWORD PTR $T55[rbp]
	call	?GetNavInputAmount2d@ImGui@@YA?AUImVec2@@HW4ImGuiInputReadMode@@MM@Z ; ImGui::GetNavInputAmount2d
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR nav_resize_delta$39[rbp], rax
$LN27@UpdateWind:
; Line 5483
	movss	xmm0, DWORD PTR nav_resize_delta$39[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN29@UpdateWind
	jne	SHORT $LN29@UpdateWind
	movss	xmm0, DWORD PTR nav_resize_delta$39[rbp+4]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN65@UpdateWind
	je	$LN28@UpdateWind
$LN65@UpdateWind:
$LN29@UpdateWind:
; Line 5485
	movss	xmm0, DWORD PTR __real@44160000
	movss	DWORD PTR NAV_RESIZE_SPEED$40[rbp], xmm0
; Line 5486
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR __real@44160000
	mulss	xmm0, DWORD PTR [rax+24]
	movss	DWORD PTR tv488[rbp], xmm0
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+196]
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+192]
	call	??$ImMin@M@@YAMMM@Z			; ImMin<float>
	movss	xmm1, DWORD PTR tv488[rbp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	call	?ImFloor@@YAMM@Z			; ImFloor
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR nav_resize_delta$39[rbp]
	call	??X@YAAEAUImVec2@@AEAU0@M@Z		; operator*=
; Line 5487
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 24
	mov	QWORD PTR tv503[rbp], rax
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 16
	mov	rdx, QWORD PTR visibility_rect$[rbp]
	mov	r8, rcx
	lea	rcx, QWORD PTR $T56[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rcx, QWORD PTR tv503[rbp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T57[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	r8, rax
	lea	rdx, QWORD PTR nav_resize_delta$39[rbp]
	lea	rcx, QWORD PTR $T58[rbp]
	call	?ImMax@@YA?AUImVec2@@AEBU1@0@Z		; ImMax
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR nav_resize_delta$39[rbp], rax
; Line 5488
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7960], 0
; Line 5489
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7711], 1
; Line 5490
	movss	xmm1, DWORD PTR __real@3f800000
	mov	ecx, 32					; 00000020H
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	ecx, 4
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR resize_grip_col$[rbp]
	mov	DWORD PTR [rdx+rcx], eax
; Line 5492
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 32					; 00000020H
	lea	r8, QWORD PTR nav_resize_delta$39[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T59[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	r8, rax
	mov	rdx, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR $T60[rbp]
	call	?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z ; CalcWindowSizeAfterConstraint
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR size_target$[rbp], rax
$LN28@UpdateWind:
$LN25@UpdateWind:
; Line 5497
	movss	xmm0, DWORD PTR size_target$[rbp]
	ucomiss	xmm0, DWORD PTR __real@7f7fffff
	jp	SHORT $LN64@UpdateWind
	je	SHORT $LN30@UpdateWind
$LN64@UpdateWind:
; Line 5499
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR size_target$[rbp]
	mov	QWORD PTR [rax+32], rcx
; Line 5500
	mov	rcx, QWORD PTR window$[rbp]
	call	?MarkIniSettingsDirty@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::MarkIniSettingsDirty
$LN30@UpdateWind:
; Line 5502
	movss	xmm0, DWORD PTR pos_target$[rbp]
	ucomiss	xmm0, DWORD PTR __real@7f7fffff
	jp	SHORT $LN63@UpdateWind
	je	SHORT $LN31@UpdateWind
$LN63@UpdateWind:
; Line 5504
	lea	rdx, QWORD PTR pos_target$[rbp]
	lea	rcx, QWORD PTR $T61[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+16], rax
; Line 5505
	mov	rcx, QWORD PTR window$[rbp]
	call	?MarkIniSettingsDirty@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::MarkIniSettingsDirty
$LN31@UpdateWind:
; Line 5508
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+32]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+24], rax
; Line 5509
	movzx	eax, BYTE PTR ret_auto_fit$[rbp]
$LN1@UpdateWind:
; Line 5510
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+2504]
	pop	rdi
	pop	rbp
	ret	0
?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z ENDP ; ImGui::UpdateWindowManualResize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?UpdateDebugToolItemPicker@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
hovered_id$1 = 36
tv91 = 244
?UpdateDebugToolItemPicker@ImGui@@YAXXZ PROC		; ImGui::UpdateDebugToolItemPicker, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4110
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4111
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4112
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+12552], 0
; Line 4113
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12548]
	test	eax, eax
	je	$LN2@UpdateDebu
; Line 4115
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7244]
	mov	DWORD PTR hovered_id$1[rbp], eax
; Line 4116
	mov	ecx, 7
	call	?SetMouseCursor@ImGui@@YAXH@Z		; ImGui::SetMouseCursor
; Line 4117
	mov	dl, 1
	mov	ecx, 14
	call	?IsKeyPressedMap@ImGui@@YA_NH_N@Z	; ImGui::IsKeyPressedMap
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@UpdateDebu
; Line 4118
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+12548], 0
$LN3@UpdateDebu:
; Line 4119
	xor	edx, edx
	xor	ecx, ecx
	call	?IsMouseClicked@ImGui@@YA_NH_N@Z	; ImGui::IsMouseClicked
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@UpdateDebu
	cmp	DWORD PTR hovered_id$1[rbp], 0
	je	SHORT $LN4@UpdateDebu
; Line 4121
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR hovered_id$1[rbp]
	mov	DWORD PTR [rax+12552], ecx
; Line 4122
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+12548], 0
$LN4@UpdateDebu:
; Line 4124
	movss	xmm0, DWORD PTR __real@3f19999a
	call	?SetNextWindowBgAlpha@ImGui@@YAXM@Z	; ImGui::SetNextWindowBgAlpha
; Line 4125
	call	?BeginTooltip@ImGui@@YAXXZ		; ImGui::BeginTooltip
; Line 4126
	mov	edx, DWORD PTR hovered_id$1[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BC@JHPKFIGH@HoveredId?3?50x?$CF08X@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 4127
	lea	rcx, OFFSET FLAT:??_C@_0BM@IIPBLKLJ@Press?5ESC?5to?5abort?5picking?4@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 4128
	cmp	DWORD PTR hovered_id$1[rbp], 0
	je	SHORT $LN6@UpdateDebu
	mov	DWORD PTR tv91[rbp], 0
	jmp	SHORT $LN7@UpdateDebu
$LN6@UpdateDebu:
	mov	DWORD PTR tv91[rbp], 1
$LN7@UpdateDebu:
	mov	ecx, DWORD PTR tv91[rbp]
	call	?GetStyleColorVec4@ImGui@@YAAEBUImVec4@@H@Z ; ImGui::GetStyleColorVec4
	lea	rdx, OFFSET FLAT:??_C@_0BM@OPIPEIJO@Click?5to?5break?5in?5debugger?$CB@
	mov	rcx, rax
	call	?TextColored@ImGui@@YAXAEBUImVec4@@PEBDZZ ; ImGui::TextColored
; Line 4129
	call	?EndTooltip@ImGui@@YAXXZ		; ImGui::EndTooltip
$LN2@UpdateDebu:
; Line 4131
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?UpdateDebugToolItemPicker@ImGui@@YAXXZ ENDP		; ImGui::UpdateDebugToolItemPicker
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?UpdateTabFocus@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
window$1 = 40
tv143 = 244
tv136 = 244
tv84 = 244
?UpdateTabFocus@ImGui@@YAXXZ PROC			; ImGui::UpdateTabFocus, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3795
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3796
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3799
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN9@UpdateTabF
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	movzx	eax, BYTE PTR [rax+142]
	test	eax, eax
	je	SHORT $LN9@UpdateTabF
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 262144				; 00040000H
	test	eax, eax
	jne	SHORT $LN9@UpdateTabF
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+320]
	test	eax, eax
	jne	SHORT $LN9@UpdateTabF
	mov	dl, 1
	xor	ecx, ecx
	call	?IsKeyPressedMap@ImGui@@YA_NH_N@Z	; ImGui::IsKeyPressedMap
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@UpdateTabF
	mov	DWORD PTR tv84[rbp], 1
	jmp	SHORT $LN10@UpdateTabF
$LN9@UpdateTabF:
	mov	DWORD PTR tv84[rbp], 0
$LN10@UpdateTabF:
	mov	rax, QWORD PTR g$[rbp]
	movzx	ecx, BYTE PTR tv84[rbp]
	mov	BYTE PTR [rax+8000], cl
; Line 3800
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	jne	$LN2@UpdateTabF
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8000]
	test	eax, eax
	je	$LN2@UpdateTabF
; Line 3806
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+7624]
	mov	QWORD PTR [rax+7976], rcx
; Line 3807
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7992], 2147483647	; 7fffffffH
; Line 3808
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7632], 0
	je	SHORT $LN3@UpdateTabF
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7704], 2147483647	; 7fffffffH
	je	SHORT $LN3@UpdateTabF
; Line 3809
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+321]
	test	eax, eax
	je	SHORT $LN11@UpdateTabF
	mov	DWORD PTR tv136[rbp], -1
	jmp	SHORT $LN12@UpdateTabF
$LN11@UpdateTabF:
	mov	DWORD PTR tv136[rbp], 0
$LN12@UpdateTabF:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7704]
	add	eax, DWORD PTR tv136[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7996], eax
	jmp	SHORT $LN4@UpdateTabF
$LN3@UpdateTabF:
; Line 3811
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+321]
	test	eax, eax
	je	SHORT $LN13@UpdateTabF
	mov	DWORD PTR tv143[rbp], -1
	jmp	SHORT $LN14@UpdateTabF
$LN13@UpdateTabF:
	mov	DWORD PTR tv143[rbp], 0
$LN14@UpdateTabF:
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR tv143[rbp]
	mov	DWORD PTR [rax+7996], ecx
$LN4@UpdateTabF:
$LN2@UpdateTabF:
; Line 3815
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7968], 0
; Line 3816
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7988], 2147483647	; 7fffffffH
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7984], 2147483647	; 7fffffffH
; Line 3817
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7976], 0
	je	$LN5@UpdateTabF
; Line 3819
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7976]
	mov	QWORD PTR window$1[rbp], rax
; Line 3820
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$1[rbp]
	mov	QWORD PTR [rax+7968], rcx
; Line 3821
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7992], 2147483647	; 7fffffffH
	je	SHORT $LN6@UpdateTabF
	mov	rax, QWORD PTR window$1[rbp]
	cmp	DWORD PTR [rax+444], -1
	je	SHORT $LN6@UpdateTabF
; Line 3822
	mov	rax, QWORD PTR window$1[rbp]
	mov	eax, DWORD PTR [rax+444]
	inc	eax
	mov	edx, eax
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rax+7992]
	call	?ImModPositive@@YAHHH@Z			; ImModPositive
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7984], eax
$LN6@UpdateTabF:
; Line 3823
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7996], 2147483647	; 7fffffffH
	je	SHORT $LN7@UpdateTabF
	mov	rax, QWORD PTR window$1[rbp]
	cmp	DWORD PTR [rax+448], -1
	je	SHORT $LN7@UpdateTabF
; Line 3824
	mov	rax, QWORD PTR window$1[rbp]
	mov	eax, DWORD PTR [rax+448]
	inc	eax
	mov	edx, eax
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rax+7996]
	call	?ImModPositive@@YAHHH@Z			; ImModPositive
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7988], eax
$LN7@UpdateTabF:
; Line 3825
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7976], 0
; Line 3826
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7996], 2147483647	; 7fffffffH
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7992], 2147483647	; 7fffffffH
$LN5@UpdateTabF:
; Line 3829
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7704], 2147483647	; 7fffffffH
; Line 3830
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?UpdateTabFocus@ImGui@@YAXXZ ENDP			; ImGui::UpdateTabFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?UpdateMouseWheel@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
new_font_scale$4 = 68
scale$5 = 100
offset$6 = 136
swap_axis$ = 164
wheel_y$ = 196
wheel_x$ = 228
max_step$7 = 260
scroll_step$8 = 292
max_step$9 = 324
scroll_step$10 = 356
$T11 = 772
$T12 = 804
$T13 = 836
$T14 = 868
$T15 = 900
$T16 = 932
$T17 = 964
$T18 = 996
$T19 = 1028
tv256 = 1044
tv249 = 1044
tv244 = 1044
tv202 = 1048
tv147 = 1048
tv200 = 1056
tv179 = 1064
__$ArrayPad$ = 1072
?UpdateMouseWheel@ImGui@@YAXXZ PROC			; ImGui::UpdateMouseWheel, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3710
	push	rbp
	push	rdi
	sub	rsp, 1128				; 00000468H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 178				; 000000b2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3711
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3714
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7216], 0
	je	$LN6@UpdateMous
; Line 3716
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7232]
	subss	xmm0, DWORD PTR [rcx+24]
	mov	rax, QWORD PTR g$[rbp]
	movss	DWORD PTR [rax+7232], xmm0
; Line 3717
	xor	ecx, ecx
	call	?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z ; ImGui::IsMousePosValid
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@UpdateMous
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7224				; 00001c38H
	mov	rcx, QWORD PTR g$[rbp]
	add	rcx, 296				; 00000128H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T11[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rcx, rax
	call	?ImLengthSqr@@YAMAEBUImVec2@@@Z		; ImLengthSqr
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+56]
	mulss	xmm1, DWORD PTR [rcx+56]
	comiss	xmm0, xmm1
	jbe	SHORT $LN7@UpdateMous
; Line 3718
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+7232], xmm0
$LN7@UpdateMous:
; Line 3719
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rax+7232]
	jb	SHORT $LN8@UpdateMous
; Line 3721
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7216], 0
; Line 3722
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+7232], xmm0
$LN8@UpdateMous:
$LN6@UpdateMous:
; Line 3726
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+312]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN9@UpdateMous
	jne	SHORT $LN9@UpdateMous
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+316]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN9@UpdateMous
	jne	SHORT $LN9@UpdateMous
; Line 3727
	jmp	$LN1@UpdateMous
$LN9@UpdateMous:
; Line 3729
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	je	SHORT $LN12@UpdateMous
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7278]
	test	eax, eax
	jne	SHORT $LN11@UpdateMous
$LN12@UpdateMous:
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7244], 0
	je	SHORT $LN10@UpdateMous
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7250]
	test	eax, eax
	je	SHORT $LN10@UpdateMous
$LN11@UpdateMous:
; Line 3730
	jmp	$LN1@UpdateMous
$LN10@UpdateMous:
; Line 3732
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7216], 0
	je	SHORT $LN25@UpdateMous
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7216]
	mov	QWORD PTR tv147[rbp], rax
	jmp	SHORT $LN26@UpdateMous
$LN25@UpdateMous:
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7192]
	mov	QWORD PTR tv147[rbp], rax
$LN26@UpdateMous:
	mov	rax, QWORD PTR tv147[rbp]
	mov	QWORD PTR window$[rbp], rax
; Line 3733
	cmp	QWORD PTR window$[rbp], 0
	je	SHORT $LN14@UpdateMous
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+145]
	test	eax, eax
	je	SHORT $LN13@UpdateMous
$LN14@UpdateMous:
; Line 3734
	jmp	$LN1@UpdateMous
$LN13@UpdateMous:
; Line 3738
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+312]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN37@UpdateMous
	je	$LN15@UpdateMous
$LN37@UpdateMous:
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+320]
	test	eax, eax
	je	$LN15@UpdateMous
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+180]
	test	eax, eax
	je	$LN15@UpdateMous
; Line 3740
	mov	rcx, QWORD PTR window$[rbp]
	call	?StartLockWheelingWindow@@YAXPEAUImGuiWindow@@@Z ; StartLockWheelingWindow
; Line 3741
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+312]
	mulss	xmm0, DWORD PTR __real@3dcccccd
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+680]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm2, DWORD PTR __real@40200000
	movss	xmm1, DWORD PTR __real@3f000000
	call	??$ImClamp@M@@YAMMMM@Z			; ImClamp<float>
	movss	DWORD PTR new_font_scale$4[rbp], xmm0
; Line 3742
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR new_font_scale$4[rbp]
	divss	xmm0, DWORD PTR [rax+680]
	movss	DWORD PTR scale$5[rbp], xmm0
; Line 3743
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR new_font_scale$4[rbp]
	movss	DWORD PTR [rax+680], xmm0
; Line 3744
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+904]
	cmp	QWORD PTR window$[rbp], rax
	jne	$LN16@UpdateMous
; Line 3746
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	mov	rcx, QWORD PTR g$[rbp]
	add	rcx, 296				; 00000128H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T12[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv202[rbp], rax
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR scale$5[rbp]
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 24
	movaps	xmm2, xmm0
	mov	rdx, rax
	lea	rcx, QWORD PTR $T13[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	QWORD PTR tv200[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 24
	mov	QWORD PTR tv179[rbp], rax
	mov	r8, QWORD PTR tv202[rbp]
	mov	rdx, QWORD PTR tv200[rbp]
	lea	rcx, QWORD PTR $T14[rbp]
	call	??D@YA?AUImVec2@@AEBU0@0@Z		; operator*
	mov	rcx, QWORD PTR tv179[rbp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR offset$6[rbp]
	call	??K@YA?AUImVec2@@AEBU0@0@Z		; operator/
; Line 3747
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	lea	r8, QWORD PTR offset$6[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T15[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	xor	r8d, r8d
	mov	rdx, rax
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z ; ImGui::SetWindowPos
; Line 3748
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 24
	movss	xmm2, DWORD PTR scale$5[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T16[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	rdx, rax
	lea	rcx, QWORD PTR $T17[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+24], rax
; Line 3749
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 32					; 00000020H
	movss	xmm2, DWORD PTR scale$5[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T18[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	rdx, rax
	lea	rcx, QWORD PTR $T19[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+32], rax
$LN16@UpdateMous:
; Line 3751
	jmp	$LN1@UpdateMous
$LN15@UpdateMous:
; Line 3756
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+320]
	test	eax, eax
	je	SHORT $LN17@UpdateMous
; Line 3757
	jmp	$LN1@UpdateMous
$LN17@UpdateMous:
; Line 3761
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+321]
	test	eax, eax
	je	SHORT $LN27@UpdateMous
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+201]
	test	eax, eax
	jne	SHORT $LN27@UpdateMous
	mov	BYTE PTR tv244[rbp], 1
	jmp	SHORT $LN28@UpdateMous
$LN27@UpdateMous:
	mov	BYTE PTR tv244[rbp], 0
$LN28@UpdateMous:
	movzx	eax, BYTE PTR tv244[rbp]
	mov	BYTE PTR swap_axis$[rbp], al
; Line 3762
	movzx	eax, BYTE PTR swap_axis$[rbp]
	test	eax, eax
	je	SHORT $LN29@UpdateMous
	xorps	xmm0, xmm0
	movss	DWORD PTR tv249[rbp], xmm0
	jmp	SHORT $LN30@UpdateMous
$LN29@UpdateMous:
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+312]
	movss	DWORD PTR tv249[rbp], xmm0
$LN30@UpdateMous:
	movss	xmm0, DWORD PTR tv249[rbp]
	movss	DWORD PTR wheel_y$[rbp], xmm0
; Line 3763
	movzx	eax, BYTE PTR swap_axis$[rbp]
	test	eax, eax
	je	SHORT $LN31@UpdateMous
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+312]
	movss	DWORD PTR tv256[rbp], xmm0
	jmp	SHORT $LN32@UpdateMous
$LN31@UpdateMous:
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+316]
	movss	DWORD PTR tv256[rbp], xmm0
$LN32@UpdateMous:
	movss	xmm0, DWORD PTR tv256[rbp]
	movss	DWORD PTR wheel_x$[rbp], xmm0
; Line 3766
	movss	xmm0, DWORD PTR wheel_y$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN36@UpdateMous
	je	$LN18@UpdateMous
$LN36@UpdateMous:
; Line 3768
	mov	rcx, QWORD PTR window$[rbp]
	call	?StartLockWheelingWindow@@YAXPEAUImGuiWindow@@@Z ; StartLockWheelingWindow
$LN2@UpdateMous:
; Line 3769
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN3@UpdateMous
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+104]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN35@UpdateMous
	je	SHORT $LN19@UpdateMous
$LN35@UpdateMous:
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16
	test	eax, eax
	je	SHORT $LN3@UpdateMous
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 512				; 00000200H
	test	eax, eax
	jne	SHORT $LN3@UpdateMous
$LN19@UpdateMous:
; Line 3770
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+896]
	mov	QWORD PTR window$[rbp], rax
	jmp	SHORT $LN2@UpdateMous
$LN3@UpdateMous:
; Line 3771
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16
	test	eax, eax
	jne	$LN20@UpdateMous
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 512				; 00000200H
	test	eax, eax
	jne	$LN20@UpdateMous
; Line 3773
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 528				; 00000210H
	mov	rcx, rax
	call	?GetHeight@ImRect@@QEBAMXZ		; ImRect::GetHeight
	mulss	xmm0, DWORD PTR __real@3f2b851f
	movss	DWORD PTR max_step$7[rbp], xmm0
; Line 3774
	mov	rcx, QWORD PTR window$[rbp]
	call	?CalcFontSize@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::CalcFontSize
	movss	xmm1, DWORD PTR __real@40a00000
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR max_step$7[rbp]
	call	??$ImMin@M@@YAMMM@Z			; ImMin<float>
	call	?ImFloor@@YAMM@Z			; ImFloor
	movss	DWORD PTR scroll_step$8[rbp], xmm0
; Line 3775
	movss	xmm0, DWORD PTR wheel_y$[rbp]
	mulss	xmm0, DWORD PTR scroll_step$8[rbp]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+96]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetScrollY@ImGui@@YAXPEAUImGuiWindow@@M@Z ; ImGui::SetScrollY
$LN20@UpdateMous:
$LN18@UpdateMous:
; Line 3780
	movss	xmm0, DWORD PTR wheel_x$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN34@UpdateMous
	je	$LN21@UpdateMous
$LN34@UpdateMous:
; Line 3782
	mov	rcx, QWORD PTR window$[rbp]
	call	?StartLockWheelingWindow@@YAXPEAUImGuiWindow@@@Z ; StartLockWheelingWindow
$LN4@UpdateMous:
; Line 3783
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN5@UpdateMous
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+100]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN33@UpdateMous
	je	SHORT $LN22@UpdateMous
$LN33@UpdateMous:
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16
	test	eax, eax
	je	SHORT $LN5@UpdateMous
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 512				; 00000200H
	test	eax, eax
	jne	SHORT $LN5@UpdateMous
$LN22@UpdateMous:
; Line 3784
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+896]
	mov	QWORD PTR window$[rbp], rax
	jmp	SHORT $LN4@UpdateMous
$LN5@UpdateMous:
; Line 3785
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16
	test	eax, eax
	jne	$LN23@UpdateMous
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 512				; 00000200H
	test	eax, eax
	jne	$LN23@UpdateMous
; Line 3787
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 528				; 00000210H
	mov	rcx, rax
	call	?GetWidth@ImRect@@QEBAMXZ		; ImRect::GetWidth
	mulss	xmm0, DWORD PTR __real@3f2b851f
	movss	DWORD PTR max_step$9[rbp], xmm0
; Line 3788
	mov	rcx, QWORD PTR window$[rbp]
	call	?CalcFontSize@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::CalcFontSize
	movss	xmm1, DWORD PTR __real@40000000
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR max_step$9[rbp]
	call	??$ImMin@M@@YAMMM@Z			; ImMin<float>
	call	?ImFloor@@YAMM@Z			; ImFloor
	movss	DWORD PTR scroll_step$10[rbp], xmm0
; Line 3789
	movss	xmm0, DWORD PTR wheel_x$[rbp]
	mulss	xmm0, DWORD PTR scroll_step$10[rbp]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+92]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetScrollX@ImGui@@YAXPEAUImGuiWindow@@M@Z ; ImGui::SetScrollX
$LN23@UpdateMous:
$LN21@UpdateMous:
$LN1@UpdateMous:
; Line 3792
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?UpdateMouseWheel@ImGui@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1096]
	pop	rdi
	pop	rbp
	ret	0
?UpdateMouseWheel@ImGui@@YAXXZ ENDP			; ImGui::UpdateMouseWheel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?UpdateMouseInputs@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
i$5 = 36
delta_from_click_pos$6 = 72
delta_from_click_pos$7 = 104
$T8 = 324
$T9 = 356
$T10 = 388
$T11 = 424
$T12 = 452
$T13 = 484
$T14 = 516
$T15 = 552
$T16 = 580
$T17 = 612
tv422 = 628
tv404 = 628
tv394 = 628
tv233 = 628
tv197 = 628
tv177 = 628
tv392 = 632
tv374 = 632
tv282 = 632
tv236 = 632
__$ArrayPad$ = 640
?UpdateMouseInputs@ImGui@@YAXXZ PROC			; ImGui::UpdateMouseInputs, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3643
	push	rbp
	push	rdi
	sub	rsp, 696				; 000002b8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 118				; 00000076H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3644
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3647
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 296				; 00000128H
	mov	rcx, rax
	call	?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z ; ImGui::IsMousePosValid
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@UpdateMous
; Line 3648
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 296				; 00000128H
	mov	rdx, rax
	lea	rcx, QWORD PTR $T8[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+8360], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+8360]
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+296], rax
$LN5@UpdateMous:
; Line 3651
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 296				; 00000128H
	mov	rcx, rax
	call	?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z ; ImGui::IsMousePosValid
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@UpdateMous
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 964				; 000003c4H
	mov	rcx, rax
	call	?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z ; ImGui::IsMousePosValid
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@UpdateMous
; Line 3652
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 964				; 000003c4H
	mov	rcx, QWORD PTR g$[rbp]
	add	rcx, 296				; 00000128H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+952], rax
	jmp	SHORT $LN7@UpdateMous
$LN6@UpdateMous:
; Line 3654
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T10[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+952], rax
$LN7@UpdateMous:
; Line 3655
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+952]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN9@UpdateMous
	jne	SHORT $LN9@UpdateMous
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+956]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN35@UpdateMous
	je	SHORT $LN8@UpdateMous
$LN35@UpdateMous:
$LN9@UpdateMous:
; Line 3656
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7711], 0
$LN8@UpdateMous:
; Line 3658
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+296]
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+964], rax
; Line 3659
	mov	DWORD PTR i$5[rbp], 0
	jmp	SHORT $LN4@UpdateMous
$LN2@UpdateMous:
	mov	eax, DWORD PTR i$5[rbp]
	inc	eax
	mov	DWORD PTR i$5[rbp], eax
$LN4@UpdateMous:
	cmp	DWORD PTR i$5[rbp], 5
	jge	$LN3@UpdateMous
; Line 3661
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+304]
	test	eax, eax
	je	SHORT $LN19@UpdateMous
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rcx+rax*4+1084]
	jbe	SHORT $LN19@UpdateMous
	mov	DWORD PTR tv177[rbp], 1
	jmp	SHORT $LN20@UpdateMous
$LN19@UpdateMous:
	mov	DWORD PTR tv177[rbp], 0
$LN20@UpdateMous:
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	edx, BYTE PTR tv177[rbp]
	mov	BYTE PTR [rcx+rax+1056], dl
; Line 3662
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+304]
	test	eax, eax
	jne	SHORT $LN21@UpdateMous
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax*4+1084]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN21@UpdateMous
	mov	DWORD PTR tv197[rbp], 1
	jmp	SHORT $LN22@UpdateMous
$LN21@UpdateMous:
	mov	DWORD PTR tv197[rbp], 0
$LN22@UpdateMous:
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	edx, BYTE PTR tv197[rbp]
	mov	BYTE PTR [rcx+rax+1066], dl
; Line 3663
	movsxd	rax, DWORD PTR i$5[rbp]
	movsxd	rcx, DWORD PTR i$5[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	mov	r8, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [r8+rax*4+1084]
	movss	DWORD PTR [rdx+rcx*4+1104], xmm0
; Line 3664
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+304]
	test	eax, eax
	je	SHORT $LN25@UpdateMous
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rcx+rax*4+1084]
	jbe	SHORT $LN23@UpdateMous
	xorps	xmm0, xmm0
	movss	DWORD PTR tv233[rbp], xmm0
	jmp	SHORT $LN24@UpdateMous
$LN23@UpdateMous:
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax*4+1084]
	addss	xmm0, DWORD PTR [rdx+24]
	movss	DWORD PTR tv233[rbp], xmm0
$LN24@UpdateMous:
	movss	xmm0, DWORD PTR tv233[rbp]
	movss	DWORD PTR tv236[rbp], xmm0
	jmp	SHORT $LN26@UpdateMous
$LN25@UpdateMous:
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR tv236[rbp], xmm0
$LN26@UpdateMous:
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR tv236[rbp]
	movss	DWORD PTR [rcx+rax*4+1084], xmm0
; Line 3665
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	BYTE PTR [rcx+rax+1061], 0
; Line 3666
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1056]
	test	eax, eax
	je	$LN10@UpdateMous
; Line 3668
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	movsd	xmm0, QWORD PTR [rcx+7048]
	subsd	xmm0, QWORD PTR [rdx+rax*8+1016]
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+48]
	comiss	xmm1, xmm0
	jbe	$LN12@UpdateMous
; Line 3670
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 296				; 00000128H
	mov	rcx, rax
	call	?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z ; ImGui::IsMousePosValid
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN27@UpdateMous
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	lea	rax, QWORD PTR [rcx+rax*8+972]
	mov	rcx, QWORD PTR g$[rbp]
	add	rcx, 296				; 00000128H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T12[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv282[rbp], rax
	jmp	SHORT $LN28@UpdateMous
$LN27@UpdateMous:
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T13[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv282[rbp], rax
$LN28@UpdateMous:
	mov	rax, QWORD PTR tv282[rbp]
	mov	QWORD PTR $T11[rbp], rax
	mov	rax, QWORD PTR $T11[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR delta_from_click_pos$6[rbp], rax
; Line 3671
	lea	rcx, QWORD PTR delta_from_click_pos$6[rbp]
	call	?ImLengthSqr@@YAMAEBUImVec2@@@Z		; ImLengthSqr
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+52]
	mulss	xmm1, DWORD PTR [rcx+52]
	comiss	xmm1, xmm0
	jbe	SHORT $LN14@UpdateMous
; Line 3672
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	BYTE PTR [rcx+rax+1061], 1
$LN14@UpdateMous:
; Line 3673
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+48]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR __real@40000000
	cvtss2sd xmm0, xmm0
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movsd	QWORD PTR [rcx+rax*8+1016], xmm0
; Line 3674
	jmp	SHORT $LN13@UpdateMous
$LN12@UpdateMous:
; Line 3677
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	movsd	xmm0, QWORD PTR [rdx+7048]
	movsd	QWORD PTR [rcx+rax*8+1016], xmm0
$LN13@UpdateMous:
; Line 3679
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+296]
	movsxd	rcx, DWORD PTR i$5[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rdx+rcx*8+972], rax
; Line 3680
	movsxd	rax, DWORD PTR i$5[rbp]
	movsxd	rcx, DWORD PTR i$5[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	mov	r8, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [r8+rax+1061]
	mov	BYTE PTR [rdx+rcx+1076], al
; Line 3681
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T14[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	movsxd	rcx, DWORD PTR i$5[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rdx+rcx*8+1124], rax
; Line 3682
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rcx+rax*4+1164], xmm0
; Line 3683
	jmp	$LN11@UpdateMous
$LN10@UpdateMous:
; Line 3684
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+304]
	test	eax, eax
	je	$LN15@UpdateMous
; Line 3687
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 296				; 00000128H
	mov	rcx, rax
	call	?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z ; ImGui::IsMousePosValid
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN29@UpdateMous
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	lea	rax, QWORD PTR [rcx+rax*8+972]
	mov	rcx, QWORD PTR g$[rbp]
	add	rcx, 296				; 00000128H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T16[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv374[rbp], rax
	jmp	SHORT $LN30@UpdateMous
$LN29@UpdateMous:
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T17[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv374[rbp], rax
$LN30@UpdateMous:
	mov	rax, QWORD PTR tv374[rbp]
	mov	QWORD PTR $T15[rbp], rax
	mov	rax, QWORD PTR $T15[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR delta_from_click_pos$7[rbp], rax
; Line 3688
	lea	rcx, QWORD PTR delta_from_click_pos$7[rbp]
	call	?ImLengthSqr@@YAMAEBUImVec2@@@Z		; ImLengthSqr
	movss	DWORD PTR tv394[rbp], xmm0
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax*4+1164]
	movss	DWORD PTR tv392[rbp], xmm0
	movss	xmm1, DWORD PTR tv394[rbp]
	movss	xmm0, DWORD PTR tv392[rbp]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	DWORD PTR [rcx+rax*4+1164], xmm0
; Line 3689
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR delta_from_click_pos$7[rbp]
	jbe	SHORT $LN31@UpdateMous
	movss	xmm0, DWORD PTR delta_from_click_pos$7[rbp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR tv404[rbp], xmm0
	jmp	SHORT $LN32@UpdateMous
$LN31@UpdateMous:
	movss	xmm0, DWORD PTR delta_from_click_pos$7[rbp]
	movss	DWORD PTR tv404[rbp], xmm0
$LN32@UpdateMous:
	movsxd	rax, DWORD PTR i$5[rbp]
	movss	xmm1, DWORD PTR tv404[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax*8+1124]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	DWORD PTR [rcx+rax*8+1124], xmm0
; Line 3690
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR delta_from_click_pos$7[rbp+4]
	jbe	SHORT $LN33@UpdateMous
	movss	xmm0, DWORD PTR delta_from_click_pos$7[rbp+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR tv422[rbp], xmm0
	jmp	SHORT $LN34@UpdateMous
$LN33@UpdateMous:
	movss	xmm0, DWORD PTR delta_from_click_pos$7[rbp+4]
	movss	DWORD PTR tv422[rbp], xmm0
$LN34@UpdateMous:
	movsxd	rax, DWORD PTR i$5[rbp]
	movss	xmm1, DWORD PTR tv422[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax*8+1128]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	DWORD PTR [rcx+rax*8+1128], xmm0
$LN15@UpdateMous:
$LN11@UpdateMous:
; Line 3692
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+304]
	test	eax, eax
	jne	SHORT $LN16@UpdateMous
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1066]
	test	eax, eax
	jne	SHORT $LN16@UpdateMous
; Line 3693
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	BYTE PTR [rcx+rax+1076], 0
$LN16@UpdateMous:
; Line 3694
	movsxd	rax, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1056]
	test	eax, eax
	je	SHORT $LN17@UpdateMous
; Line 3695
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7711], 0
$LN17@UpdateMous:
; Line 3696
	jmp	$LN2@UpdateMous
$LN3@UpdateMous:
; Line 3697
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?UpdateMouseInputs@ImGui@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+664]
	pop	rdi
	pop	rbp
	ret	0
?UpdateMouseInputs@ImGui@@YAXXZ ENDP			; ImGui::UpdateMouseInputs
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?UpdateSettings@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
?UpdateSettings@ImGui@@YAXXZ PROC			; ImGui::UpdateSettings, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10363
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10365
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10366
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12385]
	test	eax, eax
	jne	SHORT $LN2@UpdateSett
; Line 10368
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12424				; 00003088H
	mov	rcx, rax
	call	?empty@?$ImChunkStream@UImGuiWindowSettings@@@@QEBA_NXZ ; ImChunkStream<ImGuiWindowSettings>::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN9@UpdateSett
	mov	eax, DWORD PTR ?__LINE__Var@?0??UpdateSettings@ImGui@@YAXXZ@4JA
	add	eax, 5
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DE@BLONNHPO@?$AAg?$AA?4?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AAW?$AAi?$AAn?$AAd?$AAo@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN9@UpdateSett:
; Line 10369
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+32], 0
	je	SHORT $LN3@UpdateSett
; Line 10370
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?LoadIniSettingsFromDisk@ImGui@@YAXPEBD@Z ; ImGui::LoadIniSettingsFromDisk
$LN3@UpdateSett:
; Line 10371
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+12385], 1
$LN2@UpdateSett:
; Line 10375
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+12388]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN4@UpdateSett
; Line 10377
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+12388]
	subss	xmm0, DWORD PTR [rcx+24]
	mov	rax, QWORD PTR g$[rbp]
	movss	DWORD PTR [rax+12388], xmm0
; Line 10378
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rax+12388]
	jb	SHORT $LN5@UpdateSett
; Line 10380
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+32], 0
	je	SHORT $LN6@UpdateSett
; Line 10381
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?SaveIniSettingsToDisk@ImGui@@YAXPEBD@Z	; ImGui::SaveIniSettingsToDisk
	jmp	SHORT $LN7@UpdateSett
$LN6@UpdateSett:
; Line 10383
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+924], 1
$LN7@UpdateSett:
; Line 10384
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12388], xmm0
$LN5@UpdateSett:
$LN4@UpdateSett:
; Line 10387
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?UpdateSettings@ImGui@@YAXXZ ENDP			; ImGui::UpdateSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ErrorCheckEndFrameSanityChecks@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
key_mod_flags$ = 36
?ErrorCheckEndFrameSanityChecks@ImGui@@YAXXZ PROC	; ImGui::ErrorCheckEndFrameSanityChecks, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7209
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7210
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7218
	call	?GetMergedKeyModFlags@ImGui@@YAHXZ	; ImGui::GetMergedKeyModFlags
	mov	DWORD PTR key_mod_flags$[rbp], eax
; Line 7219
	cmp	DWORD PTR key_mod_flags$[rbp], 0
	je	SHORT $LN8@ErrorCheck
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR key_mod_flags$[rbp]
	cmp	DWORD PTR [rax+960], ecx
	jne	SHORT $LN9@ErrorCheck
$LN8@ErrorCheck:
	lea	rax, OFFSET FLAT:??_C@_0EH@IKLAPCIG@Mismatching?5io?4KeyCtrl?1io?4KeySh@
	test	rax, rax
	jne	SHORT $LN10@ErrorCheck
$LN9@ErrorCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckEndFrameSanityChecks@ImGui@@YAXXZ@4JA
	add	eax, 10
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BAE@HHDAPELE@?$AA?$CI?$AAk?$AAe?$AAy?$AA_?$AAm?$AAo?$AAd?$AA_?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN10@ErrorCheck:
; Line 7227
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7136], 1
	je	$LN4@ErrorCheck
; Line 7229
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7136], 1
	jle	SHORT $LN5@ErrorCheck
; Line 7231
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7136], 1
	jne	SHORT $LN11@ErrorCheck
	lea	rax, OFFSET FLAT:??_C@_0FI@LNDFABED@Mismatched?5Begin?1BeginChild?5vs?5@
	test	rax, rax
	jne	SHORT $LN12@ErrorCheck
$LN11@ErrorCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckEndFrameSanityChecks@ImGui@@YAXXZ@4JA
	add	eax, 22
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1PM@PNPJAGAO@?$AA?$CI?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN12@ErrorCheck:
$LN2@ErrorCheck:
; Line 7232
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7136], 1
	jle	SHORT $LN3@ErrorCheck
; Line 7233
	call	?End@ImGui@@YAXXZ			; ImGui::End
	jmp	SHORT $LN2@ErrorCheck
$LN3@ErrorCheck:
; Line 7234
	jmp	SHORT $LN6@ErrorCheck
$LN5@ErrorCheck:
; Line 7237
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7136], 1
	jne	SHORT $LN13@ErrorCheck
	lea	rax, OFFSET FLAT:??_C@_0FH@BPHEKLEJ@Mismatched?5Begin?1BeginChild?5vs?5@
	test	rax, rax
	jne	SHORT $LN14@ErrorCheck
$LN13@ErrorCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckEndFrameSanityChecks@ImGui@@YAXXZ@4JA
	add	eax, 28
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1PK@KPEOFHN@?$AA?$CI?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN14@ErrorCheck:
$LN6@ErrorCheck:
$LN4@ErrorCheck:
; Line 7241
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7560], 0
	jne	SHORT $LN15@ErrorCheck
	lea	rax, OFFSET FLAT:??_C@_0BH@DOAAHNFO@Missing?5EndGroup?5call?$CB@
	test	rax, rax
	jne	SHORT $LN16@ErrorCheck
$LN15@ErrorCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckEndFrameSanityChecks@ImGui@@YAXXZ@4JA
	add	eax, 32					; 00000020H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1GK@BADAAGFG@?$AA?$CI?$AAg?$AA?4?$AAG?$AAr?$AAo?$AAu?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN16@ErrorCheck:
; Line 7242
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?ErrorCheckEndFrameSanityChecks@ImGui@@YAXXZ ENDP	; ImGui::ErrorCheckEndFrameSanityChecks
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
n$1 = 36
?ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ PROC	; ImGui::ErrorCheckNewFrameSanityChecks, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7173
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7174
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7182
	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN5@ErrorCheck
	jmp	SHORT $LN6@ErrorCheck
$LN5@ErrorCheck:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN10@ErrorCheck
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ@4JA
	add	eax, 9
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN10@ErrorCheck:
$LN6@ErrorCheck:
; Line 7186
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	jne	SHORT $LN11@ErrorCheck
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ@4JA
	add	eax, 13
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BM@ICEHPMG@?$AAg?$AA?4?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN11@ErrorCheck:
; Line 7187
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+24]
	comiss	xmm0, DWORD PTR __real@00000000
	ja	SHORT $LN12@ErrorCheck
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7056], 0
	jne	SHORT $LN13@ErrorCheck
$LN12@ErrorCheck:
	lea	rax, OFFSET FLAT:??_C@_0BL@INIAEKJF@Need?5a?5positive?5DeltaTime?$CB@
	test	rax, rax
	jne	SHORT $LN14@ErrorCheck
$LN13@ErrorCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ@4JA
	add	eax, 14
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1JK@GMCNDFJ@?$AA?$CI?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAD?$AAe?$AAl?$AAt?$AAa?$AAT?$AAi?$AAm?$AAe@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN14@ErrorCheck:
; Line 7188
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7056], 0
	je	SHORT $LN15@ErrorCheck
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7056]
	cmp	DWORD PTR [rax+7060], ecx
	jne	SHORT $LN16@ErrorCheck
$LN15@ErrorCheck:
	lea	rax, OFFSET FLAT:??_C@_0EI@GHMDJNFG@Forgot?5to?5call?5Render?$CI?$CJ?5or?5EndF@
	test	rax, rax
	jne	SHORT $LN17@ErrorCheck
$LN16@ErrorCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ@4JA
	add	eax, 15
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BAM@KGEBLPLP@?$AA?$CI?$AAg?$AA?4?$AAF?$AAr?$AAa?$AAm?$AAe?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN17@ErrorCheck:
; Line 7189
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN18@ErrorCheck
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+20]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN18@ErrorCheck
	lea	rax, OFFSET FLAT:??_C@_0BL@LDNBLEGM@Invalid?5DisplaySize?5value?$CB@
	test	rax, rax
	jne	SHORT $LN19@ErrorCheck
$LN18@ErrorCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ@4JA
	add	eax, 16
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1LC@PGGPGCKP@?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAS?$AAi?$AAz@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN19@ErrorCheck:
; Line 7190
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+168]
	call	?IsBuilt@ImFontAtlas@@QEBA_NXZ		; ImFontAtlas::IsBuilt
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@ErrorCheck
	lea	rax, OFFSET FLAT:??_C@_0KM@BGIGOFPN@Font?5Atlas?5not?5built?$CB?5Make?5sure@
	test	rax, rax
	jne	SHORT $LN21@ErrorCheck
$LN20@ErrorCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ@4JA
	add	eax, 17
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BIO@NEOCPKAM@?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAF?$AAo?$AAn?$AAt?$AAs?$AA?9?$AA?$DO?$AAI?$AAs?$AAB@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN21@ErrorCheck:
; Line 7191
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5660]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN22@ErrorCheck
	lea	rax, OFFSET FLAT:??_C@_0BH@EAJIBGFB@Invalid?5style?5setting?$CB@
	test	rax, rax
	jne	SHORT $LN23@ErrorCheck
$LN22@ErrorCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ@4JA
	add	eax, 18
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1IA@HHCKGFKM@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAC?$AAu?$AAr?$AAv?$AAe?$AAT?$AAe@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN23@ErrorCheck:
; Line 7192
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5664]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN24@ErrorCheck
	lea	rax, OFFSET FLAT:??_C@_0BH@EAJIBGFB@Invalid?5style?5setting?$CB@
	test	rax, rax
	jne	SHORT $LN25@ErrorCheck
$LN24@ErrorCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ@4JA
	add	eax, 19
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1IM@BBAKCECH@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAC?$AAi?$AAr?$AAc?$AAl?$AAe?$AAT@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN25@ErrorCheck:
; Line 7193
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5472]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN26@ErrorCheck
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	comiss	xmm0, DWORD PTR [rax+5472]
	jb	SHORT $LN26@ErrorCheck
	lea	rax, OFFSET FLAT:??_C@_0BH@EAJIBGFB@Invalid?5style?5setting?$CB@
	test	rax, rax
	jne	SHORT $LN27@ErrorCheck
$LN26@ErrorCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ@4JA
	add	eax, 20
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1JG@HBCMMEC@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAA?$AAl?$AAp?$AAh?$AAa?$AA?5?$AA?$DO@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN27@ErrorCheck:
; Line 7194
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5492]
	comiss	xmm0, DWORD PTR __real@3f800000
	jb	SHORT $LN28@ErrorCheck
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5496]
	comiss	xmm0, DWORD PTR __real@3f800000
	jb	SHORT $LN28@ErrorCheck
	lea	rax, OFFSET FLAT:??_C@_0BH@MHAAAKJO@Invalid?5style?5setting?4@
	test	rax, rax
	jne	SHORT $LN29@ErrorCheck
$LN28@ErrorCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ@4JA
	add	eax, 21
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1LO@BODAGONP@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAM@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN29@ErrorCheck:
; Line 7195
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+5508], -1
	je	SHORT $LN30@ErrorCheck
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+5508], 0
	je	SHORT $LN30@ErrorCheck
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+5508], 1
	je	SHORT $LN30@ErrorCheck
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ@4JA
	add	eax, 22
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BDK@FANHHEDI@?$AAg?$AA?4?$AAS?$AAt?$AAy?$AAl?$AAe?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAM@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN30@ErrorCheck:
; Line 7196
	mov	DWORD PTR n$1[rbp], 0
	jmp	SHORT $LN4@ErrorCheck
$LN2@ErrorCheck:
	mov	eax, DWORD PTR n$1[rbp]
	inc	eax
	mov	DWORD PTR n$1[rbp], eax
$LN4@ErrorCheck:
	cmp	DWORD PTR n$1[rbp], 22
	jge	SHORT $LN3@ErrorCheck
; Line 7197
	movsxd	rax, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rcx+rax*4+60], -1
	jl	SHORT $LN31@ErrorCheck
	movsxd	rax, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rcx+rax*4+60], 512		; 00000200H
	jge	SHORT $LN31@ErrorCheck
	lea	rax, OFFSET FLAT:??_C@_0FH@NIAAMBB@io?4KeyMap?$FL?$FN?5contains?5an?5out?5of?5@
	test	rax, rax
	jne	SHORT $LN32@ErrorCheck
$LN31@ErrorCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ@4JA
	add	eax, 24
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BHO@ICEKAIPC@?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAK?$AAe?$AAy?$AAM?$AAa?$AAp?$AA?$FL?$AAn?$AA?$FN?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN32@ErrorCheck:
	jmp	SHORT $LN2@ErrorCheck
$LN3@ErrorCheck:
; Line 7200
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+8]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN7@ErrorCheck
; Line 7201
	mov	eax, 4
	imul	rax, rax, 12
	mov	rcx, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rcx+rax+60], -1
	je	SHORT $LN33@ErrorCheck
	lea	rax, OFFSET FLAT:??_C@_0EA@IDFJHFOM@ImGuiKey_Space?5is?5not?5mapped?0?5r@
	test	rax, rax
	jne	SHORT $LN34@ErrorCheck
$LN33@ErrorCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ@4JA
	add	eax, 28
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1MO@ONPFNFPJ@?$AAg?$AA?4?$AAI?$AAO?$AA?4?$AAK?$AAe?$AAy?$AAM?$AAa?$AAp?$AA?$FL?$AAI?$AAm?$AAG@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN34@ErrorCheck:
$LN7@ErrorCheck:
; Line 7204
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+204]
	test	eax, eax
	je	SHORT $LN8@ErrorCheck
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 2
	test	eax, eax
	jne	SHORT $LN8@ErrorCheck
; Line 7205
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+204], 0
$LN8@ErrorCheck:
; Line 7206
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ ENDP	; ImGui::ErrorCheckNewFrameSanityChecks
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FindWindowFocusIndex@ImGui@@YAHPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
g$ = 8
order$ = 36
tv71 = 248
window$ = 288
?FindWindowFocusIndex@ImGui@@YAHPEAUImGuiWindow@@@Z PROC ; ImGui::FindWindowFocusIndex, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 9561
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 9562
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 9564
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, WORD PTR [rax+160]
	mov	DWORD PTR order$[rbp], eax
; Line 9565
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7104				; 00001bc0H
	mov	QWORD PTR tv71[rbp], rax
	mov	edx, DWORD PTR order$[rbp]
	mov	rcx, QWORD PTR tv71[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax], rcx
	je	SHORT $LN3@FindWindow
	mov	eax, DWORD PTR ?__LINE__Var@?0??FindWindowFocusIndex@ImGui@@YAHPEAUImGuiWindow@@@Z@4JA
	add	eax, 4
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EK@IMFCDJFP@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AAF?$AAo?$AAc?$AAu?$AAs?$AAO@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@FindWindow:
; Line 9566
	mov	eax, DWORD PTR order$[rbp]
; Line 9567
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?FindWindowFocusIndex@ImGui@@YAHPEAUImGuiWindow@@@Z ENDP ; ImGui::FindWindowFocusIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavRestoreLayer@ImGui@@YAXW4ImGuiNavLayer@@@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
layer$ = 288
?NavRestoreLayer@ImGui@@YAXW4ImGuiNavLayer@@@Z PROC	; ImGui::NavRestoreLayer, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8944
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8945
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8946
	cmp	DWORD PTR layer$[rbp], 0
	jne	SHORT $LN2@NavRestore
; Line 8947
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+7624]
	call	?NavRestoreLastChildNavWindow@ImGui@@YAPEAUImGuiWindow@@PEAU2@@Z ; ImGui::NavRestoreLastChildNavWindow
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+7624], rax
$LN2@NavRestore:
; Line 8948
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	QWORD PTR window$[rbp], rax
; Line 8949
	movsxd	rax, DWORD PTR layer$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	DWORD PTR [rcx+rax*4+936], 0
	je	SHORT $LN3@NavRestore
; Line 8951
	movsxd	rax, DWORD PTR layer$[rbp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR window$[rbp]
	lea	rax, QWORD PTR [rcx+rax+944]
	movsxd	rcx, DWORD PTR layer$[rbp]
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, DWORD PTR layer$[rbp]
	mov	rax, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rax+rcx*4+936]
	call	?SetNavID@ImGui@@YAXIW4ImGuiNavLayer@@IAEBUImRect@@@Z ; ImGui::SetNavID
; Line 8952
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7710], 0
; Line 8953
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7709], 1
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7711], 1
; Line 8954
	jmp	SHORT $LN4@NavRestore
$LN3@NavRestore:
; Line 8957
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR layer$[rbp]
	mov	DWORD PTR [rax+7700], ecx
; Line 8958
	mov	dl, 1
	mov	rcx, QWORD PTR window$[rbp]
	call	?NavInitWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z ; ImGui::NavInitWindow
$LN4@NavRestore:
; Line 8960
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?NavRestoreLayer@ImGui@@YAXW4ImGuiNavLayer@@@Z ENDP	; ImGui::NavRestoreLayer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavRestoreLastChildNavWindow@ImGui@@YAPEAUImGuiWindow@@PEAU2@@Z
_TEXT	SEGMENT
window$ = 224
?NavRestoreLastChildNavWindow@ImGui@@YAPEAUImGuiWindow@@PEAU2@@Z PROC ; ImGui::NavRestoreLastChildNavWindow, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8937
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8938
	mov	rax, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+928], 0
	je	SHORT $LN2@NavRestore
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+928]
	movzx	eax, BYTE PTR [rax+143]
	test	eax, eax
	je	SHORT $LN2@NavRestore
; Line 8939
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+928]
	jmp	SHORT $LN1@NavRestore
$LN2@NavRestore:
; Line 8940
	mov	rax, QWORD PTR window$[rbp]
$LN1@NavRestore:
; Line 8941
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?NavRestoreLastChildNavWindow@ImGui@@YAPEAUImGuiWindow@@PEAU2@@Z ENDP ; ImGui::NavRestoreLastChildNavWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavSaveLastChildNavWindowIntoParent@ImGui@@YAXPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
parent$ = 8
nav_window$ = 256
?NavSaveLastChildNavWindowIntoParent@ImGui@@YAXPEAUImGuiWindow@@@Z PROC ; ImGui::NavSaveLastChildNavWindowIntoParent, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8926
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8927
	mov	rax, QWORD PTR nav_window$[rbp]
	mov	QWORD PTR parent$[rbp], rax
$LN2@NavSaveLas:
; Line 8928
	cmp	QWORD PTR parent$[rbp], 0
	je	SHORT $LN3@NavSaveLas
	mov	rax, QWORD PTR parent$[rbp]
	mov	rcx, QWORD PTR parent$[rbp]
	cmp	QWORD PTR [rax+904], rcx
	je	SHORT $LN3@NavSaveLas
	mov	rax, QWORD PTR parent$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 335544320				; 14000000H
	test	eax, eax
	jne	SHORT $LN3@NavSaveLas
; Line 8929
	mov	rax, QWORD PTR parent$[rbp]
	mov	rax, QWORD PTR [rax+896]
	mov	QWORD PTR parent$[rbp], rax
	jmp	SHORT $LN2@NavSaveLas
$LN3@NavSaveLas:
; Line 8930
	cmp	QWORD PTR parent$[rbp], 0
	je	SHORT $LN4@NavSaveLas
	mov	rax, QWORD PTR nav_window$[rbp]
	cmp	QWORD PTR parent$[rbp], rax
	je	SHORT $LN4@NavSaveLas
; Line 8931
	mov	rax, QWORD PTR parent$[rbp]
	mov	rcx, QWORD PTR nav_window$[rbp]
	mov	QWORD PTR [rax+928], rcx
$LN4@NavSaveLas:
; Line 8932
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?NavSaveLastChildNavWindowIntoParent@ImGui@@YAXPEAUImGuiWindow@@@Z ENDP ; ImGui::NavSaveLastChildNavWindowIntoParent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavCalcPreferredRefPos@ImGui@@YA?AUImVec2@@XZ
_TEXT	SEGMENT
g$ = 8
rect_rel$4 = 40
pos$5 = 72
viewport$6 = 104
$T7 = 324
$T8 = 356
$T9 = 388
tv137 = 404
tv135 = 408
tv160 = 412
tv154 = 416
tv152 = 420
tv158 = 424
tv169 = 432
tv167 = 440
__$ArrayPad$ = 448
__$ReturnUdt$ = 496
?NavCalcPreferredRefPos@ImGui@@YA?AUImVec2@@XZ PROC	; ImGui::NavCalcPreferredRefPos, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 9003
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 504				; 000001f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+536]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 9004
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 9005
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7710]
	test	eax, eax
	jne	SHORT $LN4@NavCalcPre
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7711]
	test	eax, eax
	je	SHORT $LN4@NavCalcPre
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	jne	SHORT $LN2@NavCalcPre
$LN4@NavCalcPre:
; Line 9008
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 296				; 00000128H
	mov	rcx, rax
	call	?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z ; ImGui::IsMousePosValid
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@NavCalcPre
; Line 9009
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+296]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@NavCalcPre
$LN5@NavCalcPre:
; Line 9010
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+8360]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@NavCalcPre
; Line 9011
	jmp	$LN3@NavCalcPre
$LN2@NavCalcPre:
; Line 9015
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	rcx, QWORD PTR g$[rbp]
	movsxd	rcx, DWORD PTR [rcx+7700]
	imul	rcx, rcx, 16
	lea	rax, QWORD PTR [rax+rcx+944]
	mov	QWORD PTR rect_rel$4[rbp], rax
; Line 9016
	mov	rcx, QWORD PTR rect_rel$4[rbp]
	call	?GetHeight@ImRect@@QEBAMXZ		; ImRect::GetHeight
	movss	DWORD PTR tv137[rbp], xmm0
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5532]
	movss	DWORD PTR tv135[rbp], xmm0
	movss	xmm1, DWORD PTR tv137[rbp]
	movss	xmm0, DWORD PTR tv135[rbp]
	call	??$ImMin@M@@YAMMM@Z			; ImMin<float>
	mov	rax, QWORD PTR rect_rel$4[rbp]
	movss	xmm1, DWORD PTR [rax+12]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv160[rbp], xmm0
	mov	rcx, QWORD PTR rect_rel$4[rbp]
	call	?GetWidth@ImRect@@QEBAMXZ		; ImRect::GetWidth
	movss	DWORD PTR tv154[rbp], xmm0
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5528]
	mulss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR tv152[rbp], xmm0
	movss	xmm1, DWORD PTR tv154[rbp]
	movss	xmm0, DWORD PTR tv152[rbp]
	call	??$ImMin@M@@YAMMM@Z			; ImMin<float>
	mov	rax, QWORD PTR rect_rel$4[rbp]
	movss	xmm1, DWORD PTR [rax]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv158[rbp], xmm0
	movss	xmm2, DWORD PTR tv160[rbp]
	movss	xmm1, DWORD PTR tv158[rbp]
	lea	rcx, QWORD PTR $T7[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv169[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	add	rax, 16
	mov	QWORD PTR tv167[rbp], rax
	mov	r8, QWORD PTR tv169[rbp]
	mov	rdx, QWORD PTR tv167[rbp]
	lea	rcx, QWORD PTR pos$5[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
; Line 9017
	call	?GetMainViewport@ImGui@@YAPEAUImGuiViewport@@XZ ; ImGui::GetMainViewport
	mov	QWORD PTR viewport$6[rbp], rax
; Line 9018
	mov	rax, QWORD PTR viewport$6[rbp]
	add	rax, 12
	mov	rcx, QWORD PTR viewport$6[rbp]
	add	rcx, 4
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T8[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rcx, QWORD PTR viewport$6[rbp]
	add	rcx, 4
	mov	r9, QWORD PTR [rax]
	mov	r8, rcx
	lea	rdx, QWORD PTR pos$5[rbp]
	lea	rcx, QWORD PTR $T9[rbp]
	call	?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z	; ImClamp
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN3@NavCalcPre:
$LN1@NavCalcPre:
; Line 9020
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?NavCalcPreferredRefPos@ImGui@@YA?AUImVec2@@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+472]
	pop	rdi
	pop	rbp
	ret	0
?NavCalcPreferredRefPos@ImGui@@YA?AUImVec2@@XZ ENDP	; ImGui::NavCalcPreferredRefPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavProcessItem@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@I@Z
_TEXT	SEGMENT
g$ = 8
item_flags$ = 36
nav_bb_rel$ = 72
result$4 = 120
new_best$5 = 148
VISIBLE_RATIO$6 = 180
$T7 = 404
$T8 = 436
$T9 = 480
$T10 = 528
tv171 = 548
tv152 = 548
tv168 = 552
tv143 = 552
tv84 = 552
tv82 = 560
__$ArrayPad$ = 568
window$ = 608
nav_bb$ = 616
id$ = 624
?NavProcessItem@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@I@Z PROC ; ImGui::NavProcessItem, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8829
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 608				; 00000260H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 96					; 00000060H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+648]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8830
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8834
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7236]
	mov	DWORD PTR item_flags$[rbp], eax
; Line 8835
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	mov	rcx, QWORD PTR nav_bb$[rbp]
	add	rcx, 8
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv84[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	mov	rcx, QWORD PTR nav_bb$[rbp]
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T8[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv82[rbp], rax
	mov	r8, QWORD PTR tv84[rbp]
	mov	rdx, QWORD PTR tv82[rbp]
	lea	rcx, QWORD PTR nav_bb_rel$[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
; Line 8838
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7713]
	test	eax, eax
	je	SHORT $LN2@NavProcess
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+332]
	cmp	DWORD PTR [rax+7700], ecx
	jne	SHORT $LN2@NavProcess
; Line 8841
	mov	eax, DWORD PTR item_flags$[rbp]
	and	eax, 16
	test	eax, eax
	je	SHORT $LN4@NavProcess
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7716], 0
	jne	SHORT $LN3@NavProcess
$LN4@NavProcess:
; Line 8843
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rax+7716], ecx
; Line 8844
	mov	rax, QWORD PTR g$[rbp]
	lea	rcx, QWORD PTR nav_bb_rel$[rbp]
	lea	rdi, QWORD PTR [rax+7720]
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
$LN3@NavProcess:
; Line 8846
	mov	eax, DWORD PTR item_flags$[rbp]
	and	eax, 16
	test	eax, eax
	jne	SHORT $LN5@NavProcess
; Line 8848
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7713], 0
; Line 8849
	call	?NavUpdateAnyRequestFlag@ImGui@@YAXXZ	; ImGui::NavUpdateAnyRequestFlag
$LN5@NavProcess:
$LN2@NavProcess:
; Line 8855
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7632], ecx
	jne	SHORT $LN7@NavProcess
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7740]
	and	eax, 16
	test	eax, eax
	je	$LN6@NavProcess
$LN7@NavProcess:
	mov	eax, DWORD PTR item_flags$[rbp]
	and	eax, 12
	test	eax, eax
	jne	$LN6@NavProcess
; Line 8857
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	cmp	QWORD PTR window$[rbp], rax
	jne	SHORT $LN14@NavProcess
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7768				; 00001e58H
	mov	QWORD PTR tv143[rbp], rax
	jmp	SHORT $LN15@NavProcess
$LN14@NavProcess:
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7864				; 00001eb8H
	mov	QWORD PTR tv143[rbp], rax
$LN15@NavProcess:
	mov	rax, QWORD PTR tv143[rbp]
	mov	QWORD PTR result$4[rbp], rax
; Line 8864
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7736]
	test	eax, eax
	je	SHORT $LN16@NavProcess
	lea	rax, QWORD PTR $T9[rbp]
	mov	rdi, rax
	mov	rsi, QWORD PTR nav_bb$[rbp]
	mov	ecx, 16
	rep movsb
	lea	rdx, QWORD PTR $T9[rbp]
	mov	rcx, QWORD PTR result$4[rbp]
	call	?NavScoreItem@ImGui@@YA_NPEAUImGuiNavItemData@@UImRect@@@Z ; ImGui::NavScoreItem
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@NavProcess
	mov	DWORD PTR tv152[rbp], 1
	jmp	SHORT $LN17@NavProcess
$LN16@NavProcess:
	mov	DWORD PTR tv152[rbp], 0
$LN17@NavProcess:
	movzx	eax, BYTE PTR tv152[rbp]
	mov	BYTE PTR new_best$5[rbp], al
; Line 8866
	movzx	eax, BYTE PTR new_best$5[rbp]
	test	eax, eax
	je	SHORT $LN8@NavProcess
; Line 8867
	lea	r9, QWORD PTR nav_bb_rel$[rbp]
	mov	r8d, DWORD PTR id$[rbp]
	mov	rdx, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR result$4[rbp]
	call	?NavApplyItemToResult@ImGui@@YAXPEAUImGuiNavItemData@@PEAUImGuiWindow@@IAEBUImRect@@@Z ; ImGui::NavApplyItemToResult
$LN8@NavProcess:
; Line 8870
	movss	xmm0, DWORD PTR __real@3f333333
	movss	DWORD PTR VISIBLE_RATIO$6[rbp], xmm0
; Line 8871
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7740]
	and	eax, 32					; 00000020H
	test	eax, eax
	je	$LN9@NavProcess
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 592				; 00000250H
	mov	QWORD PTR tv168[rbp], rax
	mov	rdx, QWORD PTR nav_bb$[rbp]
	mov	rcx, QWORD PTR tv168[rbp]
	call	?Overlaps@ImRect@@QEBA_NAEBU1@@Z	; ImRect::Overlaps
	movzx	eax, al
	test	eax, eax
	je	$LN9@NavProcess
; Line 8872
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm2, DWORD PTR [rax+604]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+596]
	mov	rax, QWORD PTR nav_bb$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	call	??$ImClamp@M@@YAMMMM@Z			; ImClamp<float>
	movss	DWORD PTR tv171[rbp], xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm2, DWORD PTR [rax+604]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+596]
	mov	rax, QWORD PTR nav_bb$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	call	??$ImClamp@M@@YAMMMM@Z			; ImClamp<float>
	movss	xmm1, DWORD PTR tv171[rbp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR nav_bb$[rbp]
	mov	rcx, QWORD PTR nav_bb$[rbp]
	movss	xmm1, DWORD PTR [rax+12]
	subss	xmm1, DWORD PTR [rcx+4]
	mulss	xmm1, DWORD PTR __real@3f333333
	comiss	xmm0, xmm1
	jb	SHORT $LN10@NavProcess
; Line 8873
	lea	rax, QWORD PTR $T10[rbp]
	mov	rdi, rax
	mov	rsi, QWORD PTR nav_bb$[rbp]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7816				; 00001e88H
	lea	rdx, QWORD PTR $T10[rbp]
	mov	rcx, rax
	call	?NavScoreItem@ImGui@@YA_NPEAUImGuiNavItemData@@UImRect@@@Z ; ImGui::NavScoreItem
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN11@NavProcess
; Line 8874
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7816				; 00001e88H
	lea	r9, QWORD PTR nav_bb_rel$[rbp]
	mov	r8d, DWORD PTR id$[rbp]
	mov	rdx, QWORD PTR window$[rbp]
	mov	rcx, rax
	call	?NavApplyItemToResult@ImGui@@YAXPEAUImGuiNavItemData@@PEAUImGuiWindow@@IAEBUImRect@@@Z ; ImGui::NavApplyItemToResult
$LN11@NavProcess:
$LN10@NavProcess:
$LN9@NavProcess:
$LN6@NavProcess:
; Line 8878
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7632], ecx
	jne	SHORT $LN12@NavProcess
; Line 8880
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax+7624], rcx
; Line 8881
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+332]
	mov	DWORD PTR [rax+7700], ecx
; Line 8882
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+340]
	mov	DWORD PTR [rax+7636], ecx
; Line 8883
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7708], 1
; Line 8884
	mov	rax, QWORD PTR window$[rbp]
	movsxd	rax, DWORD PTR [rax+332]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR window$[rbp]
	lea	rdx, QWORD PTR nav_bb_rel$[rbp]
	lea	rdi, QWORD PTR [rcx+rax+944]
	mov	rsi, rdx
	mov	ecx, 16
	rep movsb
$LN12@NavProcess:
; Line 8886
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?NavProcessItem@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@I@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+576]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?NavProcessItem@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@I@Z ENDP ; ImGui::NavProcessItem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavApplyItemToResult@ImGui@@YAXPEAUImGuiNavItemData@@PEAUImGuiWindow@@IAEBUImRect@@@Z
_TEXT	SEGMENT
result$ = 224
window$ = 232
id$ = 240
nav_bb_rel$ = 248
?NavApplyItemToResult@ImGui@@YAXPEAUImGuiNavItemData@@PEAUImGuiWindow@@IAEBUImRect@@@Z PROC ; ImGui::NavApplyItemToResult, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8820
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 224				; 000000e0H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8821
	mov	rax, QWORD PTR result$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 8822
	mov	rax, QWORD PTR result$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rax+8], ecx
; Line 8823
	mov	rax, QWORD PTR result$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+340]
	mov	DWORD PTR [rax+12], ecx
; Line 8824
	mov	rax, QWORD PTR result$[rbp]
	lea	rdi, QWORD PTR [rax+16]
	mov	rsi, QWORD PTR nav_bb_rel$[rbp]
	mov	ecx, 16
	rep movsb
; Line 8825
	lea	rsp, QWORD PTR [rbp+192]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?NavApplyItemToResult@ImGui@@YAXPEAUImGuiNavItemData@@PEAUImGuiWindow@@IAEBUImRect@@@Z ENDP ; ImGui::NavApplyItemToResult
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavScoreItem@ImGui@@YA_NPEAUImGuiNavItemData@@UImRect@@@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
curr$ = 72
dbx$ = 100
dby$ = 132
dist_box$ = 164
dcx$ = 196
dcy$ = 228
dist_center$ = 260
quadrant$ = 292
dax$ = 324
day$ = 356
dist_axial$ = 388
new_best$ = 420
tv264 = 628
tv246 = 628
tv227 = 628
tv200 = 628
tv198 = 628
tv193 = 628
tv191 = 632
tv93 = 632
tv189 = 636
tv187 = 640
result$ = 688
cand$ = 696
?NavScoreItem@ImGui@@YA_NPEAUImGuiNavItemData@@UImRect@@@Z PROC ; ImGui::NavScoreItem, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8689
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 696				; 000002b8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8690
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8691
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 8692
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+332]
	cmp	DWORD PTR [rax+7700], ecx
	je	SHORT $LN2@NavScoreIt
; Line 8693
	xor	al, al
	jmp	$LN1@NavScoreIt
$LN2@NavScoreIt:
; Line 8695
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7680				; 00001e00H
	mov	QWORD PTR curr$[rbp], rax
; Line 8696
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7696]
	inc	eax
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7696], eax
; Line 8699
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+7624]
	cmp	QWORD PTR [rax+896], rcx
	jne	$LN3@NavScoreIt
; Line 8701
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	rcx, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	mov	ecx, DWORD PTR [rcx+12]
	or	ecx, eax
	mov	eax, ecx
	and	eax, 8388608				; 00800000H
	test	eax, eax
	jne	SHORT $LN27@NavScoreIt
	mov	eax, DWORD PTR ?__LINE__Var@?0??NavScoreItem@ImGui@@YA_NPEAUImGuiNavItemData@@UImRect@@@Z@4JA
	add	eax, 12
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1IK@IGCCKHOG@?$AA?$CI?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN27@NavScoreIt:
; Line 8702
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 592				; 00000250H
	mov	QWORD PTR tv93[rbp], rax
	mov	rdx, QWORD PTR cand$[rbp]
	mov	rcx, QWORD PTR tv93[rbp]
	call	?Overlaps@ImRect@@QEBA_NAEBU1@@Z	; ImRect::Overlaps
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@NavScoreIt
; Line 8703
	xor	al, al
	jmp	$LN1@NavScoreIt
$LN4@NavScoreIt:
; Line 8704
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 592				; 00000250H
	mov	rdx, rax
	mov	rcx, QWORD PTR cand$[rbp]
	call	?ClipWithFull@ImRect@@QEAAXAEBU1@@Z	; ImRect::ClipWithFull
$LN3@NavScoreIt:
; Line 8709
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 592				; 00000250H
	mov	r8, rax
	mov	rdx, QWORD PTR cand$[rbp]
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rax+7760]
	call	?NavClampRectToVisibleAreaForMoveDir@@YAXHAEAUImRect@@AEBU1@@Z ; NavClampRectToVisibleAreaForMoveDir
; Line 8713
	mov	rax, QWORD PTR curr$[rbp]
	movss	xmm3, DWORD PTR [rax+8]
	mov	rax, QWORD PTR curr$[rbp]
	movss	xmm2, DWORD PTR [rax]
	mov	rax, QWORD PTR cand$[rbp]
	movss	xmm1, DWORD PTR [rax+8]
	mov	rax, QWORD PTR cand$[rbp]
	movss	xmm0, DWORD PTR [rax]
	call	?NavScoreItemDistInterval@@YAMMMMM@Z	; NavScoreItemDistInterval
	movss	DWORD PTR dbx$[rbp], xmm0
; Line 8714
	movss	xmm2, DWORD PTR __real@3f4ccccd
	mov	rax, QWORD PTR curr$[rbp]
	movss	xmm1, DWORD PTR [rax+12]
	mov	rax, QWORD PTR curr$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	call	??$ImLerp@M@@YAMMMM@Z			; ImLerp<float>
	movss	DWORD PTR tv193[rbp], xmm0
	movss	xmm2, DWORD PTR __real@3e4ccccd
	mov	rax, QWORD PTR curr$[rbp]
	movss	xmm1, DWORD PTR [rax+12]
	mov	rax, QWORD PTR curr$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	call	??$ImLerp@M@@YAMMMM@Z			; ImLerp<float>
	movss	DWORD PTR tv191[rbp], xmm0
	movss	xmm2, DWORD PTR __real@3f4ccccd
	mov	rax, QWORD PTR cand$[rbp]
	movss	xmm1, DWORD PTR [rax+12]
	mov	rax, QWORD PTR cand$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	call	??$ImLerp@M@@YAMMMM@Z			; ImLerp<float>
	movss	DWORD PTR tv189[rbp], xmm0
	movss	xmm2, DWORD PTR __real@3e4ccccd
	mov	rax, QWORD PTR cand$[rbp]
	movss	xmm1, DWORD PTR [rax+12]
	mov	rax, QWORD PTR cand$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	call	??$ImLerp@M@@YAMMMM@Z			; ImLerp<float>
	movss	DWORD PTR tv187[rbp], xmm0
	movss	xmm3, DWORD PTR tv193[rbp]
	movss	xmm2, DWORD PTR tv191[rbp]
	movss	xmm1, DWORD PTR tv189[rbp]
	movss	xmm0, DWORD PTR tv187[rbp]
	call	?NavScoreItemDistInterval@@YAMMMMM@Z	; NavScoreItemDistInterval
	movss	DWORD PTR dby$[rbp], xmm0
; Line 8715
	movss	xmm0, DWORD PTR dby$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN37@NavScoreIt
	je	SHORT $LN5@NavScoreIt
$LN37@NavScoreIt:
	movss	xmm0, DWORD PTR dbx$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN36@NavScoreIt
	je	SHORT $LN5@NavScoreIt
$LN36@NavScoreIt:
; Line 8716
	movss	xmm0, DWORD PTR dbx$[rbp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN28@NavScoreIt
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv198[rbp], xmm0
	jmp	SHORT $LN29@NavScoreIt
$LN28@NavScoreIt:
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR tv198[rbp], xmm0
$LN29@NavScoreIt:
	movss	xmm0, DWORD PTR dbx$[rbp]
	divss	xmm0, DWORD PTR __real@447a0000
	addss	xmm0, DWORD PTR tv198[rbp]
	movss	DWORD PTR dbx$[rbp], xmm0
$LN5@NavScoreIt:
; Line 8717
	movss	xmm0, DWORD PTR dbx$[rbp]
	call	fabsf
	movss	DWORD PTR tv200[rbp], xmm0
	movss	xmm0, DWORD PTR dby$[rbp]
	call	fabsf
	movss	xmm1, DWORD PTR tv200[rbp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR dist_box$[rbp], xmm0
; Line 8720
	mov	rax, QWORD PTR cand$[rbp]
	mov	rcx, QWORD PTR cand$[rbp]
	movss	xmm0, DWORD PTR [rax]
	addss	xmm0, DWORD PTR [rcx+8]
	mov	rax, QWORD PTR curr$[rbp]
	mov	rcx, QWORD PTR curr$[rbp]
	movss	xmm1, DWORD PTR [rax]
	addss	xmm1, DWORD PTR [rcx+8]
	subss	xmm0, xmm1
	movss	DWORD PTR dcx$[rbp], xmm0
; Line 8721
	mov	rax, QWORD PTR cand$[rbp]
	mov	rcx, QWORD PTR cand$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	addss	xmm0, DWORD PTR [rcx+12]
	mov	rax, QWORD PTR curr$[rbp]
	mov	rcx, QWORD PTR curr$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	addss	xmm1, DWORD PTR [rcx+12]
	subss	xmm0, xmm1
	movss	DWORD PTR dcy$[rbp], xmm0
; Line 8722
	movss	xmm0, DWORD PTR dcx$[rbp]
	call	fabsf
	movss	DWORD PTR tv227[rbp], xmm0
	movss	xmm0, DWORD PTR dcy$[rbp]
	call	fabsf
	movss	xmm1, DWORD PTR tv227[rbp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR dist_center$[rbp], xmm0
; Line 8726
	xorps	xmm0, xmm0
	movss	DWORD PTR dax$[rbp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR day$[rbp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR dist_axial$[rbp], xmm0
; Line 8727
	movss	xmm0, DWORD PTR dbx$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN8@NavScoreIt
	jne	SHORT $LN8@NavScoreIt
	movss	xmm0, DWORD PTR dby$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN35@NavScoreIt
	je	SHORT $LN6@NavScoreIt
$LN35@NavScoreIt:
$LN8@NavScoreIt:
; Line 8730
	movss	xmm0, DWORD PTR dbx$[rbp]
	movss	DWORD PTR dax$[rbp], xmm0
; Line 8731
	movss	xmm0, DWORD PTR dby$[rbp]
	movss	DWORD PTR day$[rbp], xmm0
; Line 8732
	movss	xmm0, DWORD PTR dist_box$[rbp]
	movss	DWORD PTR dist_axial$[rbp], xmm0
; Line 8733
	movss	xmm1, DWORD PTR dby$[rbp]
	movss	xmm0, DWORD PTR dbx$[rbp]
	call	?ImGetDirQuadrantFromDelta@@YAHMM@Z	; ImGetDirQuadrantFromDelta
	mov	DWORD PTR quadrant$[rbp], eax
; Line 8734
	jmp	$LN7@NavScoreIt
$LN6@NavScoreIt:
; Line 8735
	movss	xmm0, DWORD PTR dcx$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN11@NavScoreIt
	jne	SHORT $LN11@NavScoreIt
	movss	xmm0, DWORD PTR dcy$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN34@NavScoreIt
	je	SHORT $LN9@NavScoreIt
$LN34@NavScoreIt:
$LN11@NavScoreIt:
; Line 8738
	movss	xmm0, DWORD PTR dcx$[rbp]
	movss	DWORD PTR dax$[rbp], xmm0
; Line 8739
	movss	xmm0, DWORD PTR dcy$[rbp]
	movss	DWORD PTR day$[rbp], xmm0
; Line 8740
	movss	xmm0, DWORD PTR dist_center$[rbp]
	movss	DWORD PTR dist_axial$[rbp], xmm0
; Line 8741
	movss	xmm1, DWORD PTR dcy$[rbp]
	movss	xmm0, DWORD PTR dcx$[rbp]
	call	?ImGetDirQuadrantFromDelta@@YAHMM@Z	; ImGetDirQuadrantFromDelta
	mov	DWORD PTR quadrant$[rbp], eax
; Line 8742
	jmp	SHORT $LN10@NavScoreIt
$LN9@NavScoreIt:
; Line 8746
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7632]
	cmp	DWORD PTR [rax+292], ecx
	jae	SHORT $LN30@NavScoreIt
	mov	DWORD PTR tv246[rbp], 0
	jmp	SHORT $LN31@NavScoreIt
$LN30@NavScoreIt:
	mov	DWORD PTR tv246[rbp], 1
$LN31@NavScoreIt:
	mov	eax, DWORD PTR tv246[rbp]
	mov	DWORD PTR quadrant$[rbp], eax
$LN10@NavScoreIt:
$LN7@NavScoreIt:
; Line 8774
	mov	BYTE PTR new_best$[rbp], 0
; Line 8775
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7752]
	cmp	DWORD PTR quadrant$[rbp], eax
	jne	$LN12@NavScoreIt
; Line 8778
	mov	rax, QWORD PTR result$[rbp]
	movss	xmm0, DWORD PTR [rax+32]
	comiss	xmm0, DWORD PTR dist_box$[rbp]
	jbe	SHORT $LN13@NavScoreIt
; Line 8780
	mov	rax, QWORD PTR result$[rbp]
	movss	xmm0, DWORD PTR dist_box$[rbp]
	movss	DWORD PTR [rax+32], xmm0
; Line 8781
	mov	rax, QWORD PTR result$[rbp]
	movss	xmm0, DWORD PTR dist_center$[rbp]
	movss	DWORD PTR [rax+36], xmm0
; Line 8782
	mov	al, 1
	jmp	$LN1@NavScoreIt
$LN13@NavScoreIt:
; Line 8784
	mov	rax, QWORD PTR result$[rbp]
	movss	xmm0, DWORD PTR dist_box$[rbp]
	ucomiss	xmm0, DWORD PTR [rax+32]
	jp	$LN14@NavScoreIt
	jne	$LN14@NavScoreIt
; Line 8787
	mov	rax, QWORD PTR result$[rbp]
	movss	xmm0, DWORD PTR [rax+36]
	comiss	xmm0, DWORD PTR dist_center$[rbp]
	jbe	SHORT $LN15@NavScoreIt
; Line 8789
	mov	rax, QWORD PTR result$[rbp]
	movss	xmm0, DWORD PTR dist_center$[rbp]
	movss	DWORD PTR [rax+36], xmm0
; Line 8790
	mov	BYTE PTR new_best$[rbp], 1
; Line 8791
	jmp	SHORT $LN16@NavScoreIt
$LN15@NavScoreIt:
; Line 8792
	mov	rax, QWORD PTR result$[rbp]
	movss	xmm0, DWORD PTR dist_center$[rbp]
	ucomiss	xmm0, DWORD PTR [rax+36]
	jp	SHORT $LN17@NavScoreIt
	jne	SHORT $LN17@NavScoreIt
; Line 8797
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], 2
	je	SHORT $LN32@NavScoreIt
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], 3
	je	SHORT $LN32@NavScoreIt
	movss	xmm0, DWORD PTR dbx$[rbp]
	movss	DWORD PTR tv264[rbp], xmm0
	jmp	SHORT $LN33@NavScoreIt
$LN32@NavScoreIt:
	movss	xmm0, DWORD PTR dby$[rbp]
	movss	DWORD PTR tv264[rbp], xmm0
$LN33@NavScoreIt:
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR tv264[rbp]
	jbe	SHORT $LN18@NavScoreIt
; Line 8798
	mov	BYTE PTR new_best$[rbp], 1
$LN18@NavScoreIt:
$LN17@NavScoreIt:
$LN16@NavScoreIt:
$LN14@NavScoreIt:
$LN12@NavScoreIt:
; Line 8808
	mov	rax, QWORD PTR result$[rbp]
	movss	xmm0, DWORD PTR [rax+32]
	ucomiss	xmm0, DWORD PTR __real@7f7fffff
	jp	$LN19@NavScoreIt
	jne	$LN19@NavScoreIt
	mov	rax, QWORD PTR result$[rbp]
	movss	xmm0, DWORD PTR [rax+40]
	comiss	xmm0, DWORD PTR dist_axial$[rbp]
	jbe	$LN19@NavScoreIt
; Line 8809
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7700], 1
	jne	$LN20@NavScoreIt
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 268435456				; 10000000H
	test	eax, eax
	jne	$LN20@NavScoreIt
; Line 8810
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], 0
	jne	SHORT $LN23@NavScoreIt
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR dax$[rbp]
	ja	SHORT $LN22@NavScoreIt
$LN23@NavScoreIt:
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], 1
	jne	SHORT $LN24@NavScoreIt
	movss	xmm0, DWORD PTR dax$[rbp]
	comiss	xmm0, DWORD PTR __real@00000000
	ja	SHORT $LN22@NavScoreIt
$LN24@NavScoreIt:
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], 2
	jne	SHORT $LN25@NavScoreIt
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR day$[rbp]
	ja	SHORT $LN22@NavScoreIt
$LN25@NavScoreIt:
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], 3
	jne	SHORT $LN21@NavScoreIt
	movss	xmm0, DWORD PTR day$[rbp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN21@NavScoreIt
$LN22@NavScoreIt:
; Line 8812
	mov	rax, QWORD PTR result$[rbp]
	movss	xmm0, DWORD PTR dist_axial$[rbp]
	movss	DWORD PTR [rax+40], xmm0
; Line 8813
	mov	BYTE PTR new_best$[rbp], 1
$LN21@NavScoreIt:
$LN20@NavScoreIt:
$LN19@NavScoreIt:
; Line 8816
	movzx	eax, BYTE PTR new_best$[rbp]
$LN1@NavScoreIt:
; Line 8817
	lea	rsp, QWORD PTR [rbp+664]
	pop	rdi
	pop	rbp
	ret	0
?NavScoreItem@ImGui@@YA_NPEAUImGuiNavItemData@@UImRect@@@Z ENDP ; ImGui::NavScoreItem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavEndFrame@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
move_flags$ = 68
bb_rel$4 = 104
clip_dir$5 = 148
__$ArrayPad$ = 360
?NavEndFrame@ImGui@@YAXXZ PROC				; ImGui::NavEndFrame, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 9499
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 400				; 00000190H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 44					; 0000002cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 9500
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 9503
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	je	SHORT $LN2@NavEndFram
; Line 9504
	call	?NavUpdateWindowingOverlay@ImGui@@YAXXZ	; ImGui::NavUpdateWindowingOverlay
$LN2@NavEndFram:
; Line 9507
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7912]
	mov	QWORD PTR window$[rbp], rax
; Line 9508
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7920]
	mov	DWORD PTR move_flags$[rbp], eax
; Line 9509
	cmp	QWORD PTR window$[rbp], 0
	je	$LN3@NavEndFram
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+7624], rcx
	jne	$LN3@NavEndFram
	call	?NavMoveRequestButNoResultYet@ImGui@@YA_NXZ ; ImGui::NavMoveRequestButNoResultYet
	movzx	eax, al
	test	eax, eax
	je	$LN3@NavEndFram
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7744], 0
	jne	$LN3@NavEndFram
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7700], 0
	jne	$LN3@NavEndFram
; Line 9511
	cmp	DWORD PTR move_flags$[rbp], 0
	jne	SHORT $LN13@NavEndFram
	mov	eax, DWORD PTR ?__LINE__Var@?0??NavEndFrame@ImGui@@YAXXZ@4JA
	add	eax, 12
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CA@PADPOC@?$AAm?$AAo?$AAv?$AAe?$AA_?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN13@NavEndFram:
; Line 9512
	mov	eax, 16
	imul	rax, rax, 0
	lea	rcx, QWORD PTR bb_rel$4[rbp]
	mov	rdx, QWORD PTR window$[rbp]
	mov	rdi, rcx
	lea	rsi, QWORD PTR [rdx+rax+944]
	mov	ecx, 16
	rep movsb
; Line 9514
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7752]
	mov	DWORD PTR clip_dir$5[rbp], eax
; Line 9515
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], 0
	jne	$LN4@NavEndFram
	mov	eax, DWORD PTR move_flags$[rbp]
	and	eax, 5
	test	eax, eax
	je	$LN4@NavEndFram
; Line 9517
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+64]
	mulss	xmm0, DWORD PTR __real@40000000
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+40]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movaps	xmm1, xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+32]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR window$[rbp]
	subss	xmm0, DWORD PTR [rax+92]
	movss	DWORD PTR bb_rel$4[rbp+8], xmm0
	movss	xmm0, DWORD PTR bb_rel$4[rbp+8]
	movss	DWORD PTR bb_rel$4[rbp], xmm0
; Line 9519
	mov	eax, DWORD PTR move_flags$[rbp]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN5@NavEndFram
; Line 9521
	lea	rcx, QWORD PTR bb_rel$4[rbp]
	call	?GetHeight@ImRect@@QEBAMXZ		; ImRect::GetHeight
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR bb_rel$4[rbp]
	call	?TranslateY@ImRect@@QEAAXM@Z		; ImRect::TranslateY
; Line 9522
	mov	DWORD PTR clip_dir$5[rbp], 2
$LN5@NavEndFram:
; Line 9524
	mov	r9d, DWORD PTR move_flags$[rbp]
	lea	r8, QWORD PTR bb_rel$4[rbp]
	mov	edx, DWORD PTR clip_dir$5[rbp]
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rax+7752]
	call	?NavMoveRequestForward@ImGui@@YAXHHAEBUImRect@@H@Z ; ImGui::NavMoveRequestForward
$LN4@NavEndFram:
; Line 9526
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], 1
	jne	SHORT $LN6@NavEndFram
	mov	eax, DWORD PTR move_flags$[rbp]
	and	eax, 5
	test	eax, eax
	je	SHORT $LN6@NavEndFram
; Line 9528
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+92]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR bb_rel$4[rbp+8], xmm0
	movss	xmm0, DWORD PTR bb_rel$4[rbp+8]
	movss	DWORD PTR bb_rel$4[rbp], xmm0
; Line 9529
	mov	eax, DWORD PTR move_flags$[rbp]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN7@NavEndFram
; Line 9531
	lea	rcx, QWORD PTR bb_rel$4[rbp]
	call	?GetHeight@ImRect@@QEBAMXZ		; ImRect::GetHeight
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR bb_rel$4[rbp]
	call	?TranslateY@ImRect@@QEAAXM@Z		; ImRect::TranslateY
; Line 9532
	mov	DWORD PTR clip_dir$5[rbp], 3
$LN7@NavEndFram:
; Line 9534
	mov	r9d, DWORD PTR move_flags$[rbp]
	lea	r8, QWORD PTR bb_rel$4[rbp]
	mov	edx, DWORD PTR clip_dir$5[rbp]
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rax+7752]
	call	?NavMoveRequestForward@ImGui@@YAXHHAEBUImRect@@H@Z ; ImGui::NavMoveRequestForward
$LN6@NavEndFram:
; Line 9536
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], 2
	jne	$LN8@NavEndFram
	mov	eax, DWORD PTR move_flags$[rbp]
	and	eax, 10
	test	eax, eax
	je	$LN8@NavEndFram
; Line 9538
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+68]
	mulss	xmm0, DWORD PTR __real@40000000
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+44]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movaps	xmm1, xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+36]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR window$[rbp]
	subss	xmm0, DWORD PTR [rax+96]
	movss	DWORD PTR bb_rel$4[rbp+12], xmm0
	movss	xmm0, DWORD PTR bb_rel$4[rbp+12]
	movss	DWORD PTR bb_rel$4[rbp+4], xmm0
; Line 9540
	mov	eax, DWORD PTR move_flags$[rbp]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN9@NavEndFram
; Line 9542
	lea	rcx, QWORD PTR bb_rel$4[rbp]
	call	?GetWidth@ImRect@@QEBAMXZ		; ImRect::GetWidth
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR bb_rel$4[rbp]
	call	?TranslateX@ImRect@@QEAAXM@Z		; ImRect::TranslateX
; Line 9543
	mov	DWORD PTR clip_dir$5[rbp], 0
$LN9@NavEndFram:
; Line 9545
	mov	r9d, DWORD PTR move_flags$[rbp]
	lea	r8, QWORD PTR bb_rel$4[rbp]
	mov	edx, DWORD PTR clip_dir$5[rbp]
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rax+7752]
	call	?NavMoveRequestForward@ImGui@@YAXHHAEBUImRect@@H@Z ; ImGui::NavMoveRequestForward
$LN8@NavEndFram:
; Line 9547
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], 3
	jne	SHORT $LN10@NavEndFram
	mov	eax, DWORD PTR move_flags$[rbp]
	and	eax, 10
	test	eax, eax
	je	SHORT $LN10@NavEndFram
; Line 9549
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+96]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR bb_rel$4[rbp+12], xmm0
	movss	xmm0, DWORD PTR bb_rel$4[rbp+12]
	movss	DWORD PTR bb_rel$4[rbp+4], xmm0
; Line 9550
	mov	eax, DWORD PTR move_flags$[rbp]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN11@NavEndFram
; Line 9552
	lea	rcx, QWORD PTR bb_rel$4[rbp]
	call	?GetWidth@ImRect@@QEBAMXZ		; ImRect::GetWidth
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR bb_rel$4[rbp]
	call	?TranslateX@ImRect@@QEAAXM@Z		; ImRect::TranslateX
; Line 9553
	mov	DWORD PTR clip_dir$5[rbp], 1
$LN11@NavEndFram:
; Line 9555
	mov	r9d, DWORD PTR move_flags$[rbp]
	lea	r8, QWORD PTR bb_rel$4[rbp]
	mov	edx, DWORD PTR clip_dir$5[rbp]
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rax+7752]
	call	?NavMoveRequestForward@ImGui@@YAXHHAEBUImRect@@H@Z ; ImGui::NavMoveRequestForward
$LN10@NavEndFram:
$LN3@NavEndFram:
; Line 9558
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?NavEndFrame@ImGui@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+368]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?NavEndFrame@ImGui@@YAXXZ ENDP				; ImGui::NavEndFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavUpdateAnyRequestFlag@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
tv72 = 212
?NavUpdateAnyRequestFlag@ImGui@@YAXXZ PROC		; ImGui::NavUpdateAnyRequestFlag, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8963
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8964
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8965
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7736]
	test	eax, eax
	jne	SHORT $LN4@NavUpdateA
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7713]
	test	eax, eax
	jne	SHORT $LN4@NavUpdateA
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@NavUpdateA
	mov	DWORD PTR tv72[rbp], 0
	jmp	SHORT $LN5@NavUpdateA
$LN4@NavUpdateA:
	mov	DWORD PTR tv72[rbp], 1
$LN5@NavUpdateA:
	mov	rax, QWORD PTR g$[rbp]
	movzx	ecx, BYTE PTR tv72[rbp]
	mov	BYTE PTR [rax+7712], cl
; Line 8966
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7712]
	test	eax, eax
	je	SHORT $LN2@NavUpdateA
; Line 8967
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	jne	SHORT $LN6@NavUpdateA
	mov	eax, DWORD PTR ?__LINE__Var@?0??NavUpdateAnyRequestFlag@ImGui@@YAXXZ@4JA
	add	eax, 4
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CC@BGDNHLPI@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@NavUpdateA:
$LN2@NavUpdateA:
; Line 8968
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?NavUpdateAnyRequestFlag@ImGui@@YAXXZ ENDP		; ImGui::NavUpdateAnyRequestFlag
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavUpdatePageUpPageDown@ImGui@@YAMXZ
_TEXT	SEGMENT
g$ = 8
io$ = 40
window$ = 72
page_up_held$ = 100
page_down_held$ = 132
home_pressed$ = 164
end_pressed$ = 196
nav_rect_rel$1 = 232
page_offset_y$2 = 260
nav_scoring_rect_offset_y$3 = 292
tv289 = 500
tv265 = 500
tv224 = 500
tv159 = 500
tv146 = 500
tv133 = 500
tv89 = 500
tv228 = 504
?NavUpdatePageUpPageDown@ImGui@@YAMXZ PROC		; ImGui::NavUpdatePageUpPageDown, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 9426
	push	rbp
	push	rdi
	sub	rsp, 568				; 00000238H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 9427
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 9428
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8
	mov	QWORD PTR io$[rbp], rax
; Line 9430
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], -1
	jne	SHORT $LN3@NavUpdateP
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	jne	SHORT $LN2@NavUpdateP
$LN3@NavUpdateP:
; Line 9431
	xorps	xmm0, xmm0
	jmp	$LN1@NavUpdateP
$LN2@NavUpdateP:
; Line 9432
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 262144				; 00040000H
	test	eax, eax
	jne	SHORT $LN5@NavUpdateP
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	jne	SHORT $LN5@NavUpdateP
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7700], 0
	je	SHORT $LN4@NavUpdateP
$LN5@NavUpdateP:
; Line 9433
	xorps	xmm0, xmm0
	jmp	$LN1@NavUpdateP
$LN4@NavUpdateP:
; Line 9435
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	QWORD PTR window$[rbp], rax
; Line 9436
	mov	eax, 4
	imul	rax, rax, 5
	mov	rcx, QWORD PTR io$[rbp]
	mov	ecx, DWORD PTR [rcx+rax+52]
	call	?IsKeyDown@ImGui@@YA_NH@Z		; ImGui::IsKeyDown
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN27@NavUpdateP
	mov	ecx, 5
	call	?IsActiveIdUsingKey@ImGui@@YA_NH@Z	; ImGui::IsActiveIdUsingKey
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN27@NavUpdateP
	mov	BYTE PTR tv89[rbp], 1
	jmp	SHORT $LN28@NavUpdateP
$LN27@NavUpdateP:
	mov	BYTE PTR tv89[rbp], 0
$LN28@NavUpdateP:
	movzx	eax, BYTE PTR tv89[rbp]
	mov	BYTE PTR page_up_held$[rbp], al
; Line 9437
	mov	eax, 4
	imul	rax, rax, 6
	mov	rcx, QWORD PTR io$[rbp]
	mov	ecx, DWORD PTR [rcx+rax+52]
	call	?IsKeyDown@ImGui@@YA_NH@Z		; ImGui::IsKeyDown
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN29@NavUpdateP
	mov	ecx, 6
	call	?IsActiveIdUsingKey@ImGui@@YA_NH@Z	; ImGui::IsActiveIdUsingKey
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN29@NavUpdateP
	mov	BYTE PTR tv133[rbp], 1
	jmp	SHORT $LN30@NavUpdateP
$LN29@NavUpdateP:
	mov	BYTE PTR tv133[rbp], 0
$LN30@NavUpdateP:
	movzx	eax, BYTE PTR tv133[rbp]
	mov	BYTE PTR page_down_held$[rbp], al
; Line 9438
	mov	eax, 4
	imul	rax, rax, 7
	mov	dl, 1
	mov	rcx, QWORD PTR io$[rbp]
	mov	ecx, DWORD PTR [rcx+rax+52]
	call	?IsKeyPressed@ImGui@@YA_NH_N@Z		; ImGui::IsKeyPressed
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN31@NavUpdateP
	mov	ecx, 7
	call	?IsActiveIdUsingKey@ImGui@@YA_NH@Z	; ImGui::IsActiveIdUsingKey
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN31@NavUpdateP
	mov	BYTE PTR tv146[rbp], 1
	jmp	SHORT $LN32@NavUpdateP
$LN31@NavUpdateP:
	mov	BYTE PTR tv146[rbp], 0
$LN32@NavUpdateP:
	movzx	eax, BYTE PTR tv146[rbp]
	mov	BYTE PTR home_pressed$[rbp], al
; Line 9439
	mov	eax, 4
	imul	rax, rax, 8
	mov	dl, 1
	mov	rcx, QWORD PTR io$[rbp]
	mov	ecx, DWORD PTR [rcx+rax+52]
	call	?IsKeyPressed@ImGui@@YA_NH_N@Z		; ImGui::IsKeyPressed
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN33@NavUpdateP
	mov	ecx, 8
	call	?IsActiveIdUsingKey@ImGui@@YA_NH@Z	; ImGui::IsActiveIdUsingKey
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN33@NavUpdateP
	mov	BYTE PTR tv159[rbp], 1
	jmp	SHORT $LN34@NavUpdateP
$LN33@NavUpdateP:
	mov	BYTE PTR tv159[rbp], 0
$LN34@NavUpdateP:
	movzx	eax, BYTE PTR tv159[rbp]
	mov	BYTE PTR end_pressed$[rbp], al
; Line 9440
	movzx	eax, BYTE PTR page_up_held$[rbp]
	movzx	ecx, BYTE PTR page_down_held$[rbp]
	cmp	eax, ecx
	jne	SHORT $LN7@NavUpdateP
	movzx	eax, BYTE PTR home_pressed$[rbp]
	movzx	ecx, BYTE PTR end_pressed$[rbp]
	cmp	eax, ecx
	je	$LN6@NavUpdateP
$LN7@NavUpdateP:
; Line 9442
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, WORD PTR [rax+336]
	test	eax, eax
	jne	$LN8@NavUpdateP
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+345]
	test	eax, eax
	je	$LN8@NavUpdateP
; Line 9445
	mov	eax, 4
	imul	rax, rax, 5
	mov	dl, 1
	mov	rcx, QWORD PTR io$[rbp]
	mov	ecx, DWORD PTR [rcx+rax+52]
	call	?IsKeyPressed@ImGui@@YA_NH_N@Z		; ImGui::IsKeyPressed
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@NavUpdateP
; Line 9446
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 528				; 00000210H
	mov	rcx, rax
	call	?GetHeight@ImRect@@QEBAMXZ		; ImRect::GetHeight
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+96]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetScrollY@ImGui@@YAXPEAUImGuiWindow@@M@Z ; ImGui::SetScrollY
	jmp	$LN11@NavUpdateP
$LN10@NavUpdateP:
; Line 9447
	mov	eax, 4
	imul	rax, rax, 6
	mov	dl, 1
	mov	rcx, QWORD PTR io$[rbp]
	mov	ecx, DWORD PTR [rcx+rax+52]
	call	?IsKeyPressed@ImGui@@YA_NH_N@Z		; ImGui::IsKeyPressed
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@NavUpdateP
; Line 9448
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 528				; 00000210H
	mov	rcx, rax
	call	?GetHeight@ImRect@@QEBAMXZ		; ImRect::GetHeight
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+96]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetScrollY@ImGui@@YAXPEAUImGuiWindow@@M@Z ; ImGui::SetScrollY
	jmp	SHORT $LN13@NavUpdateP
$LN12@NavUpdateP:
; Line 9449
	movzx	eax, BYTE PTR home_pressed$[rbp]
	test	eax, eax
	je	SHORT $LN14@NavUpdateP
; Line 9450
	xorps	xmm1, xmm1
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetScrollY@ImGui@@YAXPEAUImGuiWindow@@M@Z ; ImGui::SetScrollY
	jmp	SHORT $LN15@NavUpdateP
$LN14@NavUpdateP:
; Line 9451
	movzx	eax, BYTE PTR end_pressed$[rbp]
	test	eax, eax
	je	SHORT $LN16@NavUpdateP
; Line 9452
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+104]
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetScrollY@ImGui@@YAXPEAUImGuiWindow@@M@Z ; ImGui::SetScrollY
$LN16@NavUpdateP:
$LN15@NavUpdateP:
$LN13@NavUpdateP:
$LN11@NavUpdateP:
; Line 9453
	jmp	$LN9@NavUpdateP
$LN8@NavUpdateP:
; Line 9456
	mov	rax, QWORD PTR g$[rbp]
	movsxd	rax, DWORD PTR [rax+7700]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR window$[rbp]
	lea	rax, QWORD PTR [rcx+rax+944]
	mov	QWORD PTR nav_rect_rel$1[rbp], rax
; Line 9457
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 528				; 00000210H
	mov	rcx, rax
	call	?GetHeight@ImRect@@QEBAMXZ		; ImRect::GetHeight
	movss	DWORD PTR tv224[rbp], xmm0
	mov	rcx, QWORD PTR window$[rbp]
	call	?CalcFontSize@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::CalcFontSize
	mulss	xmm0, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR tv224[rbp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv228[rbp], xmm0
	mov	rcx, QWORD PTR nav_rect_rel$1[rbp]
	call	?GetHeight@ImRect@@QEBAMXZ		; ImRect::GetHeight
	movss	xmm1, DWORD PTR tv228[rbp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movaps	xmm1, xmm0
	xorps	xmm0, xmm0
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR page_offset_y$2[rbp], xmm0
; Line 9458
	xorps	xmm0, xmm0
	movss	DWORD PTR nav_scoring_rect_offset_y$3[rbp], xmm0
; Line 9459
	mov	eax, 4
	imul	rax, rax, 5
	mov	dl, 1
	mov	rcx, QWORD PTR io$[rbp]
	mov	ecx, DWORD PTR [rcx+rax+52]
	call	?IsKeyPressed@ImGui@@YA_NH_N@Z		; ImGui::IsKeyPressed
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN17@NavUpdateP
; Line 9461
	movss	xmm0, DWORD PTR page_offset_y$2[rbp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR nav_scoring_rect_offset_y$3[rbp], xmm0
; Line 9462
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7752], 3
; Line 9463
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7760], 2
; Line 9464
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7740], 48		; 00000030H
; Line 9465
	jmp	$LN18@NavUpdateP
$LN17@NavUpdateP:
; Line 9466
	mov	eax, 4
	imul	rax, rax, 6
	mov	dl, 1
	mov	rcx, QWORD PTR io$[rbp]
	mov	ecx, DWORD PTR [rcx+rax+52]
	call	?IsKeyPressed@ImGui@@YA_NH_N@Z		; ImGui::IsKeyPressed
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN19@NavUpdateP
; Line 9468
	movss	xmm0, DWORD PTR page_offset_y$2[rbp]
	movss	DWORD PTR nav_scoring_rect_offset_y$3[rbp], xmm0
; Line 9469
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7752], 2
; Line 9470
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7760], 3
; Line 9471
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7740], 48		; 00000030H
; Line 9472
	jmp	$LN20@NavUpdateP
$LN19@NavUpdateP:
; Line 9473
	movzx	eax, BYTE PTR home_pressed$[rbp]
	test	eax, eax
	je	$LN21@NavUpdateP
; Line 9478
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+96]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR tv265[rbp], xmm0
	mov	rax, QWORD PTR nav_rect_rel$1[rbp]
	movss	xmm0, DWORD PTR tv265[rbp]
	movss	DWORD PTR [rax+12], xmm0
	mov	rax, QWORD PTR nav_rect_rel$1[rbp]
	movss	xmm0, DWORD PTR tv265[rbp]
	movss	DWORD PTR [rax+4], xmm0
; Line 9479
	mov	rcx, QWORD PTR nav_rect_rel$1[rbp]
	call	?IsInverted@ImRect@@QEBA_NXZ		; ImRect::IsInverted
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN23@NavUpdateP
; Line 9480
	mov	rax, QWORD PTR nav_rect_rel$1[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR nav_rect_rel$1[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
$LN23@NavUpdateP:
; Line 9481
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7752], 3
; Line 9482
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7740], 80		; 00000050H
; Line 9483
	jmp	$LN22@NavUpdateP
$LN21@NavUpdateP:
; Line 9484
	movzx	eax, BYTE PTR end_pressed$[rbp]
	test	eax, eax
	je	$LN24@NavUpdateP
; Line 9486
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+104]
	addss	xmm0, DWORD PTR [rcx+36]
	mov	rax, QWORD PTR window$[rbp]
	subss	xmm0, DWORD PTR [rax+96]
	movss	DWORD PTR tv289[rbp], xmm0
	mov	rax, QWORD PTR nav_rect_rel$1[rbp]
	movss	xmm0, DWORD PTR tv289[rbp]
	movss	DWORD PTR [rax+12], xmm0
	mov	rax, QWORD PTR nav_rect_rel$1[rbp]
	movss	xmm0, DWORD PTR tv289[rbp]
	movss	DWORD PTR [rax+4], xmm0
; Line 9487
	mov	rcx, QWORD PTR nav_rect_rel$1[rbp]
	call	?IsInverted@ImRect@@QEBA_NXZ		; ImRect::IsInverted
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN25@NavUpdateP
; Line 9488
	mov	rax, QWORD PTR nav_rect_rel$1[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR nav_rect_rel$1[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
$LN25@NavUpdateP:
; Line 9489
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7752], 2
; Line 9490
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7740], 80		; 00000050H
$LN24@NavUpdateP:
$LN22@NavUpdateP:
$LN20@NavUpdateP:
$LN18@NavUpdateP:
; Line 9492
	movss	xmm0, DWORD PTR nav_scoring_rect_offset_y$3[rbp]
	jmp	SHORT $LN1@NavUpdateP
$LN9@NavUpdateP:
$LN6@NavUpdateP:
; Line 9495
	xorps	xmm0, xmm0
$LN1@NavUpdateP:
; Line 9496
	lea	rsp, QWORD PTR [rbp+520]
	pop	rdi
	pop	rbp
	ret	0
?NavUpdatePageUpPageDown@ImGui@@YAMXZ ENDP		; ImGui::NavUpdatePageUpPageDown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavUpdateInitResult@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
?NavUpdateInitResult@ImGui@@YAXXZ PROC			; ImGui::NavUpdateInitResult, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 9342
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 9344
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 9345
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	jne	SHORT $LN2@NavUpdateI
; Line 9346
	jmp	SHORT $LN1@NavUpdateI
$LN2@NavUpdateI:
; Line 9351
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7720				; 00001e28H
	mov	r9, rax
	xor	r8d, r8d
	mov	rax, QWORD PTR g$[rbp]
	mov	edx, DWORD PTR [rax+7700]
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rax+7716]
	call	?SetNavID@ImGui@@YAXIW4ImGuiNavLayer@@IAEBUImRect@@@Z ; ImGui::SetNavID
; Line 9352
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7714]
	test	eax, eax
	je	SHORT $LN3@NavUpdateI
; Line 9354
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7710], 0
; Line 9355
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7709], 1
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7711], 1
$LN3@NavUpdateI:
$LN1@NavUpdateI:
; Line 9357
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?NavUpdateInitResult@ImGui@@YAXXZ ENDP			; ImGui::NavUpdateInitResult
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavUpdateMoveResult@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
result$ = 40
delta_scroll$5 = 72
scroll_target$6 = 100
rect_abs$7 = 136
$T8 = 372
$T9 = 404
$T10 = 436
tv166 = 452
tv214 = 456
tv208 = 456
tv197 = 456
tv79 = 456
tv195 = 464
__$ArrayPad$ = 472
?NavUpdateMoveResult@ImGui@@YAXXZ PROC			; ImGui::NavUpdateMoveResult, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 9361
	push	rbp
	push	rdi
	sub	rsp, 520				; 00000208H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 9362
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 9363
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7776], 0
	jne	SHORT $LN2@NavUpdateM
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7872], 0
	jne	SHORT $LN2@NavUpdateM
; Line 9366
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7632], 0
	je	SHORT $LN3@NavUpdateM
; Line 9368
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7710], 0
; Line 9369
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7711], 1
$LN3@NavUpdateM:
; Line 9371
	jmp	$LN1@NavUpdateM
$LN2@NavUpdateM:
; Line 9375
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7776], 0
	je	SHORT $LN14@NavUpdateM
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7768				; 00001e58H
	mov	QWORD PTR tv79[rbp], rax
	jmp	SHORT $LN15@NavUpdateM
$LN14@NavUpdateM:
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7864				; 00001eb8H
	mov	QWORD PTR tv79[rbp], rax
$LN15@NavUpdateM:
	mov	rax, QWORD PTR tv79[rbp]
	mov	QWORD PTR result$[rbp], rax
; Line 9378
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7740]
	and	eax, 32					; 00000020H
	test	eax, eax
	je	SHORT $LN4@NavUpdateM
; Line 9379
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7824], 0
	je	SHORT $LN5@NavUpdateM
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7632]
	cmp	DWORD PTR [rax+7824], ecx
	je	SHORT $LN5@NavUpdateM
; Line 9380
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7816				; 00001e88H
	mov	QWORD PTR result$[rbp], rax
$LN5@NavUpdateM:
$LN4@NavUpdateM:
; Line 9383
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7864				; 00001eb8H
	cmp	QWORD PTR result$[rbp], rax
	je	SHORT $LN6@NavUpdateM
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7872], 0
	je	SHORT $LN6@NavUpdateM
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7864]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+7624]
	cmp	QWORD PTR [rax+896], rcx
	jne	SHORT $LN6@NavUpdateM
; Line 9384
	mov	rax, QWORD PTR result$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+32]
	comiss	xmm0, DWORD PTR [rcx+7896]
	ja	SHORT $LN8@NavUpdateM
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR result$[rbp]
	movss	xmm0, DWORD PTR [rax+7896]
	ucomiss	xmm0, DWORD PTR [rcx+32]
	jp	SHORT $LN7@NavUpdateM
	jne	SHORT $LN7@NavUpdateM
	mov	rax, QWORD PTR result$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+36]
	comiss	xmm0, DWORD PTR [rcx+7900]
	jbe	SHORT $LN7@NavUpdateM
$LN8@NavUpdateM:
; Line 9385
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7864				; 00001eb8H
	mov	QWORD PTR result$[rbp], rax
$LN7@NavUpdateM:
$LN6@NavUpdateM:
; Line 9386
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN16@NavUpdateM
	mov	rax, QWORD PTR result$[rbp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN17@NavUpdateM
$LN16@NavUpdateM:
	mov	eax, DWORD PTR ?__LINE__Var@?0??NavUpdateMoveResult@ImGui@@YAXXZ@4JA
	add	eax, 25
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DM@EKPCIOHK@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN17@NavUpdateM:
; Line 9389
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7700], 0
	jne	$LN9@NavUpdateM
; Line 9391
	lea	rcx, QWORD PTR delta_scroll$5[rbp]
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
; Line 9392
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7740]
	and	eax, 64					; 00000040H
	test	eax, eax
	je	SHORT $LN10@NavUpdateM
; Line 9394
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], 2
	jne	SHORT $LN18@NavUpdateM
	mov	rax, QWORD PTR result$[rbp]
	mov	rax, QWORD PTR [rax]
	movss	xmm0, DWORD PTR [rax+104]
	movss	DWORD PTR tv166[rbp], xmm0
	jmp	SHORT $LN19@NavUpdateM
$LN18@NavUpdateM:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv166[rbp], xmm0
$LN19@NavUpdateM:
	movss	xmm0, DWORD PTR tv166[rbp]
	movss	DWORD PTR scroll_target$6[rbp], xmm0
; Line 9395
	mov	rax, QWORD PTR result$[rbp]
	mov	rax, QWORD PTR [rax]
	movss	xmm0, DWORD PTR [rax+96]
	subss	xmm0, DWORD PTR scroll_target$6[rbp]
	movss	DWORD PTR delta_scroll$5[rbp+4], xmm0
; Line 9396
	movss	xmm1, DWORD PTR scroll_target$6[rbp]
	mov	rax, QWORD PTR result$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?SetScrollY@ImGui@@YAXPEAUImGuiWindow@@M@Z ; ImGui::SetScrollY
; Line 9397
	jmp	$LN11@NavUpdateM
$LN10@NavUpdateM:
; Line 9400
	mov	rax, QWORD PTR result$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 16
	mov	rcx, QWORD PTR result$[rbp]
	add	rcx, 24
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T8[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv197[rbp], rax
	mov	rax, QWORD PTR result$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 16
	mov	rcx, QWORD PTR result$[rbp]
	add	rcx, 16
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv195[rbp], rax
	mov	r8, QWORD PTR tv197[rbp]
	mov	rdx, QWORD PTR tv195[rbp]
	lea	rcx, QWORD PTR rect_abs$7[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
; Line 9401
	lea	r8, QWORD PTR rect_abs$7[rbp]
	mov	rax, QWORD PTR result$[rbp]
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR $T10[rbp]
	call	?ScrollToBringRectIntoView@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@AEBUImRect@@@Z ; ImGui::ScrollToBringRectIntoView
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR delta_scroll$5[rbp], rax
$LN11@NavUpdateM:
; Line 9405
	mov	rax, QWORD PTR result$[rbp]
	add	rax, 16
	mov	QWORD PTR tv208[rbp], rax
	movss	xmm0, DWORD PTR delta_scroll$5[rbp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR tv208[rbp]
	call	?TranslateX@ImRect@@QEAAXM@Z		; ImRect::TranslateX
; Line 9406
	mov	rax, QWORD PTR result$[rbp]
	add	rax, 16
	mov	QWORD PTR tv214[rbp], rax
	movss	xmm0, DWORD PTR delta_scroll$5[rbp+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR tv214[rbp]
	call	?TranslateY@ImRect@@QEAAXM@Z		; ImRect::TranslateY
$LN9@NavUpdateM:
; Line 9409
	call	?ClearActiveID@ImGui@@YAXXZ		; ImGui::ClearActiveID
; Line 9410
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR result$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax+7624], rcx
; Line 9411
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR result$[rbp]
	mov	ecx, DWORD PTR [rcx+8]
	cmp	DWORD PTR [rax+7632], ecx
	je	SHORT $LN12@NavUpdateM
; Line 9414
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR result$[rbp]
	mov	ecx, DWORD PTR [rcx+8]
	mov	DWORD PTR [rax+7660], ecx
; Line 9415
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR result$[rbp]
	mov	ecx, DWORD PTR [rcx+12]
	mov	DWORD PTR [rax+7664], ecx
; Line 9416
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7748]
	mov	DWORD PTR [rax+7668], ecx
$LN12@NavUpdateM:
; Line 9419
	mov	rax, QWORD PTR result$[rbp]
	add	rax, 16
	mov	r9, rax
	mov	rax, QWORD PTR result$[rbp]
	mov	r8d, DWORD PTR [rax+12]
	mov	rax, QWORD PTR g$[rbp]
	mov	edx, DWORD PTR [rax+7700]
	mov	rax, QWORD PTR result$[rbp]
	mov	ecx, DWORD PTR [rax+8]
	call	?SetNavID@ImGui@@YAXIW4ImGuiNavLayer@@IAEBUImRect@@@Z ; ImGui::SetNavID
; Line 9420
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7710], 0
; Line 9421
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7709], 1
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7711], 1
$LN1@NavUpdateM:
; Line 9422
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?NavUpdateMoveResult@ImGui@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+488]
	pop	rdi
	pop	rbp
	ret	0
?NavUpdateMoveResult@ImGui@@YAXXZ ENDP			; ImGui::NavUpdateMoveResult
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavUpdateWindowingOverlay@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
viewport$ = 40
n$1 = 68
window$2 = 104
label$3 = 136
$T4 = 356
$T5 = 388
$T6 = 420
$T7 = 452
$T8 = 484
$T9 = 516
tv199 = 536
tv168 = 536
tv146 = 536
tv132 = 536
tv195 = 544
tv144 = 544
tv130 = 544
?NavUpdateWindowingOverlay@ImGui@@YAXXZ PROC		; ImGui::NavUpdateWindowingOverlay, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 9759
	push	rbp
	push	rdi
	sub	rsp, 600				; 00000258H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 9760
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 9761
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	jne	SHORT $LN10@NavUpdateW
	mov	eax, DWORD PTR ?__LINE__Var@?0??NavUpdateWindowingOverlay@ImGui@@YAXXZ@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DE@DBGGCEBB@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAi?$AAn?$AAg?$AAT@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN10@NavUpdateW:
; Line 9763
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR __real@3e19999a
	comiss	xmm0, DWORD PTR [rax+7952]
	jbe	SHORT $LN5@NavUpdateW
; Line 9764
	jmp	$LN1@NavUpdateW
$LN5@NavUpdateW:
; Line 9766
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7944], 0
	jne	SHORT $LN6@NavUpdateW
; Line 9767
	lea	rcx, OFFSET FLAT:??_C@_0BE@EBHFKNCA@?$CD?$CD?$CDNavWindowingList@
	call	?FindWindowByName@ImGui@@YAPEAUImGuiWindow@@PEBD@Z ; ImGui::FindWindowByName
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+7944], rax
$LN6@NavUpdateW:
; Line 9768
	call	?GetMainViewport@ImGui@@YAPEAUImGuiViewport@@XZ ; ImGui::GetMainViewport
	mov	QWORD PTR viewport$[rbp], rax
; Line 9769
	movss	xmm2, DWORD PTR __real@7f7fffff
	movss	xmm1, DWORD PTR __real@7f7fffff
	lea	rcx, QWORD PTR $T4[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv132[rbp], rax
	mov	rax, QWORD PTR viewport$[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	mulss	xmm0, DWORD PTR __real@3e4ccccd
	mov	rax, QWORD PTR viewport$[rbp]
	movss	xmm1, DWORD PTR [rax+12]
	mulss	xmm1, DWORD PTR __real@3e4ccccd
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR $T5[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv130[rbp], rax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rdx, QWORD PTR tv132[rbp]
	mov	rcx, QWORD PTR tv130[rbp]
	call	?SetNextWindowSizeConstraints@ImGui@@YAXAEBUImVec2@@0P6AXPEAUImGuiSizeCallbackData@@@ZPEAX@Z ; ImGui::SetNextWindowSizeConstraints
; Line 9770
	movss	xmm2, DWORD PTR __real@3f000000
	movss	xmm1, DWORD PTR __real@3f000000
	lea	rcx, QWORD PTR $T6[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv146[rbp], rax
	lea	rdx, QWORD PTR $T7[rbp]
	mov	rcx, QWORD PTR viewport$[rbp]
	call	?GetCenter@ImGuiViewport@@QEBA?AUImVec2@@XZ ; ImGuiViewport::GetCenter
	mov	QWORD PTR tv144[rbp], rax
	mov	r8, QWORD PTR tv146[rbp]
	mov	edx, 1
	mov	rcx, QWORD PTR tv144[rbp]
	call	?SetNextWindowPos@ImGui@@YAXAEBUImVec2@@H0@Z ; ImGui::SetNextWindowPos
; Line 9771
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 5476				; 00001564H
	movss	xmm2, DWORD PTR __real@40000000
	mov	rdx, rax
	lea	rcx, QWORD PTR $T8[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	rdx, rax
	mov	ecx, 1
	call	?PushStyleVar@ImGui@@YAXHAEBUImVec2@@@Z	; ImGui::PushStyleVar
; Line 9772
	mov	r8d, 791367				; 000c1347H
	xor	edx, edx
	lea	rcx, OFFSET FLAT:??_C@_0BE@EBHFKNCA@?$CD?$CD?$CDNavWindowingList@
	call	?Begin@ImGui@@YA_NPEBDPEA_NH@Z		; ImGui::Begin
; Line 9773
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7104]
	dec	eax
	mov	DWORD PTR n$1[rbp], eax
	jmp	SHORT $LN4@NavUpdateW
$LN2@NavUpdateW:
	mov	eax, DWORD PTR n$1[rbp]
	dec	eax
	mov	DWORD PTR n$1[rbp], eax
$LN4@NavUpdateW:
	cmp	DWORD PTR n$1[rbp], 0
	jl	$LN3@NavUpdateW
; Line 9775
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7104				; 00001bc0H
	mov	QWORD PTR tv168[rbp], rax
	mov	edx, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR tv168[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR window$2[rbp], rax
; Line 9776
	cmp	QWORD PTR window$2[rbp], 0
	jne	SHORT $LN11@NavUpdateW
	mov	eax, DWORD PTR ?__LINE__Var@?0??NavUpdateWindowingOverlay@ImGui@@YAXXZ@4JA
	add	eax, 17
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BI@JFIKNFKH@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN11@NavUpdateW:
; Line 9777
	mov	rcx, QWORD PTR window$2[rbp]
	call	?IsWindowNavFocusable@ImGui@@YA_NPEAUImGuiWindow@@@Z ; ImGui::IsWindowNavFocusable
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN7@NavUpdateW
; Line 9778
	jmp	SHORT $LN2@NavUpdateW
$LN7@NavUpdateW:
; Line 9779
	mov	rax, QWORD PTR window$2[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR label$3[rbp], rax
; Line 9780
	xor	edx, edx
	mov	rcx, QWORD PTR label$3[rbp]
	call	?FindRenderedTextEnd@ImGui@@YAPEBDPEBD0@Z ; ImGui::FindRenderedTextEnd
	cmp	QWORD PTR label$3[rbp], rax
	jne	SHORT $LN8@NavUpdateW
; Line 9781
	mov	rcx, QWORD PTR window$2[rbp]
	call	?GetFallbackWindowNameForWindowingList@@YAPEBDPEAUImGuiWindow@@@Z ; GetFallbackWindowNameForWindowingList
	mov	QWORD PTR label$3[rbp], rax
$LN8@NavUpdateW:
; Line 9782
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T9[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv199[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$2[rbp]
	cmp	QWORD PTR [rax+7928], rcx
	jne	SHORT $LN12@NavUpdateW
	mov	BYTE PTR tv195[rbp], 1
	jmp	SHORT $LN13@NavUpdateW
$LN12@NavUpdateW:
	mov	BYTE PTR tv195[rbp], 0
$LN13@NavUpdateW:
	mov	r9, QWORD PTR tv199[rbp]
	xor	r8d, r8d
	movzx	edx, BYTE PTR tv195[rbp]
	mov	rcx, QWORD PTR label$3[rbp]
	call	?Selectable@ImGui@@YA_NPEBD_NHAEBUImVec2@@@Z ; ImGui::Selectable
; Line 9783
	jmp	$LN2@NavUpdateW
$LN3@NavUpdateW:
; Line 9784
	call	?End@ImGui@@YAXXZ			; ImGui::End
; Line 9785
	mov	ecx, 1
	call	?PopStyleVar@ImGui@@YAXH@Z		; ImGui::PopStyleVar
$LN1@NavUpdateW:
; Line 9786
	lea	rsp, QWORD PTR [rbp+568]
	pop	rdi
	pop	rbp
	ret	0
?NavUpdateWindowingOverlay@ImGui@@YAXXZ ENDP		; ImGui::NavUpdateWindowingOverlay
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavUpdateWindowing@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
apply_focus_window$ = 40
apply_toggle_layer$ = 68
modal_window$ = 104
allow_windowing$ = 132
start_windowing_with_gamepad$ = 164
start_windowing_with_keyboard$ = 196
window$4 = 232
focus_change_dir$5 = 260
move_delta$6 = 296
NAV_MOVE_SPEED$7 = 324
move_speed$8 = 356
moving_window$9 = 392
new_nav_window$10 = 424
old_nav_window$11 = 456
new_nav_layer$12 = 484
$T13 = 900
$T14 = 932
$T15 = 964
$T16 = 996
tv424 = 1012
tv336 = 1012
tv295 = 1012
tv265 = 1012
tv255 = 1012
tv225 = 1012
tv207 = 1012
tv203 = 1012
tv180 = 1012
tv176 = 1012
tv149 = 1012
tv130 = 1012
tv66 = 1012
tv253 = 1016
tv201 = 1016
tv165 = 1016
__$ArrayPad$ = 1024
?NavUpdateWindowing@ImGui@@YAXXZ PROC			; ImGui::NavUpdateWindowing, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 9598
	push	rbp
	push	rdi
	sub	rsp, 1096				; 00000448H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 166				; 000000a6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 9599
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 9600
	mov	QWORD PTR apply_focus_window$[rbp], 0
; Line 9601
	mov	BYTE PTR apply_toggle_layer$[rbp], 0
; Line 9603
	call	?GetTopMostPopupModal@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetTopMostPopupModal
	mov	QWORD PTR modal_window$[rbp], rax
; Line 9604
	cmp	QWORD PTR modal_window$[rbp], 0
	jne	SHORT $LN37@NavUpdateW
	mov	DWORD PTR tv66[rbp], 1
	jmp	SHORT $LN38@NavUpdateW
$LN37@NavUpdateW:
	mov	DWORD PTR tv66[rbp], 0
$LN38@NavUpdateW:
	movzx	eax, BYTE PTR tv66[rbp]
	mov	BYTE PTR allow_windowing$[rbp], al
; Line 9605
	movzx	eax, BYTE PTR allow_windowing$[rbp]
	test	eax, eax
	jne	SHORT $LN4@NavUpdateW
; Line 9606
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7928], 0
$LN4@NavUpdateW:
; Line 9609
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7936], 0
	je	SHORT $LN5@NavUpdateW
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	jne	SHORT $LN5@NavUpdateW
; Line 9611
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+24]
	mulss	xmm0, DWORD PTR __real@41200000
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+7956]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	xorps	xmm1, xmm1
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR g$[rbp]
	movss	DWORD PTR [rax+7956], xmm0
; Line 9612
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rax+8004]
	jb	SHORT $LN6@NavUpdateW
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rax+7956]
	jb	SHORT $LN6@NavUpdateW
; Line 9613
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7936], 0
$LN6@NavUpdateW:
$LN5@NavUpdateW:
; Line 9617
	movzx	eax, BYTE PTR allow_windowing$[rbp]
	test	eax, eax
	je	SHORT $LN39@NavUpdateW
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	jne	SHORT $LN39@NavUpdateW
	mov	edx, 1
	mov	ecx, 3
	call	?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z ; ImGui::IsNavInputTest
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN39@NavUpdateW
	mov	DWORD PTR tv130[rbp], 1
	jmp	SHORT $LN40@NavUpdateW
$LN39@NavUpdateW:
	mov	DWORD PTR tv130[rbp], 0
$LN40@NavUpdateW:
	movzx	eax, BYTE PTR tv130[rbp]
	mov	BYTE PTR start_windowing_with_gamepad$[rbp], al
; Line 9618
	movzx	eax, BYTE PTR allow_windowing$[rbp]
	test	eax, eax
	je	SHORT $LN41@NavUpdateW
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	jne	SHORT $LN41@NavUpdateW
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+320]
	test	eax, eax
	je	SHORT $LN41@NavUpdateW
	mov	dl, 1
	xor	ecx, ecx
	call	?IsKeyPressedMap@ImGui@@YA_NH_N@Z	; ImGui::IsKeyPressedMap
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN41@NavUpdateW
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+8]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN41@NavUpdateW
	mov	DWORD PTR tv149[rbp], 1
	jmp	SHORT $LN42@NavUpdateW
$LN41@NavUpdateW:
	mov	DWORD PTR tv149[rbp], 0
$LN42@NavUpdateW:
	movzx	eax, BYTE PTR tv149[rbp]
	mov	BYTE PTR start_windowing_with_keyboard$[rbp], al
; Line 9619
	movzx	eax, BYTE PTR start_windowing_with_gamepad$[rbp]
	test	eax, eax
	jne	SHORT $LN8@NavUpdateW
	movzx	eax, BYTE PTR start_windowing_with_keyboard$[rbp]
	test	eax, eax
	je	$LN7@NavUpdateW
$LN8@NavUpdateW:
; Line 9620
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN43@NavUpdateW
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	QWORD PTR tv165[rbp], rax
	jmp	SHORT $LN44@NavUpdateW
$LN43@NavUpdateW:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7104]
	dec	eax
	mov	r8d, -1
	mov	edx, -2147483647			; ffffffff80000001H
	mov	ecx, eax
	call	?FindWindowNavFocusable@@YAPEAUImGuiWindow@@HHH@Z ; FindWindowNavFocusable
	mov	QWORD PTR tv165[rbp], rax
$LN44@NavUpdateW:
	mov	rax, QWORD PTR tv165[rbp]
	mov	QWORD PTR window$4[rbp], rax
	cmp	QWORD PTR window$4[rbp], 0
	je	$LN9@NavUpdateW
; Line 9622
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$4[rbp]
	mov	rcx, QWORD PTR [rcx+904]
	mov	QWORD PTR [rax+7936], rcx
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+7936]
	mov	QWORD PTR [rax+7928], rcx
; Line 9623
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+7956], xmm0
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+7952], xmm0
; Line 9624
	movzx	eax, BYTE PTR start_windowing_with_keyboard$[rbp]
	test	eax, eax
	je	SHORT $LN45@NavUpdateW
	mov	BYTE PTR tv176[rbp], 0
	jmp	SHORT $LN46@NavUpdateW
$LN45@NavUpdateW:
	mov	BYTE PTR tv176[rbp], 1
$LN46@NavUpdateW:
	mov	rax, QWORD PTR g$[rbp]
	movzx	ecx, BYTE PTR tv176[rbp]
	mov	BYTE PTR [rax+7960], cl
; Line 9625
	movzx	eax, BYTE PTR start_windowing_with_keyboard$[rbp]
	test	eax, eax
	je	SHORT $LN47@NavUpdateW
	mov	DWORD PTR tv180[rbp], 2
	jmp	SHORT $LN48@NavUpdateW
$LN47@NavUpdateW:
	mov	DWORD PTR tv180[rbp], 3
$LN48@NavUpdateW:
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR tv180[rbp]
	mov	DWORD PTR [rax+7676], ecx
$LN9@NavUpdateW:
$LN7@NavUpdateW:
; Line 9629
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7952]
	addss	xmm0, DWORD PTR [rcx+24]
	mov	rax, QWORD PTR g$[rbp]
	movss	DWORD PTR [rax+7952], xmm0
; Line 9630
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	je	$LN10@NavUpdateW
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7676], 3
	jne	$LN10@NavUpdateW
; Line 9633
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7952]
	subss	xmm0, DWORD PTR __real@3e4ccccd
	divss	xmm0, DWORD PTR __real@3d4ccccd
	call	?ImSaturate@@YAMM@Z			; ImSaturate
	movss	DWORD PTR tv203[rbp], xmm0
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7956]
	movss	DWORD PTR tv201[rbp], xmm0
	movss	xmm1, DWORD PTR tv203[rbp]
	movss	xmm0, DWORD PTR tv201[rbp]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR g$[rbp]
	movss	DWORD PTR [rax+7956], xmm0
; Line 9636
	mov	edx, 4
	mov	ecx, 12
	call	?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z ; ImGui::IsNavInputTest
	movzx	eax, al
	mov	DWORD PTR tv207[rbp], eax
	mov	edx, 4
	mov	ecx, 13
	call	?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z ; ImGui::IsNavInputTest
	movzx	eax, al
	mov	ecx, DWORD PTR tv207[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR focus_change_dir$5[rbp], eax
; Line 9637
	cmp	DWORD PTR focus_change_dir$5[rbp], 0
	je	SHORT $LN11@NavUpdateW
; Line 9639
	mov	ecx, DWORD PTR focus_change_dir$5[rbp]
	call	?NavUpdateWindowingHighlightWindow@@YAXH@Z ; NavUpdateWindowingHighlightWindow
; Line 9640
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rax+7956], xmm0
$LN11@NavUpdateW:
; Line 9644
	mov	ecx, 3
	call	?IsNavInputDown@ImGui@@YA_NH@Z		; ImGui::IsNavInputDown
	movzx	eax, al
	test	eax, eax
	jne	$LN12@NavUpdateW
; Line 9646
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	comiss	xmm0, DWORD PTR [rax+7956]
	jbe	SHORT $LN49@NavUpdateW
	mov	DWORD PTR tv225[rbp], 1
	jmp	SHORT $LN50@NavUpdateW
$LN49@NavUpdateW:
	mov	DWORD PTR tv225[rbp], 0
$LN50@NavUpdateW:
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7960]
	and	eax, DWORD PTR tv225[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	BYTE PTR [rcx+7960], al
; Line 9647
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7960]
	test	eax, eax
	je	SHORT $LN13@NavUpdateW
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN13@NavUpdateW
; Line 9648
	mov	BYTE PTR apply_toggle_layer$[rbp], 1
	jmp	SHORT $LN14@NavUpdateW
$LN13@NavUpdateW:
; Line 9649
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7960]
	test	eax, eax
	jne	SHORT $LN15@NavUpdateW
; Line 9650
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7928]
	mov	QWORD PTR apply_focus_window$[rbp], rax
$LN15@NavUpdateW:
$LN14@NavUpdateW:
; Line 9651
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7928], 0
$LN12@NavUpdateW:
$LN10@NavUpdateW:
; Line 9656
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	je	$LN16@NavUpdateW
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7676], 2
	jne	$LN16@NavUpdateW
; Line 9659
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7952]
	subss	xmm0, DWORD PTR __real@3e4ccccd
	divss	xmm0, DWORD PTR __real@3d4ccccd
	call	?ImSaturate@@YAMM@Z			; ImSaturate
	movss	DWORD PTR tv255[rbp], xmm0
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7956]
	movss	DWORD PTR tv253[rbp], xmm0
	movss	xmm1, DWORD PTR tv255[rbp]
	movss	xmm0, DWORD PTR tv253[rbp]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR g$[rbp]
	movss	DWORD PTR [rax+7956], xmm0
; Line 9660
	mov	dl, 1
	xor	ecx, ecx
	call	?IsKeyPressedMap@ImGui@@YA_NH_N@Z	; ImGui::IsKeyPressedMap
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN17@NavUpdateW
; Line 9661
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+321]
	test	eax, eax
	je	SHORT $LN51@NavUpdateW
	mov	DWORD PTR tv265[rbp], 1
	jmp	SHORT $LN52@NavUpdateW
$LN51@NavUpdateW:
	mov	DWORD PTR tv265[rbp], -1
$LN52@NavUpdateW:
	mov	ecx, DWORD PTR tv265[rbp]
	call	?NavUpdateWindowingHighlightWindow@@YAXH@Z ; NavUpdateWindowingHighlightWindow
$LN17@NavUpdateW:
; Line 9662
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+320]
	test	eax, eax
	jne	SHORT $LN18@NavUpdateW
; Line 9663
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7928]
	mov	QWORD PTR apply_focus_window$[rbp], rax
$LN18@NavUpdateW:
$LN16@NavUpdateW:
; Line 9668
	mov	edx, 1
	mov	ecx, 16
	call	?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z ; ImGui::IsNavInputTest
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN19@NavUpdateW
; Line 9669
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7960], 1
$LN19@NavUpdateW:
; Line 9670
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	je	SHORT $LN21@NavUpdateW
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7273]
	test	eax, eax
	je	SHORT $LN20@NavUpdateW
$LN21@NavUpdateW:
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7960]
	test	eax, eax
	je	SHORT $LN20@NavUpdateW
	mov	edx, 2
	mov	ecx, 16
	call	?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z ; ImGui::IsNavInputTest
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@NavUpdateW
; Line 9671
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 296				; 00000128H
	mov	rcx, rax
	call	?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z ; ImGui::IsMousePosValid
	movzx	eax, al
	mov	DWORD PTR tv295[rbp], eax
	mov	rcx, QWORD PTR g$[rbp]
	add	rcx, 964				; 000003c4H
	call	?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z ; ImGui::IsMousePosValid
	movzx	eax, al
	mov	ecx, DWORD PTR tv295[rbp]
	cmp	ecx, eax
	jne	SHORT $LN22@NavUpdateW
; Line 9672
	mov	BYTE PTR apply_toggle_layer$[rbp], 1
$LN22@NavUpdateW:
$LN20@NavUpdateW:
; Line 9675
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	je	$LN23@NavUpdateW
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7928]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 4
	test	eax, eax
	jne	$LN23@NavUpdateW
; Line 9677
	lea	rcx, QWORD PTR move_delta$6[rbp]
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
; Line 9678
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7676], 2
	jne	SHORT $LN24@NavUpdateW
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+321]
	test	eax, eax
	jne	SHORT $LN24@NavUpdateW
; Line 9679
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xor	r8d, r8d
	mov	edx, 1
	lea	rcx, QWORD PTR $T13[rbp]
	call	?GetNavInputAmount2d@ImGui@@YA?AUImVec2@@HW4ImGuiInputReadMode@@MM@Z ; ImGui::GetNavInputAmount2d
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR move_delta$6[rbp], rax
$LN24@NavUpdateW:
; Line 9680
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7676], 3
	jne	SHORT $LN25@NavUpdateW
; Line 9681
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xor	r8d, r8d
	mov	edx, 4
	lea	rcx, QWORD PTR $T14[rbp]
	call	?GetNavInputAmount2d@ImGui@@YA?AUImVec2@@HW4ImGuiInputReadMode@@MM@Z ; ImGui::GetNavInputAmount2d
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR move_delta$6[rbp], rax
$LN25@NavUpdateW:
; Line 9682
	movss	xmm0, DWORD PTR move_delta$6[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN27@NavUpdateW
	jne	SHORT $LN27@NavUpdateW
	movss	xmm0, DWORD PTR move_delta$6[rbp+4]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN55@NavUpdateW
	je	$LN26@NavUpdateW
$LN55@NavUpdateW:
$LN27@NavUpdateW:
; Line 9684
	movss	xmm0, DWORD PTR __real@44480000
	movss	DWORD PTR NAV_MOVE_SPEED$7[rbp], xmm0
; Line 9685
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR __real@44480000
	mulss	xmm0, DWORD PTR [rax+24]
	movss	DWORD PTR tv336[rbp], xmm0
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+196]
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+192]
	call	??$ImMin@M@@YAMMM@Z			; ImMin<float>
	movss	xmm1, DWORD PTR tv336[rbp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	call	?ImFloor@@YAMM@Z			; ImFloor
	movss	DWORD PTR move_speed$8[rbp], xmm0
; Line 9686
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7928]
	mov	rax, QWORD PTR [rax+904]
	mov	QWORD PTR moving_window$9[rbp], rax
; Line 9687
	movss	xmm2, DWORD PTR move_speed$8[rbp]
	lea	rdx, QWORD PTR move_delta$6[rbp]
	lea	rcx, QWORD PTR $T15[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	rcx, QWORD PTR moving_window$9[rbp]
	add	rcx, 16
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T16[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	r8d, 1
	mov	rdx, rax
	mov	rcx, QWORD PTR moving_window$9[rbp]
	call	?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z ; ImGui::SetWindowPos
; Line 9688
	mov	rcx, QWORD PTR moving_window$9[rbp]
	call	?MarkIniSettingsDirty@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::MarkIniSettingsDirty
; Line 9689
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7711], 1
$LN26@NavUpdateW:
$LN23@NavUpdateW:
; Line 9694
	cmp	QWORD PTR apply_focus_window$[rbp], 0
	je	$LN28@NavUpdateW
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN29@NavUpdateW
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	rax, QWORD PTR [rax+904]
	cmp	QWORD PTR apply_focus_window$[rbp], rax
	je	SHORT $LN28@NavUpdateW
$LN29@NavUpdateW:
; Line 9696
	call	?ClearActiveID@ImGui@@YAXXZ		; ImGui::ClearActiveID
; Line 9697
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7710], 0
; Line 9698
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7711], 1
; Line 9699
	mov	rcx, QWORD PTR apply_focus_window$[rbp]
	call	?NavRestoreLastChildNavWindow@ImGui@@YAPEAUImGuiWindow@@PEAU2@@Z ; ImGui::NavRestoreLastChildNavWindow
	mov	QWORD PTR apply_focus_window$[rbp], rax
; Line 9700
	xor	edx, edx
	mov	rcx, QWORD PTR apply_focus_window$[rbp]
	call	?ClosePopupsOverWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z ; ImGui::ClosePopupsOverWindow
; Line 9701
	mov	rcx, QWORD PTR apply_focus_window$[rbp]
	call	?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::FocusWindow
; Line 9702
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR apply_focus_window$[rbp]
	cmp	DWORD PTR [rcx+rax+936], 0
	jne	SHORT $LN30@NavUpdateW
; Line 9703
	xor	edx, edx
	mov	rcx, QWORD PTR apply_focus_window$[rbp]
	call	?NavInitWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z ; ImGui::NavInitWindow
$LN30@NavUpdateW:
; Line 9712
	mov	rax, QWORD PTR apply_focus_window$[rbp]
	movsx	eax, WORD PTR [rax+338]
	cmp	eax, 2
	jne	SHORT $LN31@NavUpdateW
; Line 9713
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7700], 1
$LN31@NavUpdateW:
$LN28@NavUpdateW:
; Line 9715
	cmp	QWORD PTR apply_focus_window$[rbp], 0
	je	SHORT $LN32@NavUpdateW
; Line 9716
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7928], 0
$LN32@NavUpdateW:
; Line 9719
	movzx	eax, BYTE PTR apply_toggle_layer$[rbp]
	test	eax, eax
	je	$LN33@NavUpdateW
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	$LN33@NavUpdateW
; Line 9721
	call	?ClearActiveID@ImGui@@YAXXZ		; ImGui::ClearActiveID
; Line 9724
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	QWORD PTR new_nav_window$10[rbp], rax
$LN2@NavUpdateW:
; Line 9728
	mov	rax, QWORD PTR new_nav_window$10[rbp]
	cmp	QWORD PTR [rax+896], 0
	je	SHORT $LN3@NavUpdateW
	mov	rax, QWORD PTR new_nav_window$10[rbp]
	movsx	eax, WORD PTR [rax+336]
	and	eax, 2
	test	eax, eax
	jne	SHORT $LN3@NavUpdateW
	mov	rax, QWORD PTR new_nav_window$10[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN3@NavUpdateW
	mov	rax, QWORD PTR new_nav_window$10[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 335544320				; 14000000H
	test	eax, eax
	jne	SHORT $LN3@NavUpdateW
; Line 9729
	mov	rax, QWORD PTR new_nav_window$10[rbp]
	mov	rax, QWORD PTR [rax+896]
	mov	QWORD PTR new_nav_window$10[rbp], rax
	jmp	SHORT $LN2@NavUpdateW
$LN3@NavUpdateW:
; Line 9730
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	cmp	QWORD PTR new_nav_window$10[rbp], rax
	je	SHORT $LN34@NavUpdateW
; Line 9732
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	QWORD PTR old_nav_window$11[rbp], rax
; Line 9733
	mov	rcx, QWORD PTR new_nav_window$10[rbp]
	call	?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::FocusWindow
; Line 9734
	mov	rax, QWORD PTR new_nav_window$10[rbp]
	mov	rcx, QWORD PTR old_nav_window$11[rbp]
	mov	QWORD PTR [rax+928], rcx
$LN34@NavUpdateW:
; Line 9736
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7710], 0
; Line 9737
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7711], 1
; Line 9740
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	movsx	eax, WORD PTR [rax+336]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN53@NavUpdateW
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7700]
	xor	eax, 1
	mov	DWORD PTR tv424[rbp], eax
	jmp	SHORT $LN54@NavUpdateW
$LN53@NavUpdateW:
	mov	DWORD PTR tv424[rbp], 0
$LN54@NavUpdateW:
	mov	eax, DWORD PTR tv424[rbp]
	mov	DWORD PTR new_nav_layer$12[rbp], eax
; Line 9741
	cmp	DWORD PTR new_nav_layer$12[rbp], 1
	jne	SHORT $LN35@NavUpdateW
; Line 9742
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	movsxd	rcx, DWORD PTR new_nav_layer$12[rbp]
	mov	DWORD PTR [rax+rcx*4+936], 0
$LN35@NavUpdateW:
; Line 9743
	mov	ecx, DWORD PTR new_nav_layer$12[rbp]
	call	?NavRestoreLayer@ImGui@@YAXW4ImGuiNavLayer@@@Z ; ImGui::NavRestoreLayer
$LN33@NavUpdateW:
; Line 9745
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?NavUpdateWindowing@ImGui@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1048]
	pop	rdi
	pop	rbp
	ret	0
?NavUpdateWindowing@ImGui@@YAXXZ ENDP			; ImGui::NavUpdateWindowing
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavUpdate@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
io$ = 40
nav_keyboard_active$ = 68
nav_gamepad_active$ = 100
i$7 = 132
child_window$8 = 168
parent_window$9 = 200
child_rect$10 = 232
activate_down$11 = 276
activate_pressed$12 = 308
read_mode$13 = 340
nav_scoring_rect_offset_y$ = 372
window$14 = 408
scroll_speed$15 = 436
scroll_dir$16 = 472
window$17 = 504
window_rect_rel$18 = 536
pad$19 = 580
nav_rect_rel$ = 616
$T20 = 1236
$T21 = 1268
$T22 = 1316
$T23 = 1348
$T24 = 1380
$T25 = 1412
$T26 = 1444
$T27 = 1476
$T28 = 1508
$T29 = 1540
$T30 = 1572
$T31 = 1608
$T32 = 1636
$T33 = 1684
$T34 = 1736
$T35 = 1764
$T36 = 1812
$T37 = 1844
$T38 = 1876
tv920 = 1908
tv764 = 1908
tv749 = 1908
tv533 = 1908
tv407 = 1908
tv394 = 1908
tv301 = 1908
tv79 = 1908
tv71 = 1908
tv995 = 1912
tv981 = 1912
tv958 = 1912
tv930 = 1912
tv918 = 1912
tv830 = 1912
tv466 = 1912
tv302 = 1912
tv979 = 1920
tv828 = 1920
tv464 = 1920
tv989 = 1928
tv855 = 1928
tv475 = 1928
tv850 = 1936
tv473 = 1936
tv848 = 1944
tv853 = 1952
__$ArrayPad$ = 1960
?NavUpdate@ImGui@@YAXXZ PROC				; ImGui::NavUpdate, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 9061
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 2016				; 000007e0H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 348				; 0000015cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 9062
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 9063
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8
	mov	QWORD PTR io$[rbp], rax
; Line 9065
	mov	rax, QWORD PTR io$[rbp]
	mov	BYTE PTR [rax+915], 0
; Line 9066
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7912], 0
; Line 9067
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7920], 0
; Line 9074
	mov	rax, QWORD PTR io$[rbp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN99@NavUpdate
	mov	DWORD PTR tv71[rbp], 1
	jmp	SHORT $LN100@NavUpdate
$LN99@NavUpdate:
	mov	DWORD PTR tv71[rbp], 0
$LN100@NavUpdate:
	movzx	eax, BYTE PTR tv71[rbp]
	mov	BYTE PTR nav_keyboard_active$[rbp], al
; Line 9075
	mov	rax, QWORD PTR io$[rbp]
	mov	eax, DWORD PTR [rax]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN101@NavUpdate
	mov	rax, QWORD PTR io$[rbp]
	mov	eax, DWORD PTR [rax+4]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN101@NavUpdate
	mov	DWORD PTR tv79[rbp], 1
	jmp	SHORT $LN102@NavUpdate
$LN101@NavUpdate:
	mov	DWORD PTR tv79[rbp], 0
$LN102@NavUpdate:
	movzx	eax, BYTE PTR tv79[rbp]
	mov	BYTE PTR nav_gamepad_active$[rbp], al
; Line 9076
	movzx	eax, BYTE PTR nav_gamepad_active$[rbp]
	test	eax, eax
	je	$LN26@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7676], 3
	je	$LN26@NavUpdate
; Line 9079
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax+828]
	comiss	xmm0, DWORD PTR __real@00000000
	ja	$LN28@NavUpdate
	mov	eax, 4
	imul	rax, rax, 2
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax+828]
	comiss	xmm0, DWORD PTR __real@00000000
	ja	$LN28@NavUpdate
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax+828]
	comiss	xmm0, DWORD PTR __real@00000000
	ja	$LN28@NavUpdate
	mov	eax, 4
	imul	rax, rax, 3
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax+828]
	comiss	xmm0, DWORD PTR __real@00000000
	ja	SHORT $LN28@NavUpdate
	mov	eax, 4
	imul	rax, rax, 4
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax+828]
	comiss	xmm0, DWORD PTR __real@00000000
	ja	SHORT $LN28@NavUpdate
	mov	eax, 4
	imul	rax, rax, 5
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax+828]
	comiss	xmm0, DWORD PTR __real@00000000
	ja	SHORT $LN28@NavUpdate
	mov	eax, 4
	imul	rax, rax, 6
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax+828]
	comiss	xmm0, DWORD PTR __real@00000000
	ja	SHORT $LN28@NavUpdate
	mov	eax, 4
	imul	rax, rax, 7
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax+828]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN27@NavUpdate
$LN28@NavUpdate:
; Line 9080
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7676], 3
$LN27@NavUpdate:
$LN26@NavUpdate:
; Line 9084
	movzx	eax, BYTE PTR nav_keyboard_active$[rbp]
	test	eax, eax
	je	$LN29@NavUpdate
$LN4@NavUpdate:
; Line 9087
	mov	eax, 4
	imul	rax, rax, 12
	mov	rcx, QWORD PTR io$[rbp]
	mov	ecx, DWORD PTR [rcx+rax+52]
	call	?IsKeyDown@ImGui@@YA_NH@Z		; ImGui::IsKeyDown
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN30@NavUpdate
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7676], 2
$LN30@NavUpdate:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@NavUpdate
$LN7@NavUpdate:
; Line 9088
	mov	eax, 4
	imul	rax, rax, 13
	mov	rcx, QWORD PTR io$[rbp]
	mov	ecx, DWORD PTR [rcx+rax+52]
	call	?IsKeyDown@ImGui@@YA_NH@Z		; ImGui::IsKeyDown
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN31@NavUpdate
	mov	eax, 4
	imul	rax, rax, 2
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7676], 2
$LN31@NavUpdate:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@NavUpdate
$LN10@NavUpdate:
; Line 9089
	mov	eax, 4
	imul	rax, rax, 14
	mov	rcx, QWORD PTR io$[rbp]
	mov	ecx, DWORD PTR [rcx+rax+52]
	call	?IsKeyDown@ImGui@@YA_NH@Z		; ImGui::IsKeyDown
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN32@NavUpdate
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7676], 2
$LN32@NavUpdate:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN10@NavUpdate
$LN13@NavUpdate:
; Line 9090
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR io$[rbp]
	mov	ecx, DWORD PTR [rcx+rax+52]
	call	?IsKeyDown@ImGui@@YA_NH@Z		; ImGui::IsKeyDown
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN33@NavUpdate
	mov	eax, 4
	imul	rax, rax, 17
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7676], 2
$LN33@NavUpdate:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@NavUpdate
$LN16@NavUpdate:
; Line 9091
	mov	eax, 4
	imul	rax, rax, 2
	mov	rcx, QWORD PTR io$[rbp]
	mov	ecx, DWORD PTR [rcx+rax+52]
	call	?IsKeyDown@ImGui@@YA_NH@Z		; ImGui::IsKeyDown
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN34@NavUpdate
	mov	eax, 4
	imul	rax, rax, 18
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7676], 2
$LN34@NavUpdate:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN16@NavUpdate
$LN19@NavUpdate:
; Line 9092
	mov	eax, 4
	imul	rax, rax, 3
	mov	rcx, QWORD PTR io$[rbp]
	mov	ecx, DWORD PTR [rcx+rax+52]
	call	?IsKeyDown@ImGui@@YA_NH@Z		; ImGui::IsKeyDown
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN35@NavUpdate
	mov	eax, 4
	imul	rax, rax, 19
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7676], 2
$LN35@NavUpdate:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN19@NavUpdate
$LN22@NavUpdate:
; Line 9093
	mov	eax, 4
	imul	rax, rax, 4
	mov	rcx, QWORD PTR io$[rbp]
	mov	ecx, DWORD PTR [rcx+rax+52]
	call	?IsKeyDown@ImGui@@YA_NH@Z		; ImGui::IsKeyDown
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN36@NavUpdate
	mov	eax, 4
	imul	rax, rax, 20
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7676], 2
$LN36@NavUpdate:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN22@NavUpdate
; Line 9094
	mov	rax, QWORD PTR io$[rbp]
	movzx	eax, BYTE PTR [rax+312]
	test	eax, eax
	je	SHORT $LN37@NavUpdate
; Line 9095
	mov	eax, 4
	imul	rax, rax, 14
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
$LN37@NavUpdate:
; Line 9096
	mov	rax, QWORD PTR io$[rbp]
	movzx	eax, BYTE PTR [rax+313]
	test	eax, eax
	je	SHORT $LN38@NavUpdate
; Line 9097
	mov	eax, 4
	imul	rax, rax, 15
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
$LN38@NavUpdate:
; Line 9101
	mov	rax, QWORD PTR io$[rbp]
	movzx	eax, BYTE PTR [rax+314]
	test	eax, eax
	je	SHORT $LN39@NavUpdate
	mov	rax, QWORD PTR io$[rbp]
	movzx	eax, BYTE PTR [rax+312]
	test	eax, eax
	jne	SHORT $LN39@NavUpdate
; Line 9102
	mov	eax, 4
	imul	rax, rax, 16
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
$LN39@NavUpdate:
; Line 9105
	mov	rax, QWORD PTR io$[rbp]
	movzx	eax, BYTE PTR [rax+314]
	test	eax, eax
	je	SHORT $LN40@NavUpdate
	mov	rax, QWORD PTR io$[rbp]
	movzx	eax, BYTE PTR [rax+312]
	test	eax, eax
	jne	SHORT $LN40@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7960]
	test	eax, eax
	je	SHORT $LN40@NavUpdate
	mov	rax, QWORD PTR io$[rbp]
	cmp	DWORD PTR [rax+5448], 0
	jle	SHORT $LN40@NavUpdate
; Line 9106
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7960], 0
$LN40@NavUpdate:
$LN29@NavUpdate:
; Line 9110
	mov	rax, QWORD PTR io$[rbp]
	mov	rcx, QWORD PTR io$[rbp]
	lea	rdi, QWORD PTR [rax+5356]
	lea	rsi, QWORD PTR [rcx+5272]
	mov	ecx, 84					; 00000054H
	rep movsb
; Line 9111
	mov	DWORD PTR i$7[rbp], 0
	jmp	SHORT $LN25@NavUpdate
$LN23@NavUpdate:
	mov	eax, DWORD PTR i$7[rbp]
	inc	eax
	mov	DWORD PTR i$7[rbp], eax
$LN25@NavUpdate:
	cmp	DWORD PTR i$7[rbp], 21
	jge	$LN24@NavUpdate
; Line 9112
	movsxd	rax, DWORD PTR i$7[rbp]
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax*4+828]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN105@NavUpdate
	movsxd	rax, DWORD PTR i$7[rbp]
	mov	rcx, QWORD PTR io$[rbp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rcx+rax*4+5272]
	jbe	SHORT $LN103@NavUpdate
	xorps	xmm0, xmm0
	movss	DWORD PTR tv301[rbp], xmm0
	jmp	SHORT $LN104@NavUpdate
$LN103@NavUpdate:
	movsxd	rax, DWORD PTR i$7[rbp]
	mov	rcx, QWORD PTR io$[rbp]
	mov	rdx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax*4+5272]
	addss	xmm0, DWORD PTR [rdx+16]
	movss	DWORD PTR tv301[rbp], xmm0
$LN104@NavUpdate:
	movss	xmm0, DWORD PTR tv301[rbp]
	movss	DWORD PTR tv302[rbp], xmm0
	jmp	SHORT $LN106@NavUpdate
$LN105@NavUpdate:
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR tv302[rbp], xmm0
$LN106@NavUpdate:
	movsxd	rax, DWORD PTR i$7[rbp]
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR tv302[rbp]
	movss	DWORD PTR [rcx+rax*4+5272], xmm0
	jmp	$LN23@NavUpdate
$LN24@NavUpdate:
; Line 9115
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7716], 0
	je	SHORT $LN41@NavUpdate
; Line 9116
	call	?NavUpdateInitResult@ImGui@@YAXXZ	; ImGui::NavUpdateInitResult
$LN41@NavUpdate:
; Line 9117
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7713], 0
; Line 9118
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7714], 0
; Line 9119
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7716], 0
; Line 9120
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7660], 0
; Line 9123
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7736]
	test	eax, eax
	je	SHORT $LN42@NavUpdate
; Line 9124
	call	?NavUpdateMoveResult@ImGui@@YAXXZ	; ImGui::NavUpdateMoveResult
$LN42@NavUpdate:
; Line 9127
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7744], 2
	jne	SHORT $LN43@NavUpdate
; Line 9129
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7736]
	test	eax, eax
	jne	SHORT $LN107@NavUpdate
	mov	eax, DWORD PTR ?__LINE__Var@?0??NavUpdate@ImGui@@YAXXZ@4JA
	add	eax, 68					; 00000044H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CC@PCNOPHOI@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAM?$AAo?$AAv?$AAe?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN107@NavUpdate:
; Line 9130
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7776], 0
	jne	SHORT $LN44@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7872], 0
	jne	SHORT $LN44@NavUpdate
; Line 9131
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7710], 0
$LN44@NavUpdate:
; Line 9132
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7744], 0
$LN43@NavUpdate:
; Line 9136
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7709]
	test	eax, eax
	je	$LN45@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7708]
	test	eax, eax
	je	$LN45@NavUpdate
; Line 9139
	mov	rax, QWORD PTR io$[rbp]
	mov	eax, DWORD PTR [rax]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN46@NavUpdate
	mov	rax, QWORD PTR io$[rbp]
	mov	eax, DWORD PTR [rax+4]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN46@NavUpdate
; Line 9140
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7710]
	test	eax, eax
	jne	SHORT $LN47@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7711]
	test	eax, eax
	je	SHORT $LN47@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN47@NavUpdate
; Line 9142
	lea	rcx, QWORD PTR $T20[rbp]
	call	?NavCalcPreferredRefPos@ImGui@@YA?AUImVec2@@XZ ; ImGui::NavCalcPreferredRefPos
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR io$[rbp]
	mov	QWORD PTR [rcx+956], rax
	mov	rax, QWORD PTR io$[rbp]
	mov	rax, QWORD PTR [rax+956]
	mov	rcx, QWORD PTR io$[rbp]
	mov	QWORD PTR [rcx+288], rax
; Line 9143
	mov	rax, QWORD PTR io$[rbp]
	mov	BYTE PTR [rax+915], 1
$LN47@NavUpdate:
$LN46@NavUpdate:
; Line 9145
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7709], 0
$LN45@NavUpdate:
; Line 9147
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7708], 0
; Line 9148
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7656], 0
; Line 9149
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7700], 0
	je	SHORT $LN108@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7700], 1
	je	SHORT $LN108@NavUpdate
	mov	eax, DWORD PTR ?__LINE__Var@?0??NavUpdate@ImGui@@YAXXZ@4JA
	add	eax, 88					; 00000058H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EG@OLANNBKO@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAL?$AAa?$AAy?$AAe?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN108@NavUpdate:
; Line 9152
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN48@NavUpdate
; Line 9153
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+7624]
	call	?NavSaveLastChildNavWindowIntoParent@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::NavSaveLastChildNavWindowIntoParent
$LN48@NavUpdate:
; Line 9154
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN49@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	cmp	QWORD PTR [rax+928], 0
	je	SHORT $LN49@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7700], 0
	jne	SHORT $LN49@NavUpdate
; Line 9155
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	QWORD PTR [rax+928], 0
$LN49@NavUpdate:
; Line 9158
	call	?NavUpdateWindowing@ImGui@@YAXXZ	; ImGui::NavUpdateWindowing
; Line 9161
	movzx	eax, BYTE PTR nav_keyboard_active$[rbp]
	test	eax, eax
	jne	SHORT $LN109@NavUpdate
	movzx	eax, BYTE PTR nav_gamepad_active$[rbp]
	test	eax, eax
	je	SHORT $LN110@NavUpdate
$LN109@NavUpdate:
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN110@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 262144				; 00040000H
	test	eax, eax
	jne	SHORT $LN110@NavUpdate
	mov	DWORD PTR tv394[rbp], 1
	jmp	SHORT $LN111@NavUpdate
$LN110@NavUpdate:
	mov	DWORD PTR tv394[rbp], 0
$LN111@NavUpdate:
	mov	rax, QWORD PTR io$[rbp]
	movzx	ecx, BYTE PTR tv394[rbp]
	mov	BYTE PTR [rax+917], cl
; Line 9162
	mov	rax, QWORD PTR io$[rbp]
	movzx	eax, BYTE PTR [rax+917]
	test	eax, eax
	je	SHORT $LN112@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7632], 0
	je	SHORT $LN112@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7710]
	test	eax, eax
	je	SHORT $LN113@NavUpdate
$LN112@NavUpdate:
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	jne	SHORT $LN113@NavUpdate
	mov	DWORD PTR tv407[rbp], 0
	jmp	SHORT $LN114@NavUpdate
$LN113@NavUpdate:
	mov	DWORD PTR tv407[rbp], 1
$LN114@NavUpdate:
	mov	rax, QWORD PTR io$[rbp]
	movzx	ecx, BYTE PTR tv407[rbp]
	mov	BYTE PTR [rax+918], cl
; Line 9165
	mov	edx, 1
	mov	ecx, 1
	call	?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z ; ImGui::IsNavInputTest
	movzx	eax, al
	test	eax, eax
	je	$LN50@NavUpdate
; Line 9168
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	je	SHORT $LN51@NavUpdate
; Line 9170
	mov	ecx, 1
	call	?IsActiveIdUsingNavInput@ImGui@@YA_NH@Z	; ImGui::IsActiveIdUsingNavInput
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN53@NavUpdate
; Line 9171
	call	?ClearActiveID@ImGui@@YAXXZ		; ImGui::ClearActiveID
$LN53@NavUpdate:
; Line 9172
	jmp	$LN52@NavUpdate
$LN51@NavUpdate:
; Line 9173
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7700], 0
	je	SHORT $LN54@NavUpdate
; Line 9176
	xor	ecx, ecx
	call	?NavRestoreLayer@ImGui@@YAXW4ImGuiNavLayer@@@Z ; ImGui::NavRestoreLayer
; Line 9177
	jmp	$LN55@NavUpdate
$LN54@NavUpdate:
; Line 9178
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	$LN56@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+904]
	cmp	QWORD PTR [rcx+7624], rax
	je	$LN56@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	jne	$LN56@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	cmp	QWORD PTR [rax+896], 0
	je	$LN56@NavUpdate
; Line 9181
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	QWORD PTR child_window$8[rbp], rax
; Line 9182
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	rax, QWORD PTR [rax+896]
	mov	QWORD PTR parent_window$9[rbp], rax
; Line 9183
	mov	rax, QWORD PTR child_window$8[rbp]
	cmp	DWORD PTR [rax+88], 0
	jne	SHORT $LN115@NavUpdate
	mov	eax, DWORD PTR ?__LINE__Var@?0??NavUpdate@ImGui@@YAXXZ@4JA
	add	eax, 122				; 0000007aH
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DG@HPGLIPGM@?$AAc?$AAh?$AAi?$AAl?$AAd?$AA_?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAC@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN115@NavUpdate:
; Line 9184
	lea	rdx, QWORD PTR child_rect$10[rbp]
	mov	rcx, QWORD PTR child_window$8[rbp]
	call	?Rect@ImGuiWindow@@QEBA?AUImRect@@XZ	; ImGuiWindow::Rect
; Line 9185
	mov	rcx, QWORD PTR parent_window$9[rbp]
	call	?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::FocusWindow
; Line 9186
	mov	rax, QWORD PTR parent_window$9[rbp]
	add	rax, 16
	mov	r8, rax
	lea	rdx, QWORD PTR child_rect$10[rbp+8]
	lea	rcx, QWORD PTR $T22[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv466[rbp], rax
	mov	rax, QWORD PTR parent_window$9[rbp]
	add	rax, 16
	mov	r8, rax
	lea	rdx, QWORD PTR child_rect$10[rbp]
	lea	rcx, QWORD PTR $T23[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv464[rbp], rax
	mov	r8, QWORD PTR tv466[rbp]
	mov	rdx, QWORD PTR tv464[rbp]
	lea	rcx, QWORD PTR $T21[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
	mov	QWORD PTR tv475[rbp], rax
	mov	rax, QWORD PTR child_window$8[rbp]
	mov	eax, DWORD PTR [rax+88]
	mov	DWORD PTR tv473[rbp], eax
	mov	r9, QWORD PTR tv475[rbp]
	xor	r8d, r8d
	xor	edx, edx
	mov	ecx, DWORD PTR tv473[rbp]
	call	?SetNavID@ImGui@@YAXIW4ImGuiNavLayer@@IAEBUImRect@@@Z ; ImGui::SetNavID
; Line 9187
	jmp	$LN57@NavUpdate
$LN56@NavUpdate:
; Line 9188
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7576], 0
	jle	SHORT $LN58@NavUpdate
; Line 9191
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	rcx, rax
	call	?back@?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@XZ ; ImVector<ImGuiPopupData>::back
	mov	rax, QWORD PTR [rax+8]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 134217728				; 08000000H
	test	eax, eax
	jne	SHORT $LN60@NavUpdate
; Line 9192
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7576]
	dec	eax
	mov	dl, 1
	mov	ecx, eax
	call	?ClosePopupToLevel@ImGui@@YAXH_N@Z	; ImGui::ClosePopupToLevel
$LN60@NavUpdate:
; Line 9193
	jmp	SHORT $LN59@NavUpdate
$LN58@NavUpdate:
; Line 9197
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN61@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	jne	SHORT $LN62@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	jne	SHORT $LN61@NavUpdate
$LN62@NavUpdate:
; Line 9198
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	ecx, 4
	imul	rcx, rcx, 0
	mov	DWORD PTR [rax+rcx+936], 0
$LN61@NavUpdate:
; Line 9199
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7636], 0
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7632], 0
$LN59@NavUpdate:
$LN57@NavUpdate:
$LN55@NavUpdate:
$LN52@NavUpdate:
$LN50@NavUpdate:
; Line 9204
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7652], 0
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7648], 0
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7644], 0
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7640], 0
; Line 9205
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7632], 0
	je	$LN63@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7710]
	test	eax, eax
	jne	$LN63@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	jne	$LN63@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	$LN63@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 262144				; 00040000H
	test	eax, eax
	jne	$LN63@NavUpdate
; Line 9207
	xor	ecx, ecx
	call	?IsNavInputDown@ImGui@@YA_NH@Z		; ImGui::IsNavInputDown
	mov	BYTE PTR activate_down$11[rbp], al
; Line 9208
	movzx	eax, BYTE PTR activate_down$11[rbp]
	test	eax, eax
	je	SHORT $LN116@NavUpdate
	mov	edx, 1
	xor	ecx, ecx
	call	?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z ; ImGui::IsNavInputTest
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN116@NavUpdate
	mov	DWORD PTR tv533[rbp], 1
	jmp	SHORT $LN117@NavUpdate
$LN116@NavUpdate:
	mov	DWORD PTR tv533[rbp], 0
$LN117@NavUpdate:
	movzx	eax, BYTE PTR tv533[rbp]
	mov	BYTE PTR activate_pressed$12[rbp], al
; Line 9209
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	jne	SHORT $LN64@NavUpdate
	movzx	eax, BYTE PTR activate_pressed$12[rbp]
	test	eax, eax
	je	SHORT $LN64@NavUpdate
; Line 9210
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7632]
	mov	DWORD PTR [rax+7640], ecx
$LN64@NavUpdate:
; Line 9211
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	je	SHORT $LN66@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7632]
	cmp	DWORD PTR [rax+7260], ecx
	jne	SHORT $LN65@NavUpdate
$LN66@NavUpdate:
	movzx	eax, BYTE PTR activate_down$11[rbp]
	test	eax, eax
	je	SHORT $LN65@NavUpdate
; Line 9212
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7632]
	mov	DWORD PTR [rax+7644], ecx
$LN65@NavUpdate:
; Line 9213
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	je	SHORT $LN68@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7632]
	cmp	DWORD PTR [rax+7260], ecx
	jne	SHORT $LN67@NavUpdate
$LN68@NavUpdate:
	movzx	eax, BYTE PTR activate_pressed$12[rbp]
	test	eax, eax
	je	SHORT $LN67@NavUpdate
; Line 9214
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7632]
	mov	DWORD PTR [rax+7648], ecx
$LN67@NavUpdate:
; Line 9215
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	je	SHORT $LN70@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7632]
	cmp	DWORD PTR [rax+7260], ecx
	jne	SHORT $LN69@NavUpdate
$LN70@NavUpdate:
	mov	edx, 1
	mov	ecx, 2
	call	?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z ; ImGui::IsNavInputTest
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN69@NavUpdate
; Line 9216
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7632]
	mov	DWORD PTR [rax+7652], ecx
$LN69@NavUpdate:
$LN63@NavUpdate:
; Line 9218
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN71@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 262144				; 00040000H
	test	eax, eax
	je	SHORT $LN71@NavUpdate
; Line 9219
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7710], 1
$LN71@NavUpdate:
; Line 9220
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7640], 0
	je	SHORT $LN72@NavUpdate
; Line 9221
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7640]
	cmp	DWORD PTR [rax+7644], ecx
	je	SHORT $LN118@NavUpdate
	mov	eax, DWORD PTR ?__LINE__Var@?0??NavUpdate@ImGui@@YAXXZ@4JA
	add	eax, 160				; 000000a0H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EO@NJCLOIHM@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAe?$AAD?$AAo@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN118@NavUpdate:
$LN72@NavUpdate:
; Line 9222
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7736], 0
; Line 9225
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7672], 0
	je	SHORT $LN73@NavUpdate
; Line 9226
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7672]
	mov	DWORD PTR [rax+7652], ecx
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7652]
	mov	DWORD PTR [rax+7648], ecx
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7648]
	mov	DWORD PTR [rax+7644], ecx
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7644]
	mov	DWORD PTR [rax+7640], ecx
$LN73@NavUpdate:
; Line 9227
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7672], 0
; Line 9230
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7744], 0
	jne	$LN74@NavUpdate
; Line 9232
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7752], -1
; Line 9233
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7740], 0
; Line 9234
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	$LN76@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	jne	$LN76@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 262144				; 00040000H
	test	eax, eax
	jne	$LN76@NavUpdate
; Line 9236
	mov	DWORD PTR read_mode$13[rbp], 3
; Line 9237
	xor	ecx, ecx
	call	?IsActiveIdUsingNavDir@ImGui@@YA_NH@Z	; ImGui::IsActiveIdUsingNavDir
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN77@NavUpdate
	mov	edx, 3
	mov	ecx, 4
	call	?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z ; ImGui::IsNavInputTest
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN78@NavUpdate
	mov	edx, 3
	mov	ecx, 17
	call	?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z ; ImGui::IsNavInputTest
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN77@NavUpdate
$LN78@NavUpdate:
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7752], 0
$LN77@NavUpdate:
; Line 9238
	mov	ecx, 1
	call	?IsActiveIdUsingNavDir@ImGui@@YA_NH@Z	; ImGui::IsActiveIdUsingNavDir
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN79@NavUpdate
	mov	edx, 3
	mov	ecx, 5
	call	?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z ; ImGui::IsNavInputTest
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN80@NavUpdate
	mov	edx, 3
	mov	ecx, 18
	call	?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z ; ImGui::IsNavInputTest
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN79@NavUpdate
$LN80@NavUpdate:
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7752], 1
$LN79@NavUpdate:
; Line 9239
	mov	ecx, 2
	call	?IsActiveIdUsingNavDir@ImGui@@YA_NH@Z	; ImGui::IsActiveIdUsingNavDir
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN81@NavUpdate
	mov	edx, 3
	mov	ecx, 6
	call	?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z ; ImGui::IsNavInputTest
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN82@NavUpdate
	mov	edx, 3
	mov	ecx, 19
	call	?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z ; ImGui::IsNavInputTest
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN81@NavUpdate
$LN82@NavUpdate:
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7752], 2
$LN81@NavUpdate:
; Line 9240
	mov	ecx, 3
	call	?IsActiveIdUsingNavDir@ImGui@@YA_NH@Z	; ImGui::IsActiveIdUsingNavDir
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN83@NavUpdate
	mov	edx, 3
	mov	ecx, 7
	call	?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z ; ImGui::IsNavInputTest
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN84@NavUpdate
	mov	edx, 3
	mov	ecx, 20
	call	?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z ; ImGui::IsNavInputTest
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN83@NavUpdate
$LN84@NavUpdate:
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7752], 3
$LN83@NavUpdate:
$LN76@NavUpdate:
; Line 9242
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7752]
	mov	DWORD PTR [rax+7760], ecx
; Line 9243
	jmp	SHORT $LN75@NavUpdate
$LN74@NavUpdate:
; Line 9248
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], -1
	je	SHORT $LN119@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7760], -1
	jne	SHORT $LN120@NavUpdate
$LN119@NavUpdate:
	mov	eax, DWORD PTR ?__LINE__Var@?0??NavUpdate@ImGui@@YAXXZ@4JA
	add	eax, 187				; 000000bbH
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1IG@KDKGHOJC@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAM?$AAo?$AAv?$AAe?$AAD?$AAi?$AAr?$AA?5?$AA?$CB?$AA?$DN@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN120@NavUpdate:
; Line 9249
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7744], 1
	je	SHORT $LN121@NavUpdate
	mov	eax, DWORD PTR ?__LINE__Var@?0??NavUpdate@ImGui@@YAXXZ@4JA
	add	eax, 188				; 000000bcH
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1HC@ODAAGLGB@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAM?$AAo?$AAv?$AAe?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN121@NavUpdate:
; Line 9251
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7744], 2
$LN75@NavUpdate:
; Line 9256
	xorps	xmm0, xmm0
	movss	DWORD PTR nav_scoring_rect_offset_y$[rbp], xmm0
; Line 9257
	movzx	eax, BYTE PTR nav_keyboard_active$[rbp]
	test	eax, eax
	je	SHORT $LN85@NavUpdate
; Line 9258
	call	?NavUpdatePageUpPageDown@ImGui@@YAMXZ	; ImGui::NavUpdatePageUpPageDown
	movss	DWORD PTR nav_scoring_rect_offset_y$[rbp], xmm0
$LN85@NavUpdate:
; Line 9261
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], -1
	je	SHORT $LN86@NavUpdate
; Line 9263
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7736], 1
; Line 9264
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR io$[rbp]
	mov	ecx, DWORD PTR [rcx+952]
	mov	DWORD PTR [rax+7748], ecx
; Line 9265
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7752]
	mov	DWORD PTR [rax+7756], ecx
$LN86@NavUpdate:
; Line 9267
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7736]
	test	eax, eax
	je	SHORT $LN87@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7632], 0
	jne	SHORT $LN87@NavUpdate
; Line 9270
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7714], 1
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7713], 1
; Line 9272
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7716], 0
; Line 9273
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7710], 0
$LN87@NavUpdate:
; Line 9275
	call	?NavUpdateAnyRequestFlag@ImGui@@YAXXZ	; ImGui::NavUpdateAnyRequestFlag
; Line 9278
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	$LN88@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 262144				; 00040000H
	test	eax, eax
	jne	$LN88@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	jne	$LN88@NavUpdate
; Line 9281
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	QWORD PTR window$14[rbp], rax
; Line 9282
	mov	rcx, QWORD PTR window$14[rbp]
	call	?CalcFontSize@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::CalcFontSize
	mulss	xmm0, DWORD PTR __real@42c80000
	mov	rax, QWORD PTR io$[rbp]
	mulss	xmm0, DWORD PTR [rax+16]
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	movss	DWORD PTR scroll_speed$15[rbp], xmm0
; Line 9283
	mov	rax, QWORD PTR window$14[rbp]
	movsx	eax, WORD PTR [rax+336]
	test	eax, eax
	jne	$LN89@NavUpdate
	mov	rax, QWORD PTR window$14[rbp]
	movzx	eax, BYTE PTR [rax+345]
	test	eax, eax
	je	$LN89@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7736]
	test	eax, eax
	je	$LN89@NavUpdate
; Line 9285
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], 0
	je	SHORT $LN91@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], 1
	jne	SHORT $LN90@NavUpdate
$LN91@NavUpdate:
; Line 9286
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], 0
	jne	SHORT $LN122@NavUpdate
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR tv749[rbp], xmm0
	jmp	SHORT $LN123@NavUpdate
$LN122@NavUpdate:
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv749[rbp], xmm0
$LN123@NavUpdate:
	movss	xmm0, DWORD PTR tv749[rbp]
	mulss	xmm0, DWORD PTR scroll_speed$15[rbp]
	mov	rax, QWORD PTR window$14[rbp]
	movss	xmm1, DWORD PTR [rax+92]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	call	?ImFloor@@YAMM@Z			; ImFloor
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR window$14[rbp]
	call	?SetScrollX@ImGui@@YAXPEAUImGuiWindow@@M@Z ; ImGui::SetScrollX
$LN90@NavUpdate:
; Line 9287
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], 2
	je	SHORT $LN93@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], 3
	jne	SHORT $LN92@NavUpdate
$LN93@NavUpdate:
; Line 9288
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7752], 2
	jne	SHORT $LN124@NavUpdate
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR tv764[rbp], xmm0
	jmp	SHORT $LN125@NavUpdate
$LN124@NavUpdate:
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv764[rbp], xmm0
$LN125@NavUpdate:
	movss	xmm0, DWORD PTR tv764[rbp]
	mulss	xmm0, DWORD PTR scroll_speed$15[rbp]
	mov	rax, QWORD PTR window$14[rbp]
	movss	xmm1, DWORD PTR [rax+96]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	call	?ImFloor@@YAMM@Z			; ImFloor
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR window$14[rbp]
	call	?SetScrollY@ImGui@@YAXPEAUImGuiWindow@@M@Z ; ImGui::SetScrollY
$LN92@NavUpdate:
$LN89@NavUpdate:
; Line 9293
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3dcccccd
	xor	r8d, r8d
	mov	edx, 4
	lea	rcx, QWORD PTR scroll_dir$16[rbp]
	call	?GetNavInputAmount2d@ImGui@@YA?AUImVec2@@HW4ImGuiInputReadMode@@MM@Z ; ImGui::GetNavInputAmount2d
; Line 9294
	movss	xmm0, DWORD PTR scroll_dir$16[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN132@NavUpdate
	je	SHORT $LN94@NavUpdate
$LN132@NavUpdate:
	mov	rax, QWORD PTR window$14[rbp]
	movzx	eax, BYTE PTR [rax+140]
	test	eax, eax
	je	SHORT $LN94@NavUpdate
; Line 9295
	movss	xmm0, DWORD PTR scroll_dir$16[rbp]
	mulss	xmm0, DWORD PTR scroll_speed$15[rbp]
	mov	rax, QWORD PTR window$14[rbp]
	movss	xmm1, DWORD PTR [rax+92]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	call	?ImFloor@@YAMM@Z			; ImFloor
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR window$14[rbp]
	call	?SetScrollX@ImGui@@YAXPEAUImGuiWindow@@M@Z ; ImGui::SetScrollX
$LN94@NavUpdate:
; Line 9296
	movss	xmm0, DWORD PTR scroll_dir$16[rbp+4]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN131@NavUpdate
	je	SHORT $LN95@NavUpdate
$LN131@NavUpdate:
; Line 9297
	movss	xmm0, DWORD PTR scroll_dir$16[rbp+4]
	mulss	xmm0, DWORD PTR scroll_speed$15[rbp]
	mov	rax, QWORD PTR window$14[rbp]
	movss	xmm1, DWORD PTR [rax+96]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	call	?ImFloor@@YAMM@Z			; ImFloor
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR window$14[rbp]
	call	?SetScrollY@ImGui@@YAXPEAUImGuiWindow@@M@Z ; ImGui::SetScrollY
$LN95@NavUpdate:
$LN88@NavUpdate:
; Line 9301
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7768				; 00001e58H
	mov	rcx, rax
	call	?Clear@ImGuiNavItemData@@QEAAXXZ	; ImGuiNavItemData::Clear
; Line 9302
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7816				; 00001e88H
	mov	rcx, rax
	call	?Clear@ImGuiNavItemData@@QEAAXXZ	; ImGuiNavItemData::Clear
; Line 9303
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7864				; 00001eb8H
	mov	rcx, rax
	call	?Clear@ImGuiNavItemData@@QEAAXXZ	; ImGuiNavItemData::Clear
; Line 9308
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7736]
	test	eax, eax
	je	$LN96@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7676], 3
	jne	$LN96@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7700], 0
	jne	$LN96@NavUpdate
; Line 9310
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	QWORD PTR window$17[rbp], rax
; Line 9311
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T24[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv830[rbp], rax
	mov	rax, QWORD PTR window$17[rbp]
	add	rax, 16
	mov	rcx, QWORD PTR window$17[rbp]
	add	rcx, 536				; 00000218H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T25[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv828[rbp], rax
	mov	r8, QWORD PTR tv830[rbp]
	mov	rdx, QWORD PTR tv828[rbp]
	lea	rcx, QWORD PTR $T26[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv855[rbp], rax
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T27[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv850[rbp], rax
	mov	rax, QWORD PTR window$17[rbp]
	add	rax, 16
	mov	rcx, QWORD PTR window$17[rbp]
	add	rcx, 528				; 00000210H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T28[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv848[rbp], rax
	mov	r8, QWORD PTR tv850[rbp]
	mov	rdx, QWORD PTR tv848[rbp]
	lea	rcx, QWORD PTR $T29[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv853[rbp], rax
	mov	r8, QWORD PTR tv855[rbp]
	mov	rdx, QWORD PTR tv853[rbp]
	lea	rcx, QWORD PTR window_rect_rel$18[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
; Line 9312
	mov	rax, QWORD PTR g$[rbp]
	movsxd	rax, DWORD PTR [rax+7700]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR window$17[rbp]
	lea	rax, QWORD PTR [rcx+rax+944]
	mov	rdx, rax
	lea	rcx, QWORD PTR window_rect_rel$18[rbp]
	call	?Contains@ImRect@@QEBA_NAEBU1@@Z	; ImRect::Contains
	movzx	eax, al
	test	eax, eax
	jne	$LN97@NavUpdate
; Line 9315
	mov	rcx, QWORD PTR window$17[rbp]
	call	?CalcFontSize@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::CalcFontSize
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR pad$19[rbp], xmm0
; Line 9316
	lea	rcx, QWORD PTR window_rect_rel$18[rbp]
	call	?GetHeight@ImRect@@QEBAMXZ		; ImRect::GetHeight
	movss	xmm1, DWORD PTR pad$19[rbp]
	call	??$ImMin@M@@YAMMM@Z			; ImMin<float>
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR tv920[rbp], xmm0
	lea	rcx, QWORD PTR window_rect_rel$18[rbp]
	call	?GetWidth@ImRect@@QEBAMXZ		; ImRect::GetWidth
	movss	xmm1, DWORD PTR pad$19[rbp]
	call	??$ImMin@M@@YAMMM@Z			; ImMin<float>
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR tv918[rbp], xmm0
	movss	xmm2, DWORD PTR tv920[rbp]
	movss	xmm1, DWORD PTR tv918[rbp]
	lea	rcx, QWORD PTR $T30[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rdx, rax
	lea	rcx, QWORD PTR window_rect_rel$18[rbp]
	call	?Expand@ImRect@@QEAAXAEBUImVec2@@@Z	; ImRect::Expand
; Line 9317
	mov	rax, QWORD PTR g$[rbp]
	movsxd	rax, DWORD PTR [rax+7700]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR window$17[rbp]
	lea	rax, QWORD PTR [rcx+rax+944]
	mov	QWORD PTR tv930[rbp], rax
	lea	rdx, QWORD PTR window_rect_rel$18[rbp]
	mov	rcx, QWORD PTR tv930[rbp]
	call	?ClipWithFull@ImRect@@QEAAXAEBU1@@Z	; ImRect::ClipWithFull
; Line 9318
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7636], 0
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7632], 0
$LN97@NavUpdate:
$LN96@NavUpdate:
; Line 9323
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN126@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	rcx, QWORD PTR g$[rbp]
	movsxd	rcx, DWORD PTR [rcx+7700]
	imul	rcx, rcx, 16
	lea	rax, QWORD PTR [rax+rcx+944]
	mov	rcx, rax
	call	?IsInverted@ImRect@@QEBA_NXZ		; ImRect::IsInverted
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN126@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	rcx, QWORD PTR g$[rbp]
	movsxd	rcx, DWORD PTR [rcx+7700]
	imul	rcx, rcx, 16
	lea	rdx, QWORD PTR $T32[rbp]
	mov	rdi, rdx
	lea	rsi, QWORD PTR [rax+rcx+944]
	mov	ecx, 16
	rep movsb
	lea	rax, QWORD PTR $T32[rbp]
	mov	QWORD PTR tv958[rbp], rax
	jmp	SHORT $LN127@NavUpdate
$LN126@NavUpdate:
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T33[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	mov	QWORD PTR tv958[rbp], rax
$LN127@NavUpdate:
	mov	rax, QWORD PTR tv958[rbp]
	mov	QWORD PTR $T31[rbp], rax
	lea	rax, QWORD PTR nav_rect_rel$[rbp]
	mov	rdi, rax
	mov	rsi, QWORD PTR $T31[rbp]
	mov	ecx, 16
	rep movsb
; Line 9324
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN128@NavUpdate
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	add	rax, 16
	lea	r8, QWORD PTR nav_rect_rel$[rbp+8]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T36[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv981[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	add	rax, 16
	lea	r8, QWORD PTR nav_rect_rel$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T37[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv979[rbp], rax
	mov	r8, QWORD PTR tv981[rbp]
	mov	rdx, QWORD PTR tv979[rbp]
	lea	rcx, QWORD PTR $T35[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
	mov	QWORD PTR tv989[rbp], rax
	jmp	SHORT $LN129@NavUpdate
$LN128@NavUpdate:
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T38[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	mov	QWORD PTR tv989[rbp], rax
$LN129@NavUpdate:
	mov	rax, QWORD PTR tv989[rbp]
	mov	QWORD PTR $T34[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	lea	rdi, QWORD PTR [rax+7680]
	mov	rsi, QWORD PTR $T34[rbp]
	mov	ecx, 16
	rep movsb
; Line 9325
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7680				; 00001e00H
	mov	QWORD PTR tv995[rbp], rax
	movss	xmm1, DWORD PTR nav_scoring_rect_offset_y$[rbp]
	mov	rcx, QWORD PTR tv995[rbp]
	call	?TranslateY@ImRect@@QEAAXM@Z		; ImRect::TranslateY
; Line 9326
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7680]
	addss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+7688]
	call	??$ImMin@M@@YAMMM@Z			; ImMin<float>
	mov	rax, QWORD PTR g$[rbp]
	movss	DWORD PTR [rax+7680], xmm0
; Line 9327
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+7680]
	movss	DWORD PTR [rax+7688], xmm0
; Line 9328
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7680				; 00001e00H
	mov	rcx, rax
	call	?IsInverted@ImRect@@QEBA_NXZ		; ImRect::IsInverted
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN130@NavUpdate
	mov	eax, DWORD PTR ?__LINE__Var@?0??NavUpdate@ImGui@@YAXXZ@4JA
	add	eax, 267				; 0000010bH
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DO@NFHNJCFP@?$AA?$CB?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAS?$AAc?$AAo?$AAr?$AAi?$AAn?$AAg?$AAR?$AAe@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN130@NavUpdate:
; Line 9330
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7696], 0
; Line 9339
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?NavUpdate@ImGui@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1968]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?NavUpdate@ImGui@@YAXXZ ENDP				; ImGui::NavUpdate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImeSetInputScreenPosFn_DefaultImpl@@YAXHH@Z
_TEXT	SEGMENT
io$ = 8
hwnd$4 = 40
himc$5 = 72
cf$6 = 104
__$ArrayPad$ = 344
x$ = 384
y$ = 392
?ImeSetInputScreenPosFn_DefaultImpl@@YAXHH@Z PROC	; ImeSetInputScreenPosFn_DefaultImpl, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10839
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 42					; 0000002aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+424]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10841
	call	?GetIO@ImGui@@YAAEAUImGuiIO@@XZ		; ImGui::GetIO
	mov	QWORD PTR io$[rbp], rax
; Line 10842
	mov	rax, QWORD PTR io$[rbp]
	mov	rax, QWORD PTR [rax+280]
	mov	QWORD PTR hwnd$4[rbp], rax
	cmp	QWORD PTR hwnd$4[rbp], 0
	je	SHORT $LN2@ImeSetInpu
; Line 10843
	mov	rcx, QWORD PTR hwnd$4[rbp]
	call	ImmGetContext
	mov	QWORD PTR himc$5[rbp], rax
	cmp	QWORD PTR himc$5[rbp], 0
	je	SHORT $LN3@ImeSetInpu
; Line 10846
	mov	eax, DWORD PTR x$[rbp]
	mov	DWORD PTR cf$6[rbp+4], eax
; Line 10847
	mov	eax, DWORD PTR y$[rbp]
	mov	DWORD PTR cf$6[rbp+8], eax
; Line 10848
	mov	DWORD PTR cf$6[rbp], 32			; 00000020H
; Line 10849
	lea	rdx, QWORD PTR cf$6[rbp]
	mov	rcx, QWORD PTR himc$5[rbp]
	call	ImmSetCompositionWindow
; Line 10850
	mov	rdx, QWORD PTR himc$5[rbp]
	mov	rcx, QWORD PTR hwnd$4[rbp]
	call	ImmReleaseContext
$LN3@ImeSetInpu:
$LN2@ImeSetInpu:
; Line 10852
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?ImeSetInputScreenPosFn_DefaultImpl@@YAXHH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?ImeSetInputScreenPosFn_DefaultImpl@@YAXHH@Z ENDP	; ImeSetInputScreenPosFn_DefaultImpl
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetClipboardTextFn_DefaultImpl@@YAXPEAXPEBD@Z
_TEXT	SEGMENT
wbuf_length$ = 4
wbuf_handle$ = 40
wbuf_global$ = 72
__formal$ = 320
text$ = 328
?SetClipboardTextFn_DefaultImpl@@YAXPEAXPEBD@Z PROC	; SetClipboardTextFn_DefaultImpl, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10737
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10738
	xor	ecx, ecx
	call	QWORD PTR __imp_OpenClipboard
	test	eax, eax
	jne	SHORT $LN2@SetClipboa
; Line 10739
	jmp	$LN1@SetClipboa
$LN2@SetClipboa:
; Line 10740
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, -1
	mov	r8, QWORD PTR text$[rbp]
	xor	edx, edx
	mov	ecx, 65001				; 0000fde9H
	call	QWORD PTR __imp_MultiByteToWideChar
	mov	DWORD PTR wbuf_length$[rbp], eax
; Line 10741
	movsxd	rax, DWORD PTR wbuf_length$[rbp]
	shl	rax, 1
	mov	rdx, rax
	mov	ecx, 2
	call	QWORD PTR __imp_GlobalAlloc
	mov	QWORD PTR wbuf_handle$[rbp], rax
; Line 10742
	cmp	QWORD PTR wbuf_handle$[rbp], 0
	jne	SHORT $LN3@SetClipboa
; Line 10744
	call	QWORD PTR __imp_CloseClipboard
; Line 10745
	jmp	SHORT $LN1@SetClipboa
$LN3@SetClipboa:
; Line 10747
	mov	rcx, QWORD PTR wbuf_handle$[rbp]
	call	QWORD PTR __imp_GlobalLock
	mov	QWORD PTR wbuf_global$[rbp], rax
; Line 10748
	mov	eax, DWORD PTR wbuf_length$[rbp]
	mov	DWORD PTR [rsp+40], eax
	mov	rax, QWORD PTR wbuf_global$[rbp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, -1
	mov	r8, QWORD PTR text$[rbp]
	xor	edx, edx
	mov	ecx, 65001				; 0000fde9H
	call	QWORD PTR __imp_MultiByteToWideChar
; Line 10749
	mov	rcx, QWORD PTR wbuf_handle$[rbp]
	call	QWORD PTR __imp_GlobalUnlock
; Line 10750
	call	QWORD PTR __imp_EmptyClipboard
; Line 10751
	mov	rdx, QWORD PTR wbuf_handle$[rbp]
	mov	ecx, 13
	call	QWORD PTR __imp_SetClipboardData
	test	rax, rax
	jne	SHORT $LN4@SetClipboa
; Line 10752
	mov	rcx, QWORD PTR wbuf_handle$[rbp]
	call	QWORD PTR __imp_GlobalFree
$LN4@SetClipboa:
; Line 10753
	call	QWORD PTR __imp_CloseClipboard
$LN1@SetClipboa:
; Line 10754
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?SetClipboardTextFn_DefaultImpl@@YAXPEAXPEBD@Z ENDP	; SetClipboardTextFn_DefaultImpl
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetClipboardTextFn_DefaultImpl@@YAPEBDPEAX@Z
_TEXT	SEGMENT
g$ = 8
wbuf_handle$ = 40
wbuf_global$1 = 72
buf_len$2 = 100
tv88 = 312
__formal$ = 352
?GetClipboardTextFn_DefaultImpl@@YAPEBDPEAX@Z PROC	; GetClipboardTextFn_DefaultImpl, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10714
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10715
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10716
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12336				; 00003030H
	mov	rcx, rax
	call	?clear@?$ImVector@D@@QEAAXXZ		; ImVector<char>::clear
; Line 10717
	xor	ecx, ecx
	call	QWORD PTR __imp_OpenClipboard
	test	eax, eax
	jne	SHORT $LN2@GetClipboa
; Line 10718
	xor	eax, eax
	jmp	$LN1@GetClipboa
$LN2@GetClipboa:
; Line 10719
	mov	ecx, 13
	call	QWORD PTR __imp_GetClipboardData
	mov	QWORD PTR wbuf_handle$[rbp], rax
; Line 10720
	cmp	QWORD PTR wbuf_handle$[rbp], 0
	jne	SHORT $LN3@GetClipboa
; Line 10722
	call	QWORD PTR __imp_CloseClipboard
; Line 10723
	xor	eax, eax
	jmp	$LN1@GetClipboa
$LN3@GetClipboa:
; Line 10725
	mov	rcx, QWORD PTR wbuf_handle$[rbp]
	call	QWORD PTR __imp_GlobalLock
	mov	QWORD PTR wbuf_global$1[rbp], rax
	cmp	QWORD PTR wbuf_global$1[rbp], 0
	je	$LN4@GetClipboa
; Line 10727
	mov	QWORD PTR [rsp+56], 0
	mov	QWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, -1
	mov	r8, QWORD PTR wbuf_global$1[rbp]
	xor	edx, edx
	mov	ecx, 65001				; 0000fde9H
	call	QWORD PTR __imp_WideCharToMultiByte
	mov	DWORD PTR buf_len$2[rbp], eax
; Line 10728
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12336				; 00003030H
	mov	QWORD PTR tv88[rbp], rax
	mov	edx, DWORD PTR buf_len$2[rbp]
	mov	rcx, QWORD PTR tv88[rbp]
	call	?resize@?$ImVector@D@@QEAAXH@Z		; ImVector<char>::resize
; Line 10729
	mov	QWORD PTR [rsp+56], 0
	mov	QWORD PTR [rsp+48], 0
	mov	eax, DWORD PTR buf_len$2[rbp]
	mov	DWORD PTR [rsp+40], eax
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+12344]
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, -1
	mov	r8, QWORD PTR wbuf_global$1[rbp]
	xor	edx, edx
	mov	ecx, 65001				; 0000fde9H
	call	QWORD PTR __imp_WideCharToMultiByte
$LN4@GetClipboa:
; Line 10731
	mov	rcx, QWORD PTR wbuf_handle$[rbp]
	call	QWORD PTR __imp_GlobalUnlock
; Line 10732
	call	QWORD PTR __imp_CloseClipboard
; Line 10733
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+12344]
$LN1@GetClipboa:
; Line 10734
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?GetClipboardTextFn_DefaultImpl@@YAPEBDPEAX@Z ENDP	; GetClipboardTextFn_DefaultImpl
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?WindowSettingsHandler_WriteAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAUImGuiTextBuffer@@@Z
_TEXT	SEGMENT
g$ = 8
i$1 = 36
window$2 = 72
settings$3 = 104
settings$4 = 136
settings_name$5 = 168
$T6 = 388
$T7 = 420
tv157 = 436
tv172 = 440
tv132 = 440
tv85 = 440
tv73 = 440
tv89 = 448
ctx$ = 496
handler$ = 504
buf$ = 512
?WindowSettingsHandler_WriteAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAUImGuiTextBuffer@@@Z PROC ; WindowSettingsHandler_WriteAll, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10617
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 504				; 000001f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10620
	mov	rax, QWORD PTR ctx$[rbp]
	mov	QWORD PTR g$[rbp], rax
; Line 10621
	mov	DWORD PTR i$1[rbp], 0
	jmp	SHORT $LN4@WindowSett
$LN2@WindowSett:
	mov	eax, DWORD PTR i$1[rbp]
	inc	eax
	mov	DWORD PTR i$1[rbp], eax
$LN4@WindowSett:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7088]
	cmp	DWORD PTR i$1[rbp], eax
	je	$LN3@WindowSett
; Line 10623
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv73[rbp], rax
	mov	edx, DWORD PTR i$1[rbp]
	mov	rcx, QWORD PTR tv73[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR window$2[rbp], rax
; Line 10624
	mov	rax, QWORD PTR window$2[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 256				; 00000100H
	test	eax, eax
	je	SHORT $LN8@WindowSett
; Line 10625
	jmp	SHORT $LN2@WindowSett
$LN8@WindowSett:
; Line 10627
	mov	rax, QWORD PTR window$2[rbp]
	cmp	DWORD PTR [rax+684], -1
	je	SHORT $LN11@WindowSett
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12424				; 00003088H
	mov	QWORD PTR tv85[rbp], rax
	mov	rax, QWORD PTR window$2[rbp]
	mov	edx, DWORD PTR [rax+684]
	mov	rcx, QWORD PTR tv85[rbp]
	call	?ptr_from_offset@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@H@Z ; ImChunkStream<ImGuiWindowSettings>::ptr_from_offset
	mov	QWORD PTR tv89[rbp], rax
	jmp	SHORT $LN12@WindowSett
$LN11@WindowSett:
	mov	rax, QWORD PTR window$2[rbp]
	mov	ecx, DWORD PTR [rax+8]
	call	?FindWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@I@Z ; ImGui::FindWindowSettings
	mov	QWORD PTR tv89[rbp], rax
$LN12@WindowSett:
	mov	rax, QWORD PTR tv89[rbp]
	mov	QWORD PTR settings$3[rbp], rax
; Line 10628
	cmp	QWORD PTR settings$3[rbp], 0
	jne	SHORT $LN9@WindowSett
; Line 10630
	mov	rax, QWORD PTR window$2[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z ; ImGui::CreateNewWindowSettings
	mov	QWORD PTR settings$3[rbp], rax
; Line 10631
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12424				; 00003088H
	mov	QWORD PTR tv132[rbp], rax
	mov	rdx, QWORD PTR settings$3[rbp]
	mov	rcx, QWORD PTR tv132[rbp]
	call	?offset_from_ptr@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAHPEBUImGuiWindowSettings@@@Z ; ImChunkStream<ImGuiWindowSettings>::offset_from_ptr
	mov	rcx, QWORD PTR window$2[rbp]
	mov	DWORD PTR [rcx+684], eax
$LN9@WindowSett:
; Line 10633
	mov	rax, QWORD PTR settings$3[rbp]
	mov	rcx, QWORD PTR window$2[rbp]
	mov	ecx, DWORD PTR [rcx+8]
	cmp	DWORD PTR [rax], ecx
	je	SHORT $LN13@WindowSett
	mov	eax, DWORD PTR ?__LINE__Var@?0??WindowSettingsHandler_WriteAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAUImGuiTextBuffer@@@Z@4JA
	add	eax, 16
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DG@BLKMIOLK@?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AAs?$AA?9?$AA?$DO?$AAI?$AAD?$AA?5?$AA?$DN?$AA?$DN@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN13@WindowSett:
; Line 10634
	mov	rax, QWORD PTR window$2[rbp]
	add	rax, 16
	mov	rdx, rax
	lea	rcx, QWORD PTR $T6[rbp]
	call	??0ImVec2ih@@QEAA@AEBUImVec2@@@Z	; ImVec2ih::ImVec2ih
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR settings$3[rbp]
	mov	DWORD PTR [rcx+4], eax
; Line 10635
	mov	rax, QWORD PTR window$2[rbp]
	add	rax, 32					; 00000020H
	mov	rdx, rax
	lea	rcx, QWORD PTR $T7[rbp]
	call	??0ImVec2ih@@QEAA@AEBUImVec2@@@Z	; ImVec2ih::ImVec2ih
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR settings$3[rbp]
	mov	DWORD PTR [rcx+8], eax
; Line 10637
	mov	rax, QWORD PTR settings$3[rbp]
	mov	rcx, QWORD PTR window$2[rbp]
	movzx	ecx, BYTE PTR [rcx+145]
	mov	BYTE PTR [rax+12], cl
; Line 10638
	jmp	$LN2@WindowSett
$LN3@WindowSett:
; Line 10641
	mov	rcx, QWORD PTR buf$[rbp]
	call	?size@ImGuiTextBuffer@@QEBAHXZ		; ImGuiTextBuffer::size
	mov	DWORD PTR tv157[rbp], eax
	mov	rcx, QWORD PTR g$[rbp]
	add	rcx, 12424				; 00003088H
	call	?size@?$ImChunkStream@UImGuiWindowSettings@@@@QEBAHXZ ; ImChunkStream<ImGuiWindowSettings>::size
	imul	eax, eax, 6
	mov	ecx, DWORD PTR tv157[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	edx, eax
	mov	rcx, QWORD PTR buf$[rbp]
	call	?reserve@ImGuiTextBuffer@@QEAAXH@Z	; ImGuiTextBuffer::reserve
; Line 10642
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12424				; 00003088H
	mov	rcx, rax
	call	?begin@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ ; ImChunkStream<ImGuiWindowSettings>::begin
	mov	QWORD PTR settings$4[rbp], rax
	jmp	SHORT $LN7@WindowSett
$LN5@WindowSett:
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12424				; 00003088H
	mov	QWORD PTR tv172[rbp], rax
	mov	rdx, QWORD PTR settings$4[rbp]
	mov	rcx, QWORD PTR tv172[rbp]
	call	?next_chunk@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@PEAU2@@Z ; ImChunkStream<ImGuiWindowSettings>::next_chunk
	mov	QWORD PTR settings$4[rbp], rax
$LN7@WindowSett:
	cmp	QWORD PTR settings$4[rbp], 0
	je	$LN6@WindowSett
; Line 10644
	mov	rcx, QWORD PTR settings$4[rbp]
	call	?GetName@ImGuiWindowSettings@@QEAAPEADXZ ; ImGuiWindowSettings::GetName
	mov	QWORD PTR settings_name$5[rbp], rax
; Line 10645
	mov	r9, QWORD PTR settings_name$5[rbp]
	mov	rax, QWORD PTR handler$[rbp]
	mov	r8, QWORD PTR [rax]
	lea	rdx, OFFSET FLAT:??_C@_09HNFDDBIF@?$FL?$CFs?$FN?$FL?$CFs?$FN?6@
	mov	rcx, QWORD PTR buf$[rbp]
	call	?appendf@ImGuiTextBuffer@@QEAAXPEBDZZ	; ImGuiTextBuffer::appendf
; Line 10646
	mov	rax, QWORD PTR settings$4[rbp]
	movsx	eax, WORD PTR [rax+6]
	mov	rcx, QWORD PTR settings$4[rbp]
	movsx	ecx, WORD PTR [rcx+4]
	mov	r9d, eax
	mov	r8d, ecx
	lea	rdx, OFFSET FLAT:??_C@_0L@DDMADIHO@Pos?$DN?$CFd?0?$CFd?6@
	mov	rcx, QWORD PTR buf$[rbp]
	call	?appendf@ImGuiTextBuffer@@QEAAXPEBDZZ	; ImGuiTextBuffer::appendf
; Line 10647
	mov	rax, QWORD PTR settings$4[rbp]
	movsx	eax, WORD PTR [rax+10]
	mov	rcx, QWORD PTR settings$4[rbp]
	movsx	ecx, WORD PTR [rcx+8]
	mov	r9d, eax
	mov	r8d, ecx
	lea	rdx, OFFSET FLAT:??_C@_0M@CFANMDMP@Size?$DN?$CFd?0?$CFd?6@
	mov	rcx, QWORD PTR buf$[rbp]
	call	?appendf@ImGuiTextBuffer@@QEAAXPEBDZZ	; ImGuiTextBuffer::appendf
; Line 10648
	mov	rax, QWORD PTR settings$4[rbp]
	movzx	eax, BYTE PTR [rax+12]
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_0O@JAFHMCKE@Collapsed?$DN?$CFd?6@
	mov	rcx, QWORD PTR buf$[rbp]
	call	?appendf@ImGuiTextBuffer@@QEAAXPEBDZZ	; ImGuiTextBuffer::appendf
; Line 10649
	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
	mov	rcx, QWORD PTR buf$[rbp]
	call	?append@ImGuiTextBuffer@@QEAAXPEBD0@Z	; ImGuiTextBuffer::append
; Line 10650
	jmp	$LN5@WindowSett
$LN6@WindowSett:
; Line 10651
	lea	rsp, QWORD PTR [rbp+472]
	pop	rdi
	pop	rbp
	ret	0
?WindowSettingsHandler_WriteAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAUImGuiTextBuffer@@@Z ENDP ; WindowSettingsHandler_WriteAll
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?WindowSettingsHandler_ApplyAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@@Z
_TEXT	SEGMENT
g$ = 8
settings$1 = 40
window$2 = 72
tv72 = 280
ctx$ = 320
__formal$ = 328
?WindowSettingsHandler_ApplyAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@@Z PROC ; WindowSettingsHandler_ApplyAll, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10605
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10606
	mov	rax, QWORD PTR ctx$[rbp]
	mov	QWORD PTR g$[rbp], rax
; Line 10607
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12424				; 00003088H
	mov	rcx, rax
	call	?begin@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ ; ImChunkStream<ImGuiWindowSettings>::begin
	mov	QWORD PTR settings$1[rbp], rax
	jmp	SHORT $LN4@WindowSett
$LN2@WindowSett:
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12424				; 00003088H
	mov	QWORD PTR tv72[rbp], rax
	mov	rdx, QWORD PTR settings$1[rbp]
	mov	rcx, QWORD PTR tv72[rbp]
	call	?next_chunk@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@PEAU2@@Z ; ImChunkStream<ImGuiWindowSettings>::next_chunk
	mov	QWORD PTR settings$1[rbp], rax
$LN4@WindowSett:
	cmp	QWORD PTR settings$1[rbp], 0
	je	SHORT $LN3@WindowSett
; Line 10608
	mov	rax, QWORD PTR settings$1[rbp]
	movzx	eax, BYTE PTR [rax+13]
	test	eax, eax
	je	SHORT $LN5@WindowSett
; Line 10610
	mov	rax, QWORD PTR settings$1[rbp]
	mov	ecx, DWORD PTR [rax]
	call	?FindWindowByID@ImGui@@YAPEAUImGuiWindow@@I@Z ; ImGui::FindWindowByID
	mov	QWORD PTR window$2[rbp], rax
	cmp	QWORD PTR window$2[rbp], 0
	je	SHORT $LN6@WindowSett
; Line 10611
	mov	rdx, QWORD PTR settings$1[rbp]
	mov	rcx, QWORD PTR window$2[rbp]
	call	?ApplyWindowSettings@@YAXPEAUImGuiWindow@@PEAUImGuiWindowSettings@@@Z ; ApplyWindowSettings
$LN6@WindowSett:
; Line 10612
	mov	rax, QWORD PTR settings$1[rbp]
	mov	BYTE PTR [rax+13], 0
$LN5@WindowSett:
; Line 10613
	jmp	SHORT $LN2@WindowSett
$LN3@WindowSett:
; Line 10614
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?WindowSettingsHandler_ApplyAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@@Z ENDP ; WindowSettingsHandler_ApplyAll
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?WindowSettingsHandler_ReadLine@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAXPEBD@Z
_TEXT	SEGMENT
settings$ = 8
x$ = 36
y$ = 68
i$ = 100
$T6 = 324
$T7 = 356
tv95 = 372
__$ArrayPad$ = 376
__formal$ = 416
__formal$ = 424
entry$ = 432
line$ = 440
?WindowSettingsHandler_ReadLine@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAXPEBD@Z PROC ; WindowSettingsHandler_ReadLine, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10594
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 50					; 00000032H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+456]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10595
	mov	rax, QWORD PTR entry$[rbp]
	mov	QWORD PTR settings$[rbp], rax
; Line 10598
	lea	r9, QWORD PTR y$[rbp]
	lea	r8, QWORD PTR x$[rbp]
	lea	rdx, OFFSET FLAT:??_C@_09GOMOMIIP@Pos?$DN?$CFi?0?$CFi@
	mov	rcx, QWORD PTR line$[rbp]
	call	sscanf
	cmp	eax, 2
	jne	SHORT $LN2@WindowSett
	movzx	r8d, WORD PTR y$[rbp]
	movzx	edx, WORD PTR x$[rbp]
	lea	rcx, QWORD PTR $T6[rbp]
	call	??0ImVec2ih@@QEAA@FF@Z			; ImVec2ih::ImVec2ih
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR settings$[rbp]
	mov	DWORD PTR [rcx+4], eax
	jmp	$LN3@WindowSett
$LN2@WindowSett:
; Line 10599
	lea	r9, QWORD PTR y$[rbp]
	lea	r8, QWORD PTR x$[rbp]
	lea	rdx, OFFSET FLAT:??_C@_0L@MPPKDMFA@Size?$DN?$CFi?0?$CFi@
	mov	rcx, QWORD PTR line$[rbp]
	call	sscanf
	cmp	eax, 2
	jne	SHORT $LN4@WindowSett
	movzx	r8d, WORD PTR y$[rbp]
	movzx	edx, WORD PTR x$[rbp]
	lea	rcx, QWORD PTR $T7[rbp]
	call	??0ImVec2ih@@QEAA@FF@Z			; ImVec2ih::ImVec2ih
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR settings$[rbp]
	mov	DWORD PTR [rcx+8], eax
	jmp	SHORT $LN5@WindowSett
$LN4@WindowSett:
; Line 10600
	lea	r8, QWORD PTR i$[rbp]
	lea	rdx, OFFSET FLAT:??_C@_0N@IAKNMBB@Collapsed?$DN?$CFd@
	mov	rcx, QWORD PTR line$[rbp]
	call	sscanf
	cmp	eax, 1
	jne	SHORT $LN6@WindowSett
	cmp	DWORD PTR i$[rbp], 0
	je	SHORT $LN8@WindowSett
	mov	DWORD PTR tv95[rbp], 1
	jmp	SHORT $LN9@WindowSett
$LN8@WindowSett:
	mov	DWORD PTR tv95[rbp], 0
$LN9@WindowSett:
	mov	rax, QWORD PTR settings$[rbp]
	movzx	ecx, BYTE PTR tv95[rbp]
	mov	BYTE PTR [rax+12], cl
$LN6@WindowSett:
$LN5@WindowSett:
$LN3@WindowSett:
; Line 10601
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?WindowSettingsHandler_ReadLine@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAXPEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
?WindowSettingsHandler_ReadLine@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAXPEBD@Z ENDP ; WindowSettingsHandler_ReadLine
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?WindowSettingsHandler_ReadOpen@@YAPEAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEBD@Z
_TEXT	SEGMENT
settings$ = 8
id$ = 36
$T1 = 260
__formal$ = 336
__formal$ = 344
name$ = 352
?WindowSettingsHandler_ReadOpen@@YAPEAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEBD@Z PROC ; WindowSettingsHandler_ReadOpen, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10584
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 336				; 00000150H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10585
	mov	rcx, QWORD PTR name$[rbp]
	call	?FindOrCreateWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z ; ImGui::FindOrCreateWindowSettings
	mov	QWORD PTR settings$[rbp], rax
; Line 10586
	mov	rax, QWORD PTR settings$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR id$[rbp], eax
; Line 10587
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImGuiWindowSettings@@QEAA@XZ		; ImGuiWindowSettings::ImGuiWindowSettings
	mov	rdi, QWORD PTR settings$[rbp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
; Line 10588
	mov	rax, QWORD PTR settings$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rax], ecx
; Line 10589
	mov	rax, QWORD PTR settings$[rbp]
	mov	BYTE PTR [rax+13], 1
; Line 10590
	mov	rax, QWORD PTR settings$[rbp]
; Line 10591
	lea	rsp, QWORD PTR [rbp+304]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?WindowSettingsHandler_ReadOpen@@YAPEAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEBD@Z ENDP ; WindowSettingsHandler_ReadOpen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?WindowSettingsHandler_ClearAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@@Z
_TEXT	SEGMENT
g$ = 8
i$1 = 36
tv73 = 248
ctx$ = 288
__formal$ = 296
?WindowSettingsHandler_ClearAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@@Z PROC ; WindowSettingsHandler_ClearAll, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10576
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10577
	mov	rax, QWORD PTR ctx$[rbp]
	mov	QWORD PTR g$[rbp], rax
; Line 10578
	mov	DWORD PTR i$1[rbp], 0
	jmp	SHORT $LN4@WindowSett
$LN2@WindowSett:
	mov	eax, DWORD PTR i$1[rbp]
	inc	eax
	mov	DWORD PTR i$1[rbp], eax
$LN4@WindowSett:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7088]
	cmp	DWORD PTR i$1[rbp], eax
	je	SHORT $LN3@WindowSett
; Line 10579
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv73[rbp], rax
	mov	edx, DWORD PTR i$1[rbp]
	mov	rcx, QWORD PTR tv73[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rax+684], -1
	jmp	SHORT $LN2@WindowSett
$LN3@WindowSett:
; Line 10580
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12424				; 00003088H
	mov	rcx, rax
	call	?clear@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAXXZ ; ImChunkStream<ImGuiWindowSettings>::clear
; Line 10581
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?WindowSettingsHandler_ClearAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@@Z ENDP ; WindowSettingsHandler_ClearAll
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?AddWindowToSortBuffer@@YAXPEAU?$ImVector@PEAUImGuiWindow@@@@PEAUImGuiWindow@@@Z
_TEXT	SEGMENT
count$1 = 4
i$2 = 36
child$3 = 72
tv89 = 280
out_sorted_windows$ = 320
window$ = 328
?AddWindowToSortBuffer@@YAXPEAU?$ImVector@PEAUImGuiWindow@@@@PEAUImGuiWindow@@@Z PROC ; AddWindowToSortBuffer, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4251
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4252
	lea	rdx, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR out_sorted_windows$[rbp]
	call	?push_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z ; ImVector<ImGuiWindow *>::push_back
; Line 4253
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+142]
	test	eax, eax
	je	$LN5@AddWindowT
; Line 4255
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+400]
	mov	DWORD PTR count$1[rbp], eax
; Line 4256
	cmp	DWORD PTR count$1[rbp], 1
	jle	SHORT $LN6@AddWindowT
; Line 4257
	movsxd	rax, DWORD PTR count$1[rbp]
	lea	r9, OFFSET FLAT:?ChildWindowComparer@@YAHPEBX0@Z ; ChildWindowComparer
	mov	r8d, 8
	mov	rdx, rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR [rax+408]
	call	QWORD PTR __imp_qsort
$LN6@AddWindowT:
; Line 4258
	mov	DWORD PTR i$2[rbp], 0
	jmp	SHORT $LN4@AddWindowT
$LN2@AddWindowT:
	mov	eax, DWORD PTR i$2[rbp]
	inc	eax
	mov	DWORD PTR i$2[rbp], eax
$LN4@AddWindowT:
	mov	eax, DWORD PTR count$1[rbp]
	cmp	DWORD PTR i$2[rbp], eax
	jge	SHORT $LN3@AddWindowT
; Line 4260
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 400				; 00000190H
	mov	QWORD PTR tv89[rbp], rax
	mov	edx, DWORD PTR i$2[rbp]
	mov	rcx, QWORD PTR tv89[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR child$3[rbp], rax
; Line 4261
	mov	rax, QWORD PTR child$3[rbp]
	movzx	eax, BYTE PTR [rax+142]
	test	eax, eax
	je	SHORT $LN7@AddWindowT
; Line 4262
	mov	rdx, QWORD PTR child$3[rbp]
	mov	rcx, QWORD PTR out_sorted_windows$[rbp]
	call	?AddWindowToSortBuffer@@YAXPEAU?$ImVector@PEAUImGuiWindow@@@@PEAUImGuiWindow@@@Z ; AddWindowToSortBuffer
$LN7@AddWindowT:
; Line 4263
	jmp	SHORT $LN2@AddWindowT
$LN3@AddWindowT:
$LN5@AddWindowT:
; Line 4265
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?AddWindowToSortBuffer@@YAXPEAU?$ImVector@PEAUImGuiWindow@@@@PEAUImGuiWindow@@@Z ENDP ; AddWindowToSortBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?AddDrawListToDrawData@@YAXPEAU?$ImVector@PEAUImDrawList@@@@PEAUImDrawList@@@Z
_TEXT	SEGMENT
out_list$ = 224
draw_list$ = 232
?AddDrawListToDrawData@@YAXPEAU?$ImVector@PEAUImDrawList@@@@PEAUImDrawList@@@Z PROC ; AddDrawListToDrawData, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4268
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4271
	mov	rcx, QWORD PTR draw_list$[rbp]
	call	?_PopUnusedDrawCmd@ImDrawList@@QEAAXXZ	; ImDrawList::_PopUnusedDrawCmd
; Line 4272
	mov	rax, QWORD PTR draw_list$[rbp]
	cmp	DWORD PTR [rax], 0
	jne	SHORT $LN2@AddDrawLis
; Line 4273
	jmp	$LN1@AddDrawLis
$LN2@AddDrawLis:
; Line 4277
	mov	rax, QWORD PTR draw_list$[rbp]
	cmp	DWORD PTR [rax+32], 0
	je	SHORT $LN6@AddDrawLis
	mov	rax, QWORD PTR draw_list$[rbp]
	movsxd	rax, DWORD PTR [rax+32]
	imul	rax, rax, 20
	mov	rcx, QWORD PTR draw_list$[rbp]
	add	rax, QWORD PTR [rcx+40]
	mov	rcx, QWORD PTR draw_list$[rbp]
	cmp	QWORD PTR [rcx+72], rax
	je	SHORT $LN6@AddDrawLis
	mov	eax, DWORD PTR ?__LINE__Var@?0??AddDrawListToDrawData@@YAXPEAU?$ImVector@PEAUImDrawList@@@@PEAUImDrawList@@@Z@4JA
	add	eax, 9
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1OG@INBPPELJ@?$AAd?$AAr?$AAa?$AAw?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AAV?$AAt?$AAx?$AAB@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@AddDrawLis:
; Line 4278
	mov	rax, QWORD PTR draw_list$[rbp]
	cmp	DWORD PTR [rax+16], 0
	je	SHORT $LN7@AddDrawLis
	mov	rax, QWORD PTR draw_list$[rbp]
	movsxd	rax, DWORD PTR [rax+16]
	mov	rcx, QWORD PTR draw_list$[rbp]
	mov	rcx, QWORD PTR [rcx+24]
	lea	rax, QWORD PTR [rcx+rax*2]
	mov	rcx, QWORD PTR draw_list$[rbp]
	cmp	QWORD PTR [rcx+80], rax
	je	SHORT $LN7@AddDrawLis
	mov	eax, DWORD PTR ?__LINE__Var@?0??AddDrawListToDrawData@@YAXPEAU?$ImVector@PEAUImDrawList@@@@PEAUImDrawList@@@Z@4JA
	add	eax, 10
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1OG@ICPLNDEC@?$AAd?$AAr?$AAa?$AAw?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AAI?$AAd?$AAx?$AAB@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@AddDrawLis:
; Line 4279
	mov	rax, QWORD PTR draw_list$[rbp]
	mov	eax, DWORD PTR [rax+48]
	and	eax, 8
	test	eax, eax
	jne	SHORT $LN3@AddDrawLis
; Line 4280
	mov	rax, QWORD PTR draw_list$[rbp]
	mov	rcx, QWORD PTR draw_list$[rbp]
	mov	ecx, DWORD PTR [rcx+32]
	cmp	DWORD PTR [rax+52], ecx
	je	SHORT $LN8@AddDrawLis
	mov	eax, DWORD PTR ?__LINE__Var@?0??AddDrawListToDrawData@@YAXPEAU?$ImVector@PEAUImDrawList@@@@PEAUImDrawList@@@Z@4JA
	add	eax, 12
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1HI@ENCAIJO@?$AA?$CI?$AAi?$AAn?$AAt?$AA?$CJ?$AAd?$AAr?$AAa?$AAw?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?9@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN8@AddDrawLis:
$LN3@AddDrawLis:
; Line 4297
	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN4@AddDrawLis
; Line 4298
	mov	rax, QWORD PTR draw_list$[rbp]
	cmp	DWORD PTR [rax+52], 65536		; 00010000H
	jae	SHORT $LN9@AddDrawLis
	lea	rax, OFFSET FLAT:??_C@_0EJ@CDENJONN@Too?5many?5vertices?5in?5ImDrawList@
	test	rax, rax
	jne	SHORT $LN10@AddDrawLis
$LN9@AddDrawLis:
	mov	eax, DWORD PTR ?__LINE__Var@?0??AddDrawListToDrawData@@YAXPEAU?$ImVector@PEAUImDrawList@@@@PEAUImDrawList@@@Z@4JA
	add	eax, 30
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1OI@BGNIEPFI@?$AAd?$AAr?$AAa?$AAw?$AA_?$AAl?$AAi?$AAs?$AAt?$AA?9?$AA?$DO?$AA_?$AAV?$AAt?$AAx@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN10@AddDrawLis:
$LN4@AddDrawLis:
; Line 4300
	lea	rdx, QWORD PTR draw_list$[rbp]
	mov	rcx, QWORD PTR out_list$[rbp]
	call	?push_back@?$ImVector@PEAUImDrawList@@@@QEAAXAEBQEAUImDrawList@@@Z ; ImVector<ImDrawList *>::push_back
$LN1@AddDrawLis:
; Line 4301
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?AddDrawListToDrawData@@YAXPEAU?$ImVector@PEAUImDrawList@@@@PEAUImDrawList@@@Z ENDP ; AddDrawListToDrawData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CalcNextScrollFromScrollTargetAndClamp@@YA?AUImVec2@@PEAUImGuiWindow@@@Z
_TEXT	SEGMENT
scroll$ = 8
decoration_total_width$4 = 36
center_x_ratio$5 = 68
scroll_target_x$6 = 100
snap_x_min$7 = 132
snap_x_max$8 = 164
decoration_total_height$9 = 196
center_y_ratio$10 = 228
scroll_target_y$11 = 260
snap_y_min$12 = 292
snap_y_max$13 = 324
tv133 = 532
__$ArrayPad$ = 536
__$ReturnUdt$ = 576
window$ = 584
?CalcNextScrollFromScrollTargetAndClamp@@YA?AUImVec2@@PEAUImGuiWindow@@@Z PROC ; CalcNextScrollFromScrollTargetAndClamp, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7859
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 600				; 00000258H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+632]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7860
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+92]
	mov	QWORD PTR scroll$[rbp], rax
; Line 7861
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR __real@7f7fffff
	comiss	xmm0, DWORD PTR [rax+108]
	jbe	$LN2@CalcNextSc
; Line 7863
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+132]
	movss	DWORD PTR decoration_total_width$4[rbp], xmm0
; Line 7864
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+116]
	movss	DWORD PTR center_x_ratio$5[rbp], xmm0
; Line 7865
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+108]
	movss	DWORD PTR scroll_target_x$6[rbp], xmm0
; Line 7866
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+124]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN3@CalcNextSc
; Line 7868
	xorps	xmm0, xmm0
	movss	DWORD PTR snap_x_min$7[rbp], xmm0
; Line 7869
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+100]
	addss	xmm0, DWORD PTR [rcx+32]
	subss	xmm0, DWORD PTR decoration_total_width$4[rbp]
	movss	DWORD PTR snap_x_max$8[rbp], xmm0
; Line 7870
	movss	xmm0, DWORD PTR center_x_ratio$5[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm3, DWORD PTR [rax+124]
	movss	xmm2, DWORD PTR snap_x_max$8[rbp]
	movss	xmm1, DWORD PTR snap_x_min$7[rbp]
	movss	xmm0, DWORD PTR scroll_target_x$6[rbp]
	call	?CalcScrollEdgeSnap@@YAMMMMMM@Z		; CalcScrollEdgeSnap
	movss	DWORD PTR scroll_target_x$6[rbp], xmm0
$LN3@CalcNextSc:
; Line 7872
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+32]
	subss	xmm0, DWORD PTR decoration_total_width$4[rbp]
	movss	xmm1, DWORD PTR center_x_ratio$5[rbp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR scroll_target_x$6[rbp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR scroll$[rbp], xmm0
$LN2@CalcNextSc:
; Line 7874
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR __real@7f7fffff
	comiss	xmm0, DWORD PTR [rax+112]
	jbe	$LN4@CalcNextSc
; Line 7876
	mov	rcx, QWORD PTR window$[rbp]
	call	?TitleBarHeight@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::TitleBarHeight
	movss	DWORD PTR tv133[rbp], xmm0
	mov	rcx, QWORD PTR window$[rbp]
	call	?MenuBarHeight@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::MenuBarHeight
	movss	xmm1, DWORD PTR tv133[rbp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR window$[rbp]
	addss	xmm0, DWORD PTR [rax+136]
	movss	DWORD PTR decoration_total_height$9[rbp], xmm0
; Line 7877
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+120]
	movss	DWORD PTR center_y_ratio$10[rbp], xmm0
; Line 7878
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+112]
	movss	DWORD PTR scroll_target_y$11[rbp], xmm0
; Line 7879
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+128]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN5@CalcNextSc
; Line 7881
	xorps	xmm0, xmm0
	movss	DWORD PTR snap_y_min$12[rbp], xmm0
; Line 7882
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+104]
	addss	xmm0, DWORD PTR [rcx+36]
	subss	xmm0, DWORD PTR decoration_total_height$9[rbp]
	movss	DWORD PTR snap_y_max$13[rbp], xmm0
; Line 7883
	movss	xmm0, DWORD PTR center_y_ratio$10[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm3, DWORD PTR [rax+128]
	movss	xmm2, DWORD PTR snap_y_max$13[rbp]
	movss	xmm1, DWORD PTR snap_y_min$12[rbp]
	movss	xmm0, DWORD PTR scroll_target_y$11[rbp]
	call	?CalcScrollEdgeSnap@@YAMMMMMM@Z		; CalcScrollEdgeSnap
	movss	DWORD PTR scroll_target_y$11[rbp], xmm0
$LN5@CalcNextSc:
; Line 7885
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+36]
	subss	xmm0, DWORD PTR decoration_total_height$9[rbp]
	movss	xmm1, DWORD PTR center_y_ratio$10[rbp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR scroll_target_y$11[rbp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR scroll$[rbp+4], xmm0
$LN4@CalcNextSc:
; Line 7887
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR scroll$[rbp]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	movss	DWORD PTR scroll$[rbp], xmm0
; Line 7888
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR scroll$[rbp+4]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	movss	DWORD PTR scroll$[rbp+4], xmm0
; Line 7889
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+145]
	test	eax, eax
	jne	SHORT $LN6@CalcNextSc
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+147]
	test	eax, eax
	jne	SHORT $LN6@CalcNextSc
; Line 7891
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+100]
	movss	xmm0, DWORD PTR scroll$[rbp]
	call	??$ImMin@M@@YAMMM@Z			; ImMin<float>
	movss	DWORD PTR scroll$[rbp], xmm0
; Line 7892
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+104]
	movss	xmm0, DWORD PTR scroll$[rbp+4]
	call	??$ImMin@M@@YAMMM@Z			; ImMin<float>
	movss	DWORD PTR scroll$[rbp+4], xmm0
$LN6@CalcNextSc:
; Line 7894
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR scroll$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 7895
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?CalcNextScrollFromScrollTargetAndClamp@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+552]
	pop	rdi
	pop	rbp
	ret	0
?CalcNextScrollFromScrollTargetAndClamp@@YA?AUImVec2@@PEAUImGuiWindow@@@Z ENDP ; CalcNextScrollFromScrollTargetAndClamp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
main_viewport$ = 72
settings$4 = 104
$T5 = 328
$T6 = 360
$T7 = 392
$T8 = 424
$T9 = 452
$T10 = 484
$T11 = 516
$T12 = 552
tv184 = 564
tv209 = 568
tv204 = 568
tv192 = 568
tv147 = 568
tv89 = 568
tv82 = 568
tv149 = 576
__$ArrayPad$ = 584
name$ = 624
flags$ = 632
?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z PROC	; CreateNewWindow, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5139
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 632				; 00000278H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 102				; 00000066H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+664]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5140
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 5144
	mov	ecx, 992				; 000003e0H
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR $T7[rbp], rax
	lea	rax, QWORD PTR $T9[rbp]
	mov	QWORD PTR $T8[rbp], rax
	mov	r8, QWORD PTR $T7[rbp]
	mov	rax, QWORD PTR $T8[rbp]
	movzx	edx, BYTE PTR [rax]
	mov	ecx, 992				; 000003e0H
	call	??2@YAPEAX_KUImNewWrapper@@PEAX@Z	; operator new
	mov	QWORD PTR $T6[rbp], rax
	cmp	QWORD PTR $T6[rbp], 0
	je	SHORT $LN12@CreateNewW
	mov	r8, QWORD PTR name$[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR $T6[rbp]
	call	??0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z ; ImGuiWindow::ImGuiWindow
	mov	QWORD PTR tv82[rbp], rax
	jmp	SHORT $LN13@CreateNewW
$LN12@CreateNewW:
	mov	QWORD PTR tv82[rbp], 0
$LN13@CreateNewW:
	mov	rax, QWORD PTR tv82[rbp]
	mov	QWORD PTR $T5[rbp], rax
	mov	rax, QWORD PTR $T5[rbp]
	mov	QWORD PTR window$[rbp], rax
; Line 5145
	mov	rax, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR flags$[rbp]
	mov	DWORD PTR [rax+12], ecx
; Line 5146
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7152				; 00001bf0H
	mov	QWORD PTR tv89[rbp], rax
	mov	r8, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR window$[rbp]
	mov	edx, DWORD PTR [rax+8]
	mov	rcx, QWORD PTR tv89[rbp]
	call	?SetVoidPtr@ImGuiStorage@@QEAAXIPEAX@Z	; ImGuiStorage::SetVoidPtr
; Line 5149
	call	?GetMainViewport@ImGui@@YAPEAUImGuiViewport@@XZ ; ImGui::GetMainViewport
	mov	QWORD PTR main_viewport$[rbp], rax
; Line 5150
	movss	xmm2, DWORD PTR __real@42700000
	movss	xmm1, DWORD PTR __real@42700000
	lea	rcx, QWORD PTR $T10[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rcx, QWORD PTR main_viewport$[rbp]
	add	rcx, 4
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T11[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T12[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR $T12[rbp]
	mov	QWORD PTR [rax+16], rcx
; Line 5153
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 256				; 00000100H
	test	eax, eax
	jne	SHORT $LN2@CreateNewW
; Line 5154
	mov	rax, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rax+8]
	call	?FindWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@I@Z ; ImGui::FindWindowSettings
	mov	QWORD PTR settings$4[rbp], rax
	cmp	QWORD PTR settings$4[rbp], 0
	je	SHORT $LN2@CreateNewW
; Line 5157
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12424				; 00003088H
	mov	QWORD PTR tv147[rbp], rax
	mov	rdx, QWORD PTR settings$4[rbp]
	mov	rcx, QWORD PTR tv147[rbp]
	call	?offset_from_ptr@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAHPEBUImGuiWindowSettings@@@Z ; ImChunkStream<ImGuiWindowSettings>::offset_from_ptr
	mov	DWORD PTR tv149[rbp], eax
	mov	rax, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR tv149[rbp]
	mov	DWORD PTR [rax+684], ecx
; Line 5158
	xor	r8d, r8d
	mov	edx, 4
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetWindowConditionAllowFlags@@YAXPEAUImGuiWindow@@H_N@Z ; SetWindowConditionAllowFlags
; Line 5159
	mov	rdx, QWORD PTR settings$4[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?ApplyWindowSettings@@YAXPEAUImGuiWindow@@PEAUImGuiWindowSettings@@@Z ; ApplyWindowSettings
$LN2@CreateNewW:
; Line 5161
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+240], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+240]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+232], rax
; Line 5163
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 64					; 00000040H
	test	eax, eax
	je	SHORT $LN4@CreateNewW
; Line 5165
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+169], 2
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+168], 2
; Line 5166
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+171], 0
; Line 5167
	jmp	SHORT $LN5@CreateNewW
$LN4@CreateNewW:
; Line 5170
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rax+24]
	jb	SHORT $LN6@CreateNewW
; Line 5171
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+168], 2
$LN6@CreateNewW:
; Line 5172
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rax+28]
	jb	SHORT $LN7@CreateNewW
; Line 5173
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+169], 2
$LN7@CreateNewW:
; Line 5174
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+168]
	test	eax, eax
	jg	SHORT $LN14@CreateNewW
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+169]
	test	eax, eax
	jg	SHORT $LN14@CreateNewW
	mov	DWORD PTR tv184[rbp], 0
	jmp	SHORT $LN15@CreateNewW
$LN14@CreateNewW:
	mov	DWORD PTR tv184[rbp], 1
$LN15@CreateNewW:
	mov	rax, QWORD PTR window$[rbp]
	movzx	ecx, BYTE PTR tv184[rbp]
	mov	BYTE PTR [rax+171], cl
$LN5@CreateNewW:
; Line 5177
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	jne	SHORT $LN8@CreateNewW
; Line 5179
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7104				; 00001bc0H
	mov	QWORD PTR tv192[rbp], rax
	lea	rdx, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR tv192[rbp]
	call	?push_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z ; ImVector<ImGuiWindow *>::push_back
; Line 5180
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7104]
	dec	eax
	mov	rcx, QWORD PTR window$[rbp]
	mov	WORD PTR [rcx+160], ax
$LN8@CreateNewW:
; Line 5183
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 8192				; 00002000H
	test	eax, eax
	je	SHORT $LN9@CreateNewW
; Line 5184
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv204[rbp], rax
	lea	rdx, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR tv204[rbp]
	call	?push_front@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z ; ImVector<ImGuiWindow *>::push_front
	jmp	SHORT $LN10@CreateNewW
$LN9@CreateNewW:
; Line 5186
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv209[rbp], rax
	lea	rdx, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR tv209[rbp]
	call	?push_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z ; ImVector<ImGuiWindow *>::push_back
$LN10@CreateNewW:
; Line 5187
	mov	rax, QWORD PTR window$[rbp]
; Line 5188
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+600]
	pop	rdi
	pop	rbp
	ret	0
?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z ENDP	; CreateNewWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
g$ = 8
window$ = 40
main_viewport$ = 72
settings$4 = 104
$T5 = 328
$T6 = 360
$T7 = 392
$T8 = 424
$T9 = 452
$T10 = 484
$T11 = 516
$T12 = 552
tv184 = 564
tv209 = 568
tv204 = 568
tv192 = 568
tv147 = 568
tv89 = 568
tv82 = 568
tv149 = 576
__$ArrayPad$ = 584
name$ = 624
flags$ = 632
?dtor$0@?0??CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z@4HA PROC ; `CreateNewWindow'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	r8, QWORD PTR $T7[rbp]
	mov	rax, QWORD PTR $T8[rbp]
	movzx	edx, BYTE PTR [rax]
	mov	rcx, QWORD PTR $T6[rbp]
	call	??3@YAXPEAXUImNewWrapper@@0@Z		; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z@4HA ENDP ; `CreateNewWindow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FindHoveredWindow@@YAXXZ
_TEXT	SEGMENT
g$ = 8
hovered_window$ = 40
hovered_window_ignoring_moving_window$ = 72
padding_regular$ = 104
padding_for_resize$ = 136
i$8 = 164
window$9 = 200
bb$10 = 232
hole_pos$11 = 280
hole_size$12 = 312
$T13 = 536
$T14 = 564
$T15 = 612
tv195 = 632
tv91 = 632
tv79 = 632
__$ArrayPad$ = 640
?FindHoveredWindow@@YAXXZ PROC				; FindHoveredWindow, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4559
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 688				; 000002b0H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 116				; 00000074H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4560
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4562
	mov	QWORD PTR hovered_window$[rbp], 0
; Line 4563
	mov	QWORD PTR hovered_window_ignoring_moving_window$[rbp], 0
; Line 4564
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7208], 0
	je	SHORT $LN5@FindHovere
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7208]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 512				; 00000200H
	test	eax, eax
	jne	SHORT $LN5@FindHovere
; Line 4565
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7208]
	mov	QWORD PTR hovered_window$[rbp], rax
$LN5@FindHovere:
; Line 4567
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+5568]
	mov	QWORD PTR padding_regular$[rbp], rax
; Line 4568
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+204]
	test	eax, eax
	je	SHORT $LN19@FindHovere
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7172				; 00001c04H
	mov	QWORD PTR tv79[rbp], rax
	jmp	SHORT $LN20@FindHovere
$LN19@FindHovere:
	lea	rax, QWORD PTR padding_regular$[rbp]
	mov	QWORD PTR tv79[rbp], rax
$LN20@FindHovere:
	mov	rax, QWORD PTR tv79[rbp]
	mov	QWORD PTR $T13[rbp], rax
	mov	rax, QWORD PTR $T13[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR padding_for_resize$[rbp], rax
; Line 4569
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7088]
	dec	eax
	mov	DWORD PTR i$8[rbp], eax
	jmp	SHORT $LN4@FindHovere
$LN2@FindHovere:
	mov	eax, DWORD PTR i$8[rbp]
	dec	eax
	mov	DWORD PTR i$8[rbp], eax
$LN4@FindHovere:
	cmp	DWORD PTR i$8[rbp], 0
	jl	$LN3@FindHovere
; Line 4571
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv91[rbp], rax
	mov	edx, DWORD PTR i$8[rbp]
	mov	rcx, QWORD PTR tv91[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR window$9[rbp], rax
; Line 4573
	mov	rax, QWORD PTR window$9[rbp]
	movzx	eax, BYTE PTR [rax+142]
	test	eax, eax
	je	SHORT $LN7@FindHovere
	mov	rax, QWORD PTR window$9[rbp]
	movzx	eax, BYTE PTR [rax+149]
	test	eax, eax
	je	SHORT $LN6@FindHovere
$LN7@FindHovere:
; Line 4574
	jmp	SHORT $LN2@FindHovere
$LN6@FindHovere:
; Line 4575
	mov	rax, QWORD PTR window$9[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 512				; 00000200H
	test	eax, eax
	je	SHORT $LN8@FindHovere
; Line 4576
	jmp	$LN2@FindHovere
$LN8@FindHovere:
; Line 4579
	lea	rax, QWORD PTR bb$10[rbp]
	mov	rcx, QWORD PTR window$9[rbp]
	mov	rdi, rax
	lea	rsi, QWORD PTR [rcx+512]
	mov	ecx, 16
	rep movsb
; Line 4580
	mov	rax, QWORD PTR window$9[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16777282				; 01000042H
	test	eax, eax
	je	SHORT $LN9@FindHovere
; Line 4581
	lea	rdx, QWORD PTR padding_regular$[rbp]
	lea	rcx, QWORD PTR bb$10[rbp]
	call	?Expand@ImRect@@QEAAXAEBUImVec2@@@Z	; ImRect::Expand
	jmp	SHORT $LN10@FindHovere
$LN9@FindHovere:
; Line 4583
	lea	rdx, QWORD PTR padding_for_resize$[rbp]
	lea	rcx, QWORD PTR bb$10[rbp]
	call	?Expand@ImRect@@QEAAXAEBUImVec2@@@Z	; ImRect::Expand
$LN10@FindHovere:
; Line 4584
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 296				; 00000128H
	mov	rdx, rax
	lea	rcx, QWORD PTR bb$10[rbp]
	call	?Contains@ImRect@@QEBA_NAEBUImVec2@@@Z	; ImRect::Contains
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN11@FindHovere
; Line 4585
	jmp	$LN2@FindHovere
$LN11@FindHovere:
; Line 4589
	mov	rax, QWORD PTR window$9[rbp]
	movsx	eax, WORD PTR [rax+624]
	test	eax, eax
	je	$LN12@FindHovere
; Line 4591
	mov	rax, QWORD PTR window$9[rbp]
	movsx	eax, WORD PTR [rax+630]
	cvtsi2ss xmm0, eax
	mov	rax, QWORD PTR window$9[rbp]
	movss	xmm1, DWORD PTR [rax+20]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR window$9[rbp]
	movsx	eax, WORD PTR [rax+628]
	cvtsi2ss xmm1, eax
	mov	rax, QWORD PTR window$9[rbp]
	movss	xmm2, DWORD PTR [rax+16]
	addss	xmm2, xmm1
	movaps	xmm1, xmm2
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR hole_pos$11[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
; Line 4592
	mov	rax, QWORD PTR window$9[rbp]
	movsx	eax, WORD PTR [rax+626]
	cvtsi2ss xmm0, eax
	mov	rax, QWORD PTR window$9[rbp]
	movsx	eax, WORD PTR [rax+624]
	cvtsi2ss xmm1, eax
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR hole_size$12[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
; Line 4593
	lea	r8, QWORD PTR hole_size$12[rbp]
	lea	rdx, QWORD PTR hole_pos$11[rbp]
	lea	rcx, QWORD PTR $T15[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	r8, rax
	lea	rdx, QWORD PTR hole_pos$11[rbp]
	lea	rcx, QWORD PTR $T14[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
	mov	QWORD PTR tv195[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 296				; 00000128H
	mov	rdx, rax
	mov	rcx, QWORD PTR tv195[rbp]
	call	?Contains@ImRect@@QEBA_NAEBUImVec2@@@Z	; ImRect::Contains
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@FindHovere
; Line 4594
	jmp	$LN2@FindHovere
$LN13@FindHovere:
$LN12@FindHovere:
; Line 4597
	cmp	QWORD PTR hovered_window$[rbp], 0
	jne	SHORT $LN14@FindHovere
; Line 4598
	mov	rax, QWORD PTR window$9[rbp]
	mov	QWORD PTR hovered_window$[rbp], rax
$LN14@FindHovere:
; Line 4600
	cmp	QWORD PTR hovered_window_ignoring_moving_window$[rbp], 0
	jne	SHORT $LN15@FindHovere
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7208], 0
	je	SHORT $LN16@FindHovere
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7208]
	mov	rcx, QWORD PTR window$9[rbp]
	mov	rax, QWORD PTR [rax+904]
	cmp	QWORD PTR [rcx+904], rax
	je	SHORT $LN15@FindHovere
$LN16@FindHovere:
; Line 4601
	mov	rax, QWORD PTR window$9[rbp]
	mov	QWORD PTR hovered_window_ignoring_moving_window$[rbp], rax
$LN15@FindHovere:
; Line 4602
	cmp	QWORD PTR hovered_window$[rbp], 0
	je	SHORT $LN17@FindHovere
	cmp	QWORD PTR hovered_window_ignoring_moving_window$[rbp], 0
	je	SHORT $LN17@FindHovere
; Line 4603
	jmp	SHORT $LN3@FindHovere
$LN17@FindHovere:
; Line 4604
	jmp	$LN2@FindHovere
$LN3@FindHovere:
; Line 4606
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR hovered_window$[rbp]
	mov	QWORD PTR [rax+7192], rcx
; Line 4607
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR hovered_window_ignoring_moving_window$[rbp]
	mov	QWORD PTR [rax+7200], rcx
; Line 4608
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?FindHoveredWindow@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+656]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?FindHoveredWindow@@YAXXZ ENDP				; FindHoveredWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetCurrentWindow@@YAXPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
g$ = 8
tv84 = 212
tv77 = 216
tv78 = 224
window$ = 272
?SetCurrentWindow@@YAXPEAUImGuiWindow@@@Z PROC		; SetCurrentWindow, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3013
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3014
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3015
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax+7184], rcx
; Line 3016
	cmp	QWORD PTR window$[rbp], 0
	je	SHORT $LN4@SetCurrent
	mov	rax, QWORD PTR window$[rbp]
	cmp	DWORD PTR [rax+432], -1
	je	SHORT $LN4@SetCurrent
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8192				; 00002000H
	mov	QWORD PTR tv77[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	edx, DWORD PTR [rax+432]
	mov	rcx, QWORD PTR tv77[rbp]
	call	?GetByIndex@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z ; ImPool<ImGuiTable>::GetByIndex
	mov	QWORD PTR tv78[rbp], rax
	jmp	SHORT $LN5@SetCurrent
$LN4@SetCurrent:
	mov	QWORD PTR tv78[rbp], 0
$LN5@SetCurrent:
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR tv78[rbp]
	mov	QWORD PTR [rax+8176], rcx
; Line 3017
	cmp	QWORD PTR window$[rbp], 0
	je	SHORT $LN2@SetCurrent
; Line 3018
	mov	rcx, QWORD PTR window$[rbp]
	call	?CalcFontSize@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::CalcFontSize
	movss	DWORD PTR tv84[rbp], xmm0
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR tv84[rbp]
	movss	DWORD PTR [rax+6552], xmm0
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR tv84[rbp]
	movss	DWORD PTR [rax+6528], xmm0
$LN2@SetCurrent:
; Line 3019
	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
?SetCurrentWindow@@YAXPEAUImGuiWindow@@@Z ENDP		; SetCurrentWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
scale$ = 72
off$ = 104
alpha_mul$ = 132
i$7 = 164
thumb_window$8 = 200
thumb_r$9 = 232
title_r$10 = 280
window_is_focused$11 = 324
$T12 = 932
$T13 = 964
$T14 = 996
$T15 = 1044
$T16 = 1076
$T17 = 1108
$T18 = 1140
$T19 = 1172
$T20 = 1204
$T21 = 1236
$T22 = 1284
$T23 = 1316
$T24 = 1348
$T25 = 1380
$T26 = 1412
$T27 = 1444
$T28 = 1476
$T29 = 1508
$T30 = 1540
tv278 = 1556
tv359 = 1560
tv326 = 1560
tv311 = 1560
tv292 = 1560
tv217 = 1560
tv187 = 1560
tv147 = 1560
tv137 = 1560
tv66 = 1560
tv353 = 1568
tv324 = 1568
tv304 = 1568
tv290 = 1568
tv215 = 1568
tv185 = 1568
tv135 = 1568
tv301 = 1572
tv357 = 1576
tv309 = 1576
tv266 = 1576
tv351 = 1584
tv264 = 1584
tv355 = 1588
tv349 = 1592
__$ArrayPad$ = 1600
draw_list$ = 1648
viewport$ = 1656
bb$ = 1664
?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z PROC ; ImGui::DebugRenderViewportThumbnail, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10881
$LN12:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 1696				; 000006a0H
	lea	rbp, QWORD PTR [rsp+80]
	lea	rdi, QWORD PTR [rsp+80]
	mov	ecx, 260				; 00000104H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1736]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10882
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10883
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 10885
	mov	rax, QWORD PTR viewport$[rbp]
	add	rax, 12
	mov	QWORD PTR tv66[rbp], rax
	lea	rdx, QWORD PTR $T12[rbp]
	mov	rcx, QWORD PTR bb$[rbp]
	call	?GetSize@ImRect@@QEBA?AUImVec2@@XZ	; ImRect::GetSize
	mov	rcx, QWORD PTR tv66[rbp]
	mov	r8, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR scale$[rbp]
	call	??K@YA?AUImVec2@@AEBU0@0@Z		; operator/
; Line 10886
	mov	rax, QWORD PTR viewport$[rbp]
	add	rax, 4
	lea	r8, QWORD PTR scale$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T13[rbp]
	call	??D@YA?AUImVec2@@AEBU0@0@Z		; operator*
	mov	rcx, QWORD PTR bb$[rbp]
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR off$[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
; Line 10887
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR alpha_mul$[rbp], xmm0
; Line 10888
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv137[rbp], rax
	movss	xmm0, DWORD PTR alpha_mul$[rbp]
	mulss	xmm0, DWORD PTR __real@3ecccccd
	movaps	xmm1, xmm0
	mov	ecx, 5
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv135[rbp], eax
	mov	rax, QWORD PTR bb$[rbp]
	add	rax, 8
	mov	rcx, QWORD PTR bb$[rbp]
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR tv135[rbp]
	mov	r8, rax
	mov	rdx, rcx
	mov	rcx, QWORD PTR tv137[rbp]
	call	?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z ; ImDrawList::AddRectFilled
; Line 10889
	mov	DWORD PTR i$7[rbp], 0
	jmp	SHORT $LN4@DebugRende
$LN2@DebugRende:
	mov	eax, DWORD PTR i$7[rbp]
	inc	eax
	mov	DWORD PTR i$7[rbp], eax
$LN4@DebugRende:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7088]
	cmp	DWORD PTR i$7[rbp], eax
	je	$LN3@DebugRende
; Line 10891
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv147[rbp], rax
	mov	edx, DWORD PTR i$7[rbp]
	mov	rcx, QWORD PTR tv147[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR thumb_window$8[rbp], rax
; Line 10892
	mov	rax, QWORD PTR thumb_window$8[rbp]
	movzx	eax, BYTE PTR [rax+143]
	test	eax, eax
	je	SHORT $LN6@DebugRende
	mov	rax, QWORD PTR thumb_window$8[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN5@DebugRende
$LN6@DebugRende:
; Line 10893
	jmp	SHORT $LN2@DebugRende
$LN5@DebugRende:
; Line 10895
	lea	rdx, QWORD PTR thumb_r$9[rbp]
	mov	rcx, QWORD PTR thumb_window$8[rbp]
	call	?Rect@ImGuiWindow@@QEBA?AUImRect@@XZ	; ImGuiWindow::Rect
; Line 10896
	lea	rdx, QWORD PTR title_r$10[rbp]
	mov	rcx, QWORD PTR thumb_window$8[rbp]
	call	?TitleBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ ; ImGuiWindow::TitleBarRect
; Line 10897
	lea	r8, QWORD PTR scale$[rbp]
	lea	rdx, QWORD PTR thumb_r$9[rbp+8]
	lea	rcx, QWORD PTR $T15[rbp]
	call	??D@YA?AUImVec2@@AEBU0@0@Z		; operator*
	mov	r8, rax
	lea	rdx, QWORD PTR off$[rbp]
	lea	rcx, QWORD PTR $T16[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rdx, rax
	lea	rcx, QWORD PTR $T17[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	QWORD PTR tv187[rbp], rax
	lea	r8, QWORD PTR scale$[rbp]
	lea	rdx, QWORD PTR thumb_r$9[rbp]
	lea	rcx, QWORD PTR $T18[rbp]
	call	??D@YA?AUImVec2@@AEBU0@0@Z		; operator*
	mov	r8, rax
	lea	rdx, QWORD PTR off$[rbp]
	lea	rcx, QWORD PTR $T19[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rdx, rax
	lea	rcx, QWORD PTR $T20[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	QWORD PTR tv185[rbp], rax
	mov	r8, QWORD PTR tv187[rbp]
	mov	rdx, QWORD PTR tv185[rbp]
	lea	rcx, QWORD PTR $T14[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
	lea	rcx, QWORD PTR thumb_r$9[rbp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
; Line 10898
	movss	xmm2, DWORD PTR __real@40a00000
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T22[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv217[rbp], rax
	movss	xmm2, DWORD PTR title_r$10[rbp+4]
	movss	xmm1, DWORD PTR title_r$10[rbp+8]
	lea	rcx, QWORD PTR $T23[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	lea	r8, QWORD PTR scale$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T24[rbp]
	call	??D@YA?AUImVec2@@AEBU0@0@Z		; operator*
	mov	r8, rax
	lea	rdx, QWORD PTR off$[rbp]
	lea	rcx, QWORD PTR $T25[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rdx, rax
	lea	rcx, QWORD PTR $T26[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	QWORD PTR tv215[rbp], rax
	mov	r8, QWORD PTR tv217[rbp]
	mov	rdx, QWORD PTR tv215[rbp]
	lea	rcx, QWORD PTR $T27[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv266[rbp], rax
	lea	r8, QWORD PTR scale$[rbp]
	lea	rdx, QWORD PTR title_r$10[rbp]
	lea	rcx, QWORD PTR $T28[rbp]
	call	??D@YA?AUImVec2@@AEBU0@0@Z		; operator*
	mov	r8, rax
	lea	rdx, QWORD PTR off$[rbp]
	lea	rcx, QWORD PTR $T29[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rdx, rax
	lea	rcx, QWORD PTR $T30[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	QWORD PTR tv264[rbp], rax
	mov	r8, QWORD PTR tv266[rbp]
	mov	rdx, QWORD PTR tv264[rbp]
	lea	rcx, QWORD PTR $T21[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
	lea	rcx, QWORD PTR title_r$10[rbp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
; Line 10899
	mov	rdx, QWORD PTR bb$[rbp]
	lea	rcx, QWORD PTR thumb_r$9[rbp]
	call	?ClipWithFull@ImRect@@QEAAXAEBU1@@Z	; ImRect::ClipWithFull
; Line 10900
	mov	rdx, QWORD PTR bb$[rbp]
	lea	rcx, QWORD PTR title_r$10[rbp]
	call	?ClipWithFull@ImRect@@QEAAXAEBU1@@Z	; ImRect::ClipWithFull
; Line 10901
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN8@DebugRende
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	rcx, QWORD PTR thumb_window$8[rbp]
	mov	rax, QWORD PTR [rax+912]
	cmp	QWORD PTR [rcx+912], rax
	jne	SHORT $LN8@DebugRende
	mov	BYTE PTR tv278[rbp], 1
	jmp	SHORT $LN9@DebugRende
$LN8@DebugRende:
	mov	BYTE PTR tv278[rbp], 0
$LN9@DebugRende:
	movzx	eax, BYTE PTR tv278[rbp]
	mov	BYTE PTR window_is_focused$11[rbp], al
; Line 10902
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv292[rbp], rax
	movss	xmm1, DWORD PTR alpha_mul$[rbp]
	mov	ecx, 2
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv290[rbp], eax
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR tv290[rbp]
	lea	r8, QWORD PTR thumb_r$9[rbp+8]
	lea	rdx, QWORD PTR thumb_r$9[rbp]
	mov	rcx, QWORD PTR tv292[rbp]
	call	?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z ; ImDrawList::AddRectFilled
; Line 10903
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv311[rbp], rax
	movss	xmm0, DWORD PTR alpha_mul$[rbp]
	movss	DWORD PTR tv304[rbp], xmm0
	movzx	eax, BYTE PTR window_is_focused$11[rbp]
	test	eax, eax
	je	SHORT $LN10@DebugRende
	mov	DWORD PTR tv301[rbp], 11
	jmp	SHORT $LN11@DebugRende
$LN10@DebugRende:
	mov	DWORD PTR tv301[rbp], 10
$LN11@DebugRende:
	movss	xmm1, DWORD PTR tv304[rbp]
	mov	ecx, DWORD PTR tv301[rbp]
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv309[rbp], eax
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR tv309[rbp]
	lea	r8, QWORD PTR title_r$10[rbp+8]
	lea	rdx, QWORD PTR title_r$10[rbp]
	mov	rcx, QWORD PTR tv311[rbp]
	call	?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z ; ImDrawList::AddRectFilled
; Line 10904
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv326[rbp], rax
	movss	xmm1, DWORD PTR alpha_mul$[rbp]
	mov	ecx, 5
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv324[rbp], eax
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR tv324[rbp]
	lea	r8, QWORD PTR thumb_r$9[rbp+8]
	lea	rdx, QWORD PTR thumb_r$9[rbp]
	mov	rcx, QWORD PTR tv326[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
; Line 10905
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv359[rbp], rax
	xor	edx, edx
	mov	rax, QWORD PTR thumb_window$8[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?FindRenderedTextEnd@ImGui@@YAPEBDPEBD0@Z ; ImGui::FindRenderedTextEnd
	mov	QWORD PTR tv353[rbp], rax
	mov	rax, QWORD PTR thumb_window$8[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv357[rbp], rax
	movss	xmm1, DWORD PTR alpha_mul$[rbp]
	xor	ecx, ecx
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv351[rbp], eax
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+6528]
	mulss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv355[rbp], xmm0
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+6520]
	mov	QWORD PTR tv349[rbp], rax
	mov	QWORD PTR [rsp+64], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+56], xmm0
	mov	rax, QWORD PTR tv353[rbp]
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR tv357[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	eax, DWORD PTR tv351[rbp]
	mov	DWORD PTR [rsp+32], eax
	lea	r9, QWORD PTR title_r$10[rbp]
	movss	xmm2, DWORD PTR tv355[rbp]
	mov	rdx, QWORD PTR tv349[rbp]
	mov	rcx, QWORD PTR tv359[rbp]
	call	?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z ; ImDrawList::AddText
; Line 10906
	jmp	$LN2@DebugRende
$LN3@DebugRende:
; Line 10907
	movss	xmm1, DWORD PTR alpha_mul$[rbp]
	mov	ecx, 5
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	rcx, QWORD PTR bb$[rbp]
	add	rcx, 8
	mov	rdx, QWORD PTR bb$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, eax
	mov	r8, rcx
	mov	rcx, QWORD PTR draw_list$[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
; Line 10908
	lea	rcx, QWORD PTR [rbp-80]
	lea	rdx, OFFSET FLAT:?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1616]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?DebugRenderViewportThumbnail@ImGui@@YAXPEAUImDrawList@@PEAUImGuiViewportP@@AEBUImRect@@@Z ENDP ; ImGui::DebugRenderViewportThumbnail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DebugNodeViewport@ImGui@@YAXPEAUImGuiViewportP@@@Z
_TEXT	SEGMENT
flags$1 = 4
layer_i$2 = 36
draw_list_i$3 = 68
tv197 = 280
tv160 = 280
tv164 = 288
tv168 = 296
viewport$ = 368
?DebugNodeViewport@ImGui@@YAXPEAUImGuiViewportP@@@Z PROC ; ImGui::DebugNodeViewport, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 11628
$LN16:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+80]
	movaps	XMMWORD PTR [rbp+320], xmm6
	movaps	XMMWORD PTR [rbp+304], xmm7
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 11629
	mov	edx, 2
	mov	cl, 1
	call	?SetNextItemOpen@ImGui@@YAX_NH@Z	; ImGui::SetNextItemOpen
; Line 11630
	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:??_C@_0N@IHHEFJLI@Viewport?5?$CD?$CFd@
	lea	rcx, OFFSET FLAT:??_C@_09PLOOGGOG@viewport0@
	call	?TreeNode@ImGui@@YA_NPEBD0ZZ		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	je	$LN8@DebugNodeV
; Line 11632
	mov	rax, QWORD PTR viewport$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR flags$1[rbp], eax
; Line 11633
	mov	rax, QWORD PTR viewport$[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+156]
	mov	rax, QWORD PTR viewport$[rbp]
	cvtss2sd xmm1, DWORD PTR [rax+152]
	mov	rax, QWORD PTR viewport$[rbp]
	cvtss2sd xmm2, DWORD PTR [rax+148]
	mov	rax, QWORD PTR viewport$[rbp]
	cvtss2sd xmm3, DWORD PTR [rax+144]
	mov	rax, QWORD PTR viewport$[rbp]
	cvtss2sd xmm4, DWORD PTR [rax+16]
	mov	rax, QWORD PTR viewport$[rbp]
	cvtss2sd xmm5, DWORD PTR [rax+12]
	mov	rax, QWORD PTR viewport$[rbp]
	cvtss2sd xmm6, DWORD PTR [rax+8]
	mov	rax, QWORD PTR viewport$[rbp]
	cvtss2sd xmm7, DWORD PTR [rax+4]
	movsd	QWORD PTR [rsp+64], xmm0
	movsd	QWORD PTR [rsp+56], xmm1
	movsd	QWORD PTR [rsp+48], xmm2
	movsd	QWORD PTR [rsp+40], xmm3
	movsd	QWORD PTR [rsp+32], xmm4
	movaps	xmm3, xmm5
	movq	r9, xmm3
	movaps	xmm2, xmm6
	movq	r8, xmm2
	movaps	xmm1, xmm7
	movq	rdx, xmm1
	lea	rcx, OFFSET FLAT:??_C@_0GJ@COEDEIEA@Main?5Pos?3?5?$CI?$CF?40f?0?$CF?40f?$CJ?0?5Size?3?5?$CI?$CF@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
; Line 11636
	mov	eax, DWORD PTR flags$1[rbp]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN10@DebugNodeV
	lea	rax, OFFSET FLAT:??_C@_0M@FAFJAKJI@?5OwnedByApp@
	mov	QWORD PTR tv160[rbp], rax
	jmp	SHORT $LN11@DebugNodeV
$LN10@DebugNodeV:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv160[rbp], rax
$LN11@DebugNodeV:
	mov	eax, DWORD PTR flags$1[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN12@DebugNodeV
	lea	rax, OFFSET FLAT:??_C@_0BD@FKGIEJBE@?5IsPlatformMonitor@
	mov	QWORD PTR tv164[rbp], rax
	jmp	SHORT $LN13@DebugNodeV
$LN12@DebugNodeV:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv164[rbp], rax
$LN13@DebugNodeV:
	mov	eax, DWORD PTR flags$1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN14@DebugNodeV
	lea	rax, OFFSET FLAT:??_C@_0BC@KGGIDDGG@?5IsPlatformWindow@
	mov	QWORD PTR tv168[rbp], rax
	jmp	SHORT $LN15@DebugNodeV
$LN14@DebugNodeV:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv168[rbp], rax
$LN15@DebugNodeV:
	mov	rax, QWORD PTR tv160[rbp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR tv164[rbp]
	mov	r8, QWORD PTR tv168[rbp]
	mov	rax, QWORD PTR viewport$[rbp]
	mov	edx, DWORD PTR [rax]
	lea	rcx, OFFSET FLAT:??_C@_0BG@LEDJFOBI@Flags?3?50x?$CF04X?5?$DN?$CFs?$CFs?$CFs@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
; Line 11640
	mov	DWORD PTR layer_i$2[rbp], 0
	jmp	SHORT $LN4@DebugNodeV
$LN2@DebugNodeV:
	mov	eax, DWORD PTR layer_i$2[rbp]
	inc	eax
	mov	DWORD PTR layer_i$2[rbp], eax
$LN4@DebugNodeV:
	cmp	DWORD PTR layer_i$2[rbp], 2
	jge	SHORT $LN3@DebugNodeV
; Line 11641
	mov	DWORD PTR draw_list_i$3[rbp], 0
	jmp	SHORT $LN7@DebugNodeV
$LN5@DebugNodeV:
	mov	eax, DWORD PTR draw_list_i$3[rbp]
	inc	eax
	mov	DWORD PTR draw_list_i$3[rbp], eax
$LN7@DebugNodeV:
	movsxd	rax, DWORD PTR layer_i$2[rbp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR viewport$[rbp]
	mov	eax, DWORD PTR [rcx+rax+112]
	cmp	DWORD PTR draw_list_i$3[rbp], eax
	jge	SHORT $LN6@DebugNodeV
; Line 11642
	movsxd	rax, DWORD PTR layer_i$2[rbp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR viewport$[rbp]
	lea	rax, QWORD PTR [rcx+rax+112]
	mov	QWORD PTR tv197[rbp], rax
	mov	edx, DWORD PTR draw_list_i$3[rbp]
	mov	rcx, QWORD PTR tv197[rbp]
	call	??A?$ImVector@PEAUImDrawList@@@@QEAAAEAPEAUImDrawList@@H@Z ; ImVector<ImDrawList *>::operator[]
	lea	r8, OFFSET FLAT:??_C@_08IJNCDCKF@DrawList@
	mov	rdx, QWORD PTR [rax]
	xor	ecx, ecx
	call	?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z ; ImGui::DebugNodeDrawList
	jmp	SHORT $LN5@DebugNodeV
$LN6@DebugNodeV:
	jmp	SHORT $LN2@DebugNodeV
$LN3@DebugNodeV:
; Line 11643
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN8@DebugNodeV:
; Line 11645
	movaps	xmm6, XMMWORD PTR [rbp+320]
	movaps	xmm7, XMMWORD PTR [rbp+304]
	lea	rsp, QWORD PTR [rbp+344]
	pop	rdi
	pop	rbp
	ret	0
?DebugNodeViewport@ImGui@@YAXPEAUImGuiViewportP@@@Z ENDP ; ImGui::DebugNodeViewport
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DebugNodeWindowsList@ImGui@@YAXPEAU?$ImVector@PEAUImGuiWindow@@@@PEBD@Z
_TEXT	SEGMENT
i$1 = 4
windows$ = 256
label$ = 264
?DebugNodeWindowsList@ImGui@@YAXPEAU?$ImVector@PEAUImGuiWindow@@@@PEBD@Z PROC ; ImGui::DebugNodeWindowsList, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 11712
$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 11713
	mov	rax, QWORD PTR windows$[rbp]
	mov	r9d, DWORD PTR [rax]
	mov	r8, QWORD PTR label$[rbp]
	lea	rdx, OFFSET FLAT:??_C@_07JMKCEEPK@?$CFs?5?$CI?$CFd?$CJ@
	mov	rcx, QWORD PTR label$[rbp]
	call	?TreeNode@ImGui@@YA_NPEBD0ZZ		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@DebugNodeW
; Line 11714
	jmp	SHORT $LN1@DebugNodeW
$LN5@DebugNodeW:
; Line 11715
	lea	rcx, OFFSET FLAT:??_C@_0BK@GKODIOOH@?$CIIn?5front?9to?9back?5order?3?$CJ@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11716
	mov	rax, QWORD PTR windows$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	mov	DWORD PTR i$1[rbp], eax
	jmp	SHORT $LN4@DebugNodeW
$LN2@DebugNodeW:
	mov	eax, DWORD PTR i$1[rbp]
	dec	eax
	mov	DWORD PTR i$1[rbp], eax
$LN4@DebugNodeW:
	cmp	DWORD PTR i$1[rbp], 0
	jl	SHORT $LN3@DebugNodeW
; Line 11718
	mov	edx, DWORD PTR i$1[rbp]
	mov	rcx, QWORD PTR windows$[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rcx, QWORD PTR [rax]
	call	?PushID@ImGui@@YAXPEBX@Z		; ImGui::PushID
; Line 11719
	mov	edx, DWORD PTR i$1[rbp]
	mov	rcx, QWORD PTR windows$[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	lea	rdx, OFFSET FLAT:??_C@_06BKKJGDHO@Window@
	mov	rcx, QWORD PTR [rax]
	call	?DebugNodeWindow@ImGui@@YAXPEAUImGuiWindow@@PEBD@Z ; ImGui::DebugNodeWindow
; Line 11720
	call	?PopID@ImGui@@YAXXZ			; ImGui::PopID
; Line 11721
	jmp	SHORT $LN2@DebugNodeW
$LN3@DebugNodeW:
; Line 11722
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN1@DebugNodeW:
; Line 11723
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?DebugNodeWindowsList@ImGui@@YAXPEAU?$ImVector@PEAUImGuiWindow@@@@PEBD@Z ENDP ; ImGui::DebugNodeWindowsList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DebugNodeWindowSettings@ImGui@@YAXPEAUImGuiWindowSettings@@@Z
_TEXT	SEGMENT
tv134 = 192
tv132 = 196
tv130 = 200
tv128 = 204
tv94 = 208
tv92 = 216
tv90 = 224
settings$ = 272
?DebugNodeWindowSettings@ImGui@@YAXPEAUImGuiWindowSettings@@@Z PROC ; ImGui::DebugNodeWindowSettings, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 11706
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 11707
	mov	rax, QWORD PTR settings$[rbp]
	movzx	eax, BYTE PTR [rax+12]
	mov	DWORD PTR tv134[rbp], eax
	mov	rax, QWORD PTR settings$[rbp]
	movsx	eax, WORD PTR [rax+10]
	mov	DWORD PTR tv132[rbp], eax
	mov	rax, QWORD PTR settings$[rbp]
	movsx	eax, WORD PTR [rax+8]
	mov	DWORD PTR tv130[rbp], eax
	mov	rax, QWORD PTR settings$[rbp]
	movsx	eax, WORD PTR [rax+6]
	mov	DWORD PTR tv128[rbp], eax
	mov	rax, QWORD PTR settings$[rbp]
	movsx	eax, WORD PTR [rax+4]
	mov	DWORD PTR tv94[rbp], eax
	mov	rcx, QWORD PTR settings$[rbp]
	call	?GetName@ImGuiWindowSettings@@QEAAPEADXZ ; ImGuiWindowSettings::GetName
	mov	QWORD PTR tv92[rbp], rax
	mov	rax, QWORD PTR settings$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv90[rbp], eax
	mov	eax, DWORD PTR tv134[rbp]
	mov	DWORD PTR [rsp+56], eax
	mov	eax, DWORD PTR tv132[rbp]
	mov	DWORD PTR [rsp+48], eax
	mov	eax, DWORD PTR tv130[rbp]
	mov	DWORD PTR [rsp+40], eax
	mov	eax, DWORD PTR tv128[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR tv94[rbp]
	mov	r8, QWORD PTR tv92[rbp]
	mov	edx, DWORD PTR tv90[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0DC@NLKEEDHM@0x?$CF08X?5?$CC?$CFs?$CC?5Pos?5?$CI?$CFd?0?$CFd?$CJ?5Size?5?$CI?$CF@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11709
	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
?DebugNodeWindowSettings@ImGui@@YAXPEAUImGuiWindowSettings@@@Z ENDP ; ImGui::DebugNodeWindowSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DebugNodeWindow@ImGui@@YAXPEAUImGuiWindow@@PEBD@Z
_TEXT	SEGMENT
g$ = 8
is_active$ = 36
tree_node_flags$ = 68
open$ = 100
flags$ = 132
layer$4 = 164
r$5 = 200
n$6 = 244
$T7 = 468
$T8 = 500
$T9 = 532
tv291 = 548
tv266 = 548
tv70 = 548
tv403 = 552
tv358 = 552
tv353 = 552
tv234 = 552
tv195 = 552
tv148 = 552
tv80 = 552
tv351 = 560
tv239 = 560
tv199 = 560
tv146 = 560
tv349 = 568
tv255 = 568
tv203 = 568
tv207 = 576
tv211 = 584
tv215 = 592
tv219 = 600
tv223 = 608
tv227 = 616
__$ArrayPad$ = 624
window$ = 704
label$ = 712
?DebugNodeWindow@ImGui@@YAXPEAUImGuiWindow@@PEBD@Z PROC	; ImGui::DebugNodeWindow, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 11648
$LN51:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 768				; 00000300H
	lea	rbp, QWORD PTR [rsp+96]
	movaps	XMMWORD PTR [rbp+656], xmm6
	movaps	XMMWORD PTR [rbp+640], xmm7
	lea	rdi, QWORD PTR [rsp+96]
	mov	ecx, 112				; 00000070H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+808]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 11649
	cmp	QWORD PTR window$[rbp], 0
	jne	SHORT $LN8@DebugNodeW
; Line 11651
	mov	rdx, QWORD PTR label$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_08MGKMCIPB@?$CFs?3?5NULL@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
; Line 11652
	jmp	$LN1@DebugNodeW
$LN8@DebugNodeW:
; Line 11655
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 11656
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+143]
	mov	BYTE PTR is_active$[rbp], al
; Line 11657
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	cmp	QWORD PTR window$[rbp], rax
	jne	SHORT $LN21@DebugNodeW
	mov	DWORD PTR tv70[rbp], 1
	jmp	SHORT $LN22@DebugNodeW
$LN21@DebugNodeW:
	mov	DWORD PTR tv70[rbp], 0
$LN22@DebugNodeW:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR tree_node_flags$[rbp], eax
; Line 11658
	movzx	eax, BYTE PTR is_active$[rbp]
	test	eax, eax
	jne	SHORT $LN9@DebugNodeW
	mov	ecx, 1
	call	?GetStyleColorVec4@ImGui@@YAAEBUImVec4@@H@Z ; ImGui::GetStyleColorVec4
	mov	rdx, rax
	xor	ecx, ecx
	call	?PushStyleColor@ImGui@@YAXHAEBUImVec4@@@Z ; ImGui::PushStyleColor
$LN9@DebugNodeW:
; Line 11659
	movzx	eax, BYTE PTR is_active$[rbp]
	test	eax, eax
	je	SHORT $LN23@DebugNodeW
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv80[rbp], rax
	jmp	SHORT $LN24@DebugNodeW
$LN23@DebugNodeW:
	lea	rax, OFFSET FLAT:??_C@_0M@MDILNFHC@?5?$CKInactive?$CK@
	mov	QWORD PTR tv80[rbp], rax
$LN24@DebugNodeW:
	mov	rax, QWORD PTR tv80[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR label$[rbp]
	lea	r8, OFFSET FLAT:??_C@_09GBCBPCGK@?$CFs?5?8?$CFs?8?$CFs@
	mov	edx, DWORD PTR tree_node_flags$[rbp]
	mov	rcx, QWORD PTR label$[rbp]
	call	?TreeNodeEx@ImGui@@YA_NPEBDH0ZZ		; ImGui::TreeNodeEx
	mov	BYTE PTR open$[rbp], al
; Line 11660
	movzx	eax, BYTE PTR is_active$[rbp]
	test	eax, eax
	jne	SHORT $LN10@DebugNodeW
	mov	ecx, 1
	call	?PopStyleColor@ImGui@@YAXH@Z		; ImGui::PopStyleColor
$LN10@DebugNodeW:
; Line 11661
	xor	ecx, ecx
	call	?IsItemHovered@ImGui@@YA_NH@Z		; ImGui::IsItemHovered
	movzx	eax, al
	test	eax, eax
	je	$LN11@DebugNodeW
	movzx	eax, BYTE PTR is_active$[rbp]
	test	eax, eax
	je	$LN11@DebugNodeW
; Line 11662
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiWindow@@@Z ; ImGui::GetForegroundDrawList
	mov	QWORD PTR tv148[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 24
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 16
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv146[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, -16711681				; ff00ffffH
	mov	r8, QWORD PTR tv146[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR tv148[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
$LN11@DebugNodeW:
; Line 11663
	movzx	eax, BYTE PTR open$[rbp]
	test	eax, eax
	jne	SHORT $LN12@DebugNodeW
; Line 11664
	jmp	$LN1@DebugNodeW
$LN12@DebugNodeW:
; Line 11666
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+984]
	test	eax, eax
	je	SHORT $LN13@DebugNodeW
; Line 11667
	lea	rcx, OFFSET FLAT:??_C@_0DF@KJLKCABL@Note?3?5some?5memory?5buffers?5have?5@
	call	?TextDisabled@ImGui@@YAXPEBDZZ		; ImGui::TextDisabled
$LN13@DebugNodeW:
; Line 11669
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	mov	DWORD PTR flags$[rbp], eax
; Line 11670
	lea	r8, OFFSET FLAT:??_C@_08IJNCDCKF@DrawList@
	mov	rax, QWORD PTR window$[rbp]
	mov	rdx, QWORD PTR [rax+688]
	mov	rcx, QWORD PTR window$[rbp]
	call	?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z ; ImGui::DebugNodeDrawList
; Line 11671
	mov	rax, QWORD PTR window$[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+52]
	mov	rax, QWORD PTR window$[rbp]
	cvtss2sd xmm1, DWORD PTR [rax+48]
	mov	rax, QWORD PTR window$[rbp]
	cvtss2sd xmm2, DWORD PTR [rax+44]
	mov	rax, QWORD PTR window$[rbp]
	cvtss2sd xmm3, DWORD PTR [rax+40]
	mov	rax, QWORD PTR window$[rbp]
	cvtss2sd xmm4, DWORD PTR [rax+28]
	mov	rax, QWORD PTR window$[rbp]
	cvtss2sd xmm5, DWORD PTR [rax+24]
	mov	rax, QWORD PTR window$[rbp]
	cvtss2sd xmm6, DWORD PTR [rax+20]
	mov	rax, QWORD PTR window$[rbp]
	cvtss2sd xmm7, DWORD PTR [rax+16]
	movsd	QWORD PTR [rsp+64], xmm0
	movsd	QWORD PTR [rsp+56], xmm1
	movsd	QWORD PTR [rsp+48], xmm2
	movsd	QWORD PTR [rsp+40], xmm3
	movsd	QWORD PTR [rsp+32], xmm4
	movaps	xmm3, xmm5
	movq	r9, xmm3
	movaps	xmm2, xmm6
	movq	r8, xmm2
	movaps	xmm1, xmm7
	movq	rdx, xmm1
	lea	rcx, OFFSET FLAT:??_C@_0EP@MJAPPIBI@Pos?3?5?$CI?$CF?41f?0?$CF?41f?$CJ?0?5Size?3?5?$CI?$CF?41f?0?$CF@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
; Line 11672
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 64					; 00000040H
	test	eax, eax
	je	SHORT $LN25@DebugNodeW
	lea	rax, OFFSET FLAT:??_C@_0BB@GGEIPOID@AlwaysAutoResize@
	mov	QWORD PTR tv195[rbp], rax
	jmp	SHORT $LN26@DebugNodeW
$LN25@DebugNodeW:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv195[rbp], rax
$LN26@DebugNodeW:
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 262144				; 00040000H
	test	eax, eax
	je	SHORT $LN27@DebugNodeW
	lea	rax, OFFSET FLAT:??_C@_0M@COLEABDL@NoNavInputs@
	mov	QWORD PTR tv199[rbp], rax
	jmp	SHORT $LN28@DebugNodeW
$LN27@DebugNodeW:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv199[rbp], rax
$LN28@DebugNodeW:
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 512				; 00000200H
	test	eax, eax
	je	SHORT $LN29@DebugNodeW
	lea	rax, OFFSET FLAT:??_C@_0O@LAPEOEIJ@NoMouseInputs@
	mov	QWORD PTR tv203[rbp], rax
	jmp	SHORT $LN30@DebugNodeW
$LN29@DebugNodeW:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv203[rbp], rax
$LN30@DebugNodeW:
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 256				; 00000100H
	test	eax, eax
	je	SHORT $LN31@DebugNodeW
	lea	rax, OFFSET FLAT:??_C@_0BB@EBNDPMCP@NoSavedSettings?5@
	mov	QWORD PTR tv207[rbp], rax
	jmp	SHORT $LN32@DebugNodeW
$LN31@DebugNodeW:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv207[rbp], rax
$LN32@DebugNodeW:
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 268435456				; 10000000H
	test	eax, eax
	je	SHORT $LN33@DebugNodeW
	lea	rax, OFFSET FLAT:??_C@_0L@OPMMHACC@ChildMenu?5@
	mov	QWORD PTR tv211[rbp], rax
	jmp	SHORT $LN34@DebugNodeW
$LN33@DebugNodeW:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv211[rbp], rax
$LN34@DebugNodeW:
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 134217728				; 08000000H
	test	eax, eax
	je	SHORT $LN35@DebugNodeW
	lea	rax, OFFSET FLAT:??_C@_06IFIMNOLK@Modal?5@
	mov	QWORD PTR tv215[rbp], rax
	jmp	SHORT $LN36@DebugNodeW
$LN35@DebugNodeW:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv215[rbp], rax
$LN36@DebugNodeW:
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	je	SHORT $LN37@DebugNodeW
	lea	rax, OFFSET FLAT:??_C@_06NMKCIICK@Popup?5@
	mov	QWORD PTR tv219[rbp], rax
	jmp	SHORT $LN38@DebugNodeW
$LN37@DebugNodeW:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv219[rbp], rax
$LN38@DebugNodeW:
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 33554432				; 02000000H
	test	eax, eax
	je	SHORT $LN39@DebugNodeW
	lea	rax, OFFSET FLAT:??_C@_08LGECAIGF@Tooltip?5@
	mov	QWORD PTR tv223[rbp], rax
	jmp	SHORT $LN40@DebugNodeW
$LN39@DebugNodeW:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv223[rbp], rax
$LN40@DebugNodeW:
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN41@DebugNodeW
	lea	rax, OFFSET FLAT:??_C@_06MMFPNIIL@Child?5@
	mov	QWORD PTR tv227[rbp], rax
	jmp	SHORT $LN42@DebugNodeW
$LN41@DebugNodeW:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv227[rbp], rax
$LN42@DebugNodeW:
	mov	rax, QWORD PTR tv195[rbp]
	mov	QWORD PTR [rsp+80], rax
	mov	rax, QWORD PTR tv199[rbp]
	mov	QWORD PTR [rsp+72], rax
	mov	rax, QWORD PTR tv203[rbp]
	mov	QWORD PTR [rsp+64], rax
	mov	rax, QWORD PTR tv207[rbp]
	mov	QWORD PTR [rsp+56], rax
	mov	rax, QWORD PTR tv211[rbp]
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR tv215[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR tv219[rbp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR tv223[rbp]
	mov	r8, QWORD PTR tv227[rbp]
	mov	edx, DWORD PTR flags$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0CF@HFFEAFCN@Flags?3?50x?$CF08X?5?$CI?$CFs?$CFs?$CFs?$CFs?$CFs?$CFs?$CFs?$CFs@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
; Line 11676
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+141]
	test	eax, eax
	je	SHORT $LN43@DebugNodeW
	lea	rax, OFFSET FLAT:??_C@_01NFFPALBN@Y@
	mov	QWORD PTR tv234[rbp], rax
	jmp	SHORT $LN44@DebugNodeW
$LN43@DebugNodeW:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv234[rbp], rax
$LN44@DebugNodeW:
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+140]
	test	eax, eax
	je	SHORT $LN45@DebugNodeW
	lea	rax, OFFSET FLAT:??_C@_01MMEEDKFM@X@
	mov	QWORD PTR tv239[rbp], rax
	jmp	SHORT $LN46@DebugNodeW
$LN45@DebugNodeW:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv239[rbp], rax
$LN46@DebugNodeW:
	mov	rax, QWORD PTR window$[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+104]
	mov	rax, QWORD PTR window$[rbp]
	cvtss2sd xmm1, DWORD PTR [rax+96]
	mov	rax, QWORD PTR window$[rbp]
	cvtss2sd xmm2, DWORD PTR [rax+100]
	mov	rax, QWORD PTR window$[rbp]
	cvtss2sd xmm3, DWORD PTR [rax+92]
	movsd	QWORD PTR tv255[rbp], xmm3
	mov	rax, QWORD PTR tv234[rbp]
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR tv239[rbp]
	mov	QWORD PTR [rsp+40], rax
	movsd	QWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movq	r9, xmm3
	movq	r8, xmm2
	movsd	xmm0, QWORD PTR tv255[rbp]
	movaps	xmm1, xmm0
	movq	rdx, xmm1
	lea	rcx, OFFSET FLAT:??_C@_0CN@OBHMFINH@Scroll?3?5?$CI?$CF?42f?1?$CF?42f?0?$CF?42f?1?$CF?42f?$CJ?5S@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
; Line 11677
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+142]
	test	eax, eax
	jne	SHORT $LN47@DebugNodeW
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+143]
	test	eax, eax
	jne	SHORT $LN47@DebugNodeW
	mov	DWORD PTR tv266[rbp], -1
	jmp	SHORT $LN48@DebugNodeW
$LN47@DebugNodeW:
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, WORD PTR [rax+158]
	mov	DWORD PTR tv266[rbp], eax
$LN48@DebugNodeW:
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+144]
	mov	rcx, QWORD PTR window$[rbp]
	movzx	ecx, BYTE PTR [rcx+143]
	mov	rdx, QWORD PTR window$[rbp]
	movzx	edx, BYTE PTR [rdx+142]
	mov	r8d, DWORD PTR tv266[rbp]
	mov	DWORD PTR [rsp+32], r8d
	mov	r9d, eax
	mov	r8d, ecx
	lea	rcx, OFFSET FLAT:??_C@_0DO@LPCMGHLI@Active?3?5?$CFd?1?$CFd?0?5WriteAccessed?3?5?$CF@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
; Line 11678
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+147]
	mov	rcx, QWORD PTR window$[rbp]
	movsx	ecx, BYTE PTR [rcx+177]
	mov	rdx, QWORD PTR window$[rbp]
	movsx	edx, BYTE PTR [rdx+176]
	mov	r8, QWORD PTR window$[rbp]
	movzx	r8d, BYTE PTR [r8+149]
	mov	r9, QWORD PTR window$[rbp]
	movzx	r9d, BYTE PTR [r9+148]
	mov	DWORD PTR tv291[rbp], r9d
	mov	DWORD PTR [rsp+40], eax
	mov	DWORD PTR [rsp+32], ecx
	mov	r9d, edx
	mov	eax, DWORD PTR tv291[rbp]
	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_0EA@JLDPMAKO@Appearing?3?5?$CFd?0?5Hidden?3?5?$CFd?5?$CICanS@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
; Line 11679
	mov	DWORD PTR layer$4[rbp], 0
	jmp	SHORT $LN4@DebugNodeW
$LN2@DebugNodeW:
	mov	eax, DWORD PTR layer$4[rbp]
	inc	eax
	mov	DWORD PTR layer$4[rbp], eax
$LN4@DebugNodeW:
	cmp	DWORD PTR layer$4[rbp], 2
	jge	$LN3@DebugNodeW
; Line 11681
	movsxd	rax, DWORD PTR layer$4[rbp]
	imul	rax, rax, 16
	lea	rcx, QWORD PTR r$5[rbp]
	mov	rdx, QWORD PTR window$[rbp]
	mov	rdi, rcx
	lea	rsi, QWORD PTR [rdx+rax+944]
	mov	ecx, 16
	rep movsb
; Line 11682
	movss	xmm0, DWORD PTR r$5[rbp]
	comiss	xmm0, DWORD PTR r$5[rbp+12]
	jb	SHORT $LN14@DebugNodeW
	movss	xmm0, DWORD PTR r$5[rbp+4]
	comiss	xmm0, DWORD PTR r$5[rbp+12]
	jb	SHORT $LN14@DebugNodeW
; Line 11684
	movsxd	rax, DWORD PTR layer$4[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	r8d, DWORD PTR [rcx+rax*4+936]
	mov	edx, DWORD PTR layer$4[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BH@EDAJMFBI@NavLastIds?$FL?$CFd?$FN?3?50x?$CF08X@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
; Line 11685
	jmp	$LN2@DebugNodeW
$LN14@DebugNodeW:
; Line 11687
	cvtss2sd xmm0, DWORD PTR r$5[rbp+12]
	cvtss2sd xmm1, DWORD PTR r$5[rbp+8]
	cvtss2sd xmm2, DWORD PTR r$5[rbp+4]
	cvtss2sd xmm3, DWORD PTR r$5[rbp]
	movsxd	rax, DWORD PTR layer$4[rbp]
	movsd	QWORD PTR [rsp+48], xmm0
	movsd	QWORD PTR [rsp+40], xmm1
	movsd	QWORD PTR [rsp+32], xmm2
	movq	r9, xmm3
	mov	rcx, QWORD PTR window$[rbp]
	mov	r8d, DWORD PTR [rcx+rax*4+936]
	mov	edx, DWORD PTR layer$4[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0DC@PKDENGJH@NavLastIds?$FL?$CFd?$FN?3?50x?$CF08X?5at?5?$CL?$CI?$CF?41@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
; Line 11688
	xor	ecx, ecx
	call	?IsItemHovered@ImGui@@YA_NH@Z		; ImGui::IsItemHovered
	movzx	eax, al
	test	eax, eax
	je	$LN15@DebugNodeW
; Line 11689
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiWindow@@@Z ; ImGui::GetForegroundDrawList
	mov	QWORD PTR tv353[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	mov	r8, rax
	lea	rdx, QWORD PTR r$5[rbp+8]
	lea	rcx, QWORD PTR $T8[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv351[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	mov	r8, rax
	lea	rdx, QWORD PTR r$5[rbp]
	lea	rcx, QWORD PTR $T9[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv349[rbp], rax
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, -16711681				; ff00ffffH
	mov	r8, QWORD PTR tv351[rbp]
	mov	rdx, QWORD PTR tv349[rbp]
	mov	rcx, QWORD PTR tv353[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
$LN15@DebugNodeW:
; Line 11690
	jmp	$LN2@DebugNodeW
$LN3@DebugNodeW:
; Line 11691
	mov	rax, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+928], 0
	je	SHORT $LN49@DebugNodeW
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+928]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv358[rbp], rax
	jmp	SHORT $LN50@DebugNodeW
$LN49@DebugNodeW:
	lea	rax, OFFSET FLAT:??_C@_04HIBGFPH@NULL@
	mov	QWORD PTR tv358[rbp], rax
$LN50@DebugNodeW:
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, WORD PTR [rax+336]
	mov	r8, QWORD PTR tv358[rbp]
	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_0DD@ILECKNFA@NavLayersActiveMask?3?5?$CFX?0?5NavLas@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
; Line 11692
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+904], rcx
	je	SHORT $LN16@DebugNodeW
	lea	rdx, OFFSET FLAT:??_C@_0L@EHLMOHOL@RootWindow@
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR [rax+904]
	call	?DebugNodeWindow@ImGui@@YAXPEAUImGuiWindow@@PEBD@Z ; ImGui::DebugNodeWindow
$LN16@DebugNodeW:
; Line 11693
	mov	rax, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+896], 0
	je	SHORT $LN17@DebugNodeW
	lea	rdx, OFFSET FLAT:??_C@_0N@BPPHAMMO@ParentWindow@
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR [rax+896]
	call	?DebugNodeWindow@ImGui@@YAXPEAUImGuiWindow@@PEBD@Z ; ImGui::DebugNodeWindow
$LN17@DebugNodeW:
; Line 11694
	mov	rax, QWORD PTR window$[rbp]
	cmp	DWORD PTR [rax+400], 0
	jle	SHORT $LN18@DebugNodeW
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 400				; 00000190H
	lea	rdx, OFFSET FLAT:??_C@_0N@BGDHDNPO@ChildWindows@
	mov	rcx, rax
	call	?DebugNodeWindowsList@ImGui@@YAXPEAU?$ImVector@PEAUImGuiWindow@@@@PEBD@Z ; ImGui::DebugNodeWindowsList
$LN18@DebugNodeW:
; Line 11695
	mov	rax, QWORD PTR window$[rbp]
	cmp	DWORD PTR [rax+664], 0
	jle	$LN19@DebugNodeW
	mov	rax, QWORD PTR window$[rbp]
	mov	r8d, DWORD PTR [rax+664]
	lea	rdx, OFFSET FLAT:??_C@_0BC@FIDDFLAI@Columns?5sets?5?$CI?$CFd?$CJ@
	lea	rcx, OFFSET FLAT:??_C@_07IBCCJKML@Columns@
	call	?TreeNode@ImGui@@YA_NPEBD0ZZ		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN19@DebugNodeW
; Line 11697
	mov	DWORD PTR n$6[rbp], 0
	jmp	SHORT $LN7@DebugNodeW
$LN5@DebugNodeW:
	mov	eax, DWORD PTR n$6[rbp]
	inc	eax
	mov	DWORD PTR n$6[rbp], eax
$LN7@DebugNodeW:
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+664]
	cmp	DWORD PTR n$6[rbp], eax
	jge	SHORT $LN6@DebugNodeW
; Line 11698
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 664				; 00000298H
	mov	QWORD PTR tv403[rbp], rax
	mov	edx, DWORD PTR n$6[rbp]
	mov	rcx, QWORD PTR tv403[rbp]
	call	??A?$ImVector@UImGuiOldColumns@@@@QEAAAEAUImGuiOldColumns@@H@Z ; ImVector<ImGuiOldColumns>::operator[]
	mov	rcx, rax
	call	?DebugNodeColumns@ImGui@@YAXPEAUImGuiOldColumns@@@Z ; ImGui::DebugNodeColumns
	jmp	SHORT $LN5@DebugNodeW
$LN6@DebugNodeW:
; Line 11699
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN19@DebugNodeW:
; Line 11701
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 648				; 00000288H
	lea	rdx, OFFSET FLAT:??_C@_07PFGLPMIK@Storage@
	mov	rcx, rax
	call	?DebugNodeStorage@ImGui@@YAXPEAUImGuiStorage@@PEBD@Z ; ImGui::DebugNodeStorage
; Line 11702
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN1@DebugNodeW:
; Line 11703
	lea	rcx, QWORD PTR [rbp-96]
	lea	rdx, OFFSET FLAT:?DebugNodeWindow@ImGui@@YAXPEAUImGuiWindow@@PEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	movaps	xmm6, XMMWORD PTR [rbp+656]
	movaps	xmm7, XMMWORD PTR [rbp+640]
	lea	rsp, QWORD PTR [rbp+672]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?DebugNodeWindow@ImGui@@YAXPEAUImGuiWindow@@PEBD@Z ENDP	; ImGui::DebugNodeWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DebugNodeTabBar@ImGui@@YAXPEAUImGuiTabBar@@PEBD@Z
_TEXT	SEGMENT
buf$ = 16
p$ = 296
buf_end$ = 328
is_active$ = 356
tab_n$4 = 388
tab$5 = 424
open$ = 452
draw_list$6 = 488
tab_n$7 = 516
tab$8 = 552
$T9 = 964
$T10 = 996
$T11 = 1028
$T12 = 1060
tv69 = 1076
tv312 = 1080
tv259 = 1080
tv247 = 1080
tv222 = 1080
tv160 = 1080
tv145 = 1080
tv138 = 1080
tv73 = 1080
tv310 = 1088
tv245 = 1088
tv220 = 1088
tv148 = 1088
tv308 = 1096
tv293 = 1104
tv306 = 1112
tv300 = 1116
__$ArrayPad$ = 1120
tab_bar$ = 1168
label$ = 1176
?DebugNodeTabBar@ImGui@@YAXPEAUImGuiTabBar@@PEBD@Z PROC	; ImGui::DebugNodeTabBar, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 11586
$LN29:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1208				; 000004b8H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 190				; 000000beH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1240]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 11589
	lea	rax, QWORD PTR buf$[rbp]
	mov	QWORD PTR p$[rbp], rax
; Line 11590
	lea	rax, QWORD PTR buf$[rbp+256]
	mov	QWORD PTR buf_end$[rbp], rax
; Line 11591
	call	?GetFrameCount@ImGui@@YAHXZ		; ImGui::GetFrameCount
	sub	eax, 2
	mov	rcx, QWORD PTR tab_bar$[rbp]
	cmp	DWORD PTR [rcx+40], eax
	jl	SHORT $LN15@DebugNodeT
	mov	BYTE PTR tv69[rbp], 1
	jmp	SHORT $LN16@DebugNodeT
$LN15@DebugNodeT:
	mov	BYTE PTR tv69[rbp], 0
$LN16@DebugNodeT:
	movzx	eax, BYTE PTR tv69[rbp]
	mov	BYTE PTR is_active$[rbp], al
; Line 11592
	movzx	eax, BYTE PTR is_active$[rbp]
	test	eax, eax
	je	SHORT $LN17@DebugNodeT
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv73[rbp], rax
	jmp	SHORT $LN18@DebugNodeT
$LN17@DebugNodeT:
	lea	rax, OFFSET FLAT:??_C@_0M@MDILNFHC@?5?$CKInactive?$CK@
	mov	QWORD PTR tv73[rbp], rax
$LN18@DebugNodeT:
	mov	rax, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR buf_end$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR tv73[rbp]
	mov	QWORD PTR [rsp+48], rcx
	mov	rcx, QWORD PTR tab_bar$[rbp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rsp+40], ecx
	mov	rcx, QWORD PTR tab_bar$[rbp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	DWORD PTR [rsp+32], ecx
	mov	r9, QWORD PTR label$[rbp]
	lea	r8, OFFSET FLAT:??_C@_0BG@BDDHJGDD@?$CFs?50x?$CF08X?5?$CI?$CFd?5tabs?$CJ?$CFs@
	mov	rdx, rax
	mov	rcx, QWORD PTR p$[rbp]
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
	cdqe
	mov	rcx, QWORD PTR p$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR p$[rbp], rax
; Line 11593
	mov	rax, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR buf_end$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	lea	r8, OFFSET FLAT:??_C@_04JFAOCLML@?5?5?$HL?5@
	mov	rdx, rax
	mov	rcx, QWORD PTR p$[rbp]
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
	cdqe
	mov	rcx, QWORD PTR p$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR p$[rbp], rax
; Line 11594
	mov	DWORD PTR tab_n$4[rbp], 0
	jmp	SHORT $LN4@DebugNodeT
$LN2@DebugNodeT:
	mov	eax, DWORD PTR tab_n$4[rbp]
	inc	eax
	mov	DWORD PTR tab_n$4[rbp], eax
$LN4@DebugNodeT:
	mov	edx, 3
	mov	rax, QWORD PTR tab_bar$[rbp]
	mov	ecx, DWORD PTR [rax]
	call	??$ImMin@H@@YAHHH@Z			; ImMin<int>
	cmp	DWORD PTR tab_n$4[rbp], eax
	jge	$LN3@DebugNodeT
; Line 11596
	mov	rax, QWORD PTR tab_bar$[rbp]
	mov	QWORD PTR tv138[rbp], rax
	mov	edx, DWORD PTR tab_n$4[rbp]
	mov	rcx, QWORD PTR tv138[rbp]
	call	??A?$ImVector@UImGuiTabItem@@@@QEAAAEAUImGuiTabItem@@H@Z ; ImVector<ImGuiTabItem>::operator[]
	mov	QWORD PTR tab$5[rbp], rax
; Line 11597
	mov	rax, QWORD PTR tab$5[rbp]
	cmp	DWORD PTR [rax+28], -1
	je	SHORT $LN19@DebugNodeT
	mov	rdx, QWORD PTR tab$5[rbp]
	mov	rcx, QWORD PTR tab_bar$[rbp]
	call	?GetTabName@ImGuiTabBar@@QEBAPEBDPEBUImGuiTabItem@@@Z ; ImGuiTabBar::GetTabName
	mov	QWORD PTR tv145[rbp], rax
	jmp	SHORT $LN20@DebugNodeT
$LN19@DebugNodeT:
	lea	rax, OFFSET FLAT:??_C@_03BBKEAIF@?$DP?$DP?$DP@
	mov	QWORD PTR tv145[rbp], rax
$LN20@DebugNodeT:
	cmp	DWORD PTR tab_n$4[rbp], 0
	jle	SHORT $LN21@DebugNodeT
	lea	rax, OFFSET FLAT:??_C@_02KEGNLNML@?0?5@
	mov	QWORD PTR tv148[rbp], rax
	jmp	SHORT $LN22@DebugNodeT
$LN21@DebugNodeT:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv148[rbp], rax
$LN22@DebugNodeT:
	mov	rax, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR buf_end$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR tv145[rbp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR tv148[rbp]
	lea	r8, OFFSET FLAT:??_C@_06BKNPIBKB@?$CFs?8?$CFs?8@
	mov	rdx, rax
	mov	rcx, QWORD PTR p$[rbp]
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
	cdqe
	mov	rcx, QWORD PTR p$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR p$[rbp], rax
; Line 11599
	jmp	$LN2@DebugNodeT
$LN3@DebugNodeT:
; Line 11600
	mov	rax, QWORD PTR tab_bar$[rbp]
	cmp	DWORD PTR [rax], 3
	jle	SHORT $LN23@DebugNodeT
	lea	rax, OFFSET FLAT:??_C@_06MEIHFGI@?5?4?4?4?5?$HN@
	mov	QWORD PTR tv160[rbp], rax
	jmp	SHORT $LN24@DebugNodeT
$LN23@DebugNodeT:
	lea	rax, OFFSET FLAT:??_C@_03LHCEFAHM@?5?$HN?5@
	mov	QWORD PTR tv160[rbp], rax
$LN24@DebugNodeT:
	mov	rax, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR buf_end$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, QWORD PTR tv160[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR p$[rbp]
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
	cdqe
	mov	rcx, QWORD PTR p$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR p$[rbp], rax
; Line 11601
	movzx	eax, BYTE PTR is_active$[rbp]
	test	eax, eax
	jne	SHORT $LN8@DebugNodeT
	mov	ecx, 1
	call	?GetStyleColorVec4@ImGui@@YAAEBUImVec4@@H@Z ; ImGui::GetStyleColorVec4
	mov	rdx, rax
	xor	ecx, ecx
	call	?PushStyleColor@ImGui@@YAXHAEBUImVec4@@@Z ; ImGui::PushStyleColor
$LN8@DebugNodeT:
; Line 11602
	lea	r8, QWORD PTR buf$[rbp]
	lea	rdx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	rcx, QWORD PTR label$[rbp]
	call	?TreeNode@ImGui@@YA_NPEBD0ZZ		; ImGui::TreeNode
	mov	BYTE PTR open$[rbp], al
; Line 11603
	movzx	eax, BYTE PTR is_active$[rbp]
	test	eax, eax
	jne	SHORT $LN9@DebugNodeT
	mov	ecx, 1
	call	?PopStyleColor@ImGui@@YAXH@Z		; ImGui::PopStyleColor
$LN9@DebugNodeT:
; Line 11604
	movzx	eax, BYTE PTR is_active$[rbp]
	test	eax, eax
	je	$LN10@DebugNodeT
	xor	ecx, ecx
	call	?IsItemHovered@ImGui@@YA_NH@Z		; ImGui::IsItemHovered
	movzx	eax, al
	test	eax, eax
	je	$LN10@DebugNodeT
; Line 11606
	call	?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@XZ ; ImGui::GetForegroundDrawList
	mov	QWORD PTR draw_list$6[rbp], rax
; Line 11607
	mov	rax, QWORD PTR tab_bar$[rbp]
	add	rax, 52					; 00000034H
	mov	rcx, QWORD PTR tab_bar$[rbp]
	add	rcx, 44					; 0000002cH
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, -16711681				; ff00ffffH
	mov	r8, rax
	mov	rdx, rcx
	mov	rcx, QWORD PTR draw_list$6[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
; Line 11608
	mov	rax, QWORD PTR tab_bar$[rbp]
	movss	xmm2, DWORD PTR [rax+56]
	mov	rax, QWORD PTR tab_bar$[rbp]
	movss	xmm1, DWORD PTR [rax+92]
	lea	rcx, QWORD PTR $T9[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv222[rbp], rax
	mov	rax, QWORD PTR tab_bar$[rbp]
	movss	xmm2, DWORD PTR [rax+48]
	mov	rax, QWORD PTR tab_bar$[rbp]
	movss	xmm1, DWORD PTR [rax+92]
	lea	rcx, QWORD PTR $T10[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv220[rbp], rax
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, -16711936				; ff00ff00H
	mov	r8, QWORD PTR tv222[rbp]
	mov	rdx, QWORD PTR tv220[rbp]
	mov	rcx, QWORD PTR draw_list$6[rbp]
	call	?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z ; ImDrawList::AddLine
; Line 11609
	mov	rax, QWORD PTR tab_bar$[rbp]
	movss	xmm2, DWORD PTR [rax+56]
	mov	rax, QWORD PTR tab_bar$[rbp]
	movss	xmm1, DWORD PTR [rax+96]
	lea	rcx, QWORD PTR $T11[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv247[rbp], rax
	mov	rax, QWORD PTR tab_bar$[rbp]
	movss	xmm2, DWORD PTR [rax+48]
	mov	rax, QWORD PTR tab_bar$[rbp]
	movss	xmm1, DWORD PTR [rax+96]
	lea	rcx, QWORD PTR $T12[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv245[rbp], rax
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, -16711936				; ff00ff00H
	mov	r8, QWORD PTR tv247[rbp]
	mov	rdx, QWORD PTR tv245[rbp]
	mov	rcx, QWORD PTR draw_list$6[rbp]
	call	?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z ; ImDrawList::AddLine
$LN10@DebugNodeT:
; Line 11611
	movzx	eax, BYTE PTR open$[rbp]
	test	eax, eax
	je	$LN11@DebugNodeT
; Line 11613
	mov	DWORD PTR tab_n$7[rbp], 0
	jmp	SHORT $LN7@DebugNodeT
$LN5@DebugNodeT:
	mov	eax, DWORD PTR tab_n$7[rbp]
	inc	eax
	mov	DWORD PTR tab_n$7[rbp], eax
$LN7@DebugNodeT:
	mov	rax, QWORD PTR tab_bar$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR tab_n$7[rbp], eax
	jge	$LN6@DebugNodeT
; Line 11615
	mov	rax, QWORD PTR tab_bar$[rbp]
	mov	QWORD PTR tv259[rbp], rax
	mov	edx, DWORD PTR tab_n$7[rbp]
	mov	rcx, QWORD PTR tv259[rbp]
	call	??A?$ImVector@UImGuiTabItem@@@@QEAAAEAUImGuiTabItem@@H@Z ; ImVector<ImGuiTabItem>::operator[]
	mov	QWORD PTR tab$8[rbp], rax
; Line 11616
	mov	rcx, QWORD PTR tab$8[rbp]
	call	?PushID@ImGui@@YAXPEBX@Z		; ImGui::PushID
; Line 11617
	lea	rcx, OFFSET FLAT:??_C@_01MNNFJEPP@?$DM@
	call	?SmallButton@ImGui@@YA_NPEBD@Z		; ImGui::SmallButton
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@DebugNodeT
	mov	r8d, -1
	mov	rdx, QWORD PTR tab$8[rbp]
	mov	rcx, QWORD PTR tab_bar$[rbp]
	call	?TabBarQueueReorder@ImGui@@YAXPEAUImGuiTabBar@@PEBUImGuiTabItem@@H@Z ; ImGui::TabBarQueueReorder
$LN12@DebugNodeT:
	movss	xmm1, DWORD PTR __real@40000000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
; Line 11618
	lea	rcx, OFFSET FLAT:??_C@_01PPODPGHN@?$DO@
	call	?SmallButton@ImGui@@YA_NPEBD@Z		; ImGui::SmallButton
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@DebugNodeT
	mov	r8d, 1
	mov	rdx, QWORD PTR tab$8[rbp]
	mov	rcx, QWORD PTR tab_bar$[rbp]
	call	?TabBarQueueReorder@ImGui@@YAXPEAUImGuiTabBar@@PEBUImGuiTabItem@@H@Z ; ImGui::TabBarQueueReorder
$LN13@DebugNodeT:
	movss	xmm1, DWORD PTR __real@bf800000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
; Line 11619
	mov	rax, QWORD PTR tab$8[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+24]
	movsd	QWORD PTR tv312[rbp], xmm0
	mov	rax, QWORD PTR tab$8[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+20]
	movsd	QWORD PTR tv310[rbp], xmm0
	mov	rax, QWORD PTR tab$8[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+16]
	movsd	QWORD PTR tv308[rbp], xmm0
	mov	rax, QWORD PTR tab$8[rbp]
	cmp	DWORD PTR [rax+28], -1
	je	SHORT $LN25@DebugNodeT
	mov	rdx, QWORD PTR tab$8[rbp]
	mov	rcx, QWORD PTR tab_bar$[rbp]
	call	?GetTabName@ImGuiTabBar@@QEBAPEBDPEBUImGuiTabItem@@@Z ; ImGuiTabBar::GetTabName
	mov	QWORD PTR tv293[rbp], rax
	jmp	SHORT $LN26@DebugNodeT
$LN25@DebugNodeT:
	lea	rax, OFFSET FLAT:??_C@_03BBKEAIF@?$DP?$DP?$DP@
	mov	QWORD PTR tv293[rbp], rax
$LN26@DebugNodeT:
	mov	rax, QWORD PTR tab$8[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv306[rbp], eax
	mov	rax, QWORD PTR tab$8[rbp]
	mov	rcx, QWORD PTR tab_bar$[rbp]
	mov	ecx, DWORD PTR [rcx+24]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN27@DebugNodeT
	mov	BYTE PTR tv300[rbp], 42			; 0000002aH
	jmp	SHORT $LN28@DebugNodeT
$LN27@DebugNodeT:
	mov	BYTE PTR tv300[rbp], 32			; 00000020H
$LN28@DebugNodeT:
	movsx	eax, BYTE PTR tv300[rbp]
	movsd	xmm0, QWORD PTR tv312[rbp]
	movsd	QWORD PTR [rsp+56], xmm0
	movsd	xmm0, QWORD PTR tv310[rbp]
	movsd	QWORD PTR [rsp+48], xmm0
	movsd	xmm0, QWORD PTR tv308[rbp]
	movsd	QWORD PTR [rsp+40], xmm0
	mov	rcx, QWORD PTR tv293[rbp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9d, DWORD PTR tv306[rbp]
	mov	r8d, eax
	mov	edx, DWORD PTR tab_n$7[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0DG@MOHAOPFA@?$CF02d?$CFc?5Tab?50x?$CF08X?5?8?$CFs?8?5Offset?3?5@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11621
	call	?PopID@ImGui@@YAXXZ			; ImGui::PopID
; Line 11622
	jmp	$LN5@DebugNodeT
$LN6@DebugNodeT:
; Line 11623
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN11@DebugNodeT:
; Line 11625
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:?DebugNodeTabBar@ImGui@@YAXPEAUImGuiTabBar@@PEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1144]
	pop	rdi
	pop	rbp
	ret	0
?DebugNodeTabBar@ImGui@@YAXPEAUImGuiTabBar@@PEBD@Z ENDP	; ImGui::DebugNodeTabBar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DebugNodeStorage@ImGui@@YAXPEAUImGuiStorage@@PEBD@Z
_TEXT	SEGMENT
n$1 = 4
p$2 = 40
tv78 = 244
tv90 = 248
tv76 = 248
storage$ = 288
label$ = 296
?DebugNodeStorage@ImGui@@YAXPEAUImGuiStorage@@PEBD@Z PROC ; ImGui::DebugNodeStorage, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 11573
$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 11574
	mov	rax, QWORD PTR storage$[rbp]
	mov	rcx, rax
	call	?size_in_bytes@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAHXZ ; ImVector<ImGuiStorage::ImGuiStoragePair>::size_in_bytes
	mov	DWORD PTR tv78[rbp], eax
	mov	rax, QWORD PTR storage$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv76[rbp], eax
	mov	eax, DWORD PTR tv78[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR tv76[rbp]
	mov	r8, QWORD PTR label$[rbp]
	lea	rdx, OFFSET FLAT:??_C@_0BJ@EFAEFOHB@?$CFs?3?5?$CFd?5entries?0?5?$CFd?5bytes@
	mov	rcx, QWORD PTR label$[rbp]
	call	?TreeNode@ImGui@@YA_NPEBD0ZZ		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@DebugNodeS
; Line 11575
	jmp	SHORT $LN1@DebugNodeS
$LN5@DebugNodeS:
; Line 11576
	mov	DWORD PTR n$1[rbp], 0
	jmp	SHORT $LN4@DebugNodeS
$LN2@DebugNodeS:
	mov	eax, DWORD PTR n$1[rbp]
	inc	eax
	mov	DWORD PTR n$1[rbp], eax
$LN4@DebugNodeS:
	mov	rax, QWORD PTR storage$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR n$1[rbp], eax
	jge	SHORT $LN3@DebugNodeS
; Line 11578
	mov	rax, QWORD PTR storage$[rbp]
	mov	QWORD PTR tv90[rbp], rax
	mov	edx, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR tv90[rbp]
	call	??A?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAAEAUImGuiStoragePair@ImGuiStorage@@H@Z ; ImVector<ImGuiStorage::ImGuiStoragePair>::operator[]
	mov	QWORD PTR p$2[rbp], rax
; Line 11579
	mov	rax, QWORD PTR p$2[rbp]
	mov	r8d, DWORD PTR [rax+8]
	mov	rax, QWORD PTR p$2[rbp]
	mov	edx, DWORD PTR [rax]
	lea	rcx, OFFSET FLAT:??_C@_0BL@LEAFLIMO@Key?50x?$CF08X?5Value?5?$HL?5i?3?5?$CFd?5?$HN@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
; Line 11580
	jmp	SHORT $LN2@DebugNodeS
$LN3@DebugNodeS:
; Line 11581
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN1@DebugNodeS:
; Line 11582
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?DebugNodeStorage@ImGui@@YAXPEAUImGuiStorage@@PEBD@Z ENDP ; ImGui::DebugNodeStorage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z
_TEXT	SEGMENT
opened$ = 4
c_str$ = 36
surface_sqrt$ = 68
config_i$7 = 100
cfg$8 = 136
draw_list$9 = 168
glyph_col$10 = 196
cell_size$11 = 228
cell_spacing$12 = 260
base$13 = 292
count$14 = 324
n$15 = 356
base_pos$16 = 392
n$17 = 420
cell_p1$18 = 456
cell_p2$19 = 488
glyph$20 = 520
$T21 = 932
tv311 = 948
tv187 = 948
tv173 = 948
tv87 = 948
tv366 = 952
tv353 = 952
tv269 = 952
tv185 = 952
tv171 = 952
tv157 = 952
tv89 = 952
tv85 = 960
tv80 = 968
__$ArrayPad$ = 976
font$ = 1024
?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z PROC		; ImGui::DebugNodeFont, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 11477
$LN32:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1064				; 00000428H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 154				; 0000009aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1096]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 11478
	mov	rax, QWORD PTR font$[rbp]
	movsx	eax, WORD PTR [rax+80]
	mov	DWORD PTR tv87[rbp], eax
	mov	rax, QWORD PTR font$[rbp]
	mov	eax, DWORD PTR [rax+40]
	mov	DWORD PTR tv89[rbp], eax
	mov	rax, QWORD PTR font$[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+20]
	movsd	QWORD PTR tv85[rbp], xmm0
	mov	rax, QWORD PTR font$[rbp]
	cmp	QWORD PTR [rax+72], 0
	je	SHORT $LN26@DebugNodeF
	mov	eax, 136				; 00000088H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR font$[rbp]
	mov	rcx, QWORD PTR [rcx+72]
	lea	rax, QWORD PTR [rcx+rax+86]
	mov	QWORD PTR tv80[rbp], rax
	jmp	SHORT $LN27@DebugNodeF
$LN26@DebugNodeF:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv80[rbp], rax
$LN27@DebugNodeF:
	mov	eax, DWORD PTR tv87[rbp]
	mov	DWORD PTR [rsp+40], eax
	mov	eax, DWORD PTR tv89[rbp]
	mov	DWORD PTR [rsp+32], eax
	movsd	xmm3, QWORD PTR tv85[rbp]
	movq	r9, xmm3
	mov	r8, QWORD PTR tv80[rbp]
	lea	rdx, OFFSET FLAT:??_C@_0CK@IFCNIJMP@Font?3?5?$CC?$CFs?$CC?6?$CF?42f?5px?0?5?$CFd?5glyphs?0?5@
	mov	rcx, QWORD PTR font$[rbp]
	call	?TreeNode@ImGui@@YA_NPEBXPEBDZZ		; ImGui::TreeNode
	mov	BYTE PTR opened$[rbp], al
; Line 11480
	movss	xmm1, DWORD PTR __real@bf800000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
; Line 11481
	lea	rcx, OFFSET FLAT:??_C@_0P@HCLAAKJM@Set?5as?5default@
	call	?SmallButton@ImGui@@YA_NPEBD@Z		; ImGui::SmallButton
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@DebugNodeF
; Line 11482
	call	?GetIO@ImGui@@YAAEAUImGuiIO@@XZ		; ImGui::GetIO
	mov	rcx, QWORD PTR font$[rbp]
	mov	QWORD PTR [rax+176], rcx
$LN14@DebugNodeF:
; Line 11483
	movzx	eax, BYTE PTR opened$[rbp]
	test	eax, eax
	jne	SHORT $LN15@DebugNodeF
; Line 11484
	jmp	$LN1@DebugNodeF
$LN15@DebugNodeF:
; Line 11487
	mov	rcx, QWORD PTR font$[rbp]
	call	?PushFont@ImGui@@YAXPEAUImFont@@@Z	; ImGui::PushFont
; Line 11488
	lea	rcx, OFFSET FLAT:??_C@_0CM@HCLJNHNJ@The?5quick?5brown?5fox?5jumps?5over?5@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11489
	call	?PopFont@ImGui@@YAXXZ			; ImGui::PopFont
; Line 11492
	call	?GetFontSize@ImGui@@YAMXZ		; ImGui::GetFontSize
	mulss	xmm0, DWORD PTR __real@41000000
	call	?SetNextItemWidth@ImGui@@YAXM@Z		; ImGui::SetNextItemWidth
; Line 11493
	mov	rax, QWORD PTR font$[rbp]
	add	rax, 92					; 0000005cH
	mov	DWORD PTR [rsp+48], 0
	lea	rcx, OFFSET FLAT:??_C@_04GGBPDDBN@?$CF?41f@
	mov	QWORD PTR [rsp+40], rcx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3e99999a
	movss	xmm2, DWORD PTR __real@3ba3d70a
	mov	rdx, rax
	lea	rcx, OFFSET FLAT:??_C@_0L@HAJGHBLA@Font?5scale@
	call	?DragFloat@ImGui@@YA_NPEBDPEAMMMM0H@Z	; ImGui::DragFloat
; Line 11494
	movss	xmm1, DWORD PTR __real@bf800000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
	lea	rcx, OFFSET FLAT:??_C@_0BIM@BPPJLJKD@Note?5than?5the?5default?5embedded?5@
	call	?MetricsHelpMarker@@YAXPEBD@Z		; MetricsHelpMarker
; Line 11500
	mov	rax, QWORD PTR font$[rbp]
	mov	rcx, QWORD PTR font$[rbp]
	movss	xmm0, DWORD PTR [rax+96]
	subss	xmm0, DWORD PTR [rcx+100]
	cvtss2sd xmm0, xmm0
	mov	rax, QWORD PTR font$[rbp]
	cvtss2sd xmm1, DWORD PTR [rax+100]
	mov	rax, QWORD PTR font$[rbp]
	cvtss2sd xmm2, DWORD PTR [rax+96]
	movsd	QWORD PTR tv157[rbp], xmm2
	movaps	xmm3, xmm0
	movq	r9, xmm3
	movaps	xmm2, xmm1
	movq	r8, xmm2
	movsd	xmm0, QWORD PTR tv157[rbp]
	movaps	xmm1, xmm0
	movq	rdx, xmm1
	lea	rcx, OFFSET FLAT:??_C@_0CE@FJCMKHHK@Ascent?3?5?$CFf?0?5Descent?3?5?$CFf?0?5Height@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11502
	mov	rax, QWORD PTR font$[rbp]
	movzx	eax, WORD PTR [rax+82]
	mov	DWORD PTR tv173[rbp], eax
	mov	rax, QWORD PTR font$[rbp]
	movzx	eax, WORD PTR [rax+82]
	mov	edx, eax
	lea	rcx, QWORD PTR c_str$[rbp]
	call	?ImTextCharToUtf8@@YAPEBDQEADI@Z	; ImTextCharToUtf8
	mov	QWORD PTR tv171[rbp], rax
	mov	r8d, DWORD PTR tv173[rbp]
	mov	rdx, QWORD PTR tv171[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0CC@FDGLEGDM@Fallback?5character?3?5?8?$CFs?8?5?$CIU?$CL?$CF04@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11503
	mov	rax, QWORD PTR font$[rbp]
	movzx	eax, WORD PTR [rax+84]
	mov	DWORD PTR tv187[rbp], eax
	mov	rax, QWORD PTR font$[rbp]
	movzx	eax, WORD PTR [rax+84]
	mov	edx, eax
	lea	rcx, QWORD PTR c_str$[rbp]
	call	?ImTextCharToUtf8@@YAPEBDQEADI@Z	; ImTextCharToUtf8
	mov	QWORD PTR tv185[rbp], rax
	mov	r8d, DWORD PTR tv187[rbp]
	mov	rdx, QWORD PTR tv185[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0CC@FAJAAGEH@Ellipsis?5character?3?5?8?$CFs?8?5?$CIU?$CL?$CF04@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11504
	mov	rax, QWORD PTR font$[rbp]
	cvtsi2ss xmm0, DWORD PTR [rax+104]
	call	sqrtf
	cvttss2si eax, xmm0
	mov	DWORD PTR surface_sqrt$[rbp], eax
; Line 11505
	mov	r9d, DWORD PTR surface_sqrt$[rbp]
	mov	r8d, DWORD PTR surface_sqrt$[rbp]
	mov	rax, QWORD PTR font$[rbp]
	mov	edx, DWORD PTR [rax+104]
	lea	rcx, OFFSET FLAT:??_C@_0CE@LLADJGCM@Texture?5Area?3?5about?5?$CFd?5px?5?$HO?$CFdx?$CF@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11506
	mov	DWORD PTR config_i$7[rbp], 0
	jmp	SHORT $LN4@DebugNodeF
$LN2@DebugNodeF:
	mov	eax, DWORD PTR config_i$7[rbp]
	inc	eax
	mov	DWORD PTR config_i$7[rbp], eax
$LN4@DebugNodeF:
	mov	rax, QWORD PTR font$[rbp]
	movsx	eax, WORD PTR [rax+80]
	cmp	DWORD PTR config_i$7[rbp], eax
	jge	$LN3@DebugNodeF
; Line 11507
	mov	rax, QWORD PTR font$[rbp]
	cmp	QWORD PTR [rax+72], 0
	je	$LN16@DebugNodeF
; Line 11508
	movsxd	rax, DWORD PTR config_i$7[rbp]
	imul	rax, rax, 136				; 00000088H
	mov	rcx, QWORD PTR font$[rbp]
	add	rax, QWORD PTR [rcx+72]
	mov	QWORD PTR cfg$8[rbp], rax
	cmp	QWORD PTR cfg$8[rbp], 0
	je	SHORT $LN17@DebugNodeF
; Line 11509
	mov	rax, QWORD PTR cfg$8[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+48]
	mov	rax, QWORD PTR cfg$8[rbp]
	cvtss2sd xmm1, DWORD PTR [rax+44]
	mov	rax, QWORD PTR cfg$8[rbp]
	movzx	eax, BYTE PTR [rax+32]
	mov	rcx, QWORD PTR cfg$8[rbp]
	add	rcx, 86					; 00000056H
	movsd	QWORD PTR [rsp+56], xmm0
	movsd	QWORD PTR [rsp+48], xmm1
	mov	DWORD PTR [rsp+40], eax
	mov	rax, QWORD PTR cfg$8[rbp]
	mov	eax, DWORD PTR [rax+28]
	mov	DWORD PTR [rsp+32], eax
	mov	rax, QWORD PTR cfg$8[rbp]
	mov	r9d, DWORD PTR [rax+24]
	mov	r8, rcx
	mov	edx, DWORD PTR config_i$7[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0EJ@EOFKACMP@Input?5?$CFd?3?5?8?$CFs?8?0?5Oversample?3?5?$CI?$CFd@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
$LN17@DebugNodeF:
$LN16@DebugNodeF:
	jmp	$LN2@DebugNodeF
$LN3@DebugNodeF:
; Line 11513
	mov	rax, QWORD PTR font$[rbp]
	mov	r8d, DWORD PTR [rax+40]
	lea	rdx, OFFSET FLAT:??_C@_0M@NEAHLNMH@Glyphs?5?$CI?$CFd?$CJ@
	lea	rcx, OFFSET FLAT:??_C@_06EBCCDGNI@Glyphs@
	call	?TreeNode@ImGui@@YA_NPEBD0ZZ		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	je	$LN18@DebugNodeF
; Line 11515
	call	?GetWindowDrawList@ImGui@@YAPEAUImDrawList@@XZ ; ImGui::GetWindowDrawList
	mov	QWORD PTR draw_list$9[rbp], rax
; Line 11516
	movss	xmm1, DWORD PTR __real@3f800000
	xor	ecx, ecx
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR glyph_col$10[rbp], eax
; Line 11517
	mov	rax, QWORD PTR font$[rbp]
	movss	xmm0, DWORD PTR [rax+20]
	mulss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR cell_size$11[rbp], xmm0
; Line 11518
	call	?GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ	; ImGui::GetStyle
	movss	xmm0, DWORD PTR [rax+76]
	movss	DWORD PTR cell_spacing$12[rbp], xmm0
; Line 11519
	mov	DWORD PTR base$13[rbp], 0
	jmp	SHORT $LN7@DebugNodeF
$LN5@DebugNodeF:
	mov	eax, DWORD PTR base$13[rbp]
	add	eax, 256				; 00000100H
	mov	DWORD PTR base$13[rbp], eax
$LN7@DebugNodeF:
	cmp	DWORD PTR base$13[rbp], 65535		; 0000ffffH
	ja	$LN6@DebugNodeF
; Line 11524
	mov	eax, DWORD PTR base$13[rbp]
	and	eax, 4095				; 00000fffH
	test	eax, eax
	jne	SHORT $LN19@DebugNodeF
	mov	eax, DWORD PTR base$13[rbp]
	add	eax, 4095				; 00000fffH
	mov	r8d, eax
	mov	edx, DWORD PTR base$13[rbp]
	mov	rcx, QWORD PTR font$[rbp]
	call	?IsGlyphRangeUnused@ImFont@@QEAA_NII@Z	; ImFont::IsGlyphRangeUnused
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN19@DebugNodeF
; Line 11526
	mov	eax, DWORD PTR base$13[rbp]
	add	eax, 3840				; 00000f00H
	mov	DWORD PTR base$13[rbp], eax
; Line 11527
	jmp	SHORT $LN5@DebugNodeF
$LN19@DebugNodeF:
; Line 11530
	mov	DWORD PTR count$14[rbp], 0
; Line 11531
	mov	DWORD PTR n$15[rbp], 0
	jmp	SHORT $LN10@DebugNodeF
$LN8@DebugNodeF:
	mov	eax, DWORD PTR n$15[rbp]
	inc	eax
	mov	DWORD PTR n$15[rbp], eax
$LN10@DebugNodeF:
	cmp	DWORD PTR n$15[rbp], 256		; 00000100H
	jae	SHORT $LN9@DebugNodeF
; Line 11532
	mov	eax, DWORD PTR n$15[rbp]
	mov	ecx, DWORD PTR base$13[rbp]
	add	ecx, eax
	mov	eax, ecx
	movzx	edx, ax
	mov	rcx, QWORD PTR font$[rbp]
	call	?FindGlyphNoFallback@ImFont@@QEBAPEBUImFontGlyph@@G@Z ; ImFont::FindGlyphNoFallback
	test	rax, rax
	je	SHORT $LN20@DebugNodeF
; Line 11533
	mov	eax, DWORD PTR count$14[rbp]
	inc	eax
	mov	DWORD PTR count$14[rbp], eax
$LN20@DebugNodeF:
	jmp	SHORT $LN8@DebugNodeF
$LN9@DebugNodeF:
; Line 11534
	cmp	DWORD PTR count$14[rbp], 0
	jg	SHORT $LN21@DebugNodeF
; Line 11535
	jmp	$LN5@DebugNodeF
$LN21@DebugNodeF:
; Line 11536
	cmp	DWORD PTR count$14[rbp], 1
	jle	SHORT $LN28@DebugNodeF
	lea	rax, OFFSET FLAT:??_C@_06IOJPAPEE@glyphs@
	mov	QWORD PTR tv269[rbp], rax
	jmp	SHORT $LN29@DebugNodeF
$LN28@DebugNodeF:
	lea	rax, OFFSET FLAT:??_C@_05OIOMJNBL@glyph@
	mov	QWORD PTR tv269[rbp], rax
$LN29@DebugNodeF:
	mov	eax, DWORD PTR base$13[rbp]
	add	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR base$13[rbp]
	mov	rdx, QWORD PTR tv269[rbp]
	mov	QWORD PTR [rsp+40], rdx
	mov	edx, DWORD PTR count$14[rbp]
	mov	DWORD PTR [rsp+32], edx
	mov	r9d, eax
	mov	r8d, DWORD PTR base$13[rbp]
	lea	rdx, OFFSET FLAT:??_C@_0BH@KIECHKHD@U?$CL?$CF04X?4?4U?$CL?$CF04X?5?$CI?$CFd?5?$CFs?$CJ@
	call	?TreeNode@ImGui@@YA_NPEBXPEBDZZ		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN22@DebugNodeF
; Line 11537
	jmp	$LN5@DebugNodeF
$LN22@DebugNodeF:
; Line 11540
	lea	rcx, QWORD PTR base_pos$16[rbp]
	call	?GetCursorScreenPos@ImGui@@YA?AUImVec2@@XZ ; ImGui::GetCursorScreenPos
; Line 11541
	mov	DWORD PTR n$17[rbp], 0
	jmp	SHORT $LN13@DebugNodeF
$LN11@DebugNodeF:
	mov	eax, DWORD PTR n$17[rbp]
	inc	eax
	mov	DWORD PTR n$17[rbp], eax
$LN13@DebugNodeF:
	cmp	DWORD PTR n$17[rbp], 256		; 00000100H
	jae	$LN12@DebugNodeF
; Line 11545
	xor	edx, edx
	mov	eax, DWORD PTR n$17[rbp]
	mov	ecx, 16
	div	ecx
	mov	eax, eax
	cvtsi2ss xmm0, rax
	movss	xmm1, DWORD PTR cell_size$11[rbp]
	addss	xmm1, DWORD PTR cell_spacing$12[rbp]
	mulss	xmm0, xmm1
	movss	xmm1, DWORD PTR base_pos$16[rbp+4]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	xor	edx, edx
	mov	eax, DWORD PTR n$17[rbp]
	mov	ecx, 16
	div	ecx
	mov	eax, edx
	mov	eax, eax
	cvtsi2ss xmm1, rax
	movss	xmm2, DWORD PTR cell_size$11[rbp]
	addss	xmm2, DWORD PTR cell_spacing$12[rbp]
	mulss	xmm1, xmm2
	movss	xmm2, DWORD PTR base_pos$16[rbp]
	addss	xmm2, xmm1
	movaps	xmm1, xmm2
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR cell_p1$18[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
; Line 11546
	movss	xmm0, DWORD PTR cell_p1$18[rbp+4]
	addss	xmm0, DWORD PTR cell_size$11[rbp]
	movss	xmm1, DWORD PTR cell_p1$18[rbp]
	addss	xmm1, DWORD PTR cell_size$11[rbp]
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR cell_p2$19[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
; Line 11547
	mov	eax, DWORD PTR n$17[rbp]
	mov	ecx, DWORD PTR base$13[rbp]
	add	ecx, eax
	mov	eax, ecx
	movzx	edx, ax
	mov	rcx, QWORD PTR font$[rbp]
	call	?FindGlyphNoFallback@ImFont@@QEBAPEBUImFontGlyph@@G@Z ; ImFont::FindGlyphNoFallback
	mov	QWORD PTR glyph$20[rbp], rax
; Line 11548
	cmp	QWORD PTR glyph$20[rbp], 0
	je	SHORT $LN30@DebugNodeF
	mov	DWORD PTR tv311[rbp], 1694498815	; 64ffffffH
	jmp	SHORT $LN31@DebugNodeF
$LN30@DebugNodeF:
	mov	DWORD PTR tv311[rbp], 855638015		; 32ffffffH
$LN31@DebugNodeF:
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR tv311[rbp]
	lea	r8, QWORD PTR cell_p2$19[rbp]
	lea	rdx, QWORD PTR cell_p1$18[rbp]
	mov	rcx, QWORD PTR draw_list$9[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
; Line 11549
	cmp	QWORD PTR glyph$20[rbp], 0
	je	SHORT $LN23@DebugNodeF
; Line 11550
	mov	eax, DWORD PTR n$17[rbp]
	mov	ecx, DWORD PTR base$13[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	WORD PTR [rsp+40], ax
	mov	eax, DWORD PTR glyph_col$10[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR cell_p1$18[rbp]
	movss	xmm2, DWORD PTR cell_size$11[rbp]
	mov	rdx, QWORD PTR draw_list$9[rbp]
	mov	rcx, QWORD PTR font$[rbp]
	call	?RenderChar@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IG@Z ; ImFont::RenderChar
$LN23@DebugNodeF:
; Line 11551
	cmp	QWORD PTR glyph$20[rbp], 0
	je	$LN24@DebugNodeF
	mov	r8b, 1
	lea	rdx, QWORD PTR cell_p2$19[rbp]
	lea	rcx, QWORD PTR cell_p1$18[rbp]
	call	?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z ; ImGui::IsMouseHoveringRect
	movzx	eax, al
	test	eax, eax
	je	$LN24@DebugNodeF
; Line 11553
	call	?BeginTooltip@ImGui@@YAXXZ		; ImGui::BeginTooltip
; Line 11554
	mov	eax, DWORD PTR n$17[rbp]
	mov	ecx, DWORD PTR base$13[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_0BC@JMLDGIFC@Codepoint?3?5U?$CL?$CF04X@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11555
	call	?Separator@ImGui@@YAXXZ			; ImGui::Separator
; Line 11556
	mov	rax, QWORD PTR glyph$20[rbp]
	mov	eax, DWORD PTR [rax]
	shr	eax, 1
	and	eax, 1
	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_0M@GDBOFNKK@Visible?3?5?$CFd@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11557
	mov	rax, QWORD PTR glyph$20[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+4]
	movaps	xmm1, xmm0
	movq	rdx, xmm1
	lea	rcx, OFFSET FLAT:??_C@_0P@JLIDDFIB@AdvanceX?3?5?$CF?41f@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11558
	mov	rax, QWORD PTR glyph$20[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+20]
	mov	rax, QWORD PTR glyph$20[rbp]
	cvtss2sd xmm1, DWORD PTR [rax+16]
	mov	rax, QWORD PTR glyph$20[rbp]
	cvtss2sd xmm2, DWORD PTR [rax+12]
	mov	rax, QWORD PTR glyph$20[rbp]
	cvtss2sd xmm3, DWORD PTR [rax+8]
	movsd	QWORD PTR tv353[rbp], xmm3
	movsd	QWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movq	r9, xmm3
	movq	r8, xmm2
	movsd	xmm0, QWORD PTR tv353[rbp]
	movaps	xmm1, xmm0
	movq	rdx, xmm1
	lea	rcx, OFFSET FLAT:??_C@_0BO@BCFBHCGJ@Pos?3?5?$CI?$CF?42f?0?$CF?42f?$CJ?9?$DO?$CI?$CF?42f?0?$CF?42f?$CJ@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11559
	mov	rax, QWORD PTR glyph$20[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+36]
	mov	rax, QWORD PTR glyph$20[rbp]
	cvtss2sd xmm1, DWORD PTR [rax+32]
	mov	rax, QWORD PTR glyph$20[rbp]
	cvtss2sd xmm2, DWORD PTR [rax+28]
	mov	rax, QWORD PTR glyph$20[rbp]
	cvtss2sd xmm3, DWORD PTR [rax+24]
	movsd	QWORD PTR tv366[rbp], xmm3
	movsd	QWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movq	r9, xmm3
	movq	r8, xmm2
	movsd	xmm0, QWORD PTR tv366[rbp]
	movaps	xmm1, xmm0
	movq	rdx, xmm1
	lea	rcx, OFFSET FLAT:??_C@_0BN@EHEDNDHJ@UV?3?5?$CI?$CF?43f?0?$CF?43f?$CJ?9?$DO?$CI?$CF?43f?0?$CF?43f?$CJ@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11560
	call	?EndTooltip@ImGui@@YAXXZ		; ImGui::EndTooltip
$LN24@DebugNodeF:
; Line 11562
	jmp	$LN11@DebugNodeF
$LN12@DebugNodeF:
; Line 11563
	movss	xmm0, DWORD PTR cell_size$11[rbp]
	addss	xmm0, DWORD PTR cell_spacing$12[rbp]
	mulss	xmm0, DWORD PTR __real@41800000
	movss	xmm1, DWORD PTR cell_size$11[rbp]
	addss	xmm1, DWORD PTR cell_spacing$12[rbp]
	mulss	xmm1, DWORD PTR __real@41800000
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR $T21[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rcx, rax
	call	?Dummy@ImGui@@YAXAEBUImVec2@@@Z		; ImGui::Dummy
; Line 11564
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
; Line 11565
	jmp	$LN5@DebugNodeF
$LN6@DebugNodeF:
; Line 11566
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN18@DebugNodeF:
; Line 11568
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN1@DebugNodeF:
; Line 11569
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1000]
	pop	rdi
	pop	rbp
	ret	0
?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z ENDP		; ImGui::DebugNodeFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU2@PEBUImDrawCmd@@_N3@Z
_TEXT	SEGMENT
idx_buffer$ = 8
vtx_buffer$ = 40
clip_rect$ = 72
vtxs_rect$ = 120
backup_flags$ = 164
idx_n$6 = 196
triangle$7 = 232
n$8 = 276
$T9 = 500
$T10 = 532
$T11 = 564
$T12 = 596
tv205 = 616
tv188 = 616
tv154 = 616
tv78 = 616
tv203 = 624
tv186 = 624
tv150 = 624
__$ArrayPad$ = 632
out_draw_list$ = 672
draw_list$ = 680
draw_cmd$ = 688
show_mesh$ = 696
show_aabb$ = 704
?DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU2@PEBUImDrawCmd@@_N3@Z PROC ; ImGui::DebugNodeDrawCmdShowMeshAndBoundingBox, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 11448
$LN16:
	mov	BYTE PTR [rsp+32], r9b
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 712				; 000002c8H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 114				; 00000072H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+744]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 11449
	movzx	eax, BYTE PTR show_mesh$[rbp]
	test	eax, eax
	jne	SHORT $LN11@DebugNodeD
	movzx	eax, BYTE PTR show_aabb$[rbp]
	test	eax, eax
	jne	SHORT $LN11@DebugNodeD
	mov	eax, DWORD PTR ?__LINE__Var@?0??DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU3@PEBUImDrawCmd@@_N3@Z@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CO@NHFPKPKM@?$AAs?$AAh?$AAo?$AAw?$AA_?$AAm?$AAe?$AAs?$AAh?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAs?$AAh@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN11@DebugNodeD:
; Line 11450
	mov	rax, QWORD PTR draw_list$[rbp]
	cmp	DWORD PTR [rax+16], 0
	jle	SHORT $LN12@DebugNodeD
	mov	rax, QWORD PTR draw_list$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR tv78[rbp], rax
	jmp	SHORT $LN13@DebugNodeD
$LN12@DebugNodeD:
	mov	QWORD PTR tv78[rbp], 0
$LN13@DebugNodeD:
	mov	rax, QWORD PTR tv78[rbp]
	mov	QWORD PTR idx_buffer$[rbp], rax
; Line 11451
	mov	rax, QWORD PTR draw_cmd$[rbp]
	mov	eax, DWORD PTR [rax+24]
	imul	rax, rax, 20
	mov	rcx, QWORD PTR draw_list$[rbp]
	add	rax, QWORD PTR [rcx+40]
	mov	QWORD PTR vtx_buffer$[rbp], rax
; Line 11454
	mov	rax, QWORD PTR draw_cmd$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR clip_rect$[rbp]
	call	??0ImRect@@QEAA@AEBUImVec4@@@Z		; ImRect::ImRect
; Line 11455
	movss	xmm0, DWORD PTR __real@ff7fffff
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@ff7fffff
	movss	xmm2, DWORD PTR __real@7f7fffff
	movss	xmm1, DWORD PTR __real@7f7fffff
	lea	rcx, QWORD PTR vtxs_rect$[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
; Line 11456
	mov	rax, QWORD PTR out_draw_list$[rbp]
	mov	eax, DWORD PTR [rax+48]
	mov	DWORD PTR backup_flags$[rbp], eax
; Line 11457
	mov	rax, QWORD PTR out_draw_list$[rbp]
	mov	eax, DWORD PTR [rax+48]
	and	eax, -2
	mov	rcx, QWORD PTR out_draw_list$[rbp]
	mov	DWORD PTR [rcx+48], eax
; Line 11458
	mov	rax, QWORD PTR draw_cmd$[rbp]
	mov	eax, DWORD PTR [rax+28]
	mov	DWORD PTR idx_n$6[rbp], eax
$LN2@DebugNodeD:
	mov	rax, QWORD PTR draw_cmd$[rbp]
	mov	eax, DWORD PTR [rax+28]
	mov	rcx, QWORD PTR draw_cmd$[rbp]
	add	eax, DWORD PTR [rcx+32]
	cmp	DWORD PTR idx_n$6[rbp], eax
	jae	$LN3@DebugNodeD
; Line 11460
	lea	r9, OFFSET FLAT:??0ImVec2@@QEAA@XZ	; ImVec2::ImVec2
	mov	r8d, 3
	mov	edx, 8
	lea	rcx, QWORD PTR triangle$7[rbp]
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z
; Line 11461
	mov	DWORD PTR n$8[rbp], 0
	jmp	SHORT $LN7@DebugNodeD
$LN5@DebugNodeD:
	mov	eax, DWORD PTR n$8[rbp]
	inc	eax
	mov	DWORD PTR n$8[rbp], eax
	mov	eax, DWORD PTR idx_n$6[rbp]
	inc	eax
	mov	DWORD PTR idx_n$6[rbp], eax
$LN7@DebugNodeD:
	cmp	DWORD PTR n$8[rbp], 3
	jge	SHORT $LN6@DebugNodeD
; Line 11462
	mov	rax, QWORD PTR vtx_buffer$[rbp]
	mov	QWORD PTR tv154[rbp], rax
	cmp	QWORD PTR idx_buffer$[rbp], 0
	je	SHORT $LN14@DebugNodeD
	mov	eax, DWORD PTR idx_n$6[rbp]
	mov	rcx, QWORD PTR idx_buffer$[rbp]
	movzx	eax, WORD PTR [rcx+rax*2]
	mov	DWORD PTR tv150[rbp], eax
	jmp	SHORT $LN15@DebugNodeD
$LN14@DebugNodeD:
	mov	eax, DWORD PTR idx_n$6[rbp]
	mov	DWORD PTR tv150[rbp], eax
$LN15@DebugNodeD:
	mov	eax, DWORD PTR tv150[rbp]
	imul	rax, rax, 20
	mov	rcx, QWORD PTR tv154[rbp]
	mov	rax, QWORD PTR [rcx+rax]
	movsxd	rcx, DWORD PTR n$8[rbp]
	mov	QWORD PTR triangle$7[rbp+rcx*8], rax
	movsxd	rax, DWORD PTR n$8[rbp]
	lea	rax, QWORD PTR triangle$7[rbp+rax*8]
	mov	rdx, rax
	lea	rcx, QWORD PTR vtxs_rect$[rbp]
	call	?Add@ImRect@@QEAAXAEBUImVec2@@@Z	; ImRect::Add
	jmp	$LN5@DebugNodeD
$LN6@DebugNodeD:
; Line 11463
	movzx	eax, BYTE PTR show_mesh$[rbp]
	test	eax, eax
	je	SHORT $LN8@DebugNodeD
; Line 11464
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+40], xmm0
	mov	DWORD PTR [rsp+32], 1
	mov	r9d, -16711681				; ff00ffffH
	mov	r8d, 3
	lea	rdx, QWORD PTR triangle$7[rbp]
	mov	rcx, QWORD PTR out_draw_list$[rbp]
	call	?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HIHM@Z ; ImDrawList::AddPolyline
$LN8@DebugNodeD:
; Line 11465
	jmp	$LN2@DebugNodeD
$LN3@DebugNodeD:
; Line 11467
	movzx	eax, BYTE PTR show_aabb$[rbp]
	test	eax, eax
	je	$LN9@DebugNodeD
; Line 11469
	lea	rdx, QWORD PTR clip_rect$[rbp+8]
	lea	rcx, QWORD PTR $T9[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	QWORD PTR tv188[rbp], rax
	lea	rdx, QWORD PTR clip_rect$[rbp]
	lea	rcx, QWORD PTR $T10[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	QWORD PTR tv186[rbp], rax
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, -65281				; ffff00ffH
	mov	r8, QWORD PTR tv188[rbp]
	mov	rdx, QWORD PTR tv186[rbp]
	mov	rcx, QWORD PTR out_draw_list$[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
; Line 11470
	lea	rdx, QWORD PTR vtxs_rect$[rbp+8]
	lea	rcx, QWORD PTR $T11[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	QWORD PTR tv205[rbp], rax
	lea	rdx, QWORD PTR vtxs_rect$[rbp]
	lea	rcx, QWORD PTR $T12[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	QWORD PTR tv203[rbp], rax
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, -256				; ffffff00H
	mov	r8, QWORD PTR tv205[rbp]
	mov	rdx, QWORD PTR tv203[rbp]
	mov	rcx, QWORD PTR out_draw_list$[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
$LN9@DebugNodeD:
; Line 11472
	mov	rax, QWORD PTR out_draw_list$[rbp]
	mov	ecx, DWORD PTR backup_flags$[rbp]
	mov	DWORD PTR [rax+48], ecx
; Line 11473
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:?DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU2@PEBUImDrawCmd@@_N3@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+648]
	pop	rdi
	pop	rbp
	ret	0
?DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU2@PEBUImDrawCmd@@_N3@Z ENDP ; ImGui::DebugNodeDrawCmdShowMeshAndBoundingBox
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z
_TEXT	SEGMENT
g$ = 8
cfg$ = 40
cmd_count$ = 68
node_open$ = 100
fg_draw_list$ = 136
pcmd$7 = 168
buf$8 = 208
pcmd_node_open$9 = 532
idx_buffer$10 = 568
vtx_buffer$11 = 600
total_area$12 = 628
idx_n$13 = 660
triangle$14 = 696
n$15 = 740
clipper$16 = 776
prim$17 = 836
idx_i$18 = 868
buf_p$19 = 904
buf_end$20 = 936
triangle$21 = 968
n$22 = 1012
v$23 = 1048
backup_flags$24 = 1076
$T25 = 1684
$T26 = 1732
$T27 = 1764
$T28 = 1796
tv425 = 1812
tv130 = 1812
tv427 = 1816
tv388 = 1816
tv290 = 1816
tv278 = 1816
tv247 = 1816
tv128 = 1816
tv429 = 1824
tv384 = 1824
tv274 = 1824
tv90 = 1824
tv431 = 1832
tv433 = 1840
tv423 = 1848
tv416 = 1856
__$ArrayPad$ = 1864
window$ = 1904
draw_list$ = 1912
label$ = 1920
?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z PROC ; ImGui::DebugNodeDrawList, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 11354
$LN43:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1960				; 000007a8H
	lea	rbp, QWORD PTR [rsp+80]
	lea	rdi, QWORD PTR [rsp+80]
	mov	ecx, 326				; 00000146H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1992]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 11355
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 11356
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12556				; 0000310cH
	mov	QWORD PTR cfg$[rbp], rax
; Line 11357
	mov	rax, QWORD PTR draw_list$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR cmd_count$[rbp], eax
; Line 11358
	cmp	DWORD PTR cmd_count$[rbp], 0
	jle	SHORT $LN19@DebugNodeD
	mov	rax, QWORD PTR draw_list$[rbp]
	mov	rcx, rax
	call	?back@?$ImVector@UImDrawCmd@@@@QEBAAEBUImDrawCmd@@XZ ; ImVector<ImDrawCmd>::back
	cmp	DWORD PTR [rax+32], 0
	jne	SHORT $LN19@DebugNodeD
	mov	rax, QWORD PTR draw_list$[rbp]
	mov	rcx, rax
	call	?back@?$ImVector@UImDrawCmd@@@@QEBAAEBUImDrawCmd@@XZ ; ImVector<ImDrawCmd>::back
	cmp	QWORD PTR [rax+40], 0
	jne	SHORT $LN19@DebugNodeD
; Line 11359
	mov	eax, DWORD PTR cmd_count$[rbp]
	dec	eax
	mov	DWORD PTR cmd_count$[rbp], eax
$LN19@DebugNodeD:
; Line 11360
	mov	rax, QWORD PTR draw_list$[rbp]
	mov	eax, DWORD PTR [rax+16]
	mov	DWORD PTR tv130[rbp], eax
	mov	rax, QWORD PTR draw_list$[rbp]
	mov	eax, DWORD PTR [rax+32]
	mov	DWORD PTR tv128[rbp], eax
	mov	rax, QWORD PTR draw_list$[rbp]
	cmp	QWORD PTR [rax+64], 0
	je	SHORT $LN32@DebugNodeD
	mov	rax, QWORD PTR draw_list$[rbp]
	mov	rax, QWORD PTR [rax+64]
	mov	QWORD PTR tv90[rbp], rax
	jmp	SHORT $LN33@DebugNodeD
$LN32@DebugNodeD:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv90[rbp], rax
$LN33@DebugNodeD:
	mov	eax, DWORD PTR cmd_count$[rbp]
	mov	DWORD PTR [rsp+48], eax
	mov	eax, DWORD PTR tv130[rbp]
	mov	DWORD PTR [rsp+40], eax
	mov	eax, DWORD PTR tv128[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR tv90[rbp]
	mov	r8, QWORD PTR label$[rbp]
	lea	rdx, OFFSET FLAT:??_C@_0CF@IMBENNLG@?$CFs?3?5?8?$CFs?8?5?$CFd?5vtx?0?5?$CFd?5indices?0?5?$CFd@
	mov	rcx, QWORD PTR draw_list$[rbp]
	call	?TreeNode@ImGui@@YA_NPEBXPEBDZZ		; ImGui::TreeNode
	mov	BYTE PTR node_open$[rbp], al
; Line 11361
	call	?GetWindowDrawList@ImGui@@YAPEAUImDrawList@@XZ ; ImGui::GetWindowDrawList
	cmp	QWORD PTR draw_list$[rbp], rax
	jne	SHORT $LN20@DebugNodeD
; Line 11363
	movss	xmm1, DWORD PTR __real@bf800000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
; Line 11364
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3ecccccd
	movss	xmm2, DWORD PTR __real@3ecccccd
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T25[rbp]
	call	??0ImVec4@@QEAA@MMMM@Z			; ImVec4::ImVec4
	lea	rdx, OFFSET FLAT:??_C@_0BE@LDCFEMCB@CURRENTLY?5APPENDING@
	mov	rcx, rax
	call	?TextColored@ImGui@@YAXAEBUImVec4@@PEBDZZ ; ImGui::TextColored
; Line 11365
	movzx	eax, BYTE PTR node_open$[rbp]
	test	eax, eax
	je	SHORT $LN21@DebugNodeD
; Line 11366
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN21@DebugNodeD:
; Line 11367
	jmp	$LN1@DebugNodeD
$LN20@DebugNodeD:
; Line 11370
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiWindow@@@Z ; ImGui::GetForegroundDrawList
	mov	QWORD PTR fg_draw_list$[rbp], rax
; Line 11371
	cmp	QWORD PTR window$[rbp], 0
	je	SHORT $LN22@DebugNodeD
	xor	ecx, ecx
	call	?IsItemHovered@ImGui@@YA_NH@Z		; ImGui::IsItemHovered
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN22@DebugNodeD
; Line 11372
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 24
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 16
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T26[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 16
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, -16711681				; ff00ffffH
	mov	r8, rax
	mov	rdx, rcx
	mov	rcx, QWORD PTR fg_draw_list$[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
$LN22@DebugNodeD:
; Line 11373
	movzx	eax, BYTE PTR node_open$[rbp]
	test	eax, eax
	jne	SHORT $LN23@DebugNodeD
; Line 11374
	jmp	$LN1@DebugNodeD
$LN23@DebugNodeD:
; Line 11376
	cmp	QWORD PTR window$[rbp], 0
	je	SHORT $LN24@DebugNodeD
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+143]
	test	eax, eax
	jne	SHORT $LN24@DebugNodeD
; Line 11377
	lea	rcx, OFFSET FLAT:??_C@_0EJ@LNIIFBMO@Warning?3?5owning?5Window?5is?5inact@
	call	?TextDisabled@ImGui@@YAXPEBDZZ		; ImGui::TextDisabled
$LN24@DebugNodeD:
; Line 11379
	mov	rax, QWORD PTR draw_list$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR pcmd$7[rbp], rax
	jmp	SHORT $LN4@DebugNodeD
$LN2@DebugNodeD:
	mov	rax, QWORD PTR pcmd$7[rbp]
	add	rax, 56					; 00000038H
	mov	QWORD PTR pcmd$7[rbp], rax
$LN4@DebugNodeD:
	movsxd	rax, DWORD PTR cmd_count$[rbp]
	imul	rax, rax, 56				; 00000038H
	mov	rcx, QWORD PTR draw_list$[rbp]
	add	rax, QWORD PTR [rcx+8]
	cmp	QWORD PTR pcmd$7[rbp], rax
	jae	$LN3@DebugNodeD
; Line 11381
	mov	rax, QWORD PTR pcmd$7[rbp]
	cmp	QWORD PTR [rax+40], 0
	je	SHORT $LN25@DebugNodeD
; Line 11383
	mov	rax, QWORD PTR pcmd$7[rbp]
	mov	r8, QWORD PTR [rax+48]
	mov	rax, QWORD PTR pcmd$7[rbp]
	mov	rdx, QWORD PTR [rax+40]
	lea	rcx, OFFSET FLAT:??_C@_0BK@FDNBBNBF@Callback?5?$CFp?0?5user_data?5?$CFp@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
; Line 11384
	jmp	SHORT $LN2@DebugNodeD
$LN25@DebugNodeD:
; Line 11388
	mov	rax, QWORD PTR pcmd$7[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+12]
	mov	rax, QWORD PTR pcmd$7[rbp]
	cvtss2sd xmm1, DWORD PTR [rax+8]
	mov	rax, QWORD PTR pcmd$7[rbp]
	cvtss2sd xmm2, DWORD PTR [rax+4]
	mov	rax, QWORD PTR pcmd$7[rbp]
	cvtss2sd xmm3, DWORD PTR [rax]
	xor	edx, edx
	mov	rax, QWORD PTR pcmd$7[rbp]
	mov	eax, DWORD PTR [rax+32]
	mov	ecx, 3
	div	ecx
	movsd	QWORD PTR [rsp+64], xmm0
	movsd	QWORD PTR [rsp+56], xmm1
	movsd	QWORD PTR [rsp+48], xmm2
	movsd	QWORD PTR [rsp+40], xmm3
	mov	rcx, QWORD PTR pcmd$7[rbp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9d, eax
	lea	r8, OFFSET FLAT:??_C@_0EB@FAPEKKJB@DrawCmd?3?$CF5d?5tris?0?5Tex?50x?$CFp?0?5Cli@
	mov	edx, 300				; 0000012cH
	lea	rcx, QWORD PTR buf$8[rbp]
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
; Line 11391
	mov	rax, QWORD PTR draw_list$[rbp]
	mov	rcx, rax
	call	?begin@?$ImVector@UImDrawCmd@@@@QEBAPEBUImDrawCmd@@XZ ; ImVector<ImDrawCmd>::begin
	mov	rcx, QWORD PTR pcmd$7[rbp]
	sub	rcx, rax
	mov	rax, rcx
	cdq
	mov	ecx, 56					; 00000038H
	idiv	rcx
	lea	r8, QWORD PTR buf$8[rbp]
	lea	rdx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	rcx, rax
	call	?TreeNode@ImGui@@YA_NPEBXPEBDZZ		; ImGui::TreeNode
	mov	BYTE PTR pcmd_node_open$9[rbp], al
; Line 11392
	xor	ecx, ecx
	call	?IsItemHovered@ImGui@@YA_NH@Z		; ImGui::IsItemHovered
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@DebugNodeD
	mov	rax, QWORD PTR cfg$[rbp]
	movzx	eax, BYTE PTR [rax+3]
	test	eax, eax
	jne	SHORT $LN27@DebugNodeD
	mov	rax, QWORD PTR cfg$[rbp]
	movzx	eax, BYTE PTR [rax+4]
	test	eax, eax
	je	SHORT $LN26@DebugNodeD
$LN27@DebugNodeD:
	cmp	QWORD PTR fg_draw_list$[rbp], 0
	je	SHORT $LN26@DebugNodeD
; Line 11393
	mov	rax, QWORD PTR cfg$[rbp]
	movzx	eax, BYTE PTR [rax+4]
	mov	BYTE PTR [rsp+32], al
	mov	rax, QWORD PTR cfg$[rbp]
	movzx	r9d, BYTE PTR [rax+3]
	mov	r8, QWORD PTR pcmd$7[rbp]
	mov	rdx, QWORD PTR draw_list$[rbp]
	mov	rcx, QWORD PTR fg_draw_list$[rbp]
	call	?DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU2@PEBUImDrawCmd@@_N3@Z ; ImGui::DebugNodeDrawCmdShowMeshAndBoundingBox
$LN26@DebugNodeD:
; Line 11394
	movzx	eax, BYTE PTR pcmd_node_open$9[rbp]
	test	eax, eax
	jne	SHORT $LN28@DebugNodeD
; Line 11395
	jmp	$LN2@DebugNodeD
$LN28@DebugNodeD:
; Line 11399
	mov	rax, QWORD PTR draw_list$[rbp]
	cmp	DWORD PTR [rax+16], 0
	jle	SHORT $LN34@DebugNodeD
	mov	rax, QWORD PTR draw_list$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR tv247[rbp], rax
	jmp	SHORT $LN35@DebugNodeD
$LN34@DebugNodeD:
	mov	QWORD PTR tv247[rbp], 0
$LN35@DebugNodeD:
	mov	rax, QWORD PTR tv247[rbp]
	mov	QWORD PTR idx_buffer$10[rbp], rax
; Line 11400
	mov	rax, QWORD PTR pcmd$7[rbp]
	mov	eax, DWORD PTR [rax+24]
	imul	rax, rax, 20
	mov	rcx, QWORD PTR draw_list$[rbp]
	add	rax, QWORD PTR [rcx+40]
	mov	QWORD PTR vtx_buffer$11[rbp], rax
; Line 11401
	xorps	xmm0, xmm0
	movss	DWORD PTR total_area$12[rbp], xmm0
; Line 11402
	mov	rax, QWORD PTR pcmd$7[rbp]
	mov	eax, DWORD PTR [rax+28]
	mov	DWORD PTR idx_n$13[rbp], eax
$LN5@DebugNodeD:
	mov	rax, QWORD PTR pcmd$7[rbp]
	mov	eax, DWORD PTR [rax+28]
	mov	rcx, QWORD PTR pcmd$7[rbp]
	add	eax, DWORD PTR [rcx+32]
	cmp	DWORD PTR idx_n$13[rbp], eax
	jae	$LN6@DebugNodeD
; Line 11404
	lea	r9, OFFSET FLAT:??0ImVec2@@QEAA@XZ	; ImVec2::ImVec2
	mov	r8d, 3
	mov	edx, 8
	lea	rcx, QWORD PTR triangle$14[rbp]
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z
; Line 11405
	mov	DWORD PTR n$15[rbp], 0
	jmp	SHORT $LN10@DebugNodeD
$LN8@DebugNodeD:
	mov	eax, DWORD PTR n$15[rbp]
	inc	eax
	mov	DWORD PTR n$15[rbp], eax
	mov	eax, DWORD PTR idx_n$13[rbp]
	inc	eax
	mov	DWORD PTR idx_n$13[rbp], eax
$LN10@DebugNodeD:
	cmp	DWORD PTR n$15[rbp], 3
	jge	SHORT $LN9@DebugNodeD
; Line 11406
	mov	rax, QWORD PTR vtx_buffer$11[rbp]
	mov	QWORD PTR tv278[rbp], rax
	cmp	QWORD PTR idx_buffer$10[rbp], 0
	je	SHORT $LN36@DebugNodeD
	mov	eax, DWORD PTR idx_n$13[rbp]
	mov	rcx, QWORD PTR idx_buffer$10[rbp]
	movzx	eax, WORD PTR [rcx+rax*2]
	mov	DWORD PTR tv274[rbp], eax
	jmp	SHORT $LN37@DebugNodeD
$LN36@DebugNodeD:
	mov	eax, DWORD PTR idx_n$13[rbp]
	mov	DWORD PTR tv274[rbp], eax
$LN37@DebugNodeD:
	mov	eax, DWORD PTR tv274[rbp]
	imul	rax, rax, 20
	mov	rcx, QWORD PTR tv278[rbp]
	mov	rax, QWORD PTR [rcx+rax]
	movsxd	rcx, DWORD PTR n$15[rbp]
	mov	QWORD PTR triangle$14[rbp+rcx*8], rax
	jmp	$LN8@DebugNodeD
$LN9@DebugNodeD:
; Line 11407
	mov	eax, 8
	imul	rax, rax, 2
	lea	rax, QWORD PTR triangle$14[rbp+rax]
	mov	ecx, 8
	imul	rcx, rcx, 1
	lea	rcx, QWORD PTR triangle$14[rbp+rcx]
	mov	edx, 8
	imul	rdx, rdx, 0
	lea	rdx, QWORD PTR triangle$14[rbp+rdx]
	mov	QWORD PTR tv290[rbp], rdx
	mov	r8, rax
	mov	rdx, rcx
	mov	rax, QWORD PTR tv290[rbp]
	mov	rcx, rax
	call	?ImTriangleArea@@YAMAEBUImVec2@@00@Z	; ImTriangleArea
	movss	xmm1, DWORD PTR total_area$12[rbp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR total_area$12[rbp], xmm0
; Line 11408
	jmp	$LN5@DebugNodeD
$LN6@DebugNodeD:
; Line 11411
	cvtss2sd xmm0, DWORD PTR total_area$12[rbp]
	movsd	QWORD PTR [rsp+48], xmm0
	mov	rax, QWORD PTR pcmd$7[rbp]
	mov	eax, DWORD PTR [rax+28]
	mov	DWORD PTR [rsp+40], eax
	mov	rax, QWORD PTR pcmd$7[rbp]
	mov	eax, DWORD PTR [rax+24]
	mov	DWORD PTR [rsp+32], eax
	mov	rax, QWORD PTR pcmd$7[rbp]
	mov	r9d, DWORD PTR [rax+32]
	lea	r8, OFFSET FLAT:??_C@_0EE@EGAMBHDK@Mesh?3?5ElemCount?3?5?$CFd?0?5VtxOffset?3@
	mov	edx, 300				; 0000012cH
	lea	rcx, QWORD PTR buf$8[rbp]
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
; Line 11412
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T27[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r9, rax
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR buf$8[rbp]
	call	?Selectable@ImGui@@YA_NPEBD_NHAEBUImVec2@@@Z ; ImGui::Selectable
; Line 11413
	xor	ecx, ecx
	call	?IsItemHovered@ImGui@@YA_NH@Z		; ImGui::IsItemHovered
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN29@DebugNodeD
	cmp	QWORD PTR fg_draw_list$[rbp], 0
	je	SHORT $LN29@DebugNodeD
; Line 11414
	mov	BYTE PTR [rsp+32], 0
	mov	r9b, 1
	mov	r8, QWORD PTR pcmd$7[rbp]
	mov	rdx, QWORD PTR draw_list$[rbp]
	mov	rcx, QWORD PTR fg_draw_list$[rbp]
	call	?DebugNodeDrawCmdShowMeshAndBoundingBox@ImGui@@YAXPEAUImDrawList@@PEBU2@PEBUImDrawCmd@@_N3@Z ; ImGui::DebugNodeDrawCmdShowMeshAndBoundingBox
$LN29@DebugNodeD:
; Line 11417
	lea	rcx, QWORD PTR clipper$16[rbp]
	call	??0ImGuiListClipper@@QEAA@XZ		; ImGuiListClipper::ImGuiListClipper
	npad	1
; Line 11418
	xor	edx, edx
	mov	rax, QWORD PTR pcmd$7[rbp]
	mov	eax, DWORD PTR [rax+32]
	mov	ecx, 3
	div	ecx
	movss	xmm2, DWORD PTR __real@bf800000
	mov	edx, eax
	lea	rcx, QWORD PTR clipper$16[rbp]
	call	?Begin@ImGuiListClipper@@QEAAXHM@Z	; ImGuiListClipper::Begin
$LN11@DebugNodeD:
; Line 11419
	lea	rcx, QWORD PTR clipper$16[rbp]
	call	?Step@ImGuiListClipper@@QEAA_NXZ	; ImGuiListClipper::Step
	movzx	eax, al
	test	eax, eax
	je	$LN12@DebugNodeD
; Line 11420
	mov	eax, DWORD PTR clipper$16[rbp]
	mov	DWORD PTR prim$17[rbp], eax
	imul	eax, DWORD PTR clipper$16[rbp], 3
	mov	rcx, QWORD PTR pcmd$7[rbp]
	add	eax, DWORD PTR [rcx+28]
	mov	DWORD PTR idx_i$18[rbp], eax
	jmp	SHORT $LN15@DebugNodeD
$LN13@DebugNodeD:
	mov	eax, DWORD PTR prim$17[rbp]
	inc	eax
	mov	DWORD PTR prim$17[rbp], eax
$LN15@DebugNodeD:
	mov	eax, DWORD PTR clipper$16[rbp+4]
	cmp	DWORD PTR prim$17[rbp], eax
	jge	$LN14@DebugNodeD
; Line 11422
	lea	rax, QWORD PTR buf$8[rbp]
	mov	QWORD PTR buf_p$19[rbp], rax
	lea	rax, QWORD PTR buf$8[rbp+300]
	mov	QWORD PTR buf_end$20[rbp], rax
; Line 11423
	lea	r9, OFFSET FLAT:??0ImVec2@@QEAA@XZ	; ImVec2::ImVec2
	mov	r8d, 3
	mov	edx, 8
	lea	rcx, QWORD PTR triangle$21[rbp]
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z
; Line 11424
	mov	DWORD PTR n$22[rbp], 0
	jmp	SHORT $LN18@DebugNodeD
$LN16@DebugNodeD:
	mov	eax, DWORD PTR n$22[rbp]
	inc	eax
	mov	DWORD PTR n$22[rbp], eax
	mov	eax, DWORD PTR idx_i$18[rbp]
	inc	eax
	mov	DWORD PTR idx_i$18[rbp], eax
$LN18@DebugNodeD:
	cmp	DWORD PTR n$22[rbp], 3
	jge	$LN17@DebugNodeD
; Line 11426
	mov	rax, QWORD PTR vtx_buffer$11[rbp]
	mov	QWORD PTR tv388[rbp], rax
	cmp	QWORD PTR idx_buffer$10[rbp], 0
	je	SHORT $LN38@DebugNodeD
	movsxd	rax, DWORD PTR idx_i$18[rbp]
	mov	rcx, QWORD PTR idx_buffer$10[rbp]
	movzx	eax, WORD PTR [rcx+rax*2]
	mov	DWORD PTR tv384[rbp], eax
	jmp	SHORT $LN39@DebugNodeD
$LN38@DebugNodeD:
	mov	eax, DWORD PTR idx_i$18[rbp]
	mov	DWORD PTR tv384[rbp], eax
$LN39@DebugNodeD:
	movsxd	rax, DWORD PTR tv384[rbp]
	imul	rax, rax, 20
	mov	rcx, QWORD PTR tv388[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR v$23[rbp], rax
; Line 11427
	mov	rax, QWORD PTR v$23[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rcx, DWORD PTR n$22[rbp]
	mov	QWORD PTR triangle$21[rbp+rcx*8], rax
; Line 11428
	mov	rax, QWORD PTR v$23[rbp]
	mov	eax, DWORD PTR [rax+16]
	mov	DWORD PTR tv425[rbp], eax
	mov	rax, QWORD PTR v$23[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+12]
	movsd	QWORD PTR tv427[rbp], xmm0
	mov	rax, QWORD PTR v$23[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+8]
	movsd	QWORD PTR tv429[rbp], xmm0
	mov	rax, QWORD PTR v$23[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+4]
	movsd	QWORD PTR tv431[rbp], xmm0
	mov	rax, QWORD PTR v$23[rbp]
	cvtss2sd xmm0, DWORD PTR [rax]
	movsd	QWORD PTR tv433[rbp], xmm0
	mov	eax, DWORD PTR idx_i$18[rbp]
	mov	DWORD PTR tv423[rbp], eax
	cmp	DWORD PTR n$22[rbp], 0
	jne	SHORT $LN40@DebugNodeD
	lea	rax, OFFSET FLAT:??_C@_05HCFPDLGJ@Vert?3@
	mov	QWORD PTR tv416[rbp], rax
	jmp	SHORT $LN41@DebugNodeD
$LN40@DebugNodeD:
	lea	rax, OFFSET FLAT:??_C@_05IFKLLJBC@?5?5?5?5?5@
	mov	QWORD PTR tv416[rbp], rax
$LN41@DebugNodeD:
	mov	rax, QWORD PTR buf_p$19[rbp]
	mov	rcx, QWORD PTR buf_end$20[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	ecx, DWORD PTR tv425[rbp]
	mov	DWORD PTR [rsp+72], ecx
	movsd	xmm0, QWORD PTR tv427[rbp]
	movsd	QWORD PTR [rsp+64], xmm0
	movsd	xmm0, QWORD PTR tv429[rbp]
	movsd	QWORD PTR [rsp+56], xmm0
	movsd	xmm0, QWORD PTR tv431[rbp]
	movsd	QWORD PTR [rsp+48], xmm0
	movsd	xmm0, QWORD PTR tv433[rbp]
	movsd	QWORD PTR [rsp+40], xmm0
	mov	ecx, DWORD PTR tv423[rbp]
	mov	DWORD PTR [rsp+32], ecx
	mov	r9, QWORD PTR tv416[rbp]
	lea	r8, OFFSET FLAT:??_C@_0DG@MPIFBGBG@?$CFs?5?$CF04d?3?5pos?5?$CI?$CF8?42f?0?$CF8?42f?$CJ?0?5uv?5@
	mov	rdx, rax
	mov	rcx, QWORD PTR buf_p$19[rbp]
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
	cdqe
	mov	rcx, QWORD PTR buf_p$19[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR buf_p$19[rbp], rax
; Line 11430
	jmp	$LN16@DebugNodeD
$LN17@DebugNodeD:
; Line 11432
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T28[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r9, rax
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR buf$8[rbp]
	call	?Selectable@ImGui@@YA_NPEBD_NHAEBUImVec2@@@Z ; ImGui::Selectable
; Line 11433
	cmp	QWORD PTR fg_draw_list$[rbp], 0
	je	SHORT $LN30@DebugNodeD
	xor	ecx, ecx
	call	?IsItemHovered@ImGui@@YA_NH@Z		; ImGui::IsItemHovered
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN30@DebugNodeD
; Line 11435
	mov	rax, QWORD PTR fg_draw_list$[rbp]
	mov	eax, DWORD PTR [rax+48]
	mov	DWORD PTR backup_flags$24[rbp], eax
; Line 11436
	mov	rax, QWORD PTR fg_draw_list$[rbp]
	mov	eax, DWORD PTR [rax+48]
	and	eax, -2
	mov	rcx, QWORD PTR fg_draw_list$[rbp]
	mov	DWORD PTR [rcx+48], eax
; Line 11437
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+40], xmm0
	mov	DWORD PTR [rsp+32], 1
	mov	r9d, -16711681				; ff00ffffH
	mov	r8d, 3
	lea	rdx, QWORD PTR triangle$21[rbp]
	mov	rcx, QWORD PTR fg_draw_list$[rbp]
	call	?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HIHM@Z ; ImDrawList::AddPolyline
; Line 11438
	mov	rax, QWORD PTR fg_draw_list$[rbp]
	mov	ecx, DWORD PTR backup_flags$24[rbp]
	mov	DWORD PTR [rax+48], ecx
$LN30@DebugNodeD:
; Line 11440
	jmp	$LN13@DebugNodeD
$LN14@DebugNodeD:
	jmp	$LN11@DebugNodeD
$LN12@DebugNodeD:
; Line 11441
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
	npad	1
; Line 11442
	lea	rcx, QWORD PTR clipper$16[rbp]
	call	??1ImGuiListClipper@@QEAA@XZ		; ImGuiListClipper::~ImGuiListClipper
	jmp	$LN2@DebugNodeD
$LN3@DebugNodeD:
; Line 11443
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN1@DebugNodeD:
; Line 11444
	lea	rcx, QWORD PTR [rbp-80]
	lea	rdx, OFFSET FLAT:?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1880]
	pop	rdi
	pop	rbp
	ret	0
?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z ENDP ; ImGui::DebugNodeDrawList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
g$ = 8
cfg$ = 40
cmd_count$ = 68
node_open$ = 100
fg_draw_list$ = 136
pcmd$7 = 168
buf$8 = 208
pcmd_node_open$9 = 532
idx_buffer$10 = 568
vtx_buffer$11 = 600
total_area$12 = 628
idx_n$13 = 660
triangle$14 = 696
n$15 = 740
clipper$16 = 776
prim$17 = 836
idx_i$18 = 868
buf_p$19 = 904
buf_end$20 = 936
triangle$21 = 968
n$22 = 1012
v$23 = 1048
backup_flags$24 = 1076
$T25 = 1684
$T26 = 1732
$T27 = 1764
$T28 = 1796
tv425 = 1812
tv130 = 1812
tv427 = 1816
tv388 = 1816
tv290 = 1816
tv278 = 1816
tv247 = 1816
tv128 = 1816
tv429 = 1824
tv384 = 1824
tv274 = 1824
tv90 = 1824
tv431 = 1832
tv433 = 1840
tv423 = 1848
tv416 = 1856
__$ArrayPad$ = 1864
window$ = 1904
draw_list$ = 1912
label$ = 1920
?dtor$0@?0??DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z@4HA PROC ; `ImGui::DebugNodeDrawList'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+80]
	lea	rcx, QWORD PTR clipper$16[rbp]
	call	??1ImGuiListClipper@@QEAA@XZ		; ImGuiListClipper::~ImGuiListClipper
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z@4HA ENDP ; `ImGui::DebugNodeDrawList'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DebugNodeColumns@ImGui@@YAXPEAUImGuiOldColumns@@@Z
_TEXT	SEGMENT
column_n$1 = 4
tv131 = 216
tv86 = 216
tv151 = 224
tv142 = 232
tv149 = 240
columns$ = 288
?DebugNodeColumns@ImGui@@YAXPEAUImGuiOldColumns@@@Z PROC ; ImGui::DebugNodeColumns, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 11343
$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 11344
	mov	rax, QWORD PTR columns$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR columns$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	mov	DWORD PTR [rsp+32], ecx
	mov	rcx, QWORD PTR columns$[rbp]
	mov	r9d, DWORD PTR [rcx+16]
	mov	rcx, QWORD PTR columns$[rbp]
	mov	r8d, DWORD PTR [rcx]
	lea	rdx, OFFSET FLAT:??_C@_0CN@LMOAIACO@Columns?5Id?3?50x?$CF08X?0?5Count?3?5?$CFd?0?5@
	mov	ecx, eax
	call	?TreeNode@ImGui@@YA_NPEBXPEBDZZ		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@DebugNodeC
; Line 11345
	jmp	$LN1@DebugNodeC
$LN5@DebugNodeC:
; Line 11346
	mov	rax, QWORD PTR columns$[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+24]
	mov	rax, QWORD PTR columns$[rbp]
	cvtss2sd xmm1, DWORD PTR [rax+20]
	mov	rax, QWORD PTR columns$[rbp]
	mov	rcx, QWORD PTR columns$[rbp]
	movss	xmm2, DWORD PTR [rax+24]
	subss	xmm2, DWORD PTR [rcx+20]
	cvtss2sd xmm2, xmm2
	movsd	QWORD PTR tv86[rbp], xmm2
	movaps	xmm3, xmm0
	movq	r9, xmm3
	movaps	xmm2, xmm1
	movq	r8, xmm2
	movsd	xmm0, QWORD PTR tv86[rbp]
	movaps	xmm1, xmm0
	movq	rdx, xmm1
	lea	rcx, OFFSET FLAT:??_C@_0CF@PKFCLBKA@Width?3?5?$CF?41f?5?$CIMinX?3?5?$CF?41f?0?5MaxX?3?5@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
; Line 11347
	mov	DWORD PTR column_n$1[rbp], 0
	jmp	SHORT $LN4@DebugNodeC
$LN2@DebugNodeC:
	mov	eax, DWORD PTR column_n$1[rbp]
	inc	eax
	mov	DWORD PTR column_n$1[rbp], eax
$LN4@DebugNodeC:
	mov	rax, QWORD PTR columns$[rbp]
	mov	eax, DWORD PTR [rax+96]
	cmp	DWORD PTR column_n$1[rbp], eax
	jge	$LN3@DebugNodeC
; Line 11348
	mov	rax, QWORD PTR columns$[rbp]
	add	rax, 96					; 00000060H
	mov	QWORD PTR tv131[rbp], rax
	mov	edx, DWORD PTR column_n$1[rbp]
	mov	rcx, QWORD PTR tv131[rbp]
	call	??A?$ImVector@UImGuiOldColumnData@@@@QEAAAEAUImGuiOldColumnData@@H@Z ; ImVector<ImGuiOldColumnData>::operator[]
	movss	xmm1, DWORD PTR [rax]
	mov	rcx, QWORD PTR columns$[rbp]
	call	?GetColumnOffsetFromNorm@ImGui@@YAMPEBUImGuiOldColumns@@M@Z ; ImGui::GetColumnOffsetFromNorm
	cvtss2sd xmm0, xmm0
	movsd	QWORD PTR tv151[rbp], xmm0
	mov	rax, QWORD PTR columns$[rbp]
	add	rax, 96					; 00000060H
	mov	QWORD PTR tv142[rbp], rax
	mov	edx, DWORD PTR column_n$1[rbp]
	mov	rcx, QWORD PTR tv142[rbp]
	call	??A?$ImVector@UImGuiOldColumnData@@@@QEAAAEAUImGuiOldColumnData@@H@Z ; ImVector<ImGuiOldColumnData>::operator[]
	cvtss2sd xmm0, DWORD PTR [rax]
	movsd	QWORD PTR tv149[rbp], xmm0
	movsd	xmm3, QWORD PTR tv151[rbp]
	movq	r9, xmm3
	movsd	xmm2, QWORD PTR tv149[rbp]
	movq	r8, xmm2
	mov	edx, DWORD PTR column_n$1[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0CJ@CPAFBJNN@Column?5?$CF02d?3?5OffsetNorm?5?$CF?43f?5?$CI?$DN@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
	jmp	$LN2@DebugNodeC
$LN3@DebugNodeC:
; Line 11349
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN1@DebugNodeC:
; Line 11350
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?DebugNodeColumns@ImGui@@YAXPEAUImGuiOldColumns@@@Z ENDP ; ImGui::DebugNodeColumns
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ShowFontAtlas@ImGui@@YAXPEAUImFontAtlas@@@Z
_TEXT	SEGMENT
i$5 = 4
font$6 = 40
tint_col$7 = 72
border_col$8 = 120
$T9 = 356
$T10 = 388
$T11 = 420
tv157 = 440
tv73 = 440
tv155 = 448
tv153 = 456
tv151 = 464
__$ArrayPad$ = 472
atlas$ = 512
?ShowFontAtlas@ImGui@@YAXPEAUImFontAtlas@@@Z PROC	; ImGui::ShowFontAtlas, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 11324
$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 536				; 00000218H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+568]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 11325
	mov	DWORD PTR i$5[rbp], 0
	jmp	SHORT $LN4@ShowFontAt
$LN2@ShowFontAt:
	mov	eax, DWORD PTR i$5[rbp]
	inc	eax
	mov	DWORD PTR i$5[rbp], eax
$LN4@ShowFontAt:
	mov	rax, QWORD PTR atlas$[rbp]
	mov	eax, DWORD PTR [rax+72]
	cmp	DWORD PTR i$5[rbp], eax
	jge	SHORT $LN3@ShowFontAt
; Line 11327
	mov	rax, QWORD PTR atlas$[rbp]
	add	rax, 72					; 00000048H
	mov	QWORD PTR tv73[rbp], rax
	mov	edx, DWORD PTR i$5[rbp]
	mov	rcx, QWORD PTR tv73[rbp]
	call	??A?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@H@Z ; ImVector<ImFont *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR font$6[rbp], rax
; Line 11328
	mov	rcx, QWORD PTR font$6[rbp]
	call	?PushID@ImGui@@YAXPEBX@Z		; ImGui::PushID
; Line 11329
	mov	rcx, QWORD PTR font$6[rbp]
	call	?DebugNodeFont@ImGui@@YAXPEAUImFont@@@Z	; ImGui::DebugNodeFont
; Line 11330
	call	?PopID@ImGui@@YAXXZ			; ImGui::PopID
; Line 11331
	jmp	SHORT $LN2@ShowFontAt
$LN3@ShowFontAt:
; Line 11332
	mov	rax, QWORD PTR atlas$[rbp]
	mov	r9d, DWORD PTR [rax+52]
	mov	rax, QWORD PTR atlas$[rbp]
	mov	r8d, DWORD PTR [rax+48]
	lea	rdx, OFFSET FLAT:??_C@_0BN@JPEJHLJM@Atlas?5texture?5?$CI?$CFdx?$CFd?5pixels?$CJ@
	lea	rcx, OFFSET FLAT:??_C@_0O@KCJLBEBN@Atlas?5texture@
	call	?TreeNode@ImGui@@YA_NPEBD0ZZ		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	je	$LN5@ShowFontAt
; Line 11334
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR tint_col$7[rbp]
	call	??0ImVec4@@QEAA@MMMM@Z			; ImVec4::ImVec4
; Line 11335
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR border_col$8[rbp]
	call	??0ImVec4@@QEAA@MMMM@Z			; ImVec4::ImVec4
; Line 11336
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T9[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv157[rbp], rax
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T10[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv155[rbp], rax
	mov	rax, QWORD PTR atlas$[rbp]
	cvtsi2ss xmm0, DWORD PTR [rax+52]
	mov	rax, QWORD PTR atlas$[rbp]
	cvtsi2ss xmm1, DWORD PTR [rax+48]
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR $T11[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv153[rbp], rax
	mov	rax, QWORD PTR atlas$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv151[rbp], rax
	lea	rax, QWORD PTR border_col$8[rbp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR tint_col$7[rbp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR tv157[rbp]
	mov	r8, QWORD PTR tv155[rbp]
	mov	rdx, QWORD PTR tv153[rbp]
	mov	rcx, QWORD PTR tv151[rbp]
	call	?Image@ImGui@@YAXPEAXAEBUImVec2@@11AEBUImVec4@@2@Z ; ImGui::Image
; Line 11337
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN5@ShowFontAt:
; Line 11339
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?ShowFontAtlas@ImGui@@YAXPEAUImFontAtlas@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+488]
	pop	rdi
	pop	rbp
	ret	0
?ShowFontAtlas@ImGui@@YAXPEAUImFontAtlas@@@Z ENDP	; ImGui::ShowFontAtlas
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DebugStartItemPicker@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
?DebugStartItemPicker@ImGui@@YAXXZ PROC			; ImGui::DebugStartItemPicker, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 2659
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+12548], 1
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?DebugStartItemPicker@ImGui@@YAXXZ ENDP			; ImGui::DebugStartItemPicker
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ErrorCheckEndFrameRecover@ImGui@@YAXP6AXPEAXPEBDZZ0@Z
_TEXT	SEGMENT
g$ = 8
window$1 = 40
tv258 = 248
tv251 = 248
tv222 = 248
tv207 = 248
tv192 = 248
tv167 = 248
tv157 = 248
tv143 = 248
tv133 = 248
tv85 = 248
tv190 = 256
tv188 = 264
log_callback$ = 304
user_data$ = 312
?ErrorCheckEndFrameRecover@ImGui@@YAXP6AXPEAXPEBDZZ0@Z PROC ; ImGui::ErrorCheckEndFrameRecover, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7250
$LN38:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7252
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
$LN2@ErrorCheck:
; Line 7253
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7136], 0
	jle	$LN3@ErrorCheck
$LN4@ErrorCheck:
; Line 7255
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+8176], 0
	je	$LN5@ErrorCheck
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+8176]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+7184]
	cmp	QWORD PTR [rax+392], rcx
	je	SHORT $LN20@ErrorCheck
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+8176]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+7184]
	cmp	QWORD PTR [rax+400], rcx
	jne	SHORT $LN5@ErrorCheck
$LN20@ErrorCheck:
; Line 7257
	cmp	QWORD PTR log_callback$[rbp], 0
	je	SHORT $LN21@ErrorCheck
	mov	rax, QWORD PTR log_callback$[rbp]
	mov	QWORD PTR tv85[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+8176]
	mov	rax, QWORD PTR [rax+392]
	mov	r8, QWORD PTR [rax]
	lea	rdx, OFFSET FLAT:??_C@_0CK@MCEMIAFO@Recovered?5from?5missing?5EndTable@
	mov	rcx, QWORD PTR user_data$[rbp]
	call	QWORD PTR tv85[rbp]
$LN21@ErrorCheck:
; Line 7258
	call	?EndTable@ImGui@@YAXXZ			; ImGui::EndTable
; Line 7259
	jmp	$LN4@ErrorCheck
$LN5@ErrorCheck:
; Line 7260
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$1[rbp], rax
; Line 7261
	cmp	QWORD PTR window$1[rbp], 0
	jne	SHORT $LN35@ErrorCheck
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckEndFrameRecover@ImGui@@YAXP6AXPEAXPEBDZZ0@Z@4JA
	add	eax, 11
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BI@JFIKNFKH@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN35@ErrorCheck:
$LN6@ErrorCheck:
; Line 7262
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+8280], 0
	je	SHORT $LN7@ErrorCheck
; Line 7264
	cmp	QWORD PTR log_callback$[rbp], 0
	je	SHORT $LN22@ErrorCheck
	mov	rax, QWORD PTR log_callback$[rbp]
	mov	QWORD PTR tv133[rbp], rax
	mov	rax, QWORD PTR window$1[rbp]
	mov	r8, QWORD PTR [rax]
	lea	rdx, OFFSET FLAT:??_C@_0CL@PFJDIEBE@Recovered?5from?5missing?5EndTabBa@
	mov	rcx, QWORD PTR user_data$[rbp]
	call	QWORD PTR tv133[rbp]
$LN22@ErrorCheck:
; Line 7265
	call	?EndTabBar@ImGui@@YAXXZ			; ImGui::EndTabBar
; Line 7266
	jmp	SHORT $LN6@ErrorCheck
$LN7@ErrorCheck:
$LN8@ErrorCheck:
; Line 7267
	mov	rax, QWORD PTR window$1[rbp]
	cmp	DWORD PTR [rax+392], 0
	jle	SHORT $LN9@ErrorCheck
; Line 7269
	cmp	QWORD PTR log_callback$[rbp], 0
	je	SHORT $LN23@ErrorCheck
	mov	rax, QWORD PTR log_callback$[rbp]
	mov	QWORD PTR tv143[rbp], rax
	mov	rax, QWORD PTR window$1[rbp]
	mov	r8, QWORD PTR [rax]
	lea	rdx, OFFSET FLAT:??_C@_0CJ@OIELACHL@Recovered?5from?5missing?5TreePop?$CI@
	mov	rcx, QWORD PTR user_data$[rbp]
	call	QWORD PTR tv143[rbp]
$LN23@ErrorCheck:
; Line 7270
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
; Line 7271
	jmp	SHORT $LN8@ErrorCheck
$LN9@ErrorCheck:
$LN10@ErrorCheck:
; Line 7272
	mov	rax, QWORD PTR window$1[rbp]
	movsx	eax, WORD PTR [rax+506]
	mov	rcx, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rcx+7560], eax
	jle	SHORT $LN11@ErrorCheck
; Line 7274
	cmp	QWORD PTR log_callback$[rbp], 0
	je	SHORT $LN24@ErrorCheck
	mov	rax, QWORD PTR log_callback$[rbp]
	mov	QWORD PTR tv157[rbp], rax
	mov	rax, QWORD PTR window$1[rbp]
	mov	r8, QWORD PTR [rax]
	lea	rdx, OFFSET FLAT:??_C@_0CK@EIGPLJIB@Recovered?5from?5missing?5EndGroup@
	mov	rcx, QWORD PTR user_data$[rbp]
	call	QWORD PTR tv157[rbp]
$LN24@ErrorCheck:
; Line 7275
	call	?EndGroup@ImGui@@YAXXZ			; ImGui::EndGroup
; Line 7276
	jmp	SHORT $LN10@ErrorCheck
$LN11@ErrorCheck:
$LN12@ErrorCheck:
; Line 7277
	mov	rax, QWORD PTR window$1[rbp]
	cmp	DWORD PTR [rax+200], 1
	jle	SHORT $LN13@ErrorCheck
; Line 7279
	cmp	QWORD PTR log_callback$[rbp], 0
	je	SHORT $LN25@ErrorCheck
	mov	rax, QWORD PTR log_callback$[rbp]
	mov	QWORD PTR tv167[rbp], rax
	mov	rax, QWORD PTR window$1[rbp]
	mov	r8, QWORD PTR [rax]
	lea	rdx, OFFSET FLAT:??_C@_0CH@CBEJECIE@Recovered?5from?5missing?5PopID?$CI?$CJ?5@
	mov	rcx, QWORD PTR user_data$[rbp]
	call	QWORD PTR tv167[rbp]
$LN25@ErrorCheck:
; Line 7280
	call	?PopID@ImGui@@YAXXZ			; ImGui::PopID
; Line 7281
	jmp	SHORT $LN12@ErrorCheck
$LN13@ErrorCheck:
$LN14@ErrorCheck:
; Line 7282
	mov	rax, QWORD PTR window$1[rbp]
	movsx	eax, WORD PTR [rax+498]
	mov	rcx, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rcx+7480], eax
	jle	SHORT $LN15@ErrorCheck
; Line 7284
	cmp	QWORD PTR log_callback$[rbp], 0
	je	SHORT $LN26@ErrorCheck
	mov	rax, QWORD PTR log_callback$[rbp]
	mov	QWORD PTR tv192[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7480				; 00001d38H
	mov	rcx, rax
	call	?back@?$ImVector@UImGuiColorMod@@@@QEAAAEAUImGuiColorMod@@XZ ; ImVector<ImGuiColorMod>::back
	mov	ecx, DWORD PTR [rax]
	call	?GetStyleColorName@ImGui@@YAPEBDH@Z	; ImGui::GetStyleColorName
	mov	QWORD PTR tv190[rbp], rax
	mov	rax, QWORD PTR window$1[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv188[rbp], rax
	mov	r9, QWORD PTR tv190[rbp]
	mov	r8, QWORD PTR tv188[rbp]
	lea	rdx, OFFSET FLAT:??_C@_0DP@GKCPPFKN@Recovered?5from?5missing?5PopStyle@
	mov	rcx, QWORD PTR user_data$[rbp]
	call	QWORD PTR tv192[rbp]
$LN26@ErrorCheck:
; Line 7285
	mov	ecx, 1
	call	?PopStyleColor@ImGui@@YAXH@Z		; ImGui::PopStyleColor
; Line 7286
	jmp	$LN14@ErrorCheck
$LN15@ErrorCheck:
$LN16@ErrorCheck:
; Line 7287
	mov	rax, QWORD PTR window$1[rbp]
	movsx	eax, WORD PTR [rax+500]
	mov	rcx, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rcx+7496], eax
	jle	SHORT $LN17@ErrorCheck
; Line 7289
	cmp	QWORD PTR log_callback$[rbp], 0
	je	SHORT $LN27@ErrorCheck
	mov	rax, QWORD PTR log_callback$[rbp]
	mov	QWORD PTR tv207[rbp], rax
	mov	rax, QWORD PTR window$1[rbp]
	mov	r8, QWORD PTR [rax]
	lea	rdx, OFFSET FLAT:??_C@_0CN@EFPNNJDL@Recovered?5from?5missing?5PopStyle@
	mov	rcx, QWORD PTR user_data$[rbp]
	call	QWORD PTR tv207[rbp]
$LN27@ErrorCheck:
; Line 7290
	mov	ecx, 1
	call	?PopStyleVar@ImGui@@YAXH@Z		; ImGui::PopStyleVar
; Line 7291
	jmp	SHORT $LN16@ErrorCheck
$LN17@ErrorCheck:
$LN18@ErrorCheck:
; Line 7292
	mov	rax, QWORD PTR window$1[rbp]
	movsx	eax, WORD PTR [rax+504]
	mov	rcx, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rcx+7528], eax
	jle	SHORT $LN19@ErrorCheck
; Line 7294
	cmp	QWORD PTR log_callback$[rbp], 0
	je	SHORT $LN28@ErrorCheck
	mov	rax, QWORD PTR log_callback$[rbp]
	mov	QWORD PTR tv222[rbp], rax
	mov	rax, QWORD PTR window$1[rbp]
	mov	r8, QWORD PTR [rax]
	lea	rdx, OFFSET FLAT:??_C@_0CP@NEGGJCEB@Recovered?5from?5missing?5PopFocus@
	mov	rcx, QWORD PTR user_data$[rbp]
	call	QWORD PTR tv222[rbp]
$LN28@ErrorCheck:
; Line 7295
	call	?PopFocusScope@ImGui@@YAXXZ		; ImGui::PopFocusScope
; Line 7296
	jmp	SHORT $LN18@ErrorCheck
$LN19@ErrorCheck:
; Line 7297
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7136], 1
	jne	SHORT $LN29@ErrorCheck
; Line 7299
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	movzx	eax, BYTE PTR [rax+150]
	test	eax, eax
	jne	SHORT $LN36@ErrorCheck
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckEndFrameRecover@ImGui@@YAXP6AXPEAXPEBDZZ0@Z@4JA
	add	eax, 49					; 00000031H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EE@JEPGGIKH@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN36@ErrorCheck:
; Line 7300
	jmp	$LN3@ErrorCheck
$LN29@ErrorCheck:
; Line 7302
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	cmp	QWORD PTR window$1[rbp], rax
	je	SHORT $LN37@ErrorCheck
	mov	eax, DWORD PTR ?__LINE__Var@?0??ErrorCheckEndFrameRecover@ImGui@@YAXP6AXPEAXPEBDZZ0@Z@4JA
	add	eax, 52					; 00000034H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DE@IPHBHHKI@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAg?$AA?4?$AAC?$AAu?$AAr@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN37@ErrorCheck:
; Line 7303
	mov	rax, QWORD PTR window$1[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN30@ErrorCheck
; Line 7305
	cmp	QWORD PTR log_callback$[rbp], 0
	je	SHORT $LN32@ErrorCheck
	mov	rax, QWORD PTR log_callback$[rbp]
	mov	QWORD PTR tv251[rbp], rax
	mov	rax, QWORD PTR window$1[rbp]
	mov	r8, QWORD PTR [rax]
	lea	rdx, OFFSET FLAT:??_C@_0CL@PKEBJEJO@Recovered?5from?5missing?5EndChild@
	mov	rcx, QWORD PTR user_data$[rbp]
	call	QWORD PTR tv251[rbp]
$LN32@ErrorCheck:
; Line 7306
	call	?EndChild@ImGui@@YAXXZ			; ImGui::EndChild
; Line 7307
	jmp	SHORT $LN31@ErrorCheck
$LN30@ErrorCheck:
; Line 7310
	cmp	QWORD PTR log_callback$[rbp], 0
	je	SHORT $LN33@ErrorCheck
	mov	rax, QWORD PTR log_callback$[rbp]
	mov	QWORD PTR tv258[rbp], rax
	mov	rax, QWORD PTR window$1[rbp]
	mov	r8, QWORD PTR [rax]
	lea	rdx, OFFSET FLAT:??_C@_0CG@PCFKFCHL@Recovered?5from?5missing?5End?$CI?$CJ?5fo@
	mov	rcx, QWORD PTR user_data$[rbp]
	call	QWORD PTR tv258[rbp]
$LN33@ErrorCheck:
; Line 7311
	call	?End@ImGui@@YAXXZ			; ImGui::End
$LN31@ErrorCheck:
; Line 7313
	jmp	$LN2@ErrorCheck
$LN3@ErrorCheck:
; Line 7314
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
?ErrorCheckEndFrameRecover@ImGui@@YAXP6AXPEAXPEBDZZ0@Z ENDP ; ImGui::ErrorCheckEndFrameRecover
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GcAwakeTransientWindowBuffers@ImGui@@YAXPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
tv78 = 192
tv71 = 192
window$ = 240
?GcAwakeTransientWindowBuffers@ImGui@@YAXPEAUImGuiWindow@@@Z PROC ; ImGui::GcAwakeTransientWindowBuffers, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3046
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3049
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+984], 0
; Line 3050
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	add	rax, 16
	mov	QWORD PTR tv71[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	edx, DWORD PTR [rax+976]
	mov	rcx, QWORD PTR tv71[rbp]
	call	?reserve@?$ImVector@G@@QEAAXH@Z		; ImVector<unsigned short>::reserve
; Line 3051
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	add	rax, 32					; 00000020H
	mov	QWORD PTR tv78[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	edx, DWORD PTR [rax+980]
	mov	rcx, QWORD PTR tv78[rbp]
	call	?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z ; ImVector<ImDrawVert>::reserve
; Line 3052
	mov	rax, QWORD PTR window$[rbp]
	mov	DWORD PTR [rax+980], 0
	mov	rax, QWORD PTR window$[rbp]
	mov	DWORD PTR [rax+976], 0
; Line 3053
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?GcAwakeTransientWindowBuffers@ImGui@@YAXPEAUImGuiWindow@@@Z ENDP ; ImGui::GcAwakeTransientWindowBuffers
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GcCompactTransientWindowBuffers@ImGui@@YAXPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
window$ = 224
?GcCompactTransientWindowBuffers@ImGui@@YAXPEAUImGuiWindow@@@Z PROC ; ImGui::GcCompactTransientWindowBuffers, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3034
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3035
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+984], 1
; Line 3036
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	rcx, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+20]
	mov	DWORD PTR [rcx+976], eax
; Line 3037
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	rcx, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR [rcx+980], eax
; Line 3038
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 200				; 000000c8H
	mov	rcx, rax
	call	?clear@?$ImVector@I@@QEAAXXZ		; ImVector<unsigned int>::clear
; Line 3039
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR [rax+688]
	call	?_ClearFreeMemory@ImDrawList@@QEAAXXZ	; ImDrawList::_ClearFreeMemory
; Line 3040
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 400				; 00000190H
	mov	rcx, rax
	call	?clear@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ ; ImVector<ImGuiWindow *>::clear
; Line 3041
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 464				; 000001d0H
	mov	rcx, rax
	call	?clear@?$ImVector@M@@QEAAXXZ		; ImVector<float>::clear
; Line 3042
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 480				; 000001e0H
	mov	rcx, rax
	call	?clear@?$ImVector@M@@QEAAXXZ		; ImVector<float>::clear
; Line 3043
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GcCompactTransientWindowBuffers@ImGui@@YAXPEAUImGuiWindow@@@Z ENDP ; ImGui::GcCompactTransientWindowBuffers
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GcCompactTransientMiscBuffers@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
?GcCompactTransientMiscBuffers@ImGui@@YAXXZ PROC	; ImGui::GcCompactTransientMiscBuffers, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3022
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3023
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3024
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7544				; 00001d78H
	mov	rcx, rax
	call	?clear@?$ImVector@H@@QEAAXXZ		; ImVector<int>::clear
; Line 3025
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7560				; 00001d88H
	mov	rcx, rax
	call	?clear@?$ImVector@UImGuiGroupData@@@@QEAAXXZ ; ImVector<ImGuiGroupData>::clear
; Line 3026
	call	?TableGcCompactSettings@ImGui@@YAXXZ	; ImGui::TableGcCompactSettings
; Line 3027
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GcCompactTransientMiscBuffers@ImGui@@YAXXZ ENDP	; ImGui::GcCompactTransientMiscBuffers
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetWindowResizeBorderID@ImGui@@YAIPEAUImGuiWindow@@H@Z
_TEXT	SEGMENT
n$ = 4
id$ = 36
__$ArrayPad$ = 248
window$ = 288
dir$ = 296
?GetWindowResizeBorderID@ImGui@@YAIPEAUImGuiWindow@@H@Z PROC ; ImGui::GetWindowResizeBorderID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5371
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 18
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5372
	cmp	DWORD PTR dir$[rbp], 0
	jl	SHORT $LN3@GetWindowR
	cmp	DWORD PTR dir$[rbp], 4
	jl	SHORT $LN4@GetWindowR
$LN3@GetWindowR:
	mov	eax, DWORD PTR ?__LINE__Var@?0??GetWindowResizeBorderID@ImGui@@YAIPEAUImGuiWindow@@H@Z@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CI@OAHDFFF@?$AAd?$AAi?$AAr?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAd?$AAi?$AAr@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@GetWindowR:
; Line 5373
	mov	eax, DWORD PTR dir$[rbp]
	add	eax, 4
	mov	DWORD PTR n$[rbp], eax
; Line 5374
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+8]
	mov	DWORD PTR id$[rbp], eax
; Line 5375
	mov	r8d, DWORD PTR id$[rbp]
	xor	edx, edx
	lea	rcx, OFFSET FLAT:??_C@_07HDHBJEOI@?$CDRESIZE@
	call	?ImHashStr@@YAIPEBD_KI@Z		; ImHashStr
	mov	DWORD PTR id$[rbp], eax
; Line 5376
	mov	r8d, DWORD PTR id$[rbp]
	mov	edx, 4
	lea	rcx, QWORD PTR n$[rbp]
	call	?ImHashData@@YAIPEBX_KI@Z		; ImHashData
	mov	DWORD PTR id$[rbp], eax
; Line 5377
	mov	eax, DWORD PTR id$[rbp]
; Line 5378
	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?GetWindowResizeBorderID@ImGui@@YAIPEAUImGuiWindow@@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?GetWindowResizeBorderID@ImGui@@YAIPEAUImGuiWindow@@H@Z ENDP ; ImGui::GetWindowResizeBorderID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetWindowResizeCornerID@ImGui@@YAIPEAUImGuiWindow@@H@Z
_TEXT	SEGMENT
id$ = 4
window$ = 256
n$ = 264
?GetWindowResizeCornerID@ImGui@@YAIPEAUImGuiWindow@@H@Z PROC ; ImGui::GetWindowResizeCornerID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5361
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5362
	cmp	DWORD PTR n$[rbp], 0
	jl	SHORT $LN3@GetWindowR
	cmp	DWORD PTR n$[rbp], 4
	jl	SHORT $LN4@GetWindowR
$LN3@GetWindowR:
	mov	eax, DWORD PTR ?__LINE__Var@?0??GetWindowResizeCornerID@ImGui@@YAIPEAUImGuiWindow@@H@Z@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CA@EBHOHNJC@?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AA?5?$AA?$DM?$AA?5?$AA4@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@GetWindowR:
; Line 5363
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+8]
	mov	DWORD PTR id$[rbp], eax
; Line 5364
	mov	r8d, DWORD PTR id$[rbp]
	xor	edx, edx
	lea	rcx, OFFSET FLAT:??_C@_07HDHBJEOI@?$CDRESIZE@
	call	?ImHashStr@@YAIPEBD_KI@Z		; ImHashStr
	mov	DWORD PTR id$[rbp], eax
; Line 5365
	mov	r8d, DWORD PTR id$[rbp]
	mov	edx, 4
	lea	rcx, QWORD PTR n$[rbp]
	call	?ImHashData@@YAIPEBX_KI@Z		; ImHashData
	mov	DWORD PTR id$[rbp], eax
; Line 5366
	mov	eax, DWORD PTR id$[rbp]
; Line 5367
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetWindowResizeCornerID@ImGui@@YAIPEAUImGuiWindow@@H@Z ENDP ; ImGui::GetWindowResizeCornerID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FindRenderedTextEnd@ImGui@@YAPEBDPEBD0@Z
_TEXT	SEGMENT
text_display_end$ = 8
text$ = 256
text_end$ = 264
?FindRenderedTextEnd@ImGui@@YAPEBDPEBD0@Z PROC		; ImGui::FindRenderedTextEnd, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2660
$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2661
	mov	rax, QWORD PTR text$[rbp]
	mov	QWORD PTR text_display_end$[rbp], rax
; Line 2662
	cmp	QWORD PTR text_end$[rbp], 0
	jne	SHORT $LN4@FindRender
; Line 2663
	mov	QWORD PTR text_end$[rbp], -1
$LN4@FindRender:
$LN2@FindRender:
; Line 2665
	mov	rax, QWORD PTR text_end$[rbp]
	cmp	QWORD PTR text_display_end$[rbp], rax
	jae	SHORT $LN3@FindRender
	mov	rax, QWORD PTR text_display_end$[rbp]
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN3@FindRender
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR text_display_end$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 35					; 00000023H
	jne	SHORT $LN5@FindRender
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR text_display_end$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 35					; 00000023H
	je	SHORT $LN3@FindRender
$LN5@FindRender:
; Line 2666
	mov	rax, QWORD PTR text_display_end$[rbp]
	inc	rax
	mov	QWORD PTR text_display_end$[rbp], rax
	jmp	SHORT $LN2@FindRender
$LN3@FindRender:
; Line 2667
	mov	rax, QWORD PTR text_display_end$[rbp]
; Line 2668
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?FindRenderedTextEnd@ImGui@@YAPEBDPEBD0@Z ENDP		; ImGui::FindRenderedTextEnd
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RenderNavHighlight@ImGui@@YAXAEBUImRect@@IH@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
rounding$ = 68
display_rect$ = 104
THICKNESS$4 = 148
DISTANCE$5 = 180
fully_visible$6 = 212
$T7 = 436
$T8 = 468
$T9 = 500
$T10 = 532
$T11 = 564
tv80 = 580
tv195 = 584
tv174 = 584
tv139 = 584
tv130 = 584
tv193 = 592
tv172 = 592
tv170 = 600
tv168 = 608
__$ArrayPad$ = 616
bb$ = 656
id$ = 664
flags$ = 672
?RenderNavHighlight@ImGui@@YAXAEBUImRect@@IH@Z PROC	; ImGui::RenderNavHighlight, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2867
$LN12:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 688				; 000002b0H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 108				; 0000006cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+728]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2868
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 2869
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7632]
	cmp	DWORD PTR id$[rbp], eax
	je	SHORT $LN2@RenderNavH
; Line 2870
	jmp	$LN1@RenderNavH
$LN2@RenderNavH:
; Line 2871
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7710]
	test	eax, eax
	je	SHORT $LN3@RenderNavH
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@RenderNavH
; Line 2872
	jmp	$LN1@RenderNavH
$LN3@RenderNavH:
; Line 2873
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 2874
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+344]
	test	eax, eax
	je	SHORT $LN4@RenderNavH
; Line 2875
	jmp	$LN1@RenderNavH
$LN4@RenderNavH:
; Line 2877
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN10@RenderNavH
	xorps	xmm0, xmm0
	movss	DWORD PTR tv80[rbp], xmm0
	jmp	SHORT $LN11@RenderNavH
$LN10@RenderNavH:
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5536]
	movss	DWORD PTR tv80[rbp], xmm0
$LN11@RenderNavH:
	movss	xmm0, DWORD PTR tv80[rbp]
	movss	DWORD PTR rounding$[rbp], xmm0
; Line 2878
	lea	rax, QWORD PTR display_rect$[rbp]
	mov	rdi, rax
	mov	rsi, QWORD PTR bb$[rbp]
	mov	ecx, 16
	rep movsb
; Line 2879
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 592				; 00000250H
	mov	rdx, rax
	lea	rcx, QWORD PTR display_rect$[rbp]
	call	?ClipWith@ImRect@@QEAAXAEBU1@@Z		; ImRect::ClipWith
; Line 2880
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	$LN5@RenderNavH
; Line 2882
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR THICKNESS$4[rbp], xmm0
; Line 2883
	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR DISTANCE$5[rbp], xmm0
; Line 2884
	movss	xmm2, DWORD PTR __real@40800000
	movss	xmm1, DWORD PTR __real@40800000
	lea	rcx, QWORD PTR $T7[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rdx, rax
	lea	rcx, QWORD PTR display_rect$[rbp]
	call	?Expand@ImRect@@QEAAXAEBUImVec2@@@Z	; ImRect::Expand
; Line 2885
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 592				; 00000250H
	mov	QWORD PTR tv130[rbp], rax
	lea	rdx, QWORD PTR display_rect$[rbp]
	mov	rcx, QWORD PTR tv130[rbp]
	call	?Contains@ImRect@@QEBA_NAEBU1@@Z	; ImRect::Contains
	mov	BYTE PTR fully_visible$6[rbp], al
; Line 2886
	movzx	eax, BYTE PTR fully_visible$6[rbp]
	test	eax, eax
	jne	SHORT $LN6@RenderNavH
; Line 2887
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv139[rbp], rax
	xor	r9d, r9d
	mov	r8, QWORD PTR display_rect$[rbp+8]
	mov	rdx, QWORD PTR display_rect$[rbp]
	mov	rcx, QWORD PTR tv139[rbp]
	call	?PushClipRect@ImDrawList@@QEAAXUImVec2@@0_N@Z ; ImDrawList::PushClipRect
$LN6@RenderNavH:
; Line 2888
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv174[rbp], rax
	movss	xmm1, DWORD PTR __real@3f800000
	mov	ecx, 49					; 00000031H
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv172[rbp], eax
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T8[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r8, rax
	lea	rdx, QWORD PTR display_rect$[rbp+8]
	lea	rcx, QWORD PTR $T9[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv170[rbp], rax
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T10[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r8, rax
	lea	rdx, QWORD PTR display_rect$[rbp]
	lea	rcx, QWORD PTR $T11[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv168[rbp], rax
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	movss	xmm0, DWORD PTR rounding$[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR tv172[rbp]
	mov	r8, QWORD PTR tv170[rbp]
	mov	rdx, QWORD PTR tv168[rbp]
	mov	rcx, QWORD PTR tv174[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
; Line 2889
	movzx	eax, BYTE PTR fully_visible$6[rbp]
	test	eax, eax
	jne	SHORT $LN7@RenderNavH
; Line 2890
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR [rax+688]
	call	?PopClipRect@ImDrawList@@QEAAXXZ	; ImDrawList::PopClipRect
$LN7@RenderNavH:
$LN5@RenderNavH:
; Line 2892
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN8@RenderNavH
; Line 2894
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv195[rbp], rax
	movss	xmm1, DWORD PTR __real@3f800000
	mov	ecx, 49					; 00000031H
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv193[rbp], eax
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	movss	xmm0, DWORD PTR rounding$[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR tv193[rbp]
	lea	r8, QWORD PTR display_rect$[rbp+8]
	lea	rdx, QWORD PTR display_rect$[rbp]
	mov	rcx, QWORD PTR tv195[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
$LN8@RenderNavH:
$LN1@RenderNavH:
; Line 2896
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:?RenderNavHighlight@ImGui@@YAXAEBUImRect@@IH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+624]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?RenderNavHighlight@ImGui@@YAXAEBUImRect@@IH@Z ENDP	; ImGui::RenderNavHighlight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RenderFrameBorder@ImGui@@YAXUImVec2@@0M@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
border_size$ = 68
$T1 = 292
$T2 = 324
$T3 = 356
$T4 = 388
tv149 = 408
tv134 = 408
tv147 = 416
tv132 = 416
tv130 = 424
tv128 = 432
p_min$ = 480
p_max$ = 488
rounding$ = 496
?RenderFrameBorder@ImGui@@YAXUImVec2@@0M@Z PROC		; ImGui::RenderFrameBorder, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2855
$LN4:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 520				; 00000208H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2856
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 2857
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 2858
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5540]
	movss	DWORD PTR border_size$[rbp], xmm0
; Line 2859
	movss	xmm0, DWORD PTR border_size$[rbp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	$LN2@RenderFram
; Line 2861
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv134[rbp], rax
	movss	xmm1, DWORD PTR __real@3f800000
	mov	ecx, 6
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv132[rbp], eax
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r8, rax
	lea	rdx, QWORD PTR p_max$[rbp]
	lea	rcx, QWORD PTR $T2[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv130[rbp], rax
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T3[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r8, rax
	lea	rdx, QWORD PTR p_min$[rbp]
	lea	rcx, QWORD PTR $T4[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv128[rbp], rax
	movss	xmm0, DWORD PTR border_size$[rbp]
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	movss	xmm0, DWORD PTR rounding$[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR tv132[rbp]
	mov	r8, QWORD PTR tv130[rbp]
	mov	rdx, QWORD PTR tv128[rbp]
	mov	rcx, QWORD PTR tv134[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
; Line 2862
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv149[rbp], rax
	movss	xmm1, DWORD PTR __real@3f800000
	mov	ecx, 5
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv147[rbp], eax
	movss	xmm0, DWORD PTR border_size$[rbp]
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	movss	xmm0, DWORD PTR rounding$[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR tv147[rbp]
	lea	r8, QWORD PTR p_max$[rbp]
	lea	rdx, QWORD PTR p_min$[rbp]
	mov	rcx, QWORD PTR tv149[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
$LN2@RenderFram:
; Line 2864
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
?RenderFrameBorder@ImGui@@YAXUImVec2@@0M@Z ENDP		; ImGui::RenderFrameBorder
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RenderFrame@ImGui@@YAXUImVec2@@0I_NM@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
border_size$ = 68
$T1 = 292
$T2 = 324
$T3 = 356
$T4 = 388
tv160 = 408
tv145 = 408
tv73 = 408
tv158 = 416
tv143 = 416
tv141 = 424
tv139 = 432
p_min$ = 480
p_max$ = 488
fill_col$ = 496
border$ = 504
rounding$ = 512
?RenderFrame@ImGui@@YAXUImVec2@@0I_NM@Z PROC		; ImGui::RenderFrame, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2842
$LN4:
	mov	BYTE PTR [rsp+32], r9b
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 520				; 00000208H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2843
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 2844
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 2845
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv73[rbp], rax
	mov	DWORD PTR [rsp+40], 0
	movss	xmm0, DWORD PTR rounding$[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR fill_col$[rbp]
	lea	r8, QWORD PTR p_max$[rbp]
	lea	rdx, QWORD PTR p_min$[rbp]
	mov	rcx, QWORD PTR tv73[rbp]
	call	?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z ; ImDrawList::AddRectFilled
; Line 2846
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5540]
	movss	DWORD PTR border_size$[rbp], xmm0
; Line 2847
	movzx	eax, BYTE PTR border$[rbp]
	test	eax, eax
	je	$LN2@RenderFram
	movss	xmm0, DWORD PTR border_size$[rbp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	$LN2@RenderFram
; Line 2849
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv145[rbp], rax
	movss	xmm1, DWORD PTR __real@3f800000
	mov	ecx, 6
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv143[rbp], eax
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r8, rax
	lea	rdx, QWORD PTR p_max$[rbp]
	lea	rcx, QWORD PTR $T2[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv141[rbp], rax
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T3[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r8, rax
	lea	rdx, QWORD PTR p_min$[rbp]
	lea	rcx, QWORD PTR $T4[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv139[rbp], rax
	movss	xmm0, DWORD PTR border_size$[rbp]
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	movss	xmm0, DWORD PTR rounding$[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR tv143[rbp]
	mov	r8, QWORD PTR tv141[rbp]
	mov	rdx, QWORD PTR tv139[rbp]
	mov	rcx, QWORD PTR tv145[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
; Line 2850
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv160[rbp], rax
	movss	xmm1, DWORD PTR __real@3f800000
	mov	ecx, 5
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv158[rbp], eax
	movss	xmm0, DWORD PTR border_size$[rbp]
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	movss	xmm0, DWORD PTR rounding$[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR tv158[rbp]
	lea	r8, QWORD PTR p_max$[rbp]
	lea	rdx, QWORD PTR p_min$[rbp]
	mov	rcx, QWORD PTR tv160[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
$LN2@RenderFram:
; Line 2852
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
?RenderFrame@ImGui@@YAXUImVec2@@0I_NM@Z ENDP		; ImGui::RenderFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RenderTextEllipsis@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1MMPEBD2PEBU3@@Z
_TEXT	SEGMENT
g$ = 8
text_size$ = 40
font$5 = 72
font_size$6 = 100
text_end_ellipsis$7 = 136
ellipsis_char$8 = 164
ellipsis_char_count$9 = 196
glyph$10 = 232
ellipsis_glyph_width$11 = 260
ellipsis_total_width$12 = 292
spacing_between_dots$13 = 324
text_avail_width$14 = 356
text_size_clipped_x$15 = 388
ellipsis_x$16 = 420
i$17 = 452
$T18 = 872
$T19 = 900
$T20 = 932
$T21 = 964
$T22 = 996
$T23 = 1028
$T24 = 1060
$T25 = 1092
$T26 = 1124
$T27 = 1160
$T28 = 1188
$T29 = 1220
tv273 = 1236
tv295 = 1240
tv218 = 1240
tv76 = 1240
tv293 = 1248
tv216 = 1248
tv214 = 1256
__$ArrayPad$ = 1264
draw_list$ = 1312
pos_min$ = 1320
pos_max$ = 1328
clip_max_x$ = 1336
ellipsis_max_x$ = 1344
text$ = 1352
text_end_full$ = 1360
text_size_if_known$ = 1368
?RenderTextEllipsis@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1MMPEBD2PEBU3@@Z PROC ; ImGui::RenderTextEllipsis, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2764
$LN18:
	movss	DWORD PTR [rsp+32], xmm3
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1352				; 00000548H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 226				; 000000e2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1384]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2765
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 2766
	cmp	QWORD PTR text_end_full$[rbp], 0
	jne	SHORT $LN7@RenderText
; Line 2767
	xor	edx, edx
	mov	rcx, QWORD PTR text$[rbp]
	call	?FindRenderedTextEnd@ImGui@@YAPEBDPEBD0@Z ; ImGui::FindRenderedTextEnd
	mov	QWORD PTR text_end_full$[rbp], rax
$LN7@RenderText:
; Line 2768
	cmp	QWORD PTR text_size_if_known$[rbp], 0
	je	SHORT $LN16@RenderText
	mov	rax, QWORD PTR text_size_if_known$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T19[rbp], rax
	lea	rax, QWORD PTR $T19[rbp]
	mov	QWORD PTR tv76[rbp], rax
	jmp	SHORT $LN17@RenderText
$LN16@RenderText:
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	xor	r9d, r9d
	mov	r8, QWORD PTR text_end_full$[rbp]
	mov	rdx, QWORD PTR text$[rbp]
	lea	rcx, QWORD PTR $T20[rbp]
	call	?CalcTextSize@ImGui@@YA?AUImVec2@@PEBD0_NM@Z ; ImGui::CalcTextSize
	mov	QWORD PTR tv76[rbp], rax
$LN17@RenderText:
	mov	rax, QWORD PTR tv76[rbp]
	mov	QWORD PTR $T18[rbp], rax
	mov	rax, QWORD PTR $T18[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR text_size$[rbp], rax
; Line 2774
	mov	rax, QWORD PTR pos_max$[rbp]
	mov	rcx, QWORD PTR pos_min$[rbp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR [rcx]
	movss	xmm1, DWORD PTR text_size$[rbp]
	comiss	xmm1, xmm0
	jbe	$LN8@RenderText
; Line 2781
	mov	rax, QWORD PTR draw_list$[rbp]
	mov	rax, QWORD PTR [rax+56]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR font$5[rbp], rax
; Line 2782
	mov	rax, QWORD PTR draw_list$[rbp]
	mov	rax, QWORD PTR [rax+56]
	movss	xmm0, DWORD PTR [rax+16]
	movss	DWORD PTR font_size$6[rbp], xmm0
; Line 2783
	mov	QWORD PTR text_end_ellipsis$7[rbp], 0
; Line 2785
	mov	rax, QWORD PTR font$5[rbp]
	movzx	eax, WORD PTR [rax+84]
	mov	WORD PTR ellipsis_char$8[rbp], ax
; Line 2786
	mov	DWORD PTR ellipsis_char_count$9[rbp], 1
; Line 2787
	movzx	eax, WORD PTR ellipsis_char$8[rbp]
	cmp	eax, 65535				; 0000ffffH
	jne	SHORT $LN10@RenderText
; Line 2789
	mov	rax, QWORD PTR font$5[rbp]
	movzx	eax, WORD PTR [rax+86]
	mov	WORD PTR ellipsis_char$8[rbp], ax
; Line 2790
	mov	DWORD PTR ellipsis_char_count$9[rbp], 3
$LN10@RenderText:
; Line 2792
	movzx	edx, WORD PTR ellipsis_char$8[rbp]
	mov	rcx, QWORD PTR font$5[rbp]
	call	?FindGlyph@ImFont@@QEBAPEBUImFontGlyph@@G@Z ; ImFont::FindGlyph
	mov	QWORD PTR glyph$10[rbp], rax
; Line 2794
	mov	rax, QWORD PTR glyph$10[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	movss	DWORD PTR ellipsis_glyph_width$11[rbp], xmm0
; Line 2795
	movss	xmm0, DWORD PTR ellipsis_glyph_width$11[rbp]
	movss	DWORD PTR ellipsis_total_width$12[rbp], xmm0
; Line 2797
	cmp	DWORD PTR ellipsis_char_count$9[rbp], 1
	jle	SHORT $LN11@RenderText
; Line 2800
	mov	rax, QWORD PTR draw_list$[rbp]
	mov	rax, QWORD PTR [rax+56]
	mov	rcx, QWORD PTR font$5[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	divss	xmm0, DWORD PTR [rcx+20]
	movss	xmm1, DWORD PTR __real@3f800000
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR spacing_between_dots$13[rbp], xmm0
; Line 2801
	mov	rax, QWORD PTR glyph$10[rbp]
	mov	rcx, QWORD PTR glyph$10[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	subss	xmm0, DWORD PTR [rcx+8]
	addss	xmm0, DWORD PTR spacing_between_dots$13[rbp]
	movss	DWORD PTR ellipsis_glyph_width$11[rbp], xmm0
; Line 2802
	cvtsi2ss xmm0, DWORD PTR ellipsis_char_count$9[rbp]
	movss	xmm1, DWORD PTR ellipsis_glyph_width$11[rbp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	subss	xmm0, DWORD PTR spacing_between_dots$13[rbp]
	movss	DWORD PTR ellipsis_total_width$12[rbp], xmm0
$LN11@RenderText:
; Line 2806
	movss	xmm1, DWORD PTR ellipsis_max_x$[rbp]
	mov	rax, QWORD PTR pos_max$[rbp]
	movss	xmm0, DWORD PTR [rax]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	subss	xmm0, DWORD PTR ellipsis_total_width$12[rbp]
	mov	rax, QWORD PTR pos_min$[rbp]
	subss	xmm0, DWORD PTR [rax]
	movss	xmm1, DWORD PTR __real@3f800000
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR text_avail_width$14[rbp], xmm0
; Line 2807
	lea	rax, QWORD PTR text_end_ellipsis$7[rbp]
	mov	QWORD PTR [rsp+56], rax
	mov	rax, QWORD PTR text_end_full$[rbp]
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR text$[rbp]
	mov	QWORD PTR [rsp+40], rax
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR text_avail_width$14[rbp]
	movss	xmm2, DWORD PTR font_size$6[rbp]
	lea	rdx, QWORD PTR $T21[rbp]
	mov	rcx, QWORD PTR font$5[rbp]
	call	?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z ; ImFont::CalcTextSizeA
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR text_size_clipped_x$15[rbp], xmm0
; Line 2808
	mov	rax, QWORD PTR text_end_ellipsis$7[rbp]
	cmp	QWORD PTR text$[rbp], rax
	jne	$LN12@RenderText
	mov	rax, QWORD PTR text_end_full$[rbp]
	cmp	QWORD PTR text_end_ellipsis$7[rbp], rax
	jae	SHORT $LN12@RenderText
; Line 2811
	mov	rdx, QWORD PTR text_end_full$[rbp]
	mov	rcx, QWORD PTR text$[rbp]
	call	?ImTextCountUtf8BytesFromChar@@YAHPEBD0@Z ; ImTextCountUtf8BytesFromChar
	cdqe
	mov	rcx, QWORD PTR text$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR text_end_ellipsis$7[rbp], rax
; Line 2812
	mov	QWORD PTR [rsp+56], 0
	mov	rax, QWORD PTR text_end_ellipsis$7[rbp]
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR text$[rbp]
	mov	QWORD PTR [rsp+40], rax
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@7f7fffff
	movss	xmm2, DWORD PTR font_size$6[rbp]
	lea	rdx, QWORD PTR $T22[rbp]
	mov	rcx, QWORD PTR font$5[rbp]
	call	?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z ; ImFont::CalcTextSizeA
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR text_size_clipped_x$15[rbp], xmm0
$LN12@RenderText:
$LN2@RenderText:
; Line 2814
	mov	rax, QWORD PTR text$[rbp]
	cmp	QWORD PTR text_end_ellipsis$7[rbp], rax
	jbe	$LN3@RenderText
	mov	eax, 1
	imul	rax, rax, -1
	mov	rcx, QWORD PTR text_end_ellipsis$7[rbp]
	movzx	ecx, BYTE PTR [rcx+rax]
	call	?ImCharIsBlankA@@YA_ND@Z		; ImCharIsBlankA
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@RenderText
; Line 2817
	mov	rax, QWORD PTR text_end_ellipsis$7[rbp]
	dec	rax
	mov	QWORD PTR text_end_ellipsis$7[rbp], rax
; Line 2818
	mov	rax, QWORD PTR text_end_ellipsis$7[rbp]
	inc	rax
	mov	QWORD PTR [rsp+56], 0
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR text_end_ellipsis$7[rbp]
	mov	QWORD PTR [rsp+40], rax
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@7f7fffff
	movss	xmm2, DWORD PTR font_size$6[rbp]
	lea	rdx, QWORD PTR $T23[rbp]
	mov	rcx, QWORD PTR font$5[rbp]
	call	?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z ; ImFont::CalcTextSizeA
	movss	xmm0, DWORD PTR text_size_clipped_x$15[rbp]
	subss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR text_size_clipped_x$15[rbp], xmm0
; Line 2819
	jmp	$LN2@RenderText
$LN3@RenderText:
; Line 2822
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T24[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv218[rbp], rax
	mov	rax, QWORD PTR text_end_ellipsis$7[rbp]
	mov	QWORD PTR tv216[rbp], rax
	mov	rax, QWORD PTR pos_max$[rbp]
	movss	xmm2, DWORD PTR [rax+4]
	movss	xmm1, DWORD PTR clip_max_x$[rbp]
	lea	rcx, QWORD PTR $T25[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv214[rbp], rax
	mov	QWORD PTR [rsp+56], 0
	mov	rax, QWORD PTR tv218[rbp]
	mov	QWORD PTR [rsp+48], rax
	lea	rax, QWORD PTR text_size$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR tv216[rbp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR text$[rbp]
	mov	r8, QWORD PTR tv214[rbp]
	mov	rdx, QWORD PTR pos_min$[rbp]
	mov	rcx, QWORD PTR draw_list$[rbp]
	call	?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z ; ImGui::RenderTextClippedEx
; Line 2823
	mov	rax, QWORD PTR pos_min$[rbp]
	movss	xmm0, DWORD PTR [rax]
	addss	xmm0, DWORD PTR text_size_clipped_x$15[rbp]
	movss	DWORD PTR ellipsis_x$16[rbp], xmm0
; Line 2824
	movss	xmm0, DWORD PTR ellipsis_x$16[rbp]
	addss	xmm0, DWORD PTR ellipsis_total_width$12[rbp]
	movss	xmm1, DWORD PTR ellipsis_max_x$[rbp]
	comiss	xmm1, xmm0
	jb	$LN13@RenderText
; Line 2825
	mov	DWORD PTR i$17[rbp], 0
	jmp	SHORT $LN6@RenderText
$LN4@RenderText:
	mov	eax, DWORD PTR i$17[rbp]
	inc	eax
	mov	DWORD PTR i$17[rbp], eax
$LN6@RenderText:
	mov	eax, DWORD PTR ellipsis_char_count$9[rbp]
	cmp	DWORD PTR i$17[rbp], eax
	jge	$LN5@RenderText
; Line 2827
	movss	xmm1, DWORD PTR __real@3f800000
	xor	ecx, ecx
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv273[rbp], eax
	mov	rax, QWORD PTR pos_min$[rbp]
	movss	xmm2, DWORD PTR [rax+4]
	movss	xmm1, DWORD PTR ellipsis_x$16[rbp]
	lea	rcx, QWORD PTR $T26[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T27[rbp], rax
	movzx	eax, WORD PTR ellipsis_char$8[rbp]
	mov	WORD PTR [rsp+40], ax
	mov	eax, DWORD PTR tv273[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR $T27[rbp]
	movss	xmm2, DWORD PTR font_size$6[rbp]
	mov	rdx, QWORD PTR draw_list$[rbp]
	mov	rcx, QWORD PTR font$5[rbp]
	call	?RenderChar@ImFont@@QEBAXPEAUImDrawList@@MUImVec2@@IG@Z ; ImFont::RenderChar
; Line 2828
	movss	xmm0, DWORD PTR ellipsis_x$16[rbp]
	addss	xmm0, DWORD PTR ellipsis_glyph_width$11[rbp]
	movss	DWORD PTR ellipsis_x$16[rbp], xmm0
; Line 2829
	jmp	$LN4@RenderText
$LN5@RenderText:
$LN13@RenderText:
; Line 2830
	jmp	$LN9@RenderText
$LN8@RenderText:
; Line 2833
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T28[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv295[rbp], rax
	mov	rax, QWORD PTR pos_max$[rbp]
	movss	xmm2, DWORD PTR [rax+4]
	movss	xmm1, DWORD PTR clip_max_x$[rbp]
	lea	rcx, QWORD PTR $T29[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv293[rbp], rax
	mov	QWORD PTR [rsp+56], 0
	mov	rax, QWORD PTR tv295[rbp]
	mov	QWORD PTR [rsp+48], rax
	lea	rax, QWORD PTR text_size$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR text_end_full$[rbp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR text$[rbp]
	mov	r8, QWORD PTR tv293[rbp]
	mov	rdx, QWORD PTR pos_min$[rbp]
	mov	rcx, QWORD PTR draw_list$[rbp]
	call	?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z ; ImGui::RenderTextClippedEx
$LN9@RenderText:
; Line 2836
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12476]
	test	eax, eax
	je	SHORT $LN14@RenderText
; Line 2837
	mov	r8, QWORD PTR text_end_full$[rbp]
	mov	rdx, QWORD PTR text$[rbp]
	mov	rcx, QWORD PTR pos_min$[rbp]
	call	?LogRenderedText@ImGui@@YAXPEBUImVec2@@PEBD1@Z ; ImGui::LogRenderedText
$LN14@RenderText:
; Line 2838
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:?RenderTextEllipsis@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1MMPEBD2PEBU3@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1288]
	pop	rdi
	pop	rbp
	ret	0
?RenderTextEllipsis@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1MMPEBD2PEBU3@@Z ENDP ; ImGui::RenderTextEllipsis
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z
_TEXT	SEGMENT
pos$ = 8
text_size$ = 40
clip_min$ = 72
clip_max$ = 104
need_clipping$ = 132
fine_clip_rect$6 = 168
$T7 = 408
$T8 = 436
$T9 = 468
tv95 = 484
tv87 = 484
tv80 = 488
tv77 = 488
tv73 = 488
__$ArrayPad$ = 496
draw_list$ = 544
pos_min$ = 552
pos_max$ = 560
text$ = 568
text_display_end$ = 576
text_size_if_known$ = 584
align$ = 592
clip_rect$ = 600
?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z PROC ; ImGui::RenderTextClippedEx, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2717
$LN18:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 600				; 00000258H
	lea	rbp, QWORD PTR [rsp+80]
	lea	rdi, QWORD PTR [rsp+80]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+632]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2719
	mov	rax, QWORD PTR pos_min$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR pos$[rbp], rax
; Line 2720
	cmp	QWORD PTR text_size_if_known$[rbp], 0
	je	SHORT $LN8@RenderText
	mov	rax, QWORD PTR text_size_if_known$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T8[rbp], rax
	lea	rax, QWORD PTR $T8[rbp]
	mov	QWORD PTR tv73[rbp], rax
	jmp	SHORT $LN9@RenderText
$LN8@RenderText:
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	xor	r9d, r9d
	mov	r8, QWORD PTR text_display_end$[rbp]
	mov	rdx, QWORD PTR text$[rbp]
	lea	rcx, QWORD PTR $T9[rbp]
	call	?CalcTextSize@ImGui@@YA?AUImVec2@@PEBD0_NM@Z ; ImGui::CalcTextSize
	mov	QWORD PTR tv73[rbp], rax
$LN9@RenderText:
	mov	rax, QWORD PTR tv73[rbp]
	mov	QWORD PTR $T7[rbp], rax
	mov	rax, QWORD PTR $T7[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR text_size$[rbp], rax
; Line 2722
	cmp	QWORD PTR clip_rect$[rbp], 0
	je	SHORT $LN10@RenderText
	mov	rax, QWORD PTR clip_rect$[rbp]
	mov	QWORD PTR tv77[rbp], rax
	jmp	SHORT $LN11@RenderText
$LN10@RenderText:
	mov	rax, QWORD PTR pos_min$[rbp]
	mov	QWORD PTR tv77[rbp], rax
$LN11@RenderText:
	mov	rax, QWORD PTR tv77[rbp]
	mov	QWORD PTR clip_min$[rbp], rax
; Line 2723
	cmp	QWORD PTR clip_rect$[rbp], 0
	je	SHORT $LN12@RenderText
	mov	rax, QWORD PTR clip_rect$[rbp]
	add	rax, 8
	mov	QWORD PTR tv80[rbp], rax
	jmp	SHORT $LN13@RenderText
$LN12@RenderText:
	mov	rax, QWORD PTR pos_max$[rbp]
	mov	QWORD PTR tv80[rbp], rax
$LN13@RenderText:
	mov	rax, QWORD PTR tv80[rbp]
	mov	QWORD PTR clip_max$[rbp], rax
; Line 2724
	movss	xmm0, DWORD PTR pos$[rbp]
	addss	xmm0, DWORD PTR text_size$[rbp]
	mov	rax, QWORD PTR clip_max$[rbp]
	comiss	xmm0, DWORD PTR [rax]
	jae	SHORT $LN14@RenderText
	movss	xmm0, DWORD PTR pos$[rbp+4]
	addss	xmm0, DWORD PTR text_size$[rbp+4]
	mov	rax, QWORD PTR clip_max$[rbp]
	comiss	xmm0, DWORD PTR [rax+4]
	jae	SHORT $LN14@RenderText
	mov	DWORD PTR tv87[rbp], 0
	jmp	SHORT $LN15@RenderText
$LN14@RenderText:
	mov	DWORD PTR tv87[rbp], 1
$LN15@RenderText:
	movzx	eax, BYTE PTR tv87[rbp]
	mov	BYTE PTR need_clipping$[rbp], al
; Line 2725
	cmp	QWORD PTR clip_rect$[rbp], 0
	je	SHORT $LN2@RenderText
; Line 2726
	mov	rax, QWORD PTR clip_min$[rbp]
	movss	xmm0, DWORD PTR [rax]
	comiss	xmm0, DWORD PTR pos$[rbp]
	ja	SHORT $LN16@RenderText
	mov	rax, QWORD PTR clip_min$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	comiss	xmm0, DWORD PTR pos$[rbp+4]
	ja	SHORT $LN16@RenderText
	mov	DWORD PTR tv95[rbp], 0
	jmp	SHORT $LN17@RenderText
$LN16@RenderText:
	mov	DWORD PTR tv95[rbp], 1
$LN17@RenderText:
	movzx	eax, BYTE PTR need_clipping$[rbp]
	or	eax, DWORD PTR tv95[rbp]
	mov	BYTE PTR need_clipping$[rbp], al
$LN2@RenderText:
; Line 2729
	mov	rax, QWORD PTR align$[rbp]
	movss	xmm0, DWORD PTR [rax]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN3@RenderText
	mov	rax, QWORD PTR pos_max$[rbp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR pos$[rbp]
	subss	xmm0, DWORD PTR text_size$[rbp]
	mov	rax, QWORD PTR align$[rbp]
	mulss	xmm0, DWORD PTR [rax]
	movss	xmm1, DWORD PTR pos$[rbp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR pos$[rbp]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR pos$[rbp], xmm0
$LN3@RenderText:
; Line 2730
	mov	rax, QWORD PTR align$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN4@RenderText
	mov	rax, QWORD PTR pos_max$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR pos$[rbp+4]
	subss	xmm0, DWORD PTR text_size$[rbp+4]
	mov	rax, QWORD PTR align$[rbp]
	mulss	xmm0, DWORD PTR [rax+4]
	movss	xmm1, DWORD PTR pos$[rbp+4]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR pos$[rbp+4]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR pos$[rbp+4], xmm0
$LN4@RenderText:
; Line 2733
	movzx	eax, BYTE PTR need_clipping$[rbp]
	test	eax, eax
	je	$LN5@RenderText
; Line 2735
	mov	rax, QWORD PTR clip_max$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR [rsp+32], xmm0
	mov	rax, QWORD PTR clip_max$[rbp]
	movss	xmm3, DWORD PTR [rax]
	mov	rax, QWORD PTR clip_min$[rbp]
	movss	xmm2, DWORD PTR [rax+4]
	mov	rax, QWORD PTR clip_min$[rbp]
	movss	xmm1, DWORD PTR [rax]
	lea	rcx, QWORD PTR fine_clip_rect$6[rbp]
	call	??0ImVec4@@QEAA@MMMM@Z			; ImVec4::ImVec4
; Line 2736
	movss	xmm1, DWORD PTR __real@3f800000
	xor	ecx, ecx
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	lea	rcx, QWORD PTR fine_clip_rect$6[rbp]
	mov	QWORD PTR [rsp+64], rcx
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+56], xmm0
	mov	rcx, QWORD PTR text_display_end$[rbp]
	mov	QWORD PTR [rsp+48], rcx
	mov	rcx, QWORD PTR text$[rbp]
	mov	QWORD PTR [rsp+40], rcx
	mov	DWORD PTR [rsp+32], eax
	lea	r9, QWORD PTR pos$[rbp]
	xorps	xmm2, xmm2
	xor	edx, edx
	mov	rcx, QWORD PTR draw_list$[rbp]
	call	?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z ; ImDrawList::AddText
; Line 2737
	jmp	SHORT $LN6@RenderText
$LN5@RenderText:
; Line 2740
	movss	xmm1, DWORD PTR __real@3f800000
	xor	ecx, ecx
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	QWORD PTR [rsp+64], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+56], xmm0
	mov	rcx, QWORD PTR text_display_end$[rbp]
	mov	QWORD PTR [rsp+48], rcx
	mov	rcx, QWORD PTR text$[rbp]
	mov	QWORD PTR [rsp+40], rcx
	mov	DWORD PTR [rsp+32], eax
	lea	r9, QWORD PTR pos$[rbp]
	xorps	xmm2, xmm2
	xor	edx, edx
	mov	rcx, QWORD PTR draw_list$[rbp]
	call	?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z ; ImDrawList::AddText
$LN6@RenderText:
; Line 2742
	lea	rcx, QWORD PTR [rbp-80]
	lea	rdx, OFFSET FLAT:?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+520]
	pop	rdi
	pop	rbp
	ret	0
?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z ENDP ; ImGui::RenderTextClippedEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RenderTextClipped@ImGui@@YAXAEBUImVec2@@0PEBD1PEBU2@0PEBUImRect@@@Z
_TEXT	SEGMENT
text_display_end$ = 8
text_len$ = 36
g$ = 72
window$ = 104
pos_min$ = 352
pos_max$ = 360
text$ = 368
text_end$ = 376
text_size_if_known$ = 384
align$ = 392
clip_rect$ = 400
?RenderTextClipped@ImGui@@YAXAEBUImVec2@@0PEBD1PEBU2@0PEBUImRect@@@Z PROC ; ImGui::RenderTextClipped, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2745
$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2747
	mov	rdx, QWORD PTR text_end$[rbp]
	mov	rcx, QWORD PTR text$[rbp]
	call	?FindRenderedTextEnd@ImGui@@YAPEBDPEBD0@Z ; ImGui::FindRenderedTextEnd
	mov	QWORD PTR text_display_end$[rbp], rax
; Line 2748
	mov	rax, QWORD PTR text$[rbp]
	mov	rcx, QWORD PTR text_display_end$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	DWORD PTR text_len$[rbp], eax
; Line 2749
	cmp	DWORD PTR text_len$[rbp], 0
	jne	SHORT $LN2@RenderText
; Line 2750
	jmp	$LN1@RenderText
$LN2@RenderText:
; Line 2752
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 2753
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 2754
	mov	rax, QWORD PTR clip_rect$[rbp]
	mov	QWORD PTR [rsp+56], rax
	mov	rax, QWORD PTR align$[rbp]
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR text_size_if_known$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR text_display_end$[rbp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR text$[rbp]
	mov	r8, QWORD PTR pos_max$[rbp]
	mov	rdx, QWORD PTR pos_min$[rbp]
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR [rax+688]
	call	?RenderTextClippedEx@ImGui@@YAXPEAUImDrawList@@AEBUImVec2@@1PEBD2PEBU3@1PEBUImRect@@@Z ; ImGui::RenderTextClippedEx
; Line 2755
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12476]
	test	eax, eax
	je	SHORT $LN3@RenderText
; Line 2756
	mov	r8, QWORD PTR text_display_end$[rbp]
	mov	rdx, QWORD PTR text$[rbp]
	mov	rcx, QWORD PTR pos_min$[rbp]
	call	?LogRenderedText@ImGui@@YAXPEBUImVec2@@PEBD1@Z ; ImGui::LogRenderedText
$LN3@RenderText:
$LN1@RenderText:
; Line 2757
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?RenderTextClipped@ImGui@@YAXAEBUImVec2@@0PEBD1PEBU2@0PEBUImRect@@@Z ENDP ; ImGui::RenderTextClipped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RenderTextWrapped@ImGui@@YAXUImVec2@@PEBD1M@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
tv135 = 248
tv92 = 248
tv136 = 256
tv88 = 256
tv90 = 260
tv86 = 264
pos$ = 304
text$ = 312
text_end$ = 320
wrap_width$ = 328
?RenderTextWrapped@ImGui@@YAXUImVec2@@PEBD1M@Z PROC	; ImGui::RenderTextWrapped, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2699
$LN7:
	movss	DWORD PTR [rsp+32], xmm3
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+80]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2700
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 2701
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 2703
	cmp	QWORD PTR text_end$[rbp], 0
	jne	SHORT $LN2@RenderText
; Line 2704
	mov	rax, QWORD PTR text$[rbp]
	mov	QWORD PTR tv135[rbp], rax
	mov	QWORD PTR tv136[rbp], -1
$LL6@RenderText:
	inc	QWORD PTR tv136[rbp]
	mov	rax, QWORD PTR tv135[rbp]
	mov	rcx, QWORD PTR tv136[rbp]
	cmp	BYTE PTR [rax+rcx], 0
	jne	SHORT $LL6@RenderText
	mov	rax, QWORD PTR tv136[rbp]
	mov	rcx, QWORD PTR text$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR text_end$[rbp], rax
$LN2@RenderText:
; Line 2706
	mov	rax, QWORD PTR text_end$[rbp]
	cmp	QWORD PTR text$[rbp], rax
	je	$LN3@RenderText
; Line 2708
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv92[rbp], rax
	movss	xmm1, DWORD PTR __real@3f800000
	xor	ecx, ecx
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv88[rbp], eax
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+6528]
	movss	DWORD PTR tv90[rbp], xmm0
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+6520]
	mov	QWORD PTR tv86[rbp], rax
	mov	QWORD PTR [rsp+64], 0
	movss	xmm0, DWORD PTR wrap_width$[rbp]
	movss	DWORD PTR [rsp+56], xmm0
	mov	rax, QWORD PTR text_end$[rbp]
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR text$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	eax, DWORD PTR tv88[rbp]
	mov	DWORD PTR [rsp+32], eax
	lea	r9, QWORD PTR pos$[rbp]
	movss	xmm2, DWORD PTR tv90[rbp]
	mov	rdx, QWORD PTR tv86[rbp]
	mov	rcx, QWORD PTR tv92[rbp]
	call	?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z ; ImDrawList::AddText
; Line 2709
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12476]
	test	eax, eax
	je	SHORT $LN4@RenderText
; Line 2710
	mov	r8, QWORD PTR text_end$[rbp]
	mov	rdx, QWORD PTR text$[rbp]
	lea	rcx, QWORD PTR pos$[rbp]
	call	?LogRenderedText@ImGui@@YAXPEBUImVec2@@PEBD1@Z ; ImGui::LogRenderedText
$LN4@RenderText:
$LN3@RenderText:
; Line 2712
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
?RenderTextWrapped@ImGui@@YAXUImVec2@@PEBD1M@Z ENDP	; ImGui::RenderTextWrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RenderText@ImGui@@YAXUImVec2@@PEBD1_N@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
text_display_end$ = 72
tv140 = 280
tv129 = 280
tv141 = 288
tv93 = 288
tv95 = 292
tv91 = 296
pos$ = 336
text$ = 344
text_end$ = 352
hide_text_after_hash$ = 360
?RenderText@ImGui@@YAXUImVec2@@PEBD1_N@Z PROC		; ImGui::RenderText, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2673
$LN9:
	mov	BYTE PTR [rsp+32], r9b
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+80]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2674
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 2675
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 2679
	movzx	eax, BYTE PTR hide_text_after_hash$[rbp]
	test	eax, eax
	je	SHORT $LN2@RenderText
; Line 2681
	mov	rdx, QWORD PTR text_end$[rbp]
	mov	rcx, QWORD PTR text$[rbp]
	call	?FindRenderedTextEnd@ImGui@@YAPEBDPEBD0@Z ; ImGui::FindRenderedTextEnd
	mov	QWORD PTR text_display_end$[rbp], rax
; Line 2682
	jmp	SHORT $LN3@RenderText
$LN2@RenderText:
; Line 2685
	cmp	QWORD PTR text_end$[rbp], 0
	jne	SHORT $LN4@RenderText
; Line 2686
	mov	rax, QWORD PTR text$[rbp]
	mov	QWORD PTR tv140[rbp], rax
	mov	QWORD PTR tv141[rbp], -1
$LL8@RenderText:
	inc	QWORD PTR tv141[rbp]
	mov	rax, QWORD PTR tv140[rbp]
	mov	rcx, QWORD PTR tv141[rbp]
	cmp	BYTE PTR [rax+rcx], 0
	jne	SHORT $LL8@RenderText
	mov	rax, QWORD PTR tv141[rbp]
	mov	rcx, QWORD PTR text$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR text_end$[rbp], rax
$LN4@RenderText:
; Line 2687
	mov	rax, QWORD PTR text_end$[rbp]
	mov	QWORD PTR text_display_end$[rbp], rax
$LN3@RenderText:
; Line 2690
	mov	rax, QWORD PTR text_display_end$[rbp]
	cmp	QWORD PTR text$[rbp], rax
	je	$LN5@RenderText
; Line 2692
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv129[rbp], rax
	movss	xmm1, DWORD PTR __real@3f800000
	xor	ecx, ecx
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv93[rbp], eax
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+6528]
	movss	DWORD PTR tv95[rbp], xmm0
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+6520]
	mov	QWORD PTR tv91[rbp], rax
	mov	QWORD PTR [rsp+64], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+56], xmm0
	mov	rax, QWORD PTR text_display_end$[rbp]
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR text$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	eax, DWORD PTR tv93[rbp]
	mov	DWORD PTR [rsp+32], eax
	lea	r9, QWORD PTR pos$[rbp]
	movss	xmm2, DWORD PTR tv95[rbp]
	mov	rdx, QWORD PTR tv91[rbp]
	mov	rcx, QWORD PTR tv129[rbp]
	call	?AddText@ImDrawList@@QEAAXPEBUImFont@@MAEBUImVec2@@IPEBD2MPEBUImVec4@@@Z ; ImDrawList::AddText
; Line 2693
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12476]
	test	eax, eax
	je	SHORT $LN6@RenderText
; Line 2694
	mov	r8, QWORD PTR text_display_end$[rbp]
	mov	rdx, QWORD PTR text$[rbp]
	lea	rcx, QWORD PTR pos$[rbp]
	call	?LogRenderedText@ImGui@@YAXPEBUImVec2@@PEBD1@Z ; ImGui::LogRenderedText
$LN6@RenderText:
$LN5@RenderText:
; Line 2696
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
?RenderText@ImGui@@YAXUImVec2@@PEBD1_N@Z ENDP		; ImGui::RenderText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsDragDropPayloadBeingAccepted@ImGui@@YA_NXZ
_TEXT	SEGMENT
g$ = 8
tv69 = 212
?IsDragDropPayloadBeingAccepted@ImGui@@YA_NXZ PROC	; ImGui::IsDragDropPayloadBeingAccepted, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10040
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10041
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10042
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8012]
	test	eax, eax
	je	SHORT $LN3@IsDragDrop
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+8128], 0
	je	SHORT $LN3@IsDragDrop
	mov	DWORD PTR tv69[rbp], 1
	jmp	SHORT $LN4@IsDragDrop
$LN3@IsDragDrop:
	mov	DWORD PTR tv69[rbp], 0
$LN4@IsDragDrop:
	movzx	eax, BYTE PTR tv69[rbp]
; Line 10043
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsDragDropPayloadBeingAccepted@ImGui@@YA_NXZ ENDP	; ImGui::IsDragDropPayloadBeingAccepted
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ClearDragDrop@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
?ClearDragDrop@ImGui@@YAXXZ PROC			; ImGui::ClearDragDrop, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 9794
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 9795
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 9796
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+8012], 0
; Line 9797
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8032				; 00001f60H
	mov	rcx, rax
	call	?Clear@ImGuiPayload@@QEAAXXZ		; ImGuiPayload::Clear
; Line 9798
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+8116], 0
; Line 9799
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+8128], 0
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+8124], 0
; Line 9800
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR [rax+8120], xmm0
; Line 9801
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+8132], -1
; Line 9803
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8144				; 00001fd0H
	mov	rcx, rax
	call	?clear@?$ImVector@E@@QEAAXXZ		; ImVector<unsigned char>::clear
; Line 9804
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8160				; 00001fe0H
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb
; Line 9805
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?ClearDragDrop@ImGui@@YAXXZ ENDP			; ImGui::ClearDragDrop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BeginDragDropTargetCustom@ImGui@@YA_NAEBUImRect@@I@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
hovered_window$ = 72
bb$ = 320
id$ = 328
?BeginDragDropTargetCustom@ImGui@@YA_NAEBUImRect@@I@Z PROC ; ImGui::BeginDragDropTargetCustom, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 9986
$LN11:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 9987
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 9988
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8012]
	test	eax, eax
	jne	SHORT $LN2@BeginDragD
; Line 9989
	xor	al, al
	jmp	$LN1@BeginDragD
$LN2@BeginDragD:
; Line 9991
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 9992
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7200]
	mov	QWORD PTR hovered_window$[rbp], rax
; Line 9993
	cmp	QWORD PTR hovered_window$[rbp], 0
	je	SHORT $LN4@BeginDragD
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR hovered_window$[rbp]
	mov	rcx, QWORD PTR [rcx+904]
	cmp	QWORD PTR [rax+904], rcx
	je	SHORT $LN3@BeginDragD
$LN4@BeginDragD:
; Line 9994
	xor	al, al
	jmp	$LN1@BeginDragD
$LN3@BeginDragD:
; Line 9995
	cmp	DWORD PTR id$[rbp], 0
	jne	SHORT $LN9@BeginDragD
	mov	eax, DWORD PTR ?__LINE__Var@?0??BeginDragDropTargetCustom@ImGui@@YA_NAEBUImRect@@I@Z@4JA
	add	eax, 9
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BA@DDOODPOM@?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN9@BeginDragD:
; Line 9996
	mov	rax, QWORD PTR bb$[rbp]
	add	rax, 8
	mov	rcx, QWORD PTR bb$[rbp]
	mov	r8b, 1
	mov	rdx, rax
	call	?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z ; ImGui::IsMouseHoveringRect
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@BeginDragD
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+8044]
	cmp	DWORD PTR id$[rbp], eax
	jne	SHORT $LN5@BeginDragD
$LN6@BeginDragD:
; Line 9997
	xor	al, al
	jmp	SHORT $LN1@BeginDragD
$LN5@BeginDragD:
; Line 9998
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+147]
	test	eax, eax
	je	SHORT $LN7@BeginDragD
; Line 9999
	xor	al, al
	jmp	SHORT $LN1@BeginDragD
$LN7@BeginDragD:
; Line 10001
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8014]
	test	eax, eax
	je	SHORT $LN10@BeginDragD
	mov	eax, DWORD PTR ?__LINE__Var@?0??BeginDragDropTargetCustom@ImGui@@YA_NAEBUImRect@@I@Z@4JA
	add	eax, 15
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EA@CHPNIKA@?$AAg?$AA?4?$AAD?$AAr?$AAa?$AAg?$AAD?$AAr?$AAo?$AAp?$AAW?$AAi?$AAt?$AAh?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN10@BeginDragD:
; Line 10002
	mov	rax, QWORD PTR g$[rbp]
	lea	rdi, QWORD PTR [rax+8096]
	mov	rsi, QWORD PTR bb$[rbp]
	mov	ecx, 16
	rep movsb
; Line 10003
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rax+8112], ecx
; Line 10004
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+8014], 1
; Line 10005
	mov	al, 1
$LN1@BeginDragD:
; Line 10006
	lea	rsp, QWORD PTR [rbp+288]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?BeginDragDropTargetCustom@ImGui@@YA_NAEBUImRect@@I@Z ENDP ; ImGui::BeginDragDropTargetCustom
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetMergedKeyModFlags@ImGui@@YAHXZ
_TEXT	SEGMENT
g$ = 8
key_mod_flags$ = 36
?GetMergedKeyModFlags@ImGui@@YAHXZ PROC			; ImGui::GetMergedKeyModFlags, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3896
$LN7:
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3897
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3898
	mov	DWORD PTR key_mod_flags$[rbp], 0
; Line 3899
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+320]
	test	eax, eax
	je	SHORT $LN2@GetMergedK
	mov	eax, DWORD PTR key_mod_flags$[rbp]
	or	eax, 1
	mov	DWORD PTR key_mod_flags$[rbp], eax
$LN2@GetMergedK:
; Line 3900
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+321]
	test	eax, eax
	je	SHORT $LN3@GetMergedK
	mov	eax, DWORD PTR key_mod_flags$[rbp]
	or	eax, 2
	mov	DWORD PTR key_mod_flags$[rbp], eax
$LN3@GetMergedK:
; Line 3901
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+322]
	test	eax, eax
	je	SHORT $LN4@GetMergedK
	mov	eax, DWORD PTR key_mod_flags$[rbp]
	or	eax, 4
	mov	DWORD PTR key_mod_flags$[rbp], eax
$LN4@GetMergedK:
; Line 3902
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+323]
	test	eax, eax
	je	SHORT $LN5@GetMergedK
	mov	eax, DWORD PTR key_mod_flags$[rbp]
	or	eax, 8
	mov	DWORD PTR key_mod_flags$[rbp], eax
$LN5@GetMergedK:
; Line 3903
	mov	eax, DWORD PTR key_mod_flags$[rbp]
; Line 3904
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?GetMergedKeyModFlags@ImGui@@YAHXZ ENDP			; ImGui::GetMergedKeyModFlags
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z
_TEXT	SEGMENT
tv68 = 192
n$ = 240
rm$ = 248
?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z PROC ; ImGui::IsNavInputTest, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 2475
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	edx, DWORD PTR rm$[rbp]
	mov	ecx, DWORD PTR n$[rbp]
	call	?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z ; ImGui::GetNavInputAmount
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN3@IsNavInput
	mov	DWORD PTR tv68[rbp], 1
	jmp	SHORT $LN4@IsNavInput
$LN3@IsNavInput:
	mov	DWORD PTR tv68[rbp], 0
$LN4@IsNavInput:
	movzx	eax, BYTE PTR tv68[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?IsNavInputTest@ImGui@@YA_NHW4ImGuiInputReadMode@@@Z ENDP ; ImGui::IsNavInputTest
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsNavInputDown@ImGui@@YA_NH@Z
_TEXT	SEGMENT
g$ = 8
tv70 = 212
n$ = 256
?IsNavInputDown@ImGui@@YA_NH@Z PROC			; ImGui::IsNavInputDown, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 2474
$LN5:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
	movsxd	rax, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax*4+836]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN3@IsNavInput
	mov	DWORD PTR tv70[rbp], 1
	jmp	SHORT $LN4@IsNavInput
$LN3@IsNavInput:
	mov	DWORD PTR tv70[rbp], 0
$LN4@IsNavInput:
	movzx	eax, BYTE PTR tv70[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsNavInputDown@ImGui@@YA_NH@Z ENDP			; ImGui::IsNavInputDown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsKeyPressedMap@ImGui@@YA_NH_N@Z
_TEXT	SEGMENT
g$ = 8
key_index$ = 36
tv73 = 244
key$ = 288
repeat$ = 296
?IsKeyPressedMap@ImGui@@YA_NH_N@Z PROC			; ImGui::IsKeyPressedMap, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 2473
$LN5:
	mov	BYTE PTR [rsp+16], dl
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
	movsxd	rax, DWORD PTR key$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rcx+rax*4+60]
	mov	DWORD PTR key_index$[rbp], eax
	cmp	DWORD PTR key_index$[rbp], 0
	jl	SHORT $LN3@IsKeyPress
	movzx	edx, BYTE PTR repeat$[rbp]
	mov	ecx, DWORD PTR key_index$[rbp]
	call	?IsKeyPressed@ImGui@@YA_NH_N@Z		; ImGui::IsKeyPressed
	mov	BYTE PTR tv73[rbp], al
	jmp	SHORT $LN4@IsKeyPress
$LN3@IsKeyPress:
	mov	BYTE PTR tv73[rbp], 0
$LN4@IsKeyPress:
	movzx	eax, BYTE PTR tv73[rbp]
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?IsKeyPressedMap@ImGui@@YA_NH_N@Z ENDP			; ImGui::IsKeyPressedMap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsMouseDragPastThreshold@ImGui@@YA_NHM@Z
_TEXT	SEGMENT
g$ = 8
tv81 = 212
button$ = 256
lock_threshold$ = 264
?IsMouseDragPastThreshold@ImGui@@YA_NHM@Z PROC		; ImGui::IsMouseDragPastThreshold, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4739
$LN8:
	movss	DWORD PTR [rsp+16], xmm1
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4740
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4741
	cmp	DWORD PTR button$[rbp], 0
	jl	SHORT $LN4@IsMouseDra
	cmp	DWORD PTR button$[rbp], 5
	jl	SHORT $LN5@IsMouseDra
$LN4@IsMouseDra:
	mov	eax, DWORD PTR ?__LINE__Var@?0??IsMouseDragPastThreshold@ImGui@@YA_NHM@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1KI@IKDPMEHK@?$AAb?$AAu?$AAt?$AAt?$AAo?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN5@IsMouseDra:
; Line 4742
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR lock_threshold$[rbp]
	jbe	SHORT $LN2@IsMouseDra
; Line 4743
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+56]
	movss	DWORD PTR lock_threshold$[rbp], xmm0
$LN2@IsMouseDra:
; Line 4744
	movsxd	rax, DWORD PTR button$[rbp]
	movss	xmm0, DWORD PTR lock_threshold$[rbp]
	mulss	xmm0, DWORD PTR lock_threshold$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rcx+rax*4+1164]
	comiss	xmm1, xmm0
	jb	SHORT $LN6@IsMouseDra
	mov	DWORD PTR tv81[rbp], 1
	jmp	SHORT $LN7@IsMouseDra
$LN6@IsMouseDra:
	mov	DWORD PTR tv81[rbp], 0
$LN7@IsMouseDra:
	movzx	eax, BYTE PTR tv81[rbp]
; Line 4745
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsMouseDragPastThreshold@ImGui@@YA_NHM@Z ENDP		; ImGui::IsMouseDragPastThreshold
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsActiveIdUsingKey@ImGui@@YA_NH@Z
_TEXT	SEGMENT
g$ = 8
tv80 = 216
tv73 = 224
key$ = 272
?IsActiveIdUsingKey@ImGui@@YA_NH@Z PROC			; ImGui::IsActiveIdUsingKey, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 2471
$LN6:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
	cmp	DWORD PTR key$[rbp], 64			; 00000040H
	jl	SHORT $LN3@IsActiveId
	mov	r8d, DWORD PTR ?__LINE__Var@?0??IsActiveIdUsingKey@ImGui@@YA_NH@Z@4JA
	lea	rdx, OFFSET FLAT:??_C@_1GO@IOCEAJPC@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@LLDLMHEG@?$AAk?$AAe?$AAy?$AA?5?$AA?$DM?$AA?5?$AA6?$AA4@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@IsActiveId:
	mov	eax, DWORD PTR key$[rbp]
	mov	ecx, 1
	mov	QWORD PTR tv80[rbp], rcx
	movzx	ecx, al
	mov	rax, QWORD PTR tv80[rbp]
	shl	rax, cl
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+7288]
	and	rcx, rax
	mov	rax, rcx
	test	rax, rax
	je	SHORT $LN4@IsActiveId
	mov	DWORD PTR tv73[rbp], 1
	jmp	SHORT $LN5@IsActiveId
$LN4@IsActiveId:
	mov	DWORD PTR tv73[rbp], 0
$LN5@IsActiveId:
	movzx	eax, BYTE PTR tv73[rbp]
	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
?IsActiveIdUsingKey@ImGui@@YA_NH@Z ENDP			; ImGui::IsActiveIdUsingKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsActiveIdUsingNavInput@ImGui@@YA_NH@Z
_TEXT	SEGMENT
g$ = 8
tv74 = 212
tv68 = 216
input$ = 256
?IsActiveIdUsingNavInput@ImGui@@YA_NH@Z PROC		; ImGui::IsActiveIdUsingNavInput, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 2470
$LN5:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
	mov	eax, DWORD PTR input$[rbp]
	mov	ecx, 1
	mov	DWORD PTR tv74[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv74[rbp]
	shl	eax, cl
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7284]
	and	ecx, eax
	mov	eax, ecx
	test	eax, eax
	je	SHORT $LN3@IsActiveId
	mov	DWORD PTR tv68[rbp], 1
	jmp	SHORT $LN4@IsActiveId
$LN3@IsActiveId:
	mov	DWORD PTR tv68[rbp], 0
$LN4@IsActiveId:
	movzx	eax, BYTE PTR tv68[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsActiveIdUsingNavInput@ImGui@@YA_NH@Z ENDP		; ImGui::IsActiveIdUsingNavInput
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsActiveIdUsingNavDir@ImGui@@YA_NH@Z
_TEXT	SEGMENT
g$ = 8
tv74 = 212
tv68 = 216
dir$ = 256
?IsActiveIdUsingNavDir@ImGui@@YA_NH@Z PROC		; ImGui::IsActiveIdUsingNavDir, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 2469
$LN5:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
	mov	eax, DWORD PTR dir$[rbp]
	mov	ecx, 1
	mov	DWORD PTR tv74[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv74[rbp]
	shl	eax, cl
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7280]
	and	ecx, eax
	mov	eax, ecx
	test	eax, eax
	je	SHORT $LN3@IsActiveId
	mov	DWORD PTR tv68[rbp], 1
	jmp	SHORT $LN4@IsActiveId
$LN3@IsActiveId:
	mov	DWORD PTR tv68[rbp], 0
$LN4@IsActiveId:
	movzx	eax, BYTE PTR tv68[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsActiveIdUsingNavDir@ImGui@@YA_NH@Z ENDP		; ImGui::IsActiveIdUsingNavDir
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetActiveIdUsingNavAndKeys@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
?SetActiveIdUsingNavAndKeys@ImGui@@YAXXZ PROC		; ImGui::SetActiveIdUsingNavAndKeys, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4956
$LN4:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4957
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4958
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	jne	SHORT $LN3@SetActiveI
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetActiveIdUsingNavAndKeys@ImGui@@YAXXZ@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CA@MJFBPLLL@?$AAg?$AA?4?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AAI?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@SetActiveI:
; Line 4959
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7280], -1		; ffffffffH
; Line 4960
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7284], -1		; ffffffffH
; Line 4961
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7288], -1
; Line 4962
	call	?NavMoveRequestCancel@ImGui@@YAXXZ	; ImGui::NavMoveRequestCancel
; Line 4963
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetActiveIdUsingNavAndKeys@ImGui@@YAXXZ ENDP		; ImGui::SetActiveIdUsingNavAndKeys
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetItemUsingMouseWheel@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
id$ = 36
?SetItemUsingMouseWheel@ImGui@@YAXXZ PROC		; ImGui::SetItemUsingMouseWheel, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4946
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4947
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4948
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	eax, DWORD PTR [rax+292]
	mov	DWORD PTR id$[rbp], eax
; Line 4949
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7240], ecx
	jne	SHORT $LN2@SetItemUsi
; Line 4950
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7249], 1
$LN2@SetItemUsi:
; Line 4951
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7260], ecx
	jne	SHORT $LN3@SetItemUsi
; Line 4952
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7278], 1
$LN3@SetItemUsi:
; Line 4953
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?SetItemUsingMouseWheel@ImGui@@YAXXZ ENDP		; ImGui::SetItemUsingMouseWheel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PopFocusScope@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
?PopFocusScope@ImGui@@YAXXZ PROC			; ImGui::PopFocusScope, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7011
$LN4:
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7012
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7013
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7014
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7528], 0
	jg	SHORT $LN3@PopFocusSc
	mov	eax, DWORD PTR ?__LINE__Var@?0??PopFocusScope@ImGui@@YAXXZ@4JA
	add	eax, 3
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DG@FEBJKFDF@?$AAg?$AA?4?$AAF?$AAo?$AAc?$AAu?$AAs?$AAS?$AAc?$AAo?$AAp?$AAe?$AAS?$AAt?$AAa@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@PopFocusSc:
; Line 7015
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7528				; 00001d68H
	mov	rcx, rax
	call	?back@?$ImVector@I@@QEAAAEAIXZ		; ImVector<unsigned int>::back
	mov	rcx, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR [rcx+340], eax
; Line 7016
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7528				; 00001d68H
	mov	rcx, rax
	call	?pop_back@?$ImVector@I@@QEAAXXZ		; ImVector<unsigned int>::pop_back
; Line 7017
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?PopFocusScope@ImGui@@YAXXZ ENDP			; ImGui::PopFocusScope
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushFocusScope@ImGui@@YAXI@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
tv71 = 248
id$ = 288
?PushFocusScope@ImGui@@YAXI@Z PROC			; ImGui::PushFocusScope, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7003
$LN3:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7004
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7005
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7006
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7528				; 00001d68H
	mov	QWORD PTR tv71[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 340				; 00000154H
	mov	rdx, rax
	mov	rcx, QWORD PTR tv71[rbp]
	call	?push_back@?$ImVector@I@@QEAAXAEBI@Z	; ImVector<unsigned int>::push_back
; Line 7007
	mov	rax, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rax+340], ecx
; Line 7008
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?PushFocusScope@ImGui@@YAXI@Z ENDP			; ImGui::PushFocusScope
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetNavID@ImGui@@YAXIW4ImGuiNavLayer@@IAEBUImRect@@@Z
_TEXT	SEGMENT
g$ = 8
id$ = 256
nav_layer$ = 264
focus_scope_id$ = 272
rect_rel$ = 280
?SetNavID@ImGui@@YAXIW4ImGuiNavLayer@@IAEBUImRect@@@Z PROC ; ImGui::SetNavID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8620
$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8621
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8622
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	jne	SHORT $LN3@SetNavID
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetNavID@ImGui@@YAXIW4ImGuiNavLayer@@IAEBUImRect@@@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CC@BGDNHLPI@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CB?$AA?$DN?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@SetNavID:
; Line 8623
	cmp	DWORD PTR nav_layer$[rbp], 0
	je	SHORT $LN4@SetNavID
	cmp	DWORD PTR nav_layer$[rbp], 1
	je	SHORT $LN4@SetNavID
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetNavID@ImGui@@YAXIW4ImGuiNavLayer@@IAEBUImRect@@@Z@4JA
	add	eax, 3
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1IG@LOIIGJJB@?$AAn?$AAa?$AAv?$AA_?$AAl?$AAa?$AAy?$AAe?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAI?$AAm@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@SetNavID:
; Line 8624
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rax+7632], ecx
; Line 8625
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR nav_layer$[rbp]
	mov	DWORD PTR [rax+7700], ecx
; Line 8626
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR focus_scope_id$[rbp]
	mov	DWORD PTR [rax+7636], ecx
; Line 8627
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	movsxd	rcx, DWORD PTR nav_layer$[rbp]
	mov	edx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rax+rcx*4+936], edx
; Line 8628
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	movsxd	rcx, DWORD PTR nav_layer$[rbp]
	imul	rcx, rcx, 16
	lea	rdi, QWORD PTR [rax+rcx+944]
	mov	rsi, QWORD PTR rect_rel$[rbp]
	mov	ecx, 16
	rep movsb
; Line 8631
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?SetNavID@ImGui@@YAXIW4ImGuiNavLayer@@IAEBUImRect@@@Z ENDP ; ImGui::SetNavID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ActivateItem@ImGui@@YAXI@Z
_TEXT	SEGMENT
g$ = 8
id$ = 256
?ActivateItem@ImGui@@YAXI@Z PROC			; ImGui::ActivateItem, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6997
$LN3:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6998
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6999
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rax+7672], ecx
; Line 7000
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?ActivateItem@ImGui@@YAXI@Z ENDP			; ImGui::ActivateItem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CalcTypematicRepeatAmount@ImGui@@YAHMMMM@Z
_TEXT	SEGMENT
count_t0$ = 4
count_t1$ = 36
count$ = 68
tv81 = 276
tv75 = 276
tv69 = 276
t0$ = 320
t1$ = 328
repeat_delay$ = 336
repeat_rate$ = 344
?CalcTypematicRepeatAmount@ImGui@@YAHMMMM@Z PROC	; ImGui::CalcTypematicRepeatAmount, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4652
$LN12:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4653
	movss	xmm0, DWORD PTR t1$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN2@CalcTypema
	jne	SHORT $LN2@CalcTypema
; Line 4654
	mov	eax, 1
	jmp	$LN1@CalcTypema
$LN2@CalcTypema:
; Line 4655
	movss	xmm0, DWORD PTR t0$[rbp]
	comiss	xmm0, DWORD PTR t1$[rbp]
	jb	SHORT $LN3@CalcTypema
; Line 4656
	xor	eax, eax
	jmp	$LN1@CalcTypema
$LN3@CalcTypema:
; Line 4657
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR repeat_rate$[rbp]
	jb	SHORT $LN4@CalcTypema
; Line 4658
	movss	xmm0, DWORD PTR repeat_delay$[rbp]
	comiss	xmm0, DWORD PTR t0$[rbp]
	jbe	SHORT $LN6@CalcTypema
	movss	xmm0, DWORD PTR t1$[rbp]
	comiss	xmm0, DWORD PTR repeat_delay$[rbp]
	jb	SHORT $LN6@CalcTypema
	mov	DWORD PTR tv69[rbp], 1
	jmp	SHORT $LN7@CalcTypema
$LN6@CalcTypema:
	mov	DWORD PTR tv69[rbp], 0
$LN7@CalcTypema:
	mov	eax, DWORD PTR tv69[rbp]
	jmp	$LN1@CalcTypema
$LN4@CalcTypema:
; Line 4659
	movss	xmm0, DWORD PTR repeat_delay$[rbp]
	comiss	xmm0, DWORD PTR t0$[rbp]
	jbe	SHORT $LN8@CalcTypema
	mov	DWORD PTR tv75[rbp], -1
	jmp	SHORT $LN9@CalcTypema
$LN8@CalcTypema:
	movss	xmm0, DWORD PTR t0$[rbp]
	subss	xmm0, DWORD PTR repeat_delay$[rbp]
	divss	xmm0, DWORD PTR repeat_rate$[rbp]
	cvttss2si eax, xmm0
	mov	DWORD PTR tv75[rbp], eax
$LN9@CalcTypema:
	mov	eax, DWORD PTR tv75[rbp]
	mov	DWORD PTR count_t0$[rbp], eax
; Line 4660
	movss	xmm0, DWORD PTR repeat_delay$[rbp]
	comiss	xmm0, DWORD PTR t1$[rbp]
	jbe	SHORT $LN10@CalcTypema
	mov	DWORD PTR tv81[rbp], -1
	jmp	SHORT $LN11@CalcTypema
$LN10@CalcTypema:
	movss	xmm0, DWORD PTR t1$[rbp]
	subss	xmm0, DWORD PTR repeat_delay$[rbp]
	divss	xmm0, DWORD PTR repeat_rate$[rbp]
	cvttss2si eax, xmm0
	mov	DWORD PTR tv81[rbp], eax
$LN11@CalcTypema:
	mov	eax, DWORD PTR tv81[rbp]
	mov	DWORD PTR count_t1$[rbp], eax
; Line 4661
	mov	eax, DWORD PTR count_t0$[rbp]
	mov	ecx, DWORD PTR count_t1$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR count$[rbp], eax
; Line 4662
	mov	eax, DWORD PTR count$[rbp]
$LN1@CalcTypema:
; Line 4663
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?CalcTypematicRepeatAmount@ImGui@@YAHMMMM@Z ENDP	; ImGui::CalcTypematicRepeatAmount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetNavInputAmount2d@ImGui@@YA?AUImVec2@@HW4ImGuiInputReadMode@@MM@Z
_TEXT	SEGMENT
delta$ = 8
$T4 = 228
$T5 = 260
$T6 = 292
tv156 = 308
tv130 = 308
tv72 = 308
tv175 = 312
tv149 = 312
tv91 = 312
tv164 = 316
tv138 = 316
tv80 = 316
tv173 = 320
tv147 = 320
tv89 = 320
__$ArrayPad$ = 328
__$ReturnUdt$ = 368
dir_sources$ = 376
mode$ = 384
slow_factor$ = 392
fast_factor$ = 400
?GetNavInputAmount2d@ImGui@@YA?AUImVec2@@HW4ImGuiInputReadMode@@MM@Z PROC ; ImGui::GetNavInputAmount2d, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 9045
$LN10:
	movss	DWORD PTR [rsp+32], xmm3
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 9046
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR delta$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
; Line 9047
	mov	eax, DWORD PTR dir_sources$[rbp]
	and	eax, 1
	test	eax, eax
	je	$LN2@GetNavInpu
; Line 9048
	mov	edx, DWORD PTR mode$[rbp]
	mov	ecx, 20
	call	?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z ; ImGui::GetNavInputAmount
	movss	DWORD PTR tv72[rbp], xmm0
	mov	edx, DWORD PTR mode$[rbp]
	mov	ecx, 19
	call	?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z ; ImGui::GetNavInputAmount
	movss	xmm1, DWORD PTR tv72[rbp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv91[rbp], xmm0
	mov	edx, DWORD PTR mode$[rbp]
	mov	ecx, 18
	call	?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z ; ImGui::GetNavInputAmount
	movss	DWORD PTR tv80[rbp], xmm0
	mov	edx, DWORD PTR mode$[rbp]
	mov	ecx, 17
	call	?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z ; ImGui::GetNavInputAmount
	movss	xmm1, DWORD PTR tv80[rbp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv89[rbp], xmm0
	movss	xmm2, DWORD PTR tv91[rbp]
	movss	xmm1, DWORD PTR tv89[rbp]
	lea	rcx, QWORD PTR $T4[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rdx, rax
	lea	rcx, QWORD PTR delta$[rbp]
	call	??Y@YAAEAUImVec2@@AEAU0@AEBU0@@Z	; operator+=
$LN2@GetNavInpu:
; Line 9049
	mov	eax, DWORD PTR dir_sources$[rbp]
	and	eax, 2
	test	eax, eax
	je	$LN3@GetNavInpu
; Line 9050
	mov	edx, DWORD PTR mode$[rbp]
	mov	ecx, 7
	call	?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z ; ImGui::GetNavInputAmount
	movss	DWORD PTR tv130[rbp], xmm0
	mov	edx, DWORD PTR mode$[rbp]
	mov	ecx, 6
	call	?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z ; ImGui::GetNavInputAmount
	movss	xmm1, DWORD PTR tv130[rbp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv149[rbp], xmm0
	mov	edx, DWORD PTR mode$[rbp]
	mov	ecx, 5
	call	?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z ; ImGui::GetNavInputAmount
	movss	DWORD PTR tv138[rbp], xmm0
	mov	edx, DWORD PTR mode$[rbp]
	mov	ecx, 4
	call	?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z ; ImGui::GetNavInputAmount
	movss	xmm1, DWORD PTR tv138[rbp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv147[rbp], xmm0
	movss	xmm2, DWORD PTR tv149[rbp]
	movss	xmm1, DWORD PTR tv147[rbp]
	lea	rcx, QWORD PTR $T5[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rdx, rax
	lea	rcx, QWORD PTR delta$[rbp]
	call	??Y@YAAEAUImVec2@@AEAU0@AEBU0@@Z	; operator+=
$LN3@GetNavInpu:
; Line 9051
	mov	eax, DWORD PTR dir_sources$[rbp]
	and	eax, 4
	test	eax, eax
	je	$LN4@GetNavInpu
; Line 9052
	mov	edx, DWORD PTR mode$[rbp]
	mov	ecx, 11
	call	?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z ; ImGui::GetNavInputAmount
	movss	DWORD PTR tv156[rbp], xmm0
	mov	edx, DWORD PTR mode$[rbp]
	mov	ecx, 10
	call	?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z ; ImGui::GetNavInputAmount
	movss	xmm1, DWORD PTR tv156[rbp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv175[rbp], xmm0
	mov	edx, DWORD PTR mode$[rbp]
	mov	ecx, 9
	call	?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z ; ImGui::GetNavInputAmount
	movss	DWORD PTR tv164[rbp], xmm0
	mov	edx, DWORD PTR mode$[rbp]
	mov	ecx, 8
	call	?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z ; ImGui::GetNavInputAmount
	movss	xmm1, DWORD PTR tv164[rbp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv173[rbp], xmm0
	movss	xmm2, DWORD PTR tv175[rbp]
	movss	xmm1, DWORD PTR tv173[rbp]
	lea	rcx, QWORD PTR $T6[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rdx, rax
	lea	rcx, QWORD PTR delta$[rbp]
	call	??Y@YAAEAUImVec2@@AEAU0@AEBU0@@Z	; operator+=
$LN4@GetNavInpu:
; Line 9053
	movss	xmm0, DWORD PTR slow_factor$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN9@GetNavInpu
	je	SHORT $LN5@GetNavInpu
$LN9@GetNavInpu:
	mov	ecx, 14
	call	?IsNavInputDown@ImGui@@YA_NH@Z		; ImGui::IsNavInputDown
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@GetNavInpu
; Line 9054
	movss	xmm1, DWORD PTR slow_factor$[rbp]
	lea	rcx, QWORD PTR delta$[rbp]
	call	??X@YAAEAUImVec2@@AEAU0@M@Z		; operator*=
$LN5@GetNavInpu:
; Line 9055
	movss	xmm0, DWORD PTR fast_factor$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN8@GetNavInpu
	je	SHORT $LN6@GetNavInpu
$LN8@GetNavInpu:
	mov	ecx, 15
	call	?IsNavInputDown@ImGui@@YA_NH@Z		; ImGui::IsNavInputDown
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@GetNavInpu
; Line 9056
	movss	xmm1, DWORD PTR fast_factor$[rbp]
	lea	rcx, QWORD PTR delta$[rbp]
	call	??X@YAAEAUImVec2@@AEAU0@M@Z		; operator*=
$LN6@GetNavInpu:
; Line 9057
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR delta$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 9058
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?GetNavInputAmount2d@ImGui@@YA?AUImVec2@@HW4ImGuiInputReadMode@@MM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+344]
	pop	rdi
	pop	rbp
	ret	0
?GetNavInputAmount2d@ImGui@@YA?AUImVec2@@HW4ImGuiInputReadMode@@MM@Z ENDP ; ImGui::GetNavInputAmount2d
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z
_TEXT	SEGMENT
g$ = 8
t$ = 36
tv165 = 244
tv149 = 244
tv133 = 244
tv87 = 244
tv83 = 244
n$ = 288
mode$ = 296
?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z PROC ; ImGui::GetNavInputAmount, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 9023
$LN14:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 9024
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 9025
	cmp	DWORD PTR mode$[rbp], 0
	jne	SHORT $LN2@GetNavInpu
; Line 9026
	movsxd	rax, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax*4+836]
	jmp	$LN1@GetNavInpu
$LN2@GetNavInpu:
; Line 9028
	movsxd	rax, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax*4+5280]
	movss	DWORD PTR t$[rbp], xmm0
; Line 9029
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR t$[rbp]
	jbe	SHORT $LN3@GetNavInpu
	cmp	DWORD PTR mode$[rbp], 2
	jne	SHORT $LN3@GetNavInpu
; Line 9030
	movsxd	rax, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax*4+5364]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN10@GetNavInpu
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv83[rbp], xmm0
	jmp	SHORT $LN11@GetNavInpu
$LN10@GetNavInpu:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv83[rbp], xmm0
$LN11@GetNavInpu:
	movss	xmm0, DWORD PTR tv83[rbp]
	jmp	$LN1@GetNavInpu
$LN3@GetNavInpu:
; Line 9031
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR t$[rbp]
	jbe	SHORT $LN4@GetNavInpu
; Line 9032
	xorps	xmm0, xmm0
	jmp	$LN1@GetNavInpu
$LN4@GetNavInpu:
; Line 9033
	cmp	DWORD PTR mode$[rbp], 1
	jne	SHORT $LN5@GetNavInpu
; Line 9034
	movss	xmm0, DWORD PTR t$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN12@GetNavInpu
	jne	SHORT $LN12@GetNavInpu
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv87[rbp], xmm0
	jmp	SHORT $LN13@GetNavInpu
$LN12@GetNavInpu:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv87[rbp], xmm0
$LN13@GetNavInpu:
	movss	xmm0, DWORD PTR tv87[rbp]
	jmp	$LN1@GetNavInpu
$LN5@GetNavInpu:
; Line 9035
	cmp	DWORD PTR mode$[rbp], 3
	jne	SHORT $LN6@GetNavInpu
; Line 9036
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+152]
	mulss	xmm0, DWORD PTR __real@3f4ccccd
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+148]
	mulss	xmm1, DWORD PTR __real@3f3851ec
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm2, DWORD PTR t$[rbp]
	subss	xmm2, DWORD PTR [rax+24]
	movss	DWORD PTR tv133[rbp], xmm2
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movss	xmm1, DWORD PTR t$[rbp]
	movss	xmm0, DWORD PTR tv133[rbp]
	call	?CalcTypematicRepeatAmount@ImGui@@YAHMMMM@Z ; ImGui::CalcTypematicRepeatAmount
	cvtsi2ss xmm0, eax
	jmp	$LN1@GetNavInpu
$LN6@GetNavInpu:
; Line 9037
	cmp	DWORD PTR mode$[rbp], 4
	jne	SHORT $LN7@GetNavInpu
; Line 9038
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+152]
	mulss	xmm0, DWORD PTR __real@40000000
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+148]
	mulss	xmm1, DWORD PTR __real@3fa00000
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm2, DWORD PTR t$[rbp]
	subss	xmm2, DWORD PTR [rax+24]
	movss	DWORD PTR tv149[rbp], xmm2
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movss	xmm1, DWORD PTR t$[rbp]
	movss	xmm0, DWORD PTR tv149[rbp]
	call	?CalcTypematicRepeatAmount@ImGui@@YAHMMMM@Z ; ImGui::CalcTypematicRepeatAmount
	cvtsi2ss xmm0, eax
	jmp	SHORT $LN1@GetNavInpu
$LN7@GetNavInpu:
; Line 9039
	cmp	DWORD PTR mode$[rbp], 5
	jne	SHORT $LN8@GetNavInpu
; Line 9040
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+152]
	mulss	xmm0, DWORD PTR __real@3e99999a
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+148]
	mulss	xmm1, DWORD PTR __real@3f3851ec
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm2, DWORD PTR t$[rbp]
	subss	xmm2, DWORD PTR [rax+24]
	movss	DWORD PTR tv165[rbp], xmm2
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movss	xmm1, DWORD PTR t$[rbp]
	movss	xmm0, DWORD PTR tv165[rbp]
	call	?CalcTypematicRepeatAmount@ImGui@@YAHMMMM@Z ; ImGui::CalcTypematicRepeatAmount
	cvtsi2ss xmm0, eax
	jmp	SHORT $LN1@GetNavInpu
$LN8@GetNavInpu:
; Line 9041
	xorps	xmm0, xmm0
$LN1@GetNavInpu:
; Line 9042
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?GetNavInputAmount@ImGui@@YAMHW4ImGuiInputReadMode@@@Z ENDP ; ImGui::GetNavInputAmount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavMoveRequestTryWrapping@ImGui@@YAXPEAUImGuiWindow@@H@Z
_TEXT	SEGMENT
g$ = 8
window$ = 256
move_flags$ = 264
?NavMoveRequestTryWrapping@ImGui@@YAXPEAUImGuiWindow@@H@Z PROC ; ImGui::NavMoveRequestTryWrapping, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8914
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8915
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8919
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax+7912], rcx
; Line 8920
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR move_flags$[rbp]
	mov	DWORD PTR [rax+7920], ecx
; Line 8921
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?NavMoveRequestTryWrapping@ImGui@@YAXPEAUImGuiWindow@@H@Z ENDP ; ImGui::NavMoveRequestTryWrapping
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavMoveRequestForward@ImGui@@YAXHHAEBUImRect@@H@Z
_TEXT	SEGMENT
g$ = 8
move_dir$ = 256
clip_dir$ = 264
bb_rel$ = 272
move_flags$ = 280
?NavMoveRequestForward@ImGui@@YAXHHAEBUImRect@@H@Z PROC	; ImGui::NavMoveRequestForward, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8902
$LN4:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8903
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8904
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7744], 0
	je	SHORT $LN3@NavMoveReq
	mov	eax, DWORD PTR ?__LINE__Var@?0??NavMoveRequestForward@ImGui@@YAXHHAEBUImRect@@H@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1GA@HNMFLEAL@?$AAg?$AA?4?$AAN?$AAa?$AAv?$AAM?$AAo?$AAv?$AAe?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@NavMoveReq:
; Line 8905
	call	?NavMoveRequestCancel@ImGui@@YAXXZ	; ImGui::NavMoveRequestCancel
; Line 8906
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR move_dir$[rbp]
	mov	DWORD PTR [rax+7752], ecx
; Line 8907
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR clip_dir$[rbp]
	mov	DWORD PTR [rax+7760], ecx
; Line 8908
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7744], 1
; Line 8909
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR move_flags$[rbp]
	mov	DWORD PTR [rax+7740], ecx
; Line 8910
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	rcx, QWORD PTR g$[rbp]
	movsxd	rcx, DWORD PTR [rcx+7700]
	imul	rcx, rcx, 16
	lea	rdi, QWORD PTR [rax+rcx+944]
	mov	rsi, QWORD PTR bb_rel$[rbp]
	mov	ecx, 16
	rep movsb
; Line 8911
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?NavMoveRequestForward@ImGui@@YAXHHAEBUImRect@@H@Z ENDP	; ImGui::NavMoveRequestForward
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavMoveRequestCancel@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
?NavMoveRequestCancel@ImGui@@YAXXZ PROC			; ImGui::NavMoveRequestCancel, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8895
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8896
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8897
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7736], 0
; Line 8898
	call	?NavUpdateAnyRequestFlag@ImGui@@YAXXZ	; ImGui::NavUpdateAnyRequestFlag
; Line 8899
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?NavMoveRequestCancel@ImGui@@YAXXZ ENDP			; ImGui::NavMoveRequestCancel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavMoveRequestButNoResultYet@ImGui@@YA_NXZ
_TEXT	SEGMENT
g$ = 8
tv73 = 212
?NavMoveRequestButNoResultYet@ImGui@@YA_NXZ PROC	; ImGui::NavMoveRequestButNoResultYet, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8889
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8890
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8891
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7736]
	test	eax, eax
	je	SHORT $LN3@NavMoveReq
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7776], 0
	jne	SHORT $LN3@NavMoveReq
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7872], 0
	jne	SHORT $LN3@NavMoveReq
	mov	DWORD PTR tv73[rbp], 1
	jmp	SHORT $LN4@NavMoveReq
$LN3@NavMoveReq:
	mov	DWORD PTR tv73[rbp], 0
$LN4@NavMoveReq:
	movzx	eax, BYTE PTR tv73[rbp]
; Line 8892
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?NavMoveRequestButNoResultYet@ImGui@@YA_NXZ ENDP	; ImGui::NavMoveRequestButNoResultYet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NavInitWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z
_TEXT	SEGMENT
g$ = 8
init_for_nav$ = 36
$T1 = 260
$T2 = 308
tv131 = 344
tv129 = 352
window$ = 400
force_reinit$ = 408
?NavInitWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z PROC	; ImGui::NavInitWindow, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8972
$LN9:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 400				; 00000190H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8973
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8974
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	cmp	QWORD PTR window$[rbp], rax
	je	SHORT $LN8@NavInitWin
	mov	eax, DWORD PTR ?__LINE__Var@?0??NavInitWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CM@NGAIJMCF@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAg?$AA?4?$AAN?$AAa?$AAv@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN8@NavInitWin:
; Line 8976
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 262144				; 00040000H
	test	eax, eax
	je	SHORT $LN2@NavInitWin
; Line 8978
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7636], 0
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7632], 0
; Line 8979
	jmp	$LN1@NavInitWin
$LN2@NavInitWin:
; Line 8982
	mov	BYTE PTR init_for_nav$[rbp], 0
; Line 8983
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+904]
	cmp	QWORD PTR window$[rbp], rax
	je	SHORT $LN4@NavInitWin
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	jne	SHORT $LN4@NavInitWin
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR window$[rbp]
	cmp	DWORD PTR [rcx+rax+936], 0
	je	SHORT $LN4@NavInitWin
	movzx	eax, BYTE PTR force_reinit$[rbp]
	test	eax, eax
	je	SHORT $LN3@NavInitWin
$LN4@NavInitWin:
; Line 8984
	mov	BYTE PTR init_for_nav$[rbp], 1
$LN3@NavInitWin:
; Line 8986
	movzx	eax, BYTE PTR init_for_nav$[rbp]
	test	eax, eax
	je	$LN5@NavInitWin
; Line 8988
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	QWORD PTR tv131[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7700]
	mov	DWORD PTR tv129[rbp], eax
	mov	r9, QWORD PTR tv131[rbp]
	xor	r8d, r8d
	mov	edx, DWORD PTR tv129[rbp]
	xor	ecx, ecx
	call	?SetNavID@ImGui@@YAXIW4ImGuiNavLayer@@IAEBUImRect@@@Z ; ImGui::SetNavID
; Line 8989
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7713], 1
; Line 8990
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7714], 0
; Line 8991
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7716], 0
; Line 8992
	lea	rcx, QWORD PTR $T2[rbp]
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rcx, QWORD PTR g$[rbp]
	lea	rdi, QWORD PTR [rcx+7720]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
; Line 8993
	call	?NavUpdateAnyRequestFlag@ImGui@@YAXXZ	; ImGui::NavUpdateAnyRequestFlag
; Line 8994
	jmp	SHORT $LN6@NavInitWin
$LN5@NavInitWin:
; Line 8997
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR g$[rbp]
	mov	rdx, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rdx+rax+936]
	mov	DWORD PTR [rcx+7632], eax
; Line 8998
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7636], 0
$LN6@NavInitWin:
$LN1@NavInitWin:
; Line 9000
	lea	rsp, QWORD PTR [rbp+368]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?NavInitWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z ENDP	; ImGui::NavInitWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z
_TEXT	SEGMENT
base_pos_clamped$ = 8
dir_prefered_order$9 = 40
n$10 = 84
dir$11 = 116
pos$12 = 152
dir_prefered_order$13 = 184
n$14 = 228
dir$15 = 260
avail_w$16 = 292
avail_h$17 = 324
pos$18 = 360
pos$ = 392
$T19 = 804
$T20 = 836
$T21 = 868
$T22 = 900
$T23 = 932
$T24 = 964
$T25 = 1012
$T26 = 1044
tv334 = 1060
tv316 = 1060
tv279 = 1060
tv269 = 1060
tv243 = 1060
tv230 = 1060
tv190 = 1060
tv183 = 1060
tv83 = 1060
tv76 = 1060
tv332 = 1064
tv314 = 1064
tv278 = 1064
tv268 = 1064
tv249 = 1064
tv236 = 1064
__$ArrayPad$ = 1072
__$ReturnUdt$ = 1120
ref_pos$ = 1128
size$ = 1136
last_dir$ = 1144
r_outer$ = 1152
r_avoid$ = 1160
policy$ = 1168
?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z PROC ; ImGui::FindBestWindowPosForPopupEx, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8490
$LN48:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1128				; 00000468H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 178				; 000000b2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1160]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8491
	mov	rax, QWORD PTR r_outer$[rbp]
	add	rax, 8
	mov	r8, QWORD PTR size$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T19[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rcx, QWORD PTR r_outer$[rbp]
	mov	r9, QWORD PTR [rax]
	mov	r8, rcx
	mov	rdx, QWORD PTR ref_pos$[rbp]
	lea	rcx, QWORD PTR base_pos_clamped$[rbp]
	call	?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z	; ImClamp
; Line 8496
	cmp	DWORD PTR policy$[rbp], 1
	jne	$LN8@FindBestWi
; Line 8498
	mov	DWORD PTR dir_prefered_order$9[rbp], 3
	mov	DWORD PTR dir_prefered_order$9[rbp+4], 1
	mov	DWORD PTR dir_prefered_order$9[rbp+8], 0
	mov	DWORD PTR dir_prefered_order$9[rbp+12], 2
; Line 8499
	mov	rax, QWORD PTR last_dir$[rbp]
	cmp	DWORD PTR [rax], -1
	je	SHORT $LN24@FindBestWi
	mov	DWORD PTR tv76[rbp], -1
	jmp	SHORT $LN25@FindBestWi
$LN24@FindBestWi:
	mov	DWORD PTR tv76[rbp], 0
$LN25@FindBestWi:
	mov	eax, DWORD PTR tv76[rbp]
	mov	DWORD PTR n$10[rbp], eax
	jmp	SHORT $LN4@FindBestWi
$LN2@FindBestWi:
	mov	eax, DWORD PTR n$10[rbp]
	inc	eax
	mov	DWORD PTR n$10[rbp], eax
$LN4@FindBestWi:
	cmp	DWORD PTR n$10[rbp], 4
	jge	$LN3@FindBestWi
; Line 8501
	cmp	DWORD PTR n$10[rbp], -1
	jne	SHORT $LN26@FindBestWi
	mov	rax, QWORD PTR last_dir$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv83[rbp], eax
	jmp	SHORT $LN27@FindBestWi
$LN26@FindBestWi:
	movsxd	rax, DWORD PTR n$10[rbp]
	mov	eax, DWORD PTR dir_prefered_order$9[rbp+rax*4]
	mov	DWORD PTR tv83[rbp], eax
$LN27@FindBestWi:
	mov	eax, DWORD PTR tv83[rbp]
	mov	DWORD PTR dir$11[rbp], eax
; Line 8502
	cmp	DWORD PTR n$10[rbp], -1
	je	SHORT $LN9@FindBestWi
	mov	rax, QWORD PTR last_dir$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR dir$11[rbp], eax
	jne	SHORT $LN9@FindBestWi
; Line 8503
	jmp	SHORT $LN2@FindBestWi
$LN9@FindBestWi:
; Line 8504
	lea	rcx, QWORD PTR pos$12[rbp]
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
; Line 8505
	cmp	DWORD PTR dir$11[rbp], 3
	jne	SHORT $LN10@FindBestWi
	mov	rax, QWORD PTR r_avoid$[rbp]
	movss	xmm2, DWORD PTR [rax+12]
	mov	rax, QWORD PTR r_avoid$[rbp]
	movss	xmm1, DWORD PTR [rax]
	lea	rcx, QWORD PTR $T20[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR pos$12[rbp], rax
$LN10@FindBestWi:
; Line 8506
	cmp	DWORD PTR dir$11[rbp], 1
	jne	SHORT $LN11@FindBestWi
	mov	rax, QWORD PTR r_avoid$[rbp]
	mov	rcx, QWORD PTR size$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR [rcx+4]
	movaps	xmm2, xmm0
	mov	rax, QWORD PTR r_avoid$[rbp]
	movss	xmm1, DWORD PTR [rax]
	lea	rcx, QWORD PTR $T21[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR pos$12[rbp], rax
$LN11@FindBestWi:
; Line 8507
	cmp	DWORD PTR dir$11[rbp], 0
	jne	SHORT $LN12@FindBestWi
	mov	rax, QWORD PTR r_avoid$[rbp]
	mov	rcx, QWORD PTR size$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	subss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR r_avoid$[rbp]
	movss	xmm2, DWORD PTR [rax+12]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T22[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR pos$12[rbp], rax
$LN12@FindBestWi:
; Line 8508
	cmp	DWORD PTR dir$11[rbp], 2
	jne	SHORT $LN13@FindBestWi
	mov	rax, QWORD PTR r_avoid$[rbp]
	mov	rcx, QWORD PTR size$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR r_avoid$[rbp]
	mov	rcx, QWORD PTR size$[rbp]
	movss	xmm1, DWORD PTR [rax+8]
	subss	xmm1, DWORD PTR [rcx]
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR $T23[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR pos$12[rbp], rax
$LN13@FindBestWi:
; Line 8509
	mov	r8, QWORD PTR size$[rbp]
	lea	rdx, QWORD PTR pos$12[rbp]
	lea	rcx, QWORD PTR $T25[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	r8, rax
	lea	rdx, QWORD PTR pos$12[rbp]
	lea	rcx, QWORD PTR $T24[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
	mov	rdx, rax
	mov	rcx, QWORD PTR r_outer$[rbp]
	call	?Contains@ImRect@@QEBA_NAEBU1@@Z	; ImRect::Contains
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN14@FindBestWi
; Line 8510
	jmp	$LN2@FindBestWi
$LN14@FindBestWi:
; Line 8511
	mov	rax, QWORD PTR last_dir$[rbp]
	mov	ecx, DWORD PTR dir$11[rbp]
	mov	DWORD PTR [rax], ecx
; Line 8512
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR pos$12[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@FindBestWi
; Line 8513
	jmp	$LN2@FindBestWi
$LN3@FindBestWi:
$LN8@FindBestWi:
; Line 8518
	cmp	DWORD PTR policy$[rbp], 2
	je	SHORT $LN16@FindBestWi
	cmp	DWORD PTR policy$[rbp], 0
	jne	$LN15@FindBestWi
$LN16@FindBestWi:
; Line 8520
	mov	DWORD PTR dir_prefered_order$13[rbp], 1
	mov	DWORD PTR dir_prefered_order$13[rbp+4], 3
	mov	DWORD PTR dir_prefered_order$13[rbp+8], 2
	mov	DWORD PTR dir_prefered_order$13[rbp+12], 0
; Line 8521
	mov	rax, QWORD PTR last_dir$[rbp]
	cmp	DWORD PTR [rax], -1
	je	SHORT $LN28@FindBestWi
	mov	DWORD PTR tv183[rbp], -1
	jmp	SHORT $LN29@FindBestWi
$LN28@FindBestWi:
	mov	DWORD PTR tv183[rbp], 0
$LN29@FindBestWi:
	mov	eax, DWORD PTR tv183[rbp]
	mov	DWORD PTR n$14[rbp], eax
	jmp	SHORT $LN7@FindBestWi
$LN5@FindBestWi:
	mov	eax, DWORD PTR n$14[rbp]
	inc	eax
	mov	DWORD PTR n$14[rbp], eax
$LN7@FindBestWi:
	cmp	DWORD PTR n$14[rbp], 4
	jge	$LN6@FindBestWi
; Line 8523
	cmp	DWORD PTR n$14[rbp], -1
	jne	SHORT $LN30@FindBestWi
	mov	rax, QWORD PTR last_dir$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv190[rbp], eax
	jmp	SHORT $LN31@FindBestWi
$LN30@FindBestWi:
	movsxd	rax, DWORD PTR n$14[rbp]
	mov	eax, DWORD PTR dir_prefered_order$13[rbp+rax*4]
	mov	DWORD PTR tv190[rbp], eax
$LN31@FindBestWi:
	mov	eax, DWORD PTR tv190[rbp]
	mov	DWORD PTR dir$15[rbp], eax
; Line 8524
	cmp	DWORD PTR n$14[rbp], -1
	je	SHORT $LN17@FindBestWi
	mov	rax, QWORD PTR last_dir$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR dir$15[rbp], eax
	jne	SHORT $LN17@FindBestWi
; Line 8525
	jmp	SHORT $LN5@FindBestWi
$LN17@FindBestWi:
; Line 8527
	cmp	DWORD PTR dir$15[rbp], 0
	jne	SHORT $LN32@FindBestWi
	mov	rax, QWORD PTR r_avoid$[rbp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR tv230[rbp], xmm0
	jmp	SHORT $LN33@FindBestWi
$LN32@FindBestWi:
	mov	rax, QWORD PTR r_outer$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	movss	DWORD PTR tv230[rbp], xmm0
$LN33@FindBestWi:
	cmp	DWORD PTR dir$15[rbp], 1
	jne	SHORT $LN34@FindBestWi
	mov	rax, QWORD PTR r_avoid$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	movss	DWORD PTR tv236[rbp], xmm0
	jmp	SHORT $LN35@FindBestWi
$LN34@FindBestWi:
	mov	rax, QWORD PTR r_outer$[rbp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR tv236[rbp], xmm0
$LN35@FindBestWi:
	movss	xmm0, DWORD PTR tv230[rbp]
	subss	xmm0, DWORD PTR tv236[rbp]
	movss	DWORD PTR avail_w$16[rbp], xmm0
; Line 8528
	cmp	DWORD PTR dir$15[rbp], 2
	jne	SHORT $LN36@FindBestWi
	mov	rax, QWORD PTR r_avoid$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR tv243[rbp], xmm0
	jmp	SHORT $LN37@FindBestWi
$LN36@FindBestWi:
	mov	rax, QWORD PTR r_outer$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	movss	DWORD PTR tv243[rbp], xmm0
$LN37@FindBestWi:
	cmp	DWORD PTR dir$15[rbp], 3
	jne	SHORT $LN38@FindBestWi
	mov	rax, QWORD PTR r_avoid$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	movss	DWORD PTR tv249[rbp], xmm0
	jmp	SHORT $LN39@FindBestWi
$LN38@FindBestWi:
	mov	rax, QWORD PTR r_outer$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR tv249[rbp], xmm0
$LN39@FindBestWi:
	movss	xmm0, DWORD PTR tv243[rbp]
	subss	xmm0, DWORD PTR tv249[rbp]
	movss	DWORD PTR avail_h$17[rbp], xmm0
; Line 8531
	mov	rax, QWORD PTR size$[rbp]
	movss	xmm0, DWORD PTR [rax]
	comiss	xmm0, DWORD PTR avail_w$16[rbp]
	jbe	SHORT $LN18@FindBestWi
	cmp	DWORD PTR dir$15[rbp], 0
	je	SHORT $LN19@FindBestWi
	cmp	DWORD PTR dir$15[rbp], 1
	jne	SHORT $LN18@FindBestWi
$LN19@FindBestWi:
; Line 8532
	jmp	$LN5@FindBestWi
$LN18@FindBestWi:
; Line 8533
	mov	rax, QWORD PTR size$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	comiss	xmm0, DWORD PTR avail_h$17[rbp]
	jbe	SHORT $LN20@FindBestWi
	cmp	DWORD PTR dir$15[rbp], 2
	je	SHORT $LN21@FindBestWi
	cmp	DWORD PTR dir$15[rbp], 3
	jne	SHORT $LN20@FindBestWi
$LN21@FindBestWi:
; Line 8534
	jmp	$LN5@FindBestWi
$LN20@FindBestWi:
; Line 8536
	lea	rcx, QWORD PTR pos$18[rbp]
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
; Line 8537
	cmp	DWORD PTR dir$15[rbp], 0
	jne	SHORT $LN42@FindBestWi
	mov	rax, QWORD PTR r_avoid$[rbp]
	mov	rcx, QWORD PTR size$[rbp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR tv269[rbp], xmm0
	jmp	SHORT $LN43@FindBestWi
$LN42@FindBestWi:
	cmp	DWORD PTR dir$15[rbp], 1
	jne	SHORT $LN40@FindBestWi
	mov	rax, QWORD PTR r_avoid$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	movss	DWORD PTR tv268[rbp], xmm0
	jmp	SHORT $LN41@FindBestWi
$LN40@FindBestWi:
	movss	xmm0, DWORD PTR base_pos_clamped$[rbp]
	movss	DWORD PTR tv268[rbp], xmm0
$LN41@FindBestWi:
	movss	xmm0, DWORD PTR tv268[rbp]
	movss	DWORD PTR tv269[rbp], xmm0
$LN43@FindBestWi:
	movss	xmm0, DWORD PTR tv269[rbp]
	movss	DWORD PTR pos$18[rbp], xmm0
; Line 8538
	cmp	DWORD PTR dir$15[rbp], 2
	jne	SHORT $LN46@FindBestWi
	mov	rax, QWORD PTR r_avoid$[rbp]
	mov	rcx, QWORD PTR size$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR tv279[rbp], xmm0
	jmp	SHORT $LN47@FindBestWi
$LN46@FindBestWi:
	cmp	DWORD PTR dir$15[rbp], 3
	jne	SHORT $LN44@FindBestWi
	mov	rax, QWORD PTR r_avoid$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	movss	DWORD PTR tv278[rbp], xmm0
	jmp	SHORT $LN45@FindBestWi
$LN44@FindBestWi:
	movss	xmm0, DWORD PTR base_pos_clamped$[rbp+4]
	movss	DWORD PTR tv278[rbp], xmm0
$LN45@FindBestWi:
	movss	xmm0, DWORD PTR tv278[rbp]
	movss	DWORD PTR tv279[rbp], xmm0
$LN47@FindBestWi:
	movss	xmm0, DWORD PTR tv279[rbp]
	movss	DWORD PTR pos$18[rbp+4], xmm0
; Line 8541
	mov	rax, QWORD PTR r_outer$[rbp]
	movss	xmm1, DWORD PTR [rax]
	movss	xmm0, DWORD PTR pos$18[rbp]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR pos$18[rbp], xmm0
; Line 8542
	mov	rax, QWORD PTR r_outer$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	movss	xmm0, DWORD PTR pos$18[rbp+4]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR pos$18[rbp+4], xmm0
; Line 8544
	mov	rax, QWORD PTR last_dir$[rbp]
	mov	ecx, DWORD PTR dir$15[rbp]
	mov	DWORD PTR [rax], ecx
; Line 8545
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR pos$18[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@FindBestWi
; Line 8546
	jmp	$LN5@FindBestWi
$LN6@FindBestWi:
$LN15@FindBestWi:
; Line 8550
	mov	rax, QWORD PTR last_dir$[rbp]
	mov	DWORD PTR [rax], -1
; Line 8553
	cmp	DWORD PTR policy$[rbp], 2
	jne	SHORT $LN22@FindBestWi
; Line 8554
	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR $T26[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r8, rax
	mov	rdx, QWORD PTR ref_pos$[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@FindBestWi
$LN22@FindBestWi:
; Line 8557
	mov	rax, QWORD PTR ref_pos$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR pos$[rbp], rax
; Line 8558
	mov	rax, QWORD PTR r_outer$[rbp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR tv316[rbp], xmm0
	mov	rax, QWORD PTR size$[rbp]
	movss	xmm0, DWORD PTR pos$[rbp]
	addss	xmm0, DWORD PTR [rax]
	mov	rax, QWORD PTR r_outer$[rbp]
	movss	xmm1, DWORD PTR [rax+8]
	call	??$ImMin@M@@YAMMM@Z			; ImMin<float>
	mov	rax, QWORD PTR size$[rbp]
	subss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR tv314[rbp], xmm0
	movss	xmm1, DWORD PTR tv316[rbp]
	movss	xmm0, DWORD PTR tv314[rbp]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR pos$[rbp], xmm0
; Line 8559
	mov	rax, QWORD PTR r_outer$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR tv334[rbp], xmm0
	mov	rax, QWORD PTR size$[rbp]
	movss	xmm0, DWORD PTR pos$[rbp+4]
	addss	xmm0, DWORD PTR [rax+4]
	mov	rax, QWORD PTR r_outer$[rbp]
	movss	xmm1, DWORD PTR [rax+12]
	call	??$ImMin@M@@YAMMM@Z			; ImMin<float>
	mov	rax, QWORD PTR size$[rbp]
	subss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR tv332[rbp], xmm0
	movss	xmm1, DWORD PTR tv334[rbp]
	movss	xmm0, DWORD PTR tv332[rbp]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR pos$[rbp+4], xmm0
; Line 8560
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR pos$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@FindBestWi:
; Line 8561
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1096]
	pop	rdi
	pop	rbp
	ret	0
?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z ENDP ; ImGui::FindBestWindowPosForPopupEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z
_TEXT	SEGMENT
g$ = 8
r_outer$ = 40
parent_window$8 = 88
horizontal_overlap$9 = 116
r_avoid$10 = 152
r_avoid$11 = 200
sc$12 = 244
ref_pos$13 = 280
r_avoid$14 = 312
$T15 = 740
$T16 = 788
$T17 = 836
$T18 = 884
tv235 = 916
tv222 = 916
tv186 = 916
tv84 = 920
__$ArrayPad$ = 928
__$ReturnUdt$ = 976
window$ = 984
?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z PROC ; ImGui::FindBestWindowPosForPopup, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8575
$LN12:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 1008				; 000003f0H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 140				; 0000008cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1048]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8576
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8578
	mov	rdx, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR r_outer$[rbp]
	call	?GetPopupAllowedExtentRect@ImGui@@YA?AUImRect@@PEAUImGuiWindow@@@Z ; ImGui::GetPopupAllowedExtentRect
; Line 8579
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 268435456				; 10000000H
	test	eax, eax
	je	$LN2@FindBestWi
; Line 8583
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+7184], rcx
	je	SHORT $LN10@FindBestWi
	mov	eax, DWORD PTR ?__LINE__Var@?0??FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z@4JA
	add	eax, 8
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DE@NAFIGFGG@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN10@FindBestWi:
; Line 8584
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7136				; 00001be0H
	mov	QWORD PTR tv84[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7136]
	sub	eax, 2
	mov	edx, eax
	mov	rcx, QWORD PTR tv84[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR parent_window$8[rbp], rax
; Line 8585
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5552]
	movss	DWORD PTR horizontal_overlap$9[rbp], xmm0
; Line 8586
	lea	rcx, QWORD PTR r_avoid$10[rbp]
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
; Line 8587
	mov	rax, QWORD PTR parent_window$8[rbp]
	movzx	eax, BYTE PTR [rax+346]
	test	eax, eax
	je	SHORT $LN3@FindBestWi
; Line 8588
	mov	rax, QWORD PTR parent_window$8[rbp]
	movss	xmm0, DWORD PTR [rax+604]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@7f7fffff
	mov	rax, QWORD PTR parent_window$8[rbp]
	movss	xmm2, DWORD PTR [rax+596]
	movss	xmm1, DWORD PTR __real@ff7fffff
	lea	rcx, QWORD PTR $T15[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	lea	rcx, QWORD PTR r_avoid$10[rbp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN4@FindBestWi
$LN3@FindBestWi:
; Line 8590
	mov	rax, QWORD PTR parent_window$8[rbp]
	mov	rcx, QWORD PTR parent_window$8[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	addss	xmm0, DWORD PTR [rcx+24]
	subss	xmm0, DWORD PTR horizontal_overlap$9[rbp]
	mov	rax, QWORD PTR parent_window$8[rbp]
	subss	xmm0, DWORD PTR [rax+132]
	mov	rax, QWORD PTR parent_window$8[rbp]
	movss	xmm1, DWORD PTR [rax+16]
	addss	xmm1, DWORD PTR horizontal_overlap$9[rbp]
	movss	xmm2, DWORD PTR __real@7f7fffff
	movss	DWORD PTR [rsp+32], xmm2
	movaps	xmm3, xmm0
	movss	xmm2, DWORD PTR __real@ff7fffff
	lea	rcx, QWORD PTR $T16[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	lea	rcx, QWORD PTR r_avoid$10[rbp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
$LN4@FindBestWi:
; Line 8591
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 172				; 000000acH
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 24
	mov	rdx, QWORD PTR window$[rbp]
	add	rdx, 16
	mov	DWORD PTR [rsp+48], 0
	lea	rdi, QWORD PTR r_avoid$10[rbp]
	mov	QWORD PTR [rsp+40], rdi
	lea	rdi, QWORD PTR r_outer$[rbp]
	mov	QWORD PTR [rsp+32], rdi
	mov	r9, rax
	mov	r8, rcx
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z ; ImGui::FindBestWindowPosForPopupEx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@FindBestWi
$LN2@FindBestWi:
; Line 8593
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	je	$LN5@FindBestWi
; Line 8595
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+20]
	addss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+16]
	addss	xmm1, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm2, DWORD PTR [rax+20]
	subss	xmm2, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm3, DWORD PTR [rax+16]
	subss	xmm3, DWORD PTR __real@3f800000
	movss	DWORD PTR tv186[rbp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv186[rbp]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR r_avoid$11[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
; Line 8596
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 172				; 000000acH
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 24
	mov	rdx, QWORD PTR window$[rbp]
	add	rdx, 16
	mov	DWORD PTR [rsp+48], 0
	lea	rdi, QWORD PTR r_avoid$11[rbp]
	mov	QWORD PTR [rsp+40], rdi
	lea	rdi, QWORD PTR r_outer$[rbp]
	mov	QWORD PTR [rsp+32], rdi
	mov	r9, rax
	mov	r8, rcx
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z ; ImGui::FindBestWindowPosForPopupEx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@FindBestWi
$LN5@FindBestWi:
; Line 8598
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 33554432				; 02000000H
	test	eax, eax
	je	$LN6@FindBestWi
; Line 8601
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5652]
	movss	DWORD PTR sc$12[rbp], xmm0
; Line 8602
	lea	rcx, QWORD PTR ref_pos$13[rbp]
	call	?NavCalcPreferredRefPos@ImGui@@YA?AUImVec2@@XZ ; ImGui::NavCalcPreferredRefPos
; Line 8603
	lea	rcx, QWORD PTR r_avoid$14[rbp]
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
; Line 8604
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7710]
	test	eax, eax
	jne	$LN7@FindBestWi
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7711]
	test	eax, eax
	je	$LN7@FindBestWi
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+8]
	and	eax, 4
	test	eax, eax
	jne	$LN7@FindBestWi
; Line 8605
	movss	xmm0, DWORD PTR ref_pos$13[rbp+4]
	addss	xmm0, DWORD PTR __real@41000000
	movss	xmm1, DWORD PTR ref_pos$13[rbp]
	addss	xmm1, DWORD PTR __real@41800000
	movss	xmm2, DWORD PTR ref_pos$13[rbp+4]
	subss	xmm2, DWORD PTR __real@41000000
	movss	xmm3, DWORD PTR ref_pos$13[rbp]
	subss	xmm3, DWORD PTR __real@41800000
	movss	DWORD PTR tv222[rbp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv222[rbp]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T17[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	lea	rcx, QWORD PTR r_avoid$14[rbp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	jmp	$LN8@FindBestWi
$LN7@FindBestWi:
; Line 8607
	movss	xmm0, DWORD PTR __real@41c00000
	mulss	xmm0, DWORD PTR sc$12[rbp]
	movss	xmm1, DWORD PTR ref_pos$13[rbp+4]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR __real@41c00000
	mulss	xmm1, DWORD PTR sc$12[rbp]
	movss	xmm2, DWORD PTR ref_pos$13[rbp]
	addss	xmm2, xmm1
	movaps	xmm1, xmm2
	movss	xmm2, DWORD PTR ref_pos$13[rbp+4]
	subss	xmm2, DWORD PTR __real@41000000
	movss	xmm3, DWORD PTR ref_pos$13[rbp]
	subss	xmm3, DWORD PTR __real@41800000
	movss	DWORD PTR tv235[rbp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv235[rbp]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T18[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	lea	rcx, QWORD PTR r_avoid$14[rbp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
$LN8@FindBestWi:
; Line 8608
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 172				; 000000acH
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 24
	mov	DWORD PTR [rsp+48], 2
	lea	rdx, QWORD PTR r_avoid$14[rbp]
	mov	QWORD PTR [rsp+40], rdx
	lea	rdx, QWORD PTR r_outer$[rbp]
	mov	QWORD PTR [rsp+32], rdx
	mov	r9, rax
	mov	r8, rcx
	lea	rdx, QWORD PTR ref_pos$13[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	?FindBestWindowPosForPopupEx@ImGui@@YA?AUImVec2@@AEBU2@0PEAHAEBUImRect@@2W4ImGuiPopupPositionPolicy@@@Z ; ImGui::FindBestWindowPosForPopupEx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@FindBestWi
$LN6@FindBestWi:
; Line 8610
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN11@FindBestWi
	mov	eax, DWORD PTR ?__LINE__Var@?0??FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z@4JA
	add	eax, 35					; 00000023H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN11@FindBestWi:
; Line 8611
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@FindBestWi:
; Line 8612
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+944]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z ENDP ; ImGui::FindBestWindowPosForPopup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetTopMostPopupModal@ImGui@@YAPEAUImGuiWindow@@XZ
_TEXT	SEGMENT
g$ = 8
n$1 = 36
popup$2 = 72
?GetTopMostPopupModal@ImGui@@YAPEAUImGuiWindow@@XZ PROC	; ImGui::GetTopMostPopupModal, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8151
$LN8:
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8152
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8153
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7576]
	dec	eax
	mov	DWORD PTR n$1[rbp], eax
	jmp	SHORT $LN4@GetTopMost
$LN2@GetTopMost:
	mov	eax, DWORD PTR n$1[rbp]
	dec	eax
	mov	DWORD PTR n$1[rbp], eax
$LN4@GetTopMost:
	cmp	DWORD PTR n$1[rbp], 0
	jl	SHORT $LN3@GetTopMost
; Line 8154
	movsxd	rax, DWORD PTR n$1[rbp]
	imul	rax, rax, 48				; 00000030H
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+7584]
	mov	rax, QWORD PTR [rcx+rax+8]
	mov	QWORD PTR popup$2[rbp], rax
	cmp	QWORD PTR popup$2[rbp], 0
	je	SHORT $LN5@GetTopMost
; Line 8155
	mov	rax, QWORD PTR popup$2[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 134217728				; 08000000H
	test	eax, eax
	je	SHORT $LN6@GetTopMost
; Line 8156
	mov	rax, QWORD PTR popup$2[rbp]
	jmp	SHORT $LN1@GetTopMost
$LN6@GetTopMost:
$LN5@GetTopMost:
	jmp	SHORT $LN2@GetTopMost
$LN3@GetTopMost:
; Line 8157
	xor	eax, eax
$LN1@GetTopMost:
; Line 8158
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?GetTopMostPopupModal@ImGui@@YAPEAUImGuiWindow@@XZ ENDP	; ImGui::GetTopMostPopupModal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetPopupAllowedExtentRect@ImGui@@YA?AUImRect@@PEAUImGuiWindow@@@Z
_TEXT	SEGMENT
g$ = 8
r_screen$ = 40
padding$ = 88
$T5 = 308
tv80 = 324
tv87 = 328
tv69 = 328
__$ArrayPad$ = 336
__$ReturnUdt$ = 384
window$ = 392
?GetPopupAllowedExtentRect@ImGui@@YA?AUImRect@@PEAUImGuiWindow@@@Z PROC ; ImGui::GetPopupAllowedExtentRect, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8565
$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 384				; 00000180H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 40					; 00000028H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+424]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8566
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8568
	call	?GetMainViewport@ImGui@@YAPEAUImGuiViewport@@XZ ; ImGui::GetMainViewport
	mov	QWORD PTR tv69[rbp], rax
	lea	rdx, QWORD PTR r_screen$[rbp]
	mov	rcx, QWORD PTR tv69[rbp]
	call	?GetMainRect@ImGuiViewportP@@QEBA?AUImRect@@XZ ; ImGuiViewportP::GetMainRect
; Line 8569
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+5644]
	mov	QWORD PTR padding$[rbp], rax
; Line 8570
	lea	rcx, QWORD PTR r_screen$[rbp]
	call	?GetHeight@ImRect@@QEBAMXZ		; ImRect::GetHeight
	movss	xmm1, DWORD PTR padding$[rbp+4]
	mulss	xmm1, DWORD PTR __real@40000000
	comiss	xmm0, xmm1
	jbe	SHORT $LN3@GetPopupAl
	movss	xmm0, DWORD PTR padding$[rbp+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR tv80[rbp], xmm0
	jmp	SHORT $LN4@GetPopupAl
$LN3@GetPopupAl:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv80[rbp], xmm0
$LN4@GetPopupAl:
	lea	rcx, QWORD PTR r_screen$[rbp]
	call	?GetWidth@ImRect@@QEBAMXZ		; ImRect::GetWidth
	movss	xmm1, DWORD PTR padding$[rbp]
	mulss	xmm1, DWORD PTR __real@40000000
	comiss	xmm0, xmm1
	jbe	SHORT $LN5@GetPopupAl
	movss	xmm0, DWORD PTR padding$[rbp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR tv87[rbp], xmm0
	jmp	SHORT $LN6@GetPopupAl
$LN5@GetPopupAl:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv87[rbp], xmm0
$LN6@GetPopupAl:
	movss	xmm2, DWORD PTR tv80[rbp]
	movss	xmm1, DWORD PTR tv87[rbp]
	lea	rcx, QWORD PTR $T5[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rdx, rax
	lea	rcx, QWORD PTR r_screen$[rbp]
	call	?Expand@ImRect@@QEAAXAEBUImVec2@@@Z	; ImRect::Expand
; Line 8571
	lea	rax, QWORD PTR r_screen$[rbp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rbp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 8572
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?GetPopupAllowedExtentRect@ImGui@@YA?AUImRect@@PEAUImGuiWindow@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+352]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?GetPopupAllowedExtentRect@ImGui@@YA?AUImRect@@PEAUImGuiWindow@@@Z ENDP ; ImGui::GetPopupAllowedExtentRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BeginTooltipEx@ImGui@@YAXHH@Z
_TEXT	SEGMENT
g$ = 8
tooltip_pos$5 = 40
window_name$ = 72
window$6 = 120
flags$ = 148
$T7 = 372
$T8 = 404
tv150 = 420
__$ArrayPad$ = 424
extra_flags$ = 464
tooltip_flags$ = 472
?BeginTooltipEx@ImGui@@YAXHH@Z PROC			; ImGui::BeginTooltipEx, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8053
$LN8:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 472				; 000001d8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+504]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8054
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8056
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8013]
	test	eax, eax
	jne	SHORT $LN3@BeginToolt
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8014]
	test	eax, eax
	je	$LN2@BeginToolt
$LN3@BeginToolt:
; Line 8062
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR __real@41000000
	mulss	xmm0, DWORD PTR [rax+5652]
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR __real@41800000
	mulss	xmm1, DWORD PTR [rax+5652]
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR $T7[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rcx, QWORD PTR g$[rbp]
	add	rcx, 296				; 00000128H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR tooltip_pos$5[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
; Line 8063
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T8[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r8, rax
	xor	edx, edx
	lea	rcx, QWORD PTR tooltip_pos$5[rbp]
	call	?SetNextWindowPos@ImGui@@YAXAEBUImVec2@@H0@Z ; ImGui::SetNextWindowPos
; Line 8064
	mov	eax, 16
	imul	rax, rax, 4
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax+5680]
	mulss	xmm0, DWORD PTR __real@3f19999a
	call	?SetNextWindowBgAlpha@ImGui@@YAXM@Z	; ImGui::SetNextWindowBgAlpha
; Line 8066
	mov	eax, DWORD PTR tooltip_flags$[rbp]
	or	eax, 1
	mov	DWORD PTR tooltip_flags$[rbp], eax
$LN2@BeginToolt:
; Line 8070
	mov	rax, QWORD PTR g$[rbp]
	mov	r9d, DWORD PTR [rax+12328]
	lea	r8, OFFSET FLAT:??_C@_0P@DHLMFJKK@?$CD?$CDTooltip_?$CF02d@
	mov	edx, 16
	lea	rcx, QWORD PTR window_name$[rbp]
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
; Line 8071
	mov	eax, DWORD PTR tooltip_flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN4@BeginToolt
; Line 8072
	lea	rcx, QWORD PTR window_name$[rbp]
	call	?FindWindowByName@ImGui@@YAPEAUImGuiWindow@@PEBD@Z ; ImGui::FindWindowByName
	mov	QWORD PTR window$6[rbp], rax
	cmp	QWORD PTR window$6[rbp], 0
	je	SHORT $LN5@BeginToolt
; Line 8073
	mov	rax, QWORD PTR window$6[rbp]
	movzx	eax, BYTE PTR [rax+142]
	test	eax, eax
	je	SHORT $LN6@BeginToolt
; Line 8076
	mov	rax, QWORD PTR window$6[rbp]
	mov	BYTE PTR [rax+149], 1
; Line 8077
	mov	rax, QWORD PTR window$6[rbp]
	mov	BYTE PTR [rax+176], 1
; Line 8078
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+12328]
	inc	eax
	mov	DWORD PTR tv150[rbp], eax
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR tv150[rbp]
	mov	DWORD PTR [rax+12328], ecx
	mov	r9d, DWORD PTR tv150[rbp]
	lea	r8, OFFSET FLAT:??_C@_0P@DHLMFJKK@?$CD?$CDTooltip_?$CF02d@
	mov	edx, 16
	lea	rcx, QWORD PTR window_name$[rbp]
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
$LN6@BeginToolt:
$LN5@BeginToolt:
$LN4@BeginToolt:
; Line 8080
	mov	DWORD PTR flags$[rbp], 34341703		; 020c0347H
; Line 8081
	mov	eax, DWORD PTR extra_flags$[rbp]
	mov	ecx, DWORD PTR flags$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	r8d, eax
	xor	edx, edx
	lea	rcx, QWORD PTR window_name$[rbp]
	call	?Begin@ImGui@@YA_NPEBDPEA_NH@Z		; ImGui::Begin
; Line 8082
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?BeginTooltipEx@ImGui@@YAXHH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+440]
	pop	rdi
	pop	rbp
	ret	0
?BeginTooltipEx@ImGui@@YAXHH@Z ENDP			; ImGui::BeginTooltipEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BeginPopupEx@ImGui@@YA_NIH@Z
_TEXT	SEGMENT
g$ = 8
name$ = 40
is_open$ = 84
__$ArrayPad$ = 296
id$ = 336
flags$ = 344
?BeginPopupEx@ImGui@@YA_NIH@Z PROC			; ImGui::BeginPopupEx, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8328
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+376]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8329
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8330
	xor	edx, edx
	mov	ecx, DWORD PTR id$[rbp]
	call	?IsPopupOpen@ImGui@@YA_NIH@Z		; ImGui::IsPopupOpen
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@BeginPopup
; Line 8332
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7344				; 00001cb0H
	mov	rcx, rax
	call	?ClearFlags@ImGuiNextWindowData@@QEAAXXZ ; ImGuiNextWindowData::ClearFlags
; Line 8333
	xor	al, al
	jmp	$LN1@BeginPopup
$LN2@BeginPopup:
; Line 8337
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 268435456				; 10000000H
	test	eax, eax
	je	SHORT $LN3@BeginPopup
; Line 8338
	mov	rax, QWORD PTR g$[rbp]
	mov	r9d, DWORD PTR [rax+7592]
	lea	r8, OFFSET FLAT:??_C@_0M@NANGKBBK@?$CD?$CDMenu_?$CF02d@
	mov	edx, 20
	lea	rcx, QWORD PTR name$[rbp]
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
	jmp	SHORT $LN4@BeginPopup
$LN3@BeginPopup:
; Line 8340
	mov	r9d, DWORD PTR id$[rbp]
	lea	r8, OFFSET FLAT:??_C@_0N@PIPFDMLM@?$CD?$CDPopup_?$CF08x@
	mov	edx, 20
	lea	rcx, QWORD PTR name$[rbp]
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
$LN4@BeginPopup:
; Line 8342
	mov	eax, DWORD PTR flags$[rbp]
	bts	eax, 26
	mov	DWORD PTR flags$[rbp], eax
; Line 8343
	mov	r8d, DWORD PTR flags$[rbp]
	xor	edx, edx
	lea	rcx, QWORD PTR name$[rbp]
	call	?Begin@ImGui@@YA_NPEBDPEA_NH@Z		; ImGui::Begin
	mov	BYTE PTR is_open$[rbp], al
; Line 8344
	movzx	eax, BYTE PTR is_open$[rbp]
	test	eax, eax
	jne	SHORT $LN5@BeginPopup
; Line 8345
	call	?EndPopup@ImGui@@YAXXZ			; ImGui::EndPopup
$LN5@BeginPopup:
; Line 8347
	movzx	eax, BYTE PTR is_open$[rbp]
$LN1@BeginPopup:
; Line 8348
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?BeginPopupEx@ImGui@@YA_NIH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
?BeginPopupEx@ImGui@@YA_NIH@Z ENDP			; ImGui::BeginPopupEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsPopupOpen@ImGui@@YA_NIH@Z
_TEXT	SEGMENT
g$ = 8
n$1 = 36
tv84 = 244
tv77 = 244
tv144 = 248
tv129 = 248
tv147 = 256
id$ = 304
popup_flags$ = 312
?IsPopupOpen@ImGui@@YA_NIH@Z PROC			; ImGui::IsPopupOpen, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8111
$LN20:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8112
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8113
	mov	eax, DWORD PTR popup_flags$[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	$LN5@IsPopupOpe
; Line 8117
	cmp	DWORD PTR id$[rbp], 0
	je	SHORT $LN13@IsPopupOpe
	mov	eax, DWORD PTR ?__LINE__Var@?0??IsPopupOpen@ImGui@@YA_NIH@Z@4JA
	add	eax, 6
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BA@OHMFOIK@?$AAi?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN13@IsPopupOpe:
; Line 8118
	mov	eax, DWORD PTR popup_flags$[rbp]
	and	eax, 256				; 00000100H
	test	eax, eax
	je	SHORT $LN7@IsPopupOpe
; Line 8119
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7576], 0
	jle	SHORT $LN14@IsPopupOpe
	mov	DWORD PTR tv77[rbp], 1
	jmp	SHORT $LN15@IsPopupOpe
$LN14@IsPopupOpe:
	mov	DWORD PTR tv77[rbp], 0
$LN15@IsPopupOpe:
	movzx	eax, BYTE PTR tv77[rbp]
	jmp	$LN1@IsPopupOpe
	jmp	SHORT $LN8@IsPopupOpe
$LN7@IsPopupOpe:
; Line 8121
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7592]
	cmp	DWORD PTR [rax+7576], ecx
	jle	SHORT $LN16@IsPopupOpe
	mov	DWORD PTR tv84[rbp], 1
	jmp	SHORT $LN17@IsPopupOpe
$LN16@IsPopupOpe:
	mov	DWORD PTR tv84[rbp], 0
$LN17@IsPopupOpe:
	movzx	eax, BYTE PTR tv84[rbp]
	jmp	$LN1@IsPopupOpe
$LN8@IsPopupOpe:
; Line 8122
	jmp	$LN6@IsPopupOpe
$LN5@IsPopupOpe:
; Line 8125
	mov	eax, DWORD PTR popup_flags$[rbp]
	and	eax, 256				; 00000100H
	test	eax, eax
	je	SHORT $LN9@IsPopupOpe
; Line 8128
	mov	DWORD PTR n$1[rbp], 0
	jmp	SHORT $LN4@IsPopupOpe
$LN2@IsPopupOpe:
	mov	eax, DWORD PTR n$1[rbp]
	inc	eax
	mov	DWORD PTR n$1[rbp], eax
$LN4@IsPopupOpe:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7576]
	cmp	DWORD PTR n$1[rbp], eax
	jge	SHORT $LN3@IsPopupOpe
; Line 8129
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv129[rbp], rax
	mov	edx, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR tv129[rbp]
	call	??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ; ImVector<ImGuiPopupData>::operator[]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN11@IsPopupOpe
; Line 8130
	mov	al, 1
	jmp	SHORT $LN1@IsPopupOpe
$LN11@IsPopupOpe:
	jmp	SHORT $LN2@IsPopupOpe
$LN3@IsPopupOpe:
; Line 8131
	xor	al, al
	jmp	SHORT $LN1@IsPopupOpe
; Line 8132
	jmp	SHORT $LN10@IsPopupOpe
$LN9@IsPopupOpe:
; Line 8136
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7592]
	cmp	DWORD PTR [rax+7576], ecx
	jle	SHORT $LN18@IsPopupOpe
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv144[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	edx, DWORD PTR [rax+7592]
	mov	rcx, QWORD PTR tv144[rbp]
	call	??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ; ImVector<ImGuiPopupData>::operator[]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN18@IsPopupOpe
	mov	DWORD PTR tv147[rbp], 1
	jmp	SHORT $LN19@IsPopupOpe
$LN18@IsPopupOpe:
	mov	DWORD PTR tv147[rbp], 0
$LN19@IsPopupOpe:
	movzx	eax, BYTE PTR tv147[rbp]
$LN10@IsPopupOpe:
$LN6@IsPopupOpe:
$LN1@IsPopupOpe:
; Line 8139
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
?IsPopupOpen@ImGui@@YA_NIH@Z ENDP			; ImGui::IsPopupOpen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ClosePopupsOverWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z
_TEXT	SEGMENT
g$ = 8
popup_count_to_keep$ = 36
popup$1 = 72
ref_window_is_descendent_of_popup$2 = 100
n$3 = 132
popup_window$4 = 168
tv134 = 376
tv77 = 376
ref_window$ = 416
restore_focus_to_window_under_popup$ = 424
?ClosePopupsOverWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z PROC ; ImGui::ClosePopupsOverWindow, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8225
$LN18:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8226
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8227
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7576], 0
	jne	SHORT $LN8@ClosePopup
; Line 8228
	jmp	$LN1@ClosePopup
$LN8@ClosePopup:
; Line 8231
	mov	DWORD PTR popup_count_to_keep$[rbp], 0
; Line 8232
	cmp	QWORD PTR ref_window$[rbp], 0
	je	$LN9@ClosePopup
; Line 8235
	jmp	SHORT $LN4@ClosePopup
$LN2@ClosePopup:
	mov	eax, DWORD PTR popup_count_to_keep$[rbp]
	inc	eax
	mov	DWORD PTR popup_count_to_keep$[rbp], eax
$LN4@ClosePopup:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7576]
	cmp	DWORD PTR popup_count_to_keep$[rbp], eax
	jge	$LN3@ClosePopup
; Line 8237
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv77[rbp], rax
	mov	edx, DWORD PTR popup_count_to_keep$[rbp]
	mov	rcx, QWORD PTR tv77[rbp]
	call	??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ; ImVector<ImGuiPopupData>::operator[]
	mov	QWORD PTR popup$1[rbp], rax
; Line 8238
	mov	rax, QWORD PTR popup$1[rbp]
	cmp	QWORD PTR [rax+8], 0
	jne	SHORT $LN10@ClosePopup
; Line 8239
	jmp	SHORT $LN2@ClosePopup
$LN10@ClosePopup:
; Line 8240
	mov	rax, QWORD PTR popup$1[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	jne	SHORT $LN17@ClosePopup
	mov	eax, DWORD PTR ?__LINE__Var@?0??ClosePopupsOverWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z@4JA
	add	eax, 15
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1GI@FJFNMD@?$AA?$CI?$AAp?$AAo?$AAp?$AAu?$AAp?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN17@ClosePopup:
; Line 8241
	mov	rax, QWORD PTR popup$1[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN11@ClosePopup
; Line 8242
	jmp	$LN2@ClosePopup
$LN11@ClosePopup:
; Line 8249
	mov	BYTE PTR ref_window_is_descendent_of_popup$2[rbp], 0
; Line 8250
	mov	eax, DWORD PTR popup_count_to_keep$[rbp]
	mov	DWORD PTR n$3[rbp], eax
	jmp	SHORT $LN7@ClosePopup
$LN5@ClosePopup:
	mov	eax, DWORD PTR n$3[rbp]
	inc	eax
	mov	DWORD PTR n$3[rbp], eax
$LN7@ClosePopup:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7576]
	cmp	DWORD PTR n$3[rbp], eax
	jge	SHORT $LN6@ClosePopup
; Line 8251
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv134[rbp], rax
	mov	edx, DWORD PTR n$3[rbp]
	mov	rcx, QWORD PTR tv134[rbp]
	call	??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ; ImVector<ImGuiPopupData>::operator[]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR popup_window$4[rbp], rax
	cmp	QWORD PTR popup_window$4[rbp], 0
	je	SHORT $LN12@ClosePopup
; Line 8252
	mov	rax, QWORD PTR popup_window$4[rbp]
	mov	rcx, QWORD PTR ref_window$[rbp]
	mov	rcx, QWORD PTR [rcx+904]
	cmp	QWORD PTR [rax+904], rcx
	jne	SHORT $LN13@ClosePopup
; Line 8254
	mov	BYTE PTR ref_window_is_descendent_of_popup$2[rbp], 1
; Line 8255
	jmp	SHORT $LN6@ClosePopup
$LN13@ClosePopup:
$LN12@ClosePopup:
; Line 8256
	jmp	SHORT $LN5@ClosePopup
$LN6@ClosePopup:
; Line 8257
	movzx	eax, BYTE PTR ref_window_is_descendent_of_popup$2[rbp]
	test	eax, eax
	jne	SHORT $LN14@ClosePopup
; Line 8258
	jmp	SHORT $LN3@ClosePopup
$LN14@ClosePopup:
; Line 8259
	jmp	$LN2@ClosePopup
$LN3@ClosePopup:
$LN9@ClosePopup:
; Line 8261
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7576]
	cmp	DWORD PTR popup_count_to_keep$[rbp], eax
	jge	SHORT $LN15@ClosePopup
; Line 8264
	movzx	edx, BYTE PTR restore_focus_to_window_under_popup$[rbp]
	mov	ecx, DWORD PTR popup_count_to_keep$[rbp]
	call	?ClosePopupToLevel@ImGui@@YAXH_N@Z	; ImGui::ClosePopupToLevel
$LN15@ClosePopup:
$LN1@ClosePopup:
; Line 8266
	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
?ClosePopupsOverWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z ENDP ; ImGui::ClosePopupsOverWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ClosePopupToLevel@ImGui@@YAXH_N@Z
_TEXT	SEGMENT
g$ = 8
focus_window$ = 40
popup_window$ = 72
tv91 = 280
tv85 = 280
tv78 = 280
remaining$ = 320
restore_focus_to_window_under_popup$ = 328
?ClosePopupToLevel@ImGui@@YAXH_N@Z PROC			; ImGui::ClosePopupToLevel, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8269
$LN9:
	mov	BYTE PTR [rsp+16], dl
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8270
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8272
	cmp	DWORD PTR remaining$[rbp], 0
	jl	SHORT $LN7@ClosePopup
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7576]
	cmp	DWORD PTR remaining$[rbp], eax
	jl	SHORT $LN8@ClosePopup
$LN7@ClosePopup:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ClosePopupToLevel@ImGui@@YAXH_N@Z@4JA
	add	eax, 3
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1GI@BPADGCJE@?$AAr?$AAe?$AAm?$AAa?$AAi?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN8@ClosePopup:
; Line 8275
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv78[rbp], rax
	mov	edx, DWORD PTR remaining$[rbp]
	mov	rcx, QWORD PTR tv78[rbp]
	call	??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ; ImVector<ImGuiPopupData>::operator[]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR focus_window$[rbp], rax
; Line 8276
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv85[rbp], rax
	mov	edx, DWORD PTR remaining$[rbp]
	mov	rcx, QWORD PTR tv85[rbp]
	call	??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ; ImVector<ImGuiPopupData>::operator[]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR popup_window$[rbp], rax
; Line 8277
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv91[rbp], rax
	mov	edx, DWORD PTR remaining$[rbp]
	mov	rcx, QWORD PTR tv91[rbp]
	call	?resize@?$ImVector@UImGuiPopupData@@@@QEAAXH@Z ; ImVector<ImGuiPopupData>::resize
; Line 8279
	movzx	eax, BYTE PTR restore_focus_to_window_under_popup$[rbp]
	test	eax, eax
	je	SHORT $LN2@ClosePopup
; Line 8281
	cmp	QWORD PTR focus_window$[rbp], 0
	je	SHORT $LN3@ClosePopup
	mov	rax, QWORD PTR focus_window$[rbp]
	movzx	eax, BYTE PTR [rax+143]
	test	eax, eax
	jne	SHORT $LN3@ClosePopup
	cmp	QWORD PTR popup_window$[rbp], 0
	je	SHORT $LN3@ClosePopup
; Line 8284
	xor	edx, edx
	mov	rcx, QWORD PTR popup_window$[rbp]
	call	?FocusTopMostWindowUnderOne@ImGui@@YAXPEAUImGuiWindow@@0@Z ; ImGui::FocusTopMostWindowUnderOne
; Line 8285
	jmp	SHORT $LN4@ClosePopup
$LN3@ClosePopup:
; Line 8288
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7700], 0
	jne	SHORT $LN5@ClosePopup
	cmp	QWORD PTR focus_window$[rbp], 0
	je	SHORT $LN5@ClosePopup
; Line 8289
	mov	rcx, QWORD PTR focus_window$[rbp]
	call	?NavRestoreLastChildNavWindow@ImGui@@YAPEAUImGuiWindow@@PEAU2@@Z ; ImGui::NavRestoreLastChildNavWindow
	mov	QWORD PTR focus_window$[rbp], rax
$LN5@ClosePopup:
; Line 8290
	mov	rcx, QWORD PTR focus_window$[rbp]
	call	?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::FocusWindow
$LN4@ClosePopup:
$LN2@ClosePopup:
; Line 8293
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?ClosePopupToLevel@ImGui@@YAXH_N@Z ENDP			; ImGui::ClosePopupToLevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?OpenPopupEx@ImGui@@YAXIH@Z
_TEXT	SEGMENT
g$ = 8
parent_window$ = 40
current_stack_size$ = 68
popup_ref$ = 104
$T4 = 372
$T5 = 408
tv165 = 424
tv157 = 424
tv147 = 424
tv139 = 424
tv133 = 424
tv91 = 424
__$ArrayPad$ = 432
id$ = 480
popup_flags$ = 488
?OpenPopupEx@ImGui@@YAXIH@Z PROC			; ImGui::OpenPopupEx, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8176
$LN11:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 488				; 000001e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+520]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8177
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8178
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR parent_window$[rbp], rax
; Line 8179
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7592]
	mov	DWORD PTR current_stack_size$[rbp], eax
; Line 8181
	mov	eax, DWORD PTR popup_flags$[rbp]
	and	eax, 32					; 00000020H
	test	eax, eax
	je	SHORT $LN2@OpenPopupE
; Line 8182
	mov	edx, 128				; 00000080H
	xor	ecx, ecx
	call	?IsPopupOpen@ImGui@@YA_NIH@Z		; ImGui::IsPopupOpen
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@OpenPopupE
; Line 8183
	jmp	$LN1@OpenPopupE
$LN3@OpenPopupE:
$LN2@OpenPopupE:
; Line 8185
	lea	rcx, QWORD PTR popup_ref$[rbp]
	call	??0ImGuiPopupData@@QEAA@XZ		; ImGuiPopupData::ImGuiPopupData
; Line 8186
	mov	eax, DWORD PTR id$[rbp]
	mov	DWORD PTR popup_ref$[rbp], eax
; Line 8187
	mov	QWORD PTR popup_ref$[rbp+8], 0
; Line 8188
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	QWORD PTR popup_ref$[rbp+16], rax
; Line 8189
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7056]
	mov	DWORD PTR popup_ref$[rbp+24], eax
; Line 8190
	mov	rax, QWORD PTR parent_window$[rbp]
	add	rax, 200				; 000000c8H
	mov	rcx, rax
	call	?back@?$ImVector@I@@QEAAAEAIXZ		; ImVector<unsigned int>::back
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR popup_ref$[rbp+28], eax
; Line 8191
	lea	rcx, QWORD PTR $T4[rbp]
	call	?NavCalcPreferredRefPos@ImGui@@YA?AUImVec2@@XZ ; ImGui::NavCalcPreferredRefPos
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR popup_ref$[rbp+32], rax
; Line 8192
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 296				; 00000128H
	mov	rcx, rax
	call	?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z ; ImGui::IsMousePosValid
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@OpenPopupE
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 296				; 00000128H
	mov	QWORD PTR tv91[rbp], rax
	jmp	SHORT $LN10@OpenPopupE
$LN9@OpenPopupE:
	lea	rax, QWORD PTR popup_ref$[rbp+32]
	mov	QWORD PTR tv91[rbp], rax
$LN10@OpenPopupE:
	mov	rax, QWORD PTR tv91[rbp]
	mov	QWORD PTR $T5[rbp], rax
	mov	rax, QWORD PTR $T5[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR popup_ref$[rbp+40], rax
; Line 8195
	mov	eax, DWORD PTR current_stack_size$[rbp]
	inc	eax
	mov	rcx, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rcx+7576], eax
	jge	SHORT $LN4@OpenPopupE
; Line 8197
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv133[rbp], rax
	lea	rdx, QWORD PTR popup_ref$[rbp]
	mov	rcx, QWORD PTR tv133[rbp]
	call	?push_back@?$ImVector@UImGuiPopupData@@@@QEAAXAEBUImGuiPopupData@@@Z ; ImVector<ImGuiPopupData>::push_back
; Line 8198
	jmp	$LN5@OpenPopupE
$LN4@OpenPopupE:
; Line 8204
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv139[rbp], rax
	mov	edx, DWORD PTR current_stack_size$[rbp]
	mov	rcx, QWORD PTR tv139[rbp]
	call	??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ; ImVector<ImGuiPopupData>::operator[]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN6@OpenPopupE
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv147[rbp], rax
	mov	edx, DWORD PTR current_stack_size$[rbp]
	mov	rcx, QWORD PTR tv147[rbp]
	call	??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ; ImVector<ImGuiPopupData>::operator[]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7056]
	dec	ecx
	cmp	DWORD PTR [rax+24], ecx
	jne	SHORT $LN6@OpenPopupE
; Line 8206
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv157[rbp], rax
	mov	edx, DWORD PTR current_stack_size$[rbp]
	mov	rcx, QWORD PTR tv157[rbp]
	call	??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ; ImVector<ImGuiPopupData>::operator[]
	mov	ecx, DWORD PTR popup_ref$[rbp+24]
	mov	DWORD PTR [rax+24], ecx
; Line 8207
	jmp	SHORT $LN7@OpenPopupE
$LN6@OpenPopupE:
; Line 8211
	xor	edx, edx
	mov	ecx, DWORD PTR current_stack_size$[rbp]
	call	?ClosePopupToLevel@ImGui@@YAXH_N@Z	; ImGui::ClosePopupToLevel
; Line 8212
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv165[rbp], rax
	lea	rdx, QWORD PTR popup_ref$[rbp]
	mov	rcx, QWORD PTR tv165[rbp]
	call	?push_back@?$ImVector@UImGuiPopupData@@@@QEAAXAEBUImGuiPopupData@@@Z ; ImVector<ImGuiPopupData>::push_back
$LN7@OpenPopupE:
$LN5@OpenPopupE:
$LN1@OpenPopupE:
; Line 8220
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?OpenPopupEx@ImGui@@YAXIH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
?OpenPopupEx@ImGui@@YAXIH@Z ENDP			; ImGui::OpenPopupEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BeginChildEx@ImGui@@YA_NPEBDIAEBUImVec2@@_NH@Z
_TEXT	SEGMENT
g$ = 8
parent_window$ = 40
content_avail$ = 72
size$ = 104
auto_fit_axises$ = 132
backup_border_size$ = 164
ret$ = 196
child_window$ = 232
tv73 = 436
tv75 = 440
__$ArrayPad$ = 448
name$ = 496
id$ = 504
size_arg$ = 512
border$ = 520
flags$ = 528
?BeginChildEx@ImGui@@YA_NPEBDIAEBUImVec2@@_NH@Z PROC	; ImGui::BeginChildEx, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4984
$LN15:
	mov	BYTE PTR [rsp+32], r9b
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 520				; 00000208H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+552]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4985
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4986
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR parent_window$[rbp], rax
; Line 4988
	mov	eax, DWORD PTR flags$[rbp]
	or	eax, 16777475				; 01000103H
	mov	DWORD PTR flags$[rbp], eax
; Line 4989
	mov	rax, QWORD PTR parent_window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 4
	mov	ecx, DWORD PTR flags$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR flags$[rbp], eax
; Line 4992
	lea	rcx, QWORD PTR content_avail$[rbp]
	call	?GetContentRegionAvail@ImGui@@YA?AUImVec2@@XZ ; ImGui::GetContentRegionAvail
; Line 4993
	mov	rdx, QWORD PTR size_arg$[rbp]
	lea	rcx, QWORD PTR size$[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
; Line 4994
	movss	xmm0, DWORD PTR size$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN11@BeginChild
	jne	SHORT $LN11@BeginChild
	mov	DWORD PTR tv73[rbp], 1
	jmp	SHORT $LN12@BeginChild
$LN11@BeginChild:
	mov	DWORD PTR tv73[rbp], 0
$LN12@BeginChild:
	movss	xmm0, DWORD PTR size$[rbp+4]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN13@BeginChild
	jne	SHORT $LN13@BeginChild
	mov	DWORD PTR tv75[rbp], 2
	jmp	SHORT $LN14@BeginChild
$LN13@BeginChild:
	mov	DWORD PTR tv75[rbp], 0
$LN14@BeginChild:
	mov	eax, DWORD PTR tv75[rbp]
	mov	ecx, DWORD PTR tv73[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR auto_fit_axises$[rbp], eax
; Line 4995
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR size$[rbp]
	jb	SHORT $LN2@BeginChild
; Line 4996
	movss	xmm0, DWORD PTR content_avail$[rbp]
	addss	xmm0, DWORD PTR size$[rbp]
	movss	xmm1, DWORD PTR __real@40800000
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR size$[rbp], xmm0
$LN2@BeginChild:
; Line 4997
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR size$[rbp+4]
	jb	SHORT $LN3@BeginChild
; Line 4998
	movss	xmm0, DWORD PTR content_avail$[rbp+4]
	addss	xmm0, DWORD PTR size$[rbp+4]
	movss	xmm1, DWORD PTR __real@40800000
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR size$[rbp+4], xmm0
$LN3@BeginChild:
; Line 4999
	xor	edx, edx
	lea	rcx, QWORD PTR size$[rbp]
	call	?SetNextWindowSize@ImGui@@YAXAEBUImVec2@@H@Z ; ImGui::SetNextWindowSize
; Line 5002
	cmp	QWORD PTR name$[rbp], 0
	je	SHORT $LN4@BeginChild
; Line 5003
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 13076				; 00003314H
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rsp+40], ecx
	mov	rcx, QWORD PTR name$[rbp]
	mov	QWORD PTR [rsp+32], rcx
	mov	rcx, QWORD PTR parent_window$[rbp]
	mov	r9, QWORD PTR [rcx]
	lea	r8, OFFSET FLAT:??_C@_0L@BDFLDJGI@?$CFs?1?$CFs_?$CF08X@
	mov	edx, 3073				; 00000c01H
	mov	rcx, rax
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
	jmp	SHORT $LN5@BeginChild
$LN4@BeginChild:
; Line 5005
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 13076				; 00003314H
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rsp+32], ecx
	mov	rcx, QWORD PTR parent_window$[rbp]
	mov	r9, QWORD PTR [rcx]
	lea	r8, OFFSET FLAT:??_C@_07KBCBAKFA@?$CFs?1?$CF08X@
	mov	edx, 3073				; 00000c01H
	mov	rcx, rax
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
$LN5@BeginChild:
; Line 5007
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5516]
	movss	DWORD PTR backup_border_size$[rbp], xmm0
; Line 5008
	movzx	eax, BYTE PTR border$[rbp]
	test	eax, eax
	jne	SHORT $LN6@BeginChild
; Line 5009
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+5516], xmm0
$LN6@BeginChild:
; Line 5010
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 13076				; 00003314H
	mov	r8d, DWORD PTR flags$[rbp]
	xor	edx, edx
	mov	rcx, rax
	call	?Begin@ImGui@@YA_NPEBDPEA_NH@Z		; ImGui::Begin
	mov	BYTE PTR ret$[rbp], al
; Line 5011
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR backup_border_size$[rbp]
	movss	DWORD PTR [rax+5516], xmm0
; Line 5013
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR child_window$[rbp], rax
; Line 5014
	mov	rax, QWORD PTR child_window$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rax+88], ecx
; Line 5015
	mov	rax, QWORD PTR child_window$[rbp]
	movzx	ecx, BYTE PTR auto_fit_axises$[rbp]
	mov	BYTE PTR [rax+170], cl
; Line 5019
	mov	rax, QWORD PTR child_window$[rbp]
	movsx	eax, WORD PTR [rax+154]
	cmp	eax, 1
	jne	SHORT $LN7@BeginChild
; Line 5020
	mov	rax, QWORD PTR child_window$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR parent_window$[rbp]
	mov	QWORD PTR [rcx+216], rax
$LN7@BeginChild:
; Line 5023
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7640], ecx
	jne	SHORT $LN8@BeginChild
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 8388608				; 00800000H
	test	eax, eax
	jne	SHORT $LN8@BeginChild
	mov	rax, QWORD PTR child_window$[rbp]
	movsx	eax, WORD PTR [rax+336]
	test	eax, eax
	jne	SHORT $LN9@BeginChild
	mov	rax, QWORD PTR child_window$[rbp]
	movzx	eax, BYTE PTR [rax+345]
	test	eax, eax
	je	SHORT $LN8@BeginChild
$LN9@BeginChild:
; Line 5025
	mov	rcx, QWORD PTR child_window$[rbp]
	call	?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::FocusWindow
; Line 5026
	xor	edx, edx
	mov	rcx, QWORD PTR child_window$[rbp]
	call	?NavInitWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z ; ImGui::NavInitWindow
; Line 5027
	mov	eax, DWORD PTR id$[rbp]
	inc	eax
	mov	rdx, QWORD PTR child_window$[rbp]
	mov	ecx, eax
	call	?SetActiveID@ImGui@@YAXIPEAUImGuiWindow@@@Z ; ImGui::SetActiveID
; Line 5028
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7312], 4
$LN8@BeginChild:
; Line 5030
	movzx	eax, BYTE PTR ret$[rbp]
; Line 5031
	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?BeginChildEx@ImGui@@YA_NPEBDIAEBUImVec2@@_NH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+472]
	pop	rdi
	pop	rbp
	ret	0
?BeginChildEx@ImGui@@YA_NPEBDIAEBUImVec2@@_NH@Z ENDP	; ImGui::BeginChildEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LogSetNextTextDecoration@ImGui@@YAXPEBD0@Z
_TEXT	SEGMENT
g$ = 8
prefix$ = 256
suffix$ = 264
?LogSetNextTextDecoration@ImGui@@YAXPEBD0@Z PROC	; ImGui::LogSetNextTextDecoration, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10220
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10221
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10222
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR prefix$[rbp]
	mov	QWORD PTR [rax+12512], rcx
; Line 10223
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR suffix$[rbp]
	mov	QWORD PTR [rax+12520], rcx
; Line 10224
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?LogSetNextTextDecoration@ImGui@@YAXPEBD0@Z ENDP	; ImGui::LogSetNextTextDecoration
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LogRenderedText@ImGui@@YAXPEBUImVec2@@PEBD1@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
prefix$ = 72
suffix$ = 104
log_new_line$ = 132
tree_depth$ = 164
text_remaining$ = 200
line_start$1 = 232
line_end$2 = 264
is_last_line$3 = 292
line_length$4 = 324
indentation$5 = 356
tv154 = 564
tv144 = 564
tv82 = 564
tv185 = 568
tv177 = 568
tv186 = 576
tv178 = 576
ref_pos$ = 624
text$ = 632
text_end$ = 640
?LogRenderedText@ImGui@@YAXPEBUImVec2@@PEBD1@Z PROC	; ImGui::LogRenderedText, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10144
$LN24:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 648				; 00000288H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10145
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10146
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 10148
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+12512]
	mov	QWORD PTR prefix$[rbp], rax
; Line 10149
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+12520]
	mov	QWORD PTR suffix$[rbp], rax
; Line 10150
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+12520], 0
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+12512], 0
; Line 10152
	cmp	QWORD PTR text_end$[rbp], 0
	jne	SHORT $LN5@LogRendere
; Line 10153
	mov	rdx, QWORD PTR text_end$[rbp]
	mov	rcx, QWORD PTR text$[rbp]
	call	?FindRenderedTextEnd@ImGui@@YAPEBDPEBD0@Z ; ImGui::FindRenderedTextEnd
	mov	QWORD PTR text_end$[rbp], rax
$LN5@LogRendere:
; Line 10155
	cmp	QWORD PTR ref_pos$[rbp], 0
	je	SHORT $LN16@LogRendere
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+12528]
	addss	xmm0, DWORD PTR [rcx+5532]
	addss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR ref_pos$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	comiss	xmm1, xmm0
	jbe	SHORT $LN16@LogRendere
	mov	BYTE PTR tv82[rbp], 1
	jmp	SHORT $LN17@LogRendere
$LN16@LogRendere:
	mov	BYTE PTR tv82[rbp], 0
$LN17@LogRendere:
	movzx	eax, BYTE PTR tv82[rbp]
	mov	BYTE PTR log_new_line$[rbp], al
; Line 10156
	cmp	QWORD PTR ref_pos$[rbp], 0
	je	SHORT $LN6@LogRendere
; Line 10157
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR ref_pos$[rbp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+12528], xmm0
$LN6@LogRendere:
; Line 10158
	movzx	eax, BYTE PTR log_new_line$[rbp]
	test	eax, eax
	je	SHORT $LN7@LogRendere
; Line 10160
	lea	rcx, OFFSET FLAT:??_C@_02PCIJFNDE@?$AN?6@
	call	?LogText@ImGui@@YAXPEBDZZ		; ImGui::LogText
; Line 10161
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+12532], 1
$LN7@LogRendere:
; Line 10164
	cmp	QWORD PTR prefix$[rbp], 0
	je	SHORT $LN8@LogRendere
; Line 10165
	mov	rax, QWORD PTR prefix$[rbp]
	mov	QWORD PTR tv185[rbp], rax
	mov	QWORD PTR tv186[rbp], -1
$LL23@LogRendere:
	inc	QWORD PTR tv186[rbp]
	mov	rax, QWORD PTR tv185[rbp]
	mov	rcx, QWORD PTR tv186[rbp]
	cmp	BYTE PTR [rax+rcx], 0
	jne	SHORT $LL23@LogRendere
	mov	rax, QWORD PTR tv186[rbp]
	mov	rcx, QWORD PTR prefix$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8, rax
	mov	rdx, QWORD PTR prefix$[rbp]
	mov	rcx, QWORD PTR ref_pos$[rbp]
	call	?LogRenderedText@ImGui@@YAXPEBUImVec2@@PEBD1@Z ; ImGui::LogRenderedText
$LN8@LogRendere:
; Line 10168
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+392]
	cmp	DWORD PTR [rax+12536], ecx
	jle	SHORT $LN9@LogRendere
; Line 10169
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+392]
	mov	DWORD PTR [rax+12536], ecx
$LN9@LogRendere:
; Line 10170
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+12536]
	mov	eax, DWORD PTR [rax+392]
	sub	eax, ecx
	mov	DWORD PTR tree_depth$[rbp], eax
; Line 10172
	mov	rax, QWORD PTR text$[rbp]
	mov	QWORD PTR text_remaining$[rbp], rax
$LN2@LogRendere:
; Line 10177
	mov	rax, QWORD PTR text_remaining$[rbp]
	mov	QWORD PTR line_start$1[rbp], rax
; Line 10178
	mov	rdx, QWORD PTR text_end$[rbp]
	mov	rcx, QWORD PTR line_start$1[rbp]
	call	?ImStreolRange@@YAPEBDPEBD0@Z		; ImStreolRange
	mov	QWORD PTR line_end$2[rbp], rax
; Line 10179
	mov	rax, QWORD PTR text_end$[rbp]
	cmp	QWORD PTR line_end$2[rbp], rax
	jne	SHORT $LN18@LogRendere
	mov	BYTE PTR tv144[rbp], 1
	jmp	SHORT $LN19@LogRendere
$LN18@LogRendere:
	mov	BYTE PTR tv144[rbp], 0
$LN19@LogRendere:
	movzx	eax, BYTE PTR tv144[rbp]
	mov	BYTE PTR is_last_line$3[rbp], al
; Line 10180
	mov	rax, QWORD PTR line_end$2[rbp]
	cmp	QWORD PTR line_start$1[rbp], rax
	jne	SHORT $LN11@LogRendere
	movzx	eax, BYTE PTR is_last_line$3[rbp]
	test	eax, eax
	jne	$LN10@LogRendere
$LN11@LogRendere:
; Line 10182
	mov	rax, QWORD PTR line_start$1[rbp]
	mov	rcx, QWORD PTR line_end$2[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	DWORD PTR line_length$4[rbp], eax
; Line 10183
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12532]
	test	eax, eax
	je	SHORT $LN20@LogRendere
	mov	eax, DWORD PTR tree_depth$[rbp]
	shl	eax, 2
	mov	DWORD PTR tv154[rbp], eax
	jmp	SHORT $LN21@LogRendere
$LN20@LogRendere:
	mov	DWORD PTR tv154[rbp], 1
$LN21@LogRendere:
	mov	eax, DWORD PTR tv154[rbp]
	mov	DWORD PTR indentation$5[rbp], eax
; Line 10184
	mov	rax, QWORD PTR line_start$1[rbp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, DWORD PTR line_length$4[rbp]
	lea	r8, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	edx, DWORD PTR indentation$5[rbp]
	lea	rcx, OFFSET FLAT:??_C@_07LFDEMEGD@?$CF?$CKs?$CF?4?$CKs@
	call	?LogText@ImGui@@YAXPEBDZZ		; ImGui::LogText
; Line 10185
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+12532], 0
; Line 10186
	mov	rax, QWORD PTR line_end$2[rbp]
	movsx	eax, BYTE PTR [rax]
	cmp	eax, 10
	jne	SHORT $LN12@LogRendere
; Line 10188
	lea	rcx, OFFSET FLAT:??_C@_02PCIJFNDE@?$AN?6@
	call	?LogText@ImGui@@YAXPEBDZZ		; ImGui::LogText
; Line 10189
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+12532], 1
$LN12@LogRendere:
$LN10@LogRendere:
; Line 10192
	movzx	eax, BYTE PTR is_last_line$3[rbp]
	test	eax, eax
	je	SHORT $LN13@LogRendere
; Line 10193
	jmp	SHORT $LN3@LogRendere
$LN13@LogRendere:
; Line 10194
	mov	rax, QWORD PTR line_end$2[rbp]
	inc	rax
	mov	QWORD PTR text_remaining$[rbp], rax
; Line 10195
	jmp	$LN2@LogRendere
$LN3@LogRendere:
; Line 10197
	cmp	QWORD PTR suffix$[rbp], 0
	je	SHORT $LN14@LogRendere
; Line 10198
	mov	rax, QWORD PTR suffix$[rbp]
	mov	QWORD PTR tv177[rbp], rax
	mov	QWORD PTR tv178[rbp], -1
$LL22@LogRendere:
	inc	QWORD PTR tv178[rbp]
	mov	rax, QWORD PTR tv177[rbp]
	mov	rcx, QWORD PTR tv178[rbp]
	cmp	BYTE PTR [rax+rcx], 0
	jne	SHORT $LL22@LogRendere
	mov	rax, QWORD PTR tv178[rbp]
	mov	rcx, QWORD PTR suffix$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8, rax
	mov	rdx, QWORD PTR suffix$[rbp]
	mov	rcx, QWORD PTR ref_pos$[rbp]
	call	?LogRenderedText@ImGui@@YAXPEBUImVec2@@PEBD1@Z ; ImGui::LogRenderedText
$LN14@LogRendere:
; Line 10199
	lea	rsp, QWORD PTR [rbp+600]
	pop	rdi
	pop	rbp
	ret	0
?LogRenderedText@ImGui@@YAXPEBUImVec2@@PEBD1@Z ENDP	; ImGui::LogRenderedText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LogToBuffer@ImGui@@YAXH@Z
_TEXT	SEGMENT
g$ = 8
auto_open_depth$ = 256
?LogToBuffer@ImGui@@YAXH@Z PROC				; ImGui::LogToBuffer, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10273
$LN4:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10274
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10275
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12476]
	test	eax, eax
	je	SHORT $LN2@LogToBuffe
; Line 10276
	jmp	SHORT $LN1@LogToBuffe
$LN2@LogToBuffe:
; Line 10277
	mov	edx, DWORD PTR auto_open_depth$[rbp]
	mov	ecx, 3
	call	?LogBegin@ImGui@@YAXW4ImGuiLogType@@H@Z	; ImGui::LogBegin
$LN1@LogToBuffe:
; Line 10278
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?LogToBuffer@ImGui@@YAXH@Z ENDP				; ImGui::LogToBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LogBegin@ImGui@@YAXW4ImGuiLogType@@H@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
tv132 = 244
type$ = 288
auto_open_depth$ = 296
?LogBegin@ImGui@@YAXW4ImGuiLogType@@H@Z PROC		; ImGui::LogBegin, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10203
$LN8:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10204
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10205
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 10206
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12476]
	test	eax, eax
	je	SHORT $LN3@LogBegin
	mov	eax, DWORD PTR ?__LINE__Var@?0??LogBegin@ImGui@@YAXW4ImGuiLogType@@H@Z@4JA
	add	eax, 3
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CM@DLAMPOKC@?$AAg?$AA?4?$AAL?$AAo?$AAg?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?5?$AA?$DN?$AA?$DN@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@LogBegin:
; Line 10207
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+12488], 0
	je	SHORT $LN4@LogBegin
	mov	eax, DWORD PTR ?__LINE__Var@?0??LogBegin@ImGui@@YAXW4ImGuiLogType@@H@Z@4JA
	add	eax, 4
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BO@HOGBMEAE@?$AAg?$AA?4?$AAL?$AAo?$AAg?$AAF?$AAi?$AAl?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@LogBegin:
; Line 10208
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12496				; 000030d0H
	mov	rcx, rax
	call	?empty@ImGuiTextBuffer@@QEBA_NXZ	; ImGuiTextBuffer::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@LogBegin
	mov	eax, DWORD PTR ?__LINE__Var@?0??LogBegin@ImGui@@YAXW4ImGuiLogType@@H@Z@4JA
	add	eax, 5
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CI@CDGOCLNI@?$AAg?$AA?4?$AAL?$AAo?$AAg?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?4?$AAe?$AAm?$AAp@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN5@LogBegin:
; Line 10209
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+12476], 1
; Line 10210
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR type$[rbp]
	mov	DWORD PTR [rax+12480], ecx
; Line 10211
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+12520], 0
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+12512], 0
; Line 10212
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+392]
	mov	DWORD PTR [rax+12536], ecx
; Line 10213
	cmp	DWORD PTR auto_open_depth$[rbp], 0
	jl	SHORT $LN6@LogBegin
	mov	eax, DWORD PTR auto_open_depth$[rbp]
	mov	DWORD PTR tv132[rbp], eax
	jmp	SHORT $LN7@LogBegin
$LN6@LogBegin:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+12544]
	mov	DWORD PTR tv132[rbp], eax
$LN7@LogBegin:
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR tv132[rbp]
	mov	DWORD PTR [rax+12540], ecx
; Line 10214
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR [rax+12528], xmm0
; Line 10215
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+12532], 1
; Line 10216
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?LogBegin@ImGui@@YAXW4ImGuiLogType@@H@Z ENDP		; ImGui::LogBegin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetContentRegionMaxAbs@ImGui@@YA?AUImVec2@@XZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
mx$ = 72
__$ArrayPad$ = 280
__$ReturnUdt$ = 320
?GetContentRegionMaxAbs@ImGui@@YA?AUImVec2@@XZ PROC	; ImGui::GetContentRegionMaxAbs, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7717
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7718
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7719
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7720
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+616]
	mov	QWORD PTR mx$[rbp], rax
; Line 7721
	mov	rax, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+424], 0
	jne	SHORT $LN3@GetContent
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+8176], 0
	je	SHORT $LN2@GetContent
$LN3@GetContent:
; Line 7722
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+568]
	movss	DWORD PTR mx$[rbp], xmm0
$LN2@GetContent:
; Line 7723
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR mx$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 7724
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?GetContentRegionMaxAbs@ImGui@@YA?AUImVec2@@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?GetContentRegionMaxAbs@ImGui@@YA?AUImVec2@@XZ ENDP	; ImGui::GetContentRegionMaxAbs
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsItemToggledSelection@ImGui@@YA_NXZ
_TEXT	SEGMENT
g$ = 8
tv69 = 212
?IsItemToggledSelection@ImGui@@YA_NXZ PROC		; ImGui::IsItemToggledSelection, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4898
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4899
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4900
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	eax, DWORD PTR [rax+296]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN3@IsItemTogg
	mov	BYTE PTR tv69[rbp], 1
	jmp	SHORT $LN4@IsItemTogg
$LN3@IsItemTogg:
	mov	BYTE PTR tv69[rbp], 0
$LN4@IsItemTogg:
	movzx	eax, BYTE PTR tv69[rbp]
; Line 4901
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsItemToggledSelection@ImGui@@YA_NXZ ENDP		; ImGui::IsItemToggledSelection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PopDisabled@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
?PopDisabled@ImGui@@YAXXZ PROC				; ImGui::PopDisabled, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6604
$LN4:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6605
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6606
	call	?PopItemFlag@ImGui@@YAXXZ		; ImGui::PopItemFlag
; Line 6607
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7236]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN2@PopDisable
; Line 6608
	mov	ecx, 1
	call	?PopStyleVar@ImGui@@YAXH@Z		; ImGui::PopStyleVar
$LN2@PopDisable:
; Line 6609
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?PopDisabled@ImGui@@YAXXZ ENDP				; ImGui::PopDisabled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushDisabled@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
?PushDisabled@ImGui@@YAXXZ PROC				; ImGui::PushDisabled, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6596
$LN4:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6597
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6598
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7236]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN2@PushDisabl
; Line 6599
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5472]
	mulss	xmm0, DWORD PTR __real@3f19999a
	movaps	xmm1, xmm0
	xor	ecx, ecx
	call	?PushStyleVar@ImGui@@YAXHM@Z		; ImGui::PushStyleVar
$LN2@PushDisabl:
; Line 6600
	mov	dl, 1
	mov	ecx, 4
	call	?PushItemFlag@ImGui@@YAXH_N@Z		; ImGui::PushItemFlag
; Line 6601
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?PushDisabled@ImGui@@YAXXZ ENDP				; ImGui::PushDisabled
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PopItemFlag@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
?PopItemFlag@ImGui@@YAXXZ PROC				; ImGui::PopItemFlag, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6582
$LN4:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6583
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6584
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7544], 1
	jg	SHORT $LN3@PopItemFla
	mov	eax, DWORD PTR ?__LINE__Var@?0??PopItemFlag@ImGui@@YAXXZ@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DE@LBPOLBMJ@?$AAg?$AA?4?$AAI?$AAt?$AAe?$AAm?$AAF?$AAl?$AAa?$AAg?$AAs?$AAS?$AAt?$AAa?$AAc@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@PopItemFla:
; Line 6585
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7544				; 00001d78H
	mov	rcx, rax
	call	?pop_back@?$ImVector@H@@QEAAXXZ		; ImVector<int>::pop_back
; Line 6586
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7544				; 00001d78H
	mov	rcx, rax
	call	?back@?$ImVector@H@@QEAAAEAHXZ		; ImVector<int>::back
	mov	rcx, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR [rcx+7236], eax
; Line 6587
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?PopItemFlag@ImGui@@YAXXZ ENDP				; ImGui::PopItemFlag
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushItemFlag@ImGui@@YAXH_N@Z
_TEXT	SEGMENT
g$ = 8
item_flags$ = 36
tv84 = 248
__$ArrayPad$ = 256
option$ = 304
enabled$ = 312
?PushItemFlag@ImGui@@YAXH_N@Z PROC			; ImGui::PushItemFlag, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6569
$LN6:
	mov	BYTE PTR [rsp+16], dl
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 22
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+344]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6570
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6571
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7236]
	mov	DWORD PTR item_flags$[rbp], eax
; Line 6572
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7544				; 00001d78H
	mov	rcx, rax
	call	?back@?$ImVector@H@@QEAAAEAHXZ		; ImVector<int>::back
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR item_flags$[rbp], eax
	je	SHORT $LN5@PushItemFl
	mov	eax, DWORD PTR ?__LINE__Var@?0??PushItemFlag@ImGui@@YAXH_N@Z@4JA
	add	eax, 3
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EM@MHLLLNGK@?$AAi?$AAt?$AAe?$AAm?$AA_?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAg@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN5@PushItemFl:
; Line 6573
	movzx	eax, BYTE PTR enabled$[rbp]
	test	eax, eax
	je	SHORT $LN2@PushItemFl
; Line 6574
	mov	eax, DWORD PTR option$[rbp]
	mov	ecx, DWORD PTR item_flags$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR item_flags$[rbp], eax
	jmp	SHORT $LN3@PushItemFl
$LN2@PushItemFl:
; Line 6576
	mov	eax, DWORD PTR option$[rbp]
	not	eax
	mov	ecx, DWORD PTR item_flags$[rbp]
	and	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR item_flags$[rbp], eax
$LN3@PushItemFl:
; Line 6577
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR item_flags$[rbp]
	mov	DWORD PTR [rax+7236], ecx
; Line 6578
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7544				; 00001d78H
	mov	QWORD PTR tv84[rbp], rax
	lea	rdx, QWORD PTR item_flags$[rbp]
	mov	rcx, QWORD PTR tv84[rbp]
	call	?push_back@?$ImVector@H@@QEAAXAEBH@Z	; ImVector<int>::push_back
; Line 6579
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?PushItemFlag@ImGui@@YAXH_N@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
?PushItemFlag@ImGui@@YAXH_N@Z ENDP			; ImGui::PushItemFlag
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushMultiItemsWidths@ImGui@@YAXHM@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
style$ = 72
w_item_one$ = 100
w_item_last$ = 132
i$5 = 164
tv153 = 372
tv149 = 376
tv140 = 376
tv134 = 376
__$ArrayPad$ = 384
components$ = 432
w_full$ = 440
?PushMultiItemsWidths@ImGui@@YAXHM@Z PROC		; ImGui::PushMultiItemsWidths, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7612
$LN8:
	movss	DWORD PTR [rsp+16], xmm1
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 440				; 000001b8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+472]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7613
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7614
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7615
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 5472				; 00001560H
	mov	QWORD PTR style$[rbp], rax
; Line 7616
	mov	eax, DWORD PTR components$[rbp]
	dec	eax
	cvtsi2ss xmm0, eax
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm1, DWORD PTR [rax+80]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR w_full$[rbp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	cvtsi2ss xmm1, DWORD PTR components$[rbp]
	divss	xmm0, xmm1
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR w_item_one$[rbp], xmm0
; Line 7617
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR w_item_one$[rbp]
	addss	xmm0, DWORD PTR [rax+80]
	mov	eax, DWORD PTR components$[rbp]
	dec	eax
	cvtsi2ss xmm1, eax
	mulss	xmm0, xmm1
	movss	xmm1, DWORD PTR w_full$[rbp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR w_item_last$[rbp], xmm0
; Line 7618
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 464				; 000001d0H
	mov	QWORD PTR tv134[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 452				; 000001c4H
	mov	rdx, rax
	mov	rcx, QWORD PTR tv134[rbp]
	call	?push_back@?$ImVector@M@@QEAAXAEBM@Z	; ImVector<float>::push_back
; Line 7619
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 464				; 000001d0H
	mov	QWORD PTR tv140[rbp], rax
	lea	rdx, QWORD PTR w_item_last$[rbp]
	mov	rcx, QWORD PTR tv140[rbp]
	call	?push_back@?$ImVector@M@@QEAAXAEBM@Z	; ImVector<float>::push_back
; Line 7620
	mov	DWORD PTR i$5[rbp], 0
	jmp	SHORT $LN4@PushMultiI
$LN2@PushMultiI:
	mov	eax, DWORD PTR i$5[rbp]
	inc	eax
	mov	DWORD PTR i$5[rbp], eax
$LN4@PushMultiI:
	mov	eax, DWORD PTR components$[rbp]
	sub	eax, 2
	cmp	DWORD PTR i$5[rbp], eax
	jge	SHORT $LN3@PushMultiI
; Line 7621
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 464				; 000001d0H
	mov	QWORD PTR tv149[rbp], rax
	lea	rdx, QWORD PTR w_item_one$[rbp]
	mov	rcx, QWORD PTR tv149[rbp]
	call	?push_back@?$ImVector@M@@QEAAXAEBM@Z	; ImVector<float>::push_back
	jmp	SHORT $LN2@PushMultiI
$LN3@PushMultiI:
; Line 7622
	cmp	DWORD PTR components$[rbp], 1
	jne	SHORT $LN6@PushMultiI
	movss	xmm0, DWORD PTR w_item_last$[rbp]
	movss	DWORD PTR tv153[rbp], xmm0
	jmp	SHORT $LN7@PushMultiI
$LN6@PushMultiI:
	movss	xmm0, DWORD PTR w_item_one$[rbp]
	movss	DWORD PTR tv153[rbp], xmm0
$LN7@PushMultiI:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR tv153[rbp]
	movss	DWORD PTR [rax+452], xmm0
; Line 7623
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7456]
	and	eax, -2
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7456], eax
; Line 7624
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?PushMultiItemsWidths@ImGui@@YAXHM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+408]
	pop	rdi
	pop	rbp
	ret	0
?PushMultiItemsWidths@ImGui@@YAXHM@Z ENDP		; ImGui::PushMultiItemsWidths
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CalcWrapWidthForPos@ImGui@@YAMAEBUImVec2@@M@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
pos$ = 288
wrap_pos_x$ = 296
?CalcWrapWidthForPos@ImGui@@YAMAEBUImVec2@@M@Z PROC	; ImGui::CalcWrapWidthForPos, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3307
$LN7:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3308
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR wrap_pos_x$[rbp]
	jbe	SHORT $LN2@CalcWrapWi
; Line 3309
	xorps	xmm0, xmm0
	jmp	$LN1@CalcWrapWi
$LN2@CalcWrapWi:
; Line 3311
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3312
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 3313
	movss	xmm0, DWORD PTR wrap_pos_x$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN3@CalcWrapWi
	jne	SHORT $LN3@CalcWrapWi
; Line 3320
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+568]
	movss	DWORD PTR wrap_pos_x$[rbp], xmm0
; Line 3321
	jmp	SHORT $LN4@CalcWrapWi
$LN3@CalcWrapWi:
; Line 3322
	movss	xmm0, DWORD PTR wrap_pos_x$[rbp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN5@CalcWrapWi
; Line 3324
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	subss	xmm0, DWORD PTR [rcx+92]
	movss	xmm1, DWORD PTR wrap_pos_x$[rbp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR wrap_pos_x$[rbp], xmm0
$LN5@CalcWrapWi:
$LN4@CalcWrapWi:
; Line 3327
	mov	rax, QWORD PTR pos$[rbp]
	movss	xmm0, DWORD PTR wrap_pos_x$[rbp]
	subss	xmm0, DWORD PTR [rax]
	movss	xmm1, DWORD PTR __real@3f800000
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
$LN1@CalcWrapWi:
; Line 3328
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?CalcWrapWidthForPos@ImGui@@YAMAEBUImVec2@@M@Z ENDP	; ImGui::CalcWrapWidthForPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CalcItemSize@ImGui@@YA?AUImVec2@@U2@MM@Z
_TEXT	SEGMENT
window$ = 8
region_max$ = 40
$T4 = 260
__$ArrayPad$ = 280
__$ReturnUdt$ = 320
size$ = 328
default_w$ = 336
default_h$ = 344
?CalcItemSize@ImGui@@YA?AUImVec2@@U2@MM@Z PROC		; ImGui::CalcItemSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7658
$LN11:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7659
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7661
	lea	rcx, QWORD PTR region_max$[rbp]
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
; Line 7662
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR size$[rbp]
	ja	SHORT $LN3@CalcItemSi
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR size$[rbp+4]
	jbe	SHORT $LN2@CalcItemSi
$LN3@CalcItemSi:
; Line 7663
	lea	rcx, QWORD PTR $T4[rbp]
	call	?GetContentRegionMaxAbs@ImGui@@YA?AUImVec2@@XZ ; ImGui::GetContentRegionMaxAbs
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR region_max$[rbp], rax
$LN2@CalcItemSi:
; Line 7665
	movss	xmm0, DWORD PTR size$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN4@CalcItemSi
	jne	SHORT $LN4@CalcItemSi
; Line 7666
	movss	xmm0, DWORD PTR default_w$[rbp]
	movss	DWORD PTR size$[rbp], xmm0
	jmp	SHORT $LN5@CalcItemSi
$LN4@CalcItemSi:
; Line 7667
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR size$[rbp]
	jbe	SHORT $LN6@CalcItemSi
; Line 7668
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR region_max$[rbp]
	subss	xmm0, DWORD PTR [rax+216]
	addss	xmm0, DWORD PTR size$[rbp]
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR __real@40800000
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR size$[rbp], xmm0
$LN6@CalcItemSi:
$LN5@CalcItemSi:
; Line 7670
	movss	xmm0, DWORD PTR size$[rbp+4]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN7@CalcItemSi
	jne	SHORT $LN7@CalcItemSi
; Line 7671
	movss	xmm0, DWORD PTR default_h$[rbp]
	movss	DWORD PTR size$[rbp+4], xmm0
	jmp	SHORT $LN8@CalcItemSi
$LN7@CalcItemSi:
; Line 7672
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR size$[rbp+4]
	jbe	SHORT $LN9@CalcItemSi
; Line 7673
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR region_max$[rbp+4]
	subss	xmm0, DWORD PTR [rax+220]
	addss	xmm0, DWORD PTR size$[rbp+4]
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR __real@40800000
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR size$[rbp+4], xmm0
$LN9@CalcItemSi:
$LN8@CalcItemSi:
; Line 7675
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR size$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 7676
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?CalcItemSize@ImGui@@YA?AUImVec2@@U2@MM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?CalcItemSize@ImGui@@YA?AUImVec2@@U2@MM@Z ENDP		; ImGui::CalcItemSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetLastItemData@ImGui@@YAXPEAUImGuiWindow@@IHAEBUImRect@@@Z
_TEXT	SEGMENT
window$ = 224
item_id$ = 232
item_flags$ = 240
item_rect$ = 248
?SetLastItemData@ImGui@@YAXPEAUImGuiWindow@@IHAEBUImRect@@@Z PROC ; ImGui::SetLastItemData, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3254
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 224				; 000000e0H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3255
	mov	rax, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR item_id$[rbp]
	mov	DWORD PTR [rax+292], ecx
; Line 3256
	mov	rax, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR item_flags$[rbp]
	mov	DWORD PTR [rax+296], ecx
; Line 3257
	mov	rax, QWORD PTR window$[rbp]
	lea	rdi, QWORD PTR [rax+300]
	mov	rsi, QWORD PTR item_rect$[rbp]
	mov	ecx, 16
	rep movsb
; Line 3258
	lea	rsp, QWORD PTR [rbp+192]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?SetLastItemData@ImGui@@YAXPEAUImGuiWindow@@IHAEBUImRect@@@Z ENDP ; ImGui::SetLastItemData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsClippedEx@ImGui@@YA_NAEBUImRect@@I_N@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
bb$ = 288
id$ = 296
clip_even_when_logged$ = 304
?IsClippedEx@ImGui@@YA_NAEBUImRect@@I_N@Z PROC		; ImGui::IsClippedEx, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3241
$LN8:
	mov	BYTE PTR [rsp+24], r8b
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3242
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3243
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 3244
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 592				; 00000250H
	mov	rdx, rax
	mov	rcx, QWORD PTR bb$[rbp]
	call	?Overlaps@ImRect@@QEBA_NAEBU1@@Z	; ImRect::Overlaps
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@IsClippedE
; Line 3245
	cmp	DWORD PTR id$[rbp], 0
	je	SHORT $LN4@IsClippedE
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7260]
	cmp	DWORD PTR id$[rbp], eax
	je	SHORT $LN3@IsClippedE
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7632]
	cmp	DWORD PTR id$[rbp], eax
	je	SHORT $LN3@IsClippedE
$LN4@IsClippedE:
; Line 3246
	movzx	eax, BYTE PTR clip_even_when_logged$[rbp]
	test	eax, eax
	jne	SHORT $LN6@IsClippedE
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12476]
	test	eax, eax
	jne	SHORT $LN5@IsClippedE
$LN6@IsClippedE:
; Line 3247
	mov	al, 1
	jmp	SHORT $LN1@IsClippedE
$LN5@IsClippedE:
$LN3@IsClippedE:
$LN2@IsClippedE:
; Line 3248
	xor	al, al
$LN1@IsClippedE:
; Line 3249
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?IsClippedEx@ImGui@@YA_NAEBUImRect@@I_N@Z ENDP		; ImGui::IsClippedEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ItemFocusable@ImGui@@YAXPEAUImGuiWindow@@I@Z
_TEXT	SEGMENT
g$ = 8
is_tab_stop$ = 36
tv149 = 244
tv76 = 244
tv152 = 248
window$ = 288
id$ = 296
?ItemFocusable@ImGui@@YAXPEAUImGuiWindow@@I@Z PROC	; ImGui::ItemFocusable, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3262
$LN18:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3263
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3264
	cmp	DWORD PTR id$[rbp], 0
	je	SHORT $LN10@ItemFocusa
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+292]
	cmp	DWORD PTR id$[rbp], eax
	je	SHORT $LN11@ItemFocusa
$LN10@ItemFocusa:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ItemFocusable@ImGui@@YAXPEAUImGuiWindow@@I@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EO@PKFFHMKO@?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AAd?$AA?5?$AA?$DN@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN11@ItemFocusa:
; Line 3268
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7236]
	and	eax, 5
	test	eax, eax
	jne	SHORT $LN12@ItemFocusa
	mov	BYTE PTR tv76[rbp], 1
	jmp	SHORT $LN13@ItemFocusa
$LN12@ItemFocusa:
	mov	BYTE PTR tv76[rbp], 0
$LN13@ItemFocusa:
	movzx	eax, BYTE PTR tv76[rbp]
	mov	BYTE PTR is_tab_stop$[rbp], al
; Line 3269
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+444]
	inc	eax
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+444], eax
; Line 3270
	movzx	eax, BYTE PTR is_tab_stop$[rbp]
	test	eax, eax
	je	SHORT $LN2@ItemFocusa
; Line 3272
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+448]
	inc	eax
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+448], eax
; Line 3273
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7632], ecx
	jne	SHORT $LN3@ItemFocusa
; Line 3274
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+448]
	mov	DWORD PTR [rax+7704], ecx
$LN3@ItemFocusa:
$LN2@ItemFocusa:
; Line 3279
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7260], ecx
	jne	$LN4@ItemFocusa
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8000]
	test	eax, eax
	je	$LN4@ItemFocusa
	xor	ecx, ecx
	call	?IsActiveIdUsingKey@ImGui@@YA_NH@Z	; ImGui::IsActiveIdUsingKey
	movzx	eax, al
	test	eax, eax
	jne	$LN4@ItemFocusa
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7976], 0
	jne	SHORT $LN4@ItemFocusa
; Line 3281
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax+7976], rcx
; Line 3282
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+321]
	test	eax, eax
	je	SHORT $LN16@ItemFocusa
	movzx	eax, BYTE PTR is_tab_stop$[rbp]
	test	eax, eax
	je	SHORT $LN14@ItemFocusa
	mov	DWORD PTR tv149[rbp], -1
	jmp	SHORT $LN15@ItemFocusa
$LN14@ItemFocusa:
	mov	DWORD PTR tv149[rbp], 0
$LN15@ItemFocusa:
	mov	eax, DWORD PTR tv149[rbp]
	mov	DWORD PTR tv152[rbp], eax
	jmp	SHORT $LN17@ItemFocusa
$LN16@ItemFocusa:
	mov	DWORD PTR tv152[rbp], 1
$LN17@ItemFocusa:
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+448]
	add	eax, DWORD PTR tv152[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7996], eax
$LN4@ItemFocusa:
; Line 3286
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+7968], rcx
	jne	$LN5@ItemFocusa
; Line 3288
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7984]
	cmp	DWORD PTR [rax+444], ecx
	jne	SHORT $LN6@ItemFocusa
; Line 3290
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+296]
	bts	eax, 8
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+296], eax
; Line 3291
	jmp	SHORT $LN1@ItemFocusa
$LN6@ItemFocusa:
; Line 3293
	movzx	eax, BYTE PTR is_tab_stop$[rbp]
	test	eax, eax
	je	SHORT $LN7@ItemFocusa
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7988]
	cmp	DWORD PTR [rax+448], ecx
	jne	SHORT $LN7@ItemFocusa
; Line 3295
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rax+7656], ecx
; Line 3296
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+296]
	bts	eax, 9
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+296], eax
; Line 3297
	jmp	SHORT $LN1@ItemFocusa
$LN7@ItemFocusa:
; Line 3301
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7260], ecx
	jne	SHORT $LN8@ItemFocusa
; Line 3302
	call	?ClearActiveID@ImGui@@YAXXZ		; ImGui::ClearActiveID
$LN8@ItemFocusa:
$LN5@ItemFocusa:
$LN1@ItemFocusa:
; Line 3304
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?ItemFocusable@ImGui@@YAXPEAUImGuiWindow@@I@Z ENDP	; ImGui::ItemFocusable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ItemHoverable@ImGui@@YA_NAEBUImRect@@I@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
tv151 = 248
bb$ = 288
id$ = 296
?ItemHoverable@ImGui@@YA_NAEBUImRect@@I@Z PROC		; ImGui::ItemHoverable, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3200
$LN13:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3201
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3202
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7240], 0
	je	SHORT $LN2@ItemHovera
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7240], ecx
	je	SHORT $LN2@ItemHovera
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7248]
	test	eax, eax
	jne	SHORT $LN2@ItemHovera
; Line 3203
	xor	al, al
	jmp	$LN1@ItemHovera
$LN2@ItemHovera:
; Line 3205
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 3206
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+7192], rcx
	je	SHORT $LN3@ItemHovera
; Line 3207
	xor	al, al
	jmp	$LN1@ItemHovera
$LN3@ItemHovera:
; Line 3208
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	je	SHORT $LN4@ItemHovera
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7260], ecx
	je	SHORT $LN4@ItemHovera
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7273]
	test	eax, eax
	jne	SHORT $LN4@ItemHovera
; Line 3209
	xor	al, al
	jmp	$LN1@ItemHovera
$LN4@ItemHovera:
; Line 3210
	mov	rax, QWORD PTR bb$[rbp]
	add	rax, 8
	mov	rcx, QWORD PTR bb$[rbp]
	mov	r8b, 1
	mov	rdx, rax
	call	?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z ; ImGui::IsMouseHoveringRect
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@ItemHovera
; Line 3211
	xor	al, al
	jmp	$LN1@ItemHovera
$LN5@ItemHovera:
; Line 3212
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7711]
	test	eax, eax
	je	SHORT $LN6@ItemHovera
; Line 3213
	xor	al, al
	jmp	$LN1@ItemHovera
$LN6@ItemHovera:
; Line 3214
	xor	edx, edx
	mov	rcx, QWORD PTR window$[rbp]
	call	?IsWindowContentHoverable@@YA_NPEAUImGuiWindow@@H@Z ; IsWindowContentHoverable
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@ItemHovera
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7236]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN7@ItemHovera
$LN8@ItemHovera:
; Line 3216
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7251], 1
; Line 3217
	xor	al, al
	jmp	$LN1@ItemHovera
$LN7@ItemHovera:
; Line 3222
	cmp	DWORD PTR id$[rbp], 0
	je	$LN9@ItemHovera
; Line 3224
	mov	ecx, DWORD PTR id$[rbp]
	call	?SetHoveredID@ImGui@@YAXI@Z		; ImGui::SetHoveredID
; Line 3231
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12548]
	test	eax, eax
	je	SHORT $LN10@ItemHovera
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7244], ecx
	jne	SHORT $LN10@ItemHovera
; Line 3232
	call	?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@XZ ; ImGui::GetForegroundDrawList
	mov	QWORD PTR tv151[rbp], rax
	mov	rax, QWORD PTR bb$[rbp]
	add	rax, 8
	mov	rcx, QWORD PTR bb$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, -16711681				; ff00ffffH
	mov	r8, rax
	mov	rdx, rcx
	mov	rcx, QWORD PTR tv151[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
$LN10@ItemHovera:
; Line 3233
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+12552], ecx
	jne	SHORT $LN11@ItemHovera
; Line 3234
	int	3
$LN11@ItemHovera:
$LN9@ItemHovera:
; Line 3237
	mov	al, 1
$LN1@ItemHovera:
; Line 3238
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?ItemHoverable@ImGui@@YA_NAEBUImRect@@I@Z ENDP		; ImGui::ItemHoverable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ItemAdd@ImGui@@YA_NAEBUImRect@@IPEBU2@H@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
is_clipped$ = 68
$T1 = 296
tv177 = 308
tv131 = 308
tv95 = 312
bb$ = 352
id$ = 360
nav_bb_arg$ = 368
flags$ = 376
?ItemAdd@ImGui@@YA_NAEBUImRect@@IPEBU2@H@Z PROC		; ImGui::ItemAdd, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7430
$LN14:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 352				; 00000160H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7431
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7432
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7434
	cmp	DWORD PTR id$[rbp], 0
	je	$LN2@ItemAdd
; Line 7445
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+332]
	mov	ecx, 1
	mov	DWORD PTR tv177[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv177[rbp]
	shl	eax, cl
	mov	rcx, QWORD PTR window$[rbp]
	movsx	ecx, WORD PTR [rcx+338]
	or	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR window$[rbp]
	mov	WORD PTR [rcx+338], ax
; Line 7446
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7632], ecx
	je	SHORT $LN4@ItemAdd
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7712]
	test	eax, eax
	je	$LN3@ItemAdd
$LN4@ItemAdd:
; Line 7447
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	rcx, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR [rcx+920]
	cmp	QWORD PTR [rax+920], rcx
	jne	$LN5@ItemAdd
; Line 7448
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	cmp	QWORD PTR window$[rbp], rax
	je	SHORT $LN7@ItemAdd
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	rcx, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	mov	ecx, DWORD PTR [rcx+12]
	or	ecx, eax
	mov	eax, ecx
	and	eax, 8388608				; 00800000H
	test	eax, eax
	je	SHORT $LN6@ItemAdd
$LN7@ItemAdd:
; Line 7449
	mov	eax, DWORD PTR id$[rbp]
	mov	DWORD PTR tv131[rbp], eax
	cmp	QWORD PTR nav_bb_arg$[rbp], 0
	je	SHORT $LN12@ItemAdd
	mov	rax, QWORD PTR nav_bb_arg$[rbp]
	mov	QWORD PTR tv95[rbp], rax
	jmp	SHORT $LN13@ItemAdd
$LN12@ItemAdd:
	mov	rax, QWORD PTR bb$[rbp]
	mov	QWORD PTR tv95[rbp], rax
$LN13@ItemAdd:
	mov	rax, QWORD PTR tv95[rbp]
	mov	QWORD PTR $T1[rbp], rax
	mov	r8d, DWORD PTR tv131[rbp]
	mov	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?NavProcessItem@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@I@Z ; ImGui::NavProcessItem
$LN6@ItemAdd:
$LN5@ItemAdd:
$LN3@ItemAdd:
$LN2@ItemAdd:
; Line 7462
	mov	rax, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rax+292], ecx
; Line 7463
	mov	rax, QWORD PTR window$[rbp]
	lea	rdi, QWORD PTR [rax+300]
	mov	rsi, QWORD PTR bb$[rbp]
	mov	ecx, 16
	rep movsb
; Line 7464
	mov	rax, QWORD PTR window$[rbp]
	mov	DWORD PTR [rax+296], 0
; Line 7465
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7456], 0
; Line 7473
	xor	r8d, r8d
	mov	edx, DWORD PTR id$[rbp]
	mov	rcx, QWORD PTR bb$[rbp]
	call	?IsClippedEx@ImGui@@YA_NAEBUImRect@@I_N@Z ; ImGui::IsClippedEx
	mov	BYTE PTR is_clipped$[rbp], al
; Line 7474
	movzx	eax, BYTE PTR is_clipped$[rbp]
	test	eax, eax
	je	SHORT $LN8@ItemAdd
; Line 7475
	xor	al, al
	jmp	SHORT $LN1@ItemAdd
$LN8@ItemAdd:
; Line 7480
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN9@ItemAdd
; Line 7481
	mov	edx, DWORD PTR id$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?ItemFocusable@ImGui@@YAXPEAUImGuiWindow@@I@Z ; ImGui::ItemFocusable
$LN9@ItemAdd:
; Line 7484
	mov	rax, QWORD PTR bb$[rbp]
	add	rax, 8
	mov	rcx, QWORD PTR bb$[rbp]
	mov	r8b, 1
	mov	rdx, rax
	call	?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z ; ImGui::IsMouseHoveringRect
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@ItemAdd
; Line 7485
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+296]
	or	eax, 1
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+296], eax
$LN10@ItemAdd:
; Line 7486
	mov	al, 1
$LN1@ItemAdd:
; Line 7487
	lea	rsp, QWORD PTR [rbp+320]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?ItemAdd@ImGui@@YA_NAEBUImRect@@IPEBU2@H@Z ENDP		; ImGui::ItemAdd
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ItemSize@ImGui@@YAXAEBUImRect@@M@Z
_TEXT	SEGMENT
$T1 = 196
bb$ = 256
text_baseline_y$ = 264
?ItemSize@ImGui@@YAXAEBUImRect@@M@Z PROC		; ImGui::ItemSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7422
$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7423
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR bb$[rbp]
	call	?GetSize@ImRect@@QEBA?AUImVec2@@XZ	; ImRect::GetSize
	movss	xmm1, DWORD PTR text_baseline_y$[rbp]
	mov	rcx, rax
	call	?ItemSize@ImGui@@YAXAEBUImVec2@@M@Z	; ImGui::ItemSize
; Line 7424
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?ItemSize@ImGui@@YAXAEBUImRect@@M@Z ENDP		; ImGui::ItemSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ItemSize@ImGui@@YAXAEBUImVec2@@M@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
offset_to_match_baseline_y$ = 68
line_height$ = 100
tv75 = 308
size$ = 352
text_baseline_y$ = 360
?ItemSize@ImGui@@YAXAEBUImVec2@@M@Z PROC		; ImGui::ItemSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7389
$LN7:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7390
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7391
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7392
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+147]
	test	eax, eax
	je	SHORT $LN2@ItemSize
; Line 7393
	jmp	$LN1@ItemSize
$LN2@ItemSize:
; Line 7398
	movss	xmm0, DWORD PTR text_baseline_y$[rbp]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN5@ItemSize
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+272]
	subss	xmm0, DWORD PTR text_baseline_y$[rbp]
	movaps	xmm1, xmm0
	xorps	xmm0, xmm0
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR tv75[rbp], xmm0
	jmp	SHORT $LN6@ItemSize
$LN5@ItemSize:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv75[rbp], xmm0
$LN6@ItemSize:
	movss	xmm0, DWORD PTR tv75[rbp]
	movss	DWORD PTR offset_to_match_baseline_y$[rbp], xmm0
; Line 7399
	mov	rax, QWORD PTR size$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	addss	xmm0, DWORD PTR offset_to_match_baseline_y$[rbp]
	movaps	xmm1, xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+260]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR line_height$[rbp], xmm0
; Line 7403
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR size$[rbp]
	movss	xmm0, DWORD PTR [rax+216]
	addss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+224], xmm0
; Line 7404
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rcx+220]
	movss	DWORD PTR [rax+228], xmm0
; Line 7405
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	addss	xmm0, DWORD PTR [rcx+280]
	mov	rax, QWORD PTR window$[rbp]
	addss	xmm0, DWORD PTR [rax+284]
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+216], xmm0
; Line 7406
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+220]
	addss	xmm0, DWORD PTR line_height$[rbp]
	mov	rax, QWORD PTR g$[rbp]
	addss	xmm0, DWORD PTR [rax+5548]
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+220], xmm0
; Line 7407
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+224]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+240]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+240], xmm0
; Line 7408
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+220]
	subss	xmm0, DWORD PTR [rcx+5548]
	movaps	xmm1, xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+244]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+244], xmm0
; Line 7411
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR line_height$[rbp]
	movss	DWORD PTR [rax+268], xmm0
; Line 7412
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+260], xmm0
; Line 7413
	movss	xmm1, DWORD PTR text_baseline_y$[rbp]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+272]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+276], xmm0
; Line 7414
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+272], xmm0
; Line 7417
	mov	rax, QWORD PTR window$[rbp]
	cmp	DWORD PTR [rax+436], 0
	jne	SHORT $LN3@ItemSize
; Line 7418
	movss	xmm1, DWORD PTR __real@bf800000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
$LN3@ItemSize:
$LN1@ItemSize:
; Line 7419
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?ItemSize@ImGui@@YAXAEBUImVec2@@M@Z ENDP		; ImGui::ItemSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetIDWithSeed@ImGui@@YAIPEBD0I@Z
_TEXT	SEGMENT
id$ = 4
tv72 = 212
tv68 = 216
str$ = 256
str_end$ = 264
seed$ = 272
?GetIDWithSeed@ImGui@@YAIPEBD0I@Z PROC			; ImGui::GetIDWithSeed, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7102
$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7103
	mov	eax, DWORD PTR seed$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	cmp	QWORD PTR str_end$[rbp], 0
	je	SHORT $LN3@GetIDWithS
	mov	rax, QWORD PTR str$[rbp]
	mov	rcx, QWORD PTR str_end$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv68[rbp], rax
	jmp	SHORT $LN4@GetIDWithS
$LN3@GetIDWithS:
	mov	QWORD PTR tv68[rbp], 0
$LN4@GetIDWithS:
	mov	r8d, DWORD PTR tv72[rbp]
	mov	rdx, QWORD PTR tv68[rbp]
	mov	rcx, QWORD PTR str$[rbp]
	call	?ImHashStr@@YAIPEBD_KI@Z		; ImHashStr
	mov	DWORD PTR id$[rbp], eax
; Line 7104
	mov	ecx, DWORD PTR id$[rbp]
	call	?KeepAliveID@ImGui@@YAXI@Z		; ImGui::KeepAliveID
; Line 7109
	mov	eax, DWORD PTR id$[rbp]
; Line 7110
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetIDWithSeed@ImGui@@YAIPEBD0I@Z ENDP			; ImGui::GetIDWithSeed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushOverrideID@ImGui@@YAXI@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
tv69 = 248
id$ = 288
?PushOverrideID@ImGui@@YAXI@Z PROC			; ImGui::PushOverrideID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7092
$LN3:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7093
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7094
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7095
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 200				; 000000c8H
	mov	QWORD PTR tv69[rbp], rax
	lea	rdx, QWORD PTR id$[rbp]
	mov	rcx, QWORD PTR tv69[rbp]
	call	?push_back@?$ImVector@I@@QEAAXAEBI@Z	; ImVector<unsigned int>::push_back
; Line 7096
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?PushOverrideID@ImGui@@YAXI@Z ENDP			; ImGui::PushOverrideID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?MarkItemEdited@ImGui@@YAXI@Z
_TEXT	SEGMENT
g$ = 8
id$ = 256
?MarkItemEdited@ImGui@@YAXI@Z PROC			; ImGui::MarkItemEdited, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3121
$LN4:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3124
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3125
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7260], ecx
	je	SHORT $LN3@MarkItemEd
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	je	SHORT $LN3@MarkItemEd
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8012]
	test	eax, eax
	jne	SHORT $LN3@MarkItemEd
	mov	eax, DWORD PTR ?__LINE__Var@?0??MarkItemEdited@ImGui@@YAXI@Z@4JA
	add	eax, 4
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1HA@DMBDPHAC@?$AAg?$AA?4?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AAI?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@MarkItemEd:
; Line 3128
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7277], 1
; Line 3129
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7276], 1
; Line 3130
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	eax, DWORD PTR [rax+296]
	or	eax, 4
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+7184]
	mov	DWORD PTR [rcx+296], eax
; Line 3131
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?MarkItemEdited@ImGui@@YAXI@Z ENDP			; ImGui::MarkItemEdited
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?KeepAliveID@ImGui@@YAXI@Z
_TEXT	SEGMENT
g$ = 8
id$ = 256
?KeepAliveID@ImGui@@YAXI@Z PROC				; ImGui::KeepAliveID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3112
$LN5:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3113
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3114
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7260], ecx
	jne	SHORT $LN2@KeepAliveI
; Line 3115
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rax+7264], ecx
$LN2@KeepAliveI:
; Line 3116
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7320], ecx
	jne	SHORT $LN3@KeepAliveI
; Line 3117
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7324], 1
$LN3@KeepAliveI:
; Line 3118
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?KeepAliveID@ImGui@@YAXI@Z ENDP				; ImGui::KeepAliveID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetHoveredID@ImGui@@YAXI@Z
_TEXT	SEGMENT
g$ = 8
id$ = 256
?SetHoveredID@ImGui@@YAXI@Z PROC			; ImGui::SetHoveredID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3096
$LN4:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3097
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3098
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rax+7240], ecx
; Line 3099
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7248], 0
; Line 3100
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7249], 0
; Line 3101
	cmp	DWORD PTR id$[rbp], 0
	je	SHORT $LN2@SetHovered
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7244], ecx
	je	SHORT $LN2@SetHovered
; Line 3102
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+7256], xmm0
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+7252], xmm0
$LN2@SetHovered:
; Line 3103
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetHoveredID@ImGui@@YAXI@Z ENDP			; ImGui::SetHoveredID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetHoveredID@ImGui@@YAIXZ
_TEXT	SEGMENT
g$ = 8
tv68 = 212
?GetHoveredID@ImGui@@YAIXZ PROC				; ImGui::GetHoveredID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3106
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3107
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3108
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7240], 0
	je	SHORT $LN3@GetHovered
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7240]
	mov	DWORD PTR tv68[rbp], eax
	jmp	SHORT $LN4@GetHovered
$LN3@GetHovered:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7244]
	mov	DWORD PTR tv68[rbp], eax
$LN4@GetHovered:
	mov	eax, DWORD PTR tv68[rbp]
; Line 3109
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetHoveredID@ImGui@@YAIXZ ENDP				; ImGui::GetHoveredID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ClearActiveID@ImGui@@YAXXZ
_TEXT	SEGMENT
?ClearActiveID@ImGui@@YAXXZ PROC			; ImGui::ClearActiveID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3091
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3092
	xor	edx, edx
	xor	ecx, ecx
	call	?SetActiveID@ImGui@@YAXIPEAUImGuiWindow@@@Z ; ImGui::SetActiveID
; Line 3093
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?ClearActiveID@ImGui@@YAXXZ ENDP			; ImGui::ClearActiveID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetFocusID@ImGui@@YAXIPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
g$ = 8
nav_layer$ = 36
$T1 = 260
$T2 = 308
$T3 = 340
tv147 = 360
tv145 = 368
id$ = 416
window$ = 424
?SetFocusID@ImGui@@YAXIPEAUImGuiWindow@@@Z PROC		; ImGui::SetFocusID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8634
$LN8:
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 416				; 000001a0H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8635
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8636
	cmp	DWORD PTR id$[rbp], 0
	jne	SHORT $LN7@SetFocusID
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetFocusID@ImGui@@YAXIPEAUImGuiWindow@@@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BA@DDOODPOM@?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@SetFocusID:
; Line 8640
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+332]
	mov	DWORD PTR nav_layer$[rbp], eax
; Line 8641
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+7624], rcx
	je	SHORT $LN2@SetFocusID
; Line 8642
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7713], 0
$LN2@SetFocusID:
; Line 8643
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax+7624], rcx
; Line 8644
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rax+7632], ecx
; Line 8645
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR nav_layer$[rbp]
	mov	DWORD PTR [rax+7700], ecx
; Line 8646
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+340]
	mov	DWORD PTR [rax+7636], ecx
; Line 8647
	movsxd	rax, DWORD PTR nav_layer$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	edx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rcx+rax*4+936], edx
; Line 8648
	mov	rax, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+292], ecx
	jne	$LN3@SetFocusID
; Line 8649
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 308				; 00000134H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T2[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv147[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 300				; 0000012cH
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T3[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv145[rbp], rax
	mov	r8, QWORD PTR tv147[rbp]
	mov	rdx, QWORD PTR tv145[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
	movsxd	rcx, DWORD PTR nav_layer$[rbp]
	imul	rcx, rcx, 16
	mov	rdx, QWORD PTR window$[rbp]
	lea	rdi, QWORD PTR [rdx+rcx+944]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
$LN3@SetFocusID:
; Line 8651
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7312], 4
	jne	SHORT $LN4@SetFocusID
; Line 8652
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7711], 1
	jmp	SHORT $LN5@SetFocusID
$LN4@SetFocusID:
; Line 8654
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7710], 1
$LN5@SetFocusID:
; Line 8655
	lea	rsp, QWORD PTR [rbp+384]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?SetFocusID@ImGui@@YAXIPEAUImGuiWindow@@@Z ENDP		; ImGui::SetFocusID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetActiveID@ImGui@@YAXIPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
g$ = 8
tv95 = 212
tv67 = 212
id$ = 256
window$ = 264
?SetActiveID@ImGui@@YAXIPEAUImGuiWindow@@@Z PROC	; ImGui::SetActiveID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3056
$LN10:
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3057
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3058
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7260], ecx
	je	SHORT $LN6@SetActiveI
	mov	DWORD PTR tv67[rbp], 1
	jmp	SHORT $LN7@SetActiveI
$LN6@SetActiveI:
	mov	DWORD PTR tv67[rbp], 0
$LN7@SetActiveI:
	mov	rax, QWORD PTR g$[rbp]
	movzx	ecx, BYTE PTR tv67[rbp]
	mov	BYTE PTR [rax+7272], cl
; Line 3059
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7272]
	test	eax, eax
	je	SHORT $LN2@SetActiveI
; Line 3061
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+7268], xmm0
; Line 3062
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7275], 0
; Line 3063
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7276], 0
; Line 3064
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7316], -1
; Line 3065
	cmp	DWORD PTR id$[rbp], 0
	je	SHORT $LN3@SetActiveI
; Line 3067
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rax+7336], ecx
; Line 3068
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+7340], xmm0
$LN3@SetActiveI:
$LN2@SetActiveI:
; Line 3071
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rax+7260], ecx
; Line 3072
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7273], 0
; Line 3073
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7274], 0
; Line 3074
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax+7304], rcx
; Line 3075
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7277], 0
; Line 3076
	cmp	DWORD PTR id$[rbp], 0
	je	SHORT $LN4@SetActiveI
; Line 3078
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rax+7264], ecx
; Line 3079
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7640], ecx
	je	SHORT $LN8@SetActiveI
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7652], ecx
	je	SHORT $LN8@SetActiveI
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7656], ecx
	je	SHORT $LN8@SetActiveI
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7660], ecx
	je	SHORT $LN8@SetActiveI
	mov	DWORD PTR tv95[rbp], 1
	jmp	SHORT $LN9@SetActiveI
$LN8@SetActiveI:
	mov	DWORD PTR tv95[rbp], 4
$LN9@SetActiveI:
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR tv95[rbp]
	mov	DWORD PTR [rax+7312], ecx
$LN4@SetActiveI:
; Line 3084
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7278], 0
; Line 3085
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7280], 0
; Line 3086
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7284], 0
; Line 3087
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7288], 0
; Line 3088
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetActiveID@ImGui@@YAXIPEAUImGuiWindow@@@Z ENDP	; ImGui::SetActiveID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ScrollToBringRectIntoView@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@AEBUImRect@@@Z
_TEXT	SEGMENT
g$ = 8
window_rect$ = 40
delta_scroll$ = 88
next_scroll$6 = 120
$T7 = 340
$T8 = 372
$T9 = 404
$T10 = 436
$T11 = 468
$T12 = 500
$T13 = 548
$T14 = 580
$T15 = 612
tv225 = 632
tv91 = 632
tv223 = 640
tv89 = 640
tv233 = 648
tv231 = 656
__$ArrayPad$ = 664
__$ReturnUdt$ = 704
window$ = 712
item_rect$ = 720
?ScrollToBringRectIntoView@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@AEBUImRect@@@Z PROC ; ImGui::ScrollToBringRectIntoView, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7899
$LN11:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 712				; 000002c8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 122				; 0000007aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+744]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7900
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7901
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T7[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 536				; 00000218H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T8[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv91[rbp], rax
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T9[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 528				; 00000210H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T10[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv89[rbp], rax
	mov	r8, QWORD PTR tv91[rbp]
	mov	rdx, QWORD PTR tv89[rbp]
	lea	rcx, QWORD PTR window_rect$[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
; Line 7904
	lea	rcx, QWORD PTR delta_scroll$[rbp]
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
; Line 7905
	mov	rdx, QWORD PTR item_rect$[rbp]
	lea	rcx, QWORD PTR window_rect$[rbp]
	call	?Contains@ImRect@@QEBA_NAEBU1@@Z	; ImRect::Contains
	movzx	eax, al
	test	eax, eax
	jne	$LN2@ScrollToBr
; Line 7907
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+140]
	test	eax, eax
	je	SHORT $LN3@ScrollToBr
	mov	rax, QWORD PTR item_rect$[rbp]
	movss	xmm0, DWORD PTR window_rect$[rbp]
	comiss	xmm0, DWORD PTR [rax]
	jbe	SHORT $LN3@ScrollToBr
; Line 7908
	mov	rax, QWORD PTR item_rect$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR [rcx+16]
	mov	rax, QWORD PTR g$[rbp]
	subss	xmm0, DWORD PTR [rax+5544]
	xorps	xmm2, xmm2
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetScrollFromPosX@ImGui@@YAXPEAUImGuiWindow@@MM@Z ; ImGui::SetScrollFromPosX
	jmp	SHORT $LN4@ScrollToBr
$LN3@ScrollToBr:
; Line 7909
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+140]
	test	eax, eax
	je	SHORT $LN5@ScrollToBr
	mov	rax, QWORD PTR item_rect$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	comiss	xmm0, DWORD PTR window_rect$[rbp+8]
	jb	SHORT $LN5@ScrollToBr
; Line 7910
	mov	rax, QWORD PTR item_rect$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	subss	xmm0, DWORD PTR [rcx+16]
	mov	rax, QWORD PTR g$[rbp]
	addss	xmm0, DWORD PTR [rax+5544]
	movss	xmm2, DWORD PTR __real@3f800000
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetScrollFromPosX@ImGui@@YAXPEAUImGuiWindow@@MM@Z ; ImGui::SetScrollFromPosX
$LN5@ScrollToBr:
$LN4@ScrollToBr:
; Line 7911
	mov	rax, QWORD PTR item_rect$[rbp]
	movss	xmm0, DWORD PTR window_rect$[rbp+4]
	comiss	xmm0, DWORD PTR [rax+4]
	jbe	SHORT $LN6@ScrollToBr
; Line 7912
	mov	rax, QWORD PTR item_rect$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR [rcx+20]
	mov	rax, QWORD PTR g$[rbp]
	subss	xmm0, DWORD PTR [rax+5548]
	xorps	xmm2, xmm2
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetScrollFromPosY@ImGui@@YAXPEAUImGuiWindow@@MM@Z ; ImGui::SetScrollFromPosY
	jmp	SHORT $LN7@ScrollToBr
$LN6@ScrollToBr:
; Line 7913
	mov	rax, QWORD PTR item_rect$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	comiss	xmm0, DWORD PTR window_rect$[rbp+12]
	jb	SHORT $LN8@ScrollToBr
; Line 7914
	mov	rax, QWORD PTR item_rect$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	subss	xmm0, DWORD PTR [rcx+20]
	mov	rax, QWORD PTR g$[rbp]
	addss	xmm0, DWORD PTR [rax+5548]
	movss	xmm2, DWORD PTR __real@3f800000
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetScrollFromPosY@ImGui@@YAXPEAUImGuiWindow@@MM@Z ; ImGui::SetScrollFromPosY
$LN8@ScrollToBr:
$LN7@ScrollToBr:
; Line 7916
	mov	rdx, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR next_scroll$6[rbp]
	call	?CalcNextScrollFromScrollTargetAndClamp@@YA?AUImVec2@@PEAUImGuiWindow@@@Z ; CalcNextScrollFromScrollTargetAndClamp
; Line 7917
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 92					; 0000005cH
	mov	r8, rax
	lea	rdx, QWORD PTR next_scroll$6[rbp]
	lea	rcx, QWORD PTR $T11[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR delta_scroll$[rbp], rax
$LN2@ScrollToBr:
; Line 7921
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	$LN9@ScrollToBr
; Line 7922
	mov	rax, QWORD PTR item_rect$[rbp]
	add	rax, 8
	lea	r8, QWORD PTR delta_scroll$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T13[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv225[rbp], rax
	mov	rax, QWORD PTR item_rect$[rbp]
	lea	r8, QWORD PTR delta_scroll$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T14[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv223[rbp], rax
	mov	r8, QWORD PTR tv225[rbp]
	mov	rdx, QWORD PTR tv223[rbp]
	lea	rcx, QWORD PTR $T12[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
	mov	QWORD PTR tv233[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+896]
	mov	QWORD PTR tv231[rbp], rax
	mov	r8, QWORD PTR tv233[rbp]
	mov	rdx, QWORD PTR tv231[rbp]
	lea	rcx, QWORD PTR $T15[rbp]
	call	?ScrollToBringRectIntoView@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@AEBUImRect@@@Z ; ImGui::ScrollToBringRectIntoView
	mov	rdx, rax
	lea	rcx, QWORD PTR delta_scroll$[rbp]
	call	??Y@YAAEAUImVec2@@AEAU0@AEBU0@@Z	; operator+=
$LN9@ScrollToBr:
; Line 7924
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR delta_scroll$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 7925
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?ScrollToBringRectIntoView@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@AEBUImRect@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+680]
	pop	rdi
	pop	rbp
	ret	0
?ScrollToBringRectIntoView@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@AEBUImRect@@@Z ENDP ; ImGui::ScrollToBringRectIntoView
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetScrollFromPosY@ImGui@@YAXPEAUImGuiWindow@@MM@Z
_TEXT	SEGMENT
decoration_up_height$ = 4
tv72 = 212
window$ = 256
local_y$ = 264
center_y_ratio$ = 272
?SetScrollFromPosY@ImGui@@YAXPEAUImGuiWindow@@MM@Z PROC	; ImGui::SetScrollFromPosY, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7996
$LN5:
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7997
	movss	xmm0, DWORD PTR center_y_ratio$[rbp]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN3@SetScrollF
	movss	xmm0, DWORD PTR __real@3f800000
	comiss	xmm0, DWORD PTR center_y_ratio$[rbp]
	jae	SHORT $LN4@SetScrollF
$LN3@SetScrollF:
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetScrollFromPosY@ImGui@@YAXPEAUImGuiWindow@@MM@Z@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1GC@LDEACFFC@?$AAc?$AAe?$AAn?$AAt?$AAe?$AAr?$AA_?$AAy?$AA_?$AAr?$AAa?$AAt?$AAi?$AAo?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@SetScrollF:
; Line 7998
	mov	rcx, QWORD PTR window$[rbp]
	call	?TitleBarHeight@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::TitleBarHeight
	movss	DWORD PTR tv72[rbp], xmm0
	mov	rcx, QWORD PTR window$[rbp]
	call	?MenuBarHeight@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::MenuBarHeight
	movss	xmm1, DWORD PTR tv72[rbp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR decoration_up_height$[rbp], xmm0
; Line 7999
	movss	xmm0, DWORD PTR local_y$[rbp]
	subss	xmm0, DWORD PTR decoration_up_height$[rbp]
	movss	DWORD PTR local_y$[rbp], xmm0
; Line 8000
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR local_y$[rbp]
	addss	xmm0, DWORD PTR [rax+96]
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+112], xmm0
; Line 8001
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR center_y_ratio$[rbp]
	movss	DWORD PTR [rax+120], xmm0
; Line 8002
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+128], xmm0
; Line 8003
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetScrollFromPosY@ImGui@@YAXPEAUImGuiWindow@@MM@Z ENDP	; ImGui::SetScrollFromPosY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetScrollFromPosX@ImGui@@YAXPEAUImGuiWindow@@MM@Z
_TEXT	SEGMENT
window$ = 224
local_x$ = 232
center_x_ratio$ = 240
?SetScrollFromPosX@ImGui@@YAXPEAUImGuiWindow@@MM@Z PROC	; ImGui::SetScrollFromPosX, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7988
$LN5:
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7989
	movss	xmm0, DWORD PTR center_x_ratio$[rbp]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN3@SetScrollF
	movss	xmm0, DWORD PTR __real@3f800000
	comiss	xmm0, DWORD PTR center_x_ratio$[rbp]
	jae	SHORT $LN4@SetScrollF
$LN3@SetScrollF:
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetScrollFromPosX@ImGui@@YAXPEAUImGuiWindow@@MM@Z@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1GC@BIJJIADH@?$AAc?$AAe?$AAn?$AAt?$AAe?$AAr?$AA_?$AAx?$AA_?$AAr?$AAa?$AAt?$AAi?$AAo?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@SetScrollF:
; Line 7990
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR local_x$[rbp]
	addss	xmm0, DWORD PTR [rax+92]
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+108], xmm0
; Line 7991
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR center_x_ratio$[rbp]
	movss	DWORD PTR [rax+116], xmm0
; Line 7992
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+124], xmm0
; Line 7993
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?SetScrollFromPosX@ImGui@@YAXPEAUImGuiWindow@@MM@Z ENDP	; ImGui::SetScrollFromPosX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetScrollY@ImGui@@YAXPEAUImGuiWindow@@M@Z
_TEXT	SEGMENT
window$ = 224
scroll_y$ = 232
?SetScrollY@ImGui@@YAXPEAUImGuiWindow@@M@Z PROC		; ImGui::SetScrollY, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7959
$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7960
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR scroll_y$[rbp]
	movss	DWORD PTR [rax+112], xmm0
; Line 7961
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+120], xmm0
; Line 7962
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+128], xmm0
; Line 7963
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?SetScrollY@ImGui@@YAXPEAUImGuiWindow@@M@Z ENDP		; ImGui::SetScrollY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetScrollX@ImGui@@YAXPEAUImGuiWindow@@M@Z
_TEXT	SEGMENT
window$ = 224
scroll_x$ = 232
?SetScrollX@ImGui@@YAXPEAUImGuiWindow@@M@Z PROC		; ImGui::SetScrollX, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7952
$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7953
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR scroll_x$[rbp]
	movss	DWORD PTR [rax+108], xmm0
; Line 7954
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+116], xmm0
; Line 7955
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+124], xmm0
; Line 7956
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?SetScrollX@ImGui@@YAXPEAUImGuiWindow@@M@Z ENDP		; ImGui::SetScrollX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetNextWindowScroll@ImGui@@YAXAEBUImVec2@@@Z
_TEXT	SEGMENT
g$ = 8
scroll$ = 256
?SetNextWindowScroll@ImGui@@YAXAEBUImVec2@@@Z PROC	; ImGui::SetNextWindowScroll, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6938
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6939
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6940
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7344]
	bts	eax, 7
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7344], eax
; Line 6941
	mov	rax, QWORD PTR scroll$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+7392], rax
; Line 6942
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetNextWindowScroll@ImGui@@YAXAEBUImVec2@@@Z ENDP	; ImGui::SetNextWindowScroll
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FindSettingsHandler@ImGui@@YAPEAUImGuiSettingsHandler@@PEBD@Z
_TEXT	SEGMENT
g$ = 8
type_hash$ = 36
handler_n$1 = 68
tv85 = 280
tv77 = 280
type_name$ = 320
?FindSettingsHandler@ImGui@@YAPEAUImGuiSettingsHandler@@PEBD@Z PROC ; ImGui::FindSettingsHandler, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10443
$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10444
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10445
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR type_name$[rbp]
	call	?ImHashStr@@YAIPEBD_KI@Z		; ImHashStr
	mov	DWORD PTR type_hash$[rbp], eax
; Line 10446
	mov	DWORD PTR handler_n$1[rbp], 0
	jmp	SHORT $LN4@FindSettin
$LN2@FindSettin:
	mov	eax, DWORD PTR handler_n$1[rbp]
	inc	eax
	mov	DWORD PTR handler_n$1[rbp], eax
$LN4@FindSettin:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+12408]
	cmp	DWORD PTR handler_n$1[rbp], eax
	jge	SHORT $LN3@FindSettin
; Line 10447
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12408				; 00003078H
	mov	QWORD PTR tv77[rbp], rax
	mov	edx, DWORD PTR handler_n$1[rbp]
	mov	rcx, QWORD PTR tv77[rbp]
	call	??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z ; ImVector<ImGuiSettingsHandler>::operator[]
	mov	ecx, DWORD PTR type_hash$[rbp]
	cmp	DWORD PTR [rax+8], ecx
	jne	SHORT $LN5@FindSettin
; Line 10448
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12408				; 00003078H
	mov	QWORD PTR tv85[rbp], rax
	mov	edx, DWORD PTR handler_n$1[rbp]
	mov	rcx, QWORD PTR tv85[rbp]
	call	??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z ; ImVector<ImGuiSettingsHandler>::operator[]
	jmp	SHORT $LN1@FindSettin
$LN5@FindSettin:
	jmp	SHORT $LN2@FindSettin
$LN3@FindSettin:
; Line 10449
	xor	eax, eax
$LN1@FindSettin:
; Line 10450
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?FindSettingsHandler@ImGui@@YAPEAUImGuiSettingsHandler@@PEBD@Z ENDP ; ImGui::FindSettingsHandler
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FindOrCreateWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z
_TEXT	SEGMENT
settings$1 = 8
name$ = 256
?FindOrCreateWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z PROC ; ImGui::FindOrCreateWindowSettings, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10436
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10437
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR name$[rbp]
	call	?ImHashStr@@YAIPEBD_KI@Z		; ImHashStr
	mov	ecx, eax
	call	?FindWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@I@Z ; ImGui::FindWindowSettings
	mov	QWORD PTR settings$1[rbp], rax
	cmp	QWORD PTR settings$1[rbp], 0
	je	SHORT $LN2@FindOrCrea
; Line 10438
	mov	rax, QWORD PTR settings$1[rbp]
	jmp	SHORT $LN1@FindOrCrea
$LN2@FindOrCrea:
; Line 10439
	mov	rcx, QWORD PTR name$[rbp]
	call	?CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z ; ImGui::CreateNewWindowSettings
$LN1@FindOrCrea:
; Line 10440
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?FindOrCreateWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z ENDP ; ImGui::FindOrCreateWindowSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FindWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@I@Z
_TEXT	SEGMENT
g$ = 8
settings$1 = 40
tv72 = 248
id$ = 288
?FindWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@I@Z PROC ; ImGui::FindWindowSettings, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10427
$LN7:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10428
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10429
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12424				; 00003088H
	mov	rcx, rax
	call	?begin@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ ; ImChunkStream<ImGuiWindowSettings>::begin
	mov	QWORD PTR settings$1[rbp], rax
	jmp	SHORT $LN4@FindWindow
$LN2@FindWindow:
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12424				; 00003088H
	mov	QWORD PTR tv72[rbp], rax
	mov	rdx, QWORD PTR settings$1[rbp]
	mov	rcx, QWORD PTR tv72[rbp]
	call	?next_chunk@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@PEAU2@@Z ; ImChunkStream<ImGuiWindowSettings>::next_chunk
	mov	QWORD PTR settings$1[rbp], rax
$LN4@FindWindow:
	cmp	QWORD PTR settings$1[rbp], 0
	je	SHORT $LN3@FindWindow
; Line 10430
	mov	rax, QWORD PTR settings$1[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN5@FindWindow
; Line 10431
	mov	rax, QWORD PTR settings$1[rbp]
	jmp	SHORT $LN1@FindWindow
$LN5@FindWindow:
	jmp	SHORT $LN2@FindWindow
$LN3@FindWindow:
; Line 10432
	xor	eax, eax
$LN1@FindWindow:
; Line 10433
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?FindWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@I@Z ENDP ; ImGui::FindWindowSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z
_TEXT	SEGMENT
g$ = 8
p$1 = 40
name_len$ = 72
chunk_size$ = 104
settings$ = 136
$T2 = 360
$T3 = 392
$T4 = 424
$T5 = 452
tv150 = 472
tv132 = 472
tv92 = 472
tv77 = 472
tv151 = 480
name$ = 528
?CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z PROC ; ImGui::CreateNewWindowSettings, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10405
$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 528				; 00000210H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10406
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10411
	lea	rdx, OFFSET FLAT:??_C@_03OIJOKPOL@?$CD?$CD?$CD@
	mov	rcx, QWORD PTR name$[rbp]
	call	strstr
	mov	QWORD PTR p$1[rbp], rax
	cmp	QWORD PTR p$1[rbp], 0
	je	SHORT $LN2@CreateNewW
; Line 10412
	mov	rax, QWORD PTR p$1[rbp]
	mov	QWORD PTR name$[rbp], rax
$LN2@CreateNewW:
; Line 10414
	mov	rax, QWORD PTR name$[rbp]
	mov	QWORD PTR tv150[rbp], rax
	mov	QWORD PTR tv151[rbp], -1
$LL7@CreateNewW:
	inc	QWORD PTR tv151[rbp]
	mov	rax, QWORD PTR tv150[rbp]
	mov	rcx, QWORD PTR tv151[rbp]
	cmp	BYTE PTR [rax+rcx], 0
	jne	SHORT $LL7@CreateNewW
	mov	rax, QWORD PTR tv151[rbp]
	mov	QWORD PTR name_len$[rbp], rax
; Line 10417
	mov	rax, QWORD PTR name_len$[rbp]
	add	rax, 17
	mov	QWORD PTR chunk_size$[rbp], rax
; Line 10418
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12424				; 00003088H
	mov	QWORD PTR tv77[rbp], rax
	mov	rdx, QWORD PTR chunk_size$[rbp]
	mov	rcx, QWORD PTR tv77[rbp]
	call	?alloc_chunk@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@_K@Z ; ImChunkStream<ImGuiWindowSettings>::alloc_chunk
	mov	QWORD PTR settings$[rbp], rax
; Line 10419
	lea	rax, QWORD PTR $T5[rbp]
	mov	QWORD PTR $T4[rbp], rax
	mov	r8, QWORD PTR settings$[rbp]
	mov	rax, QWORD PTR $T4[rbp]
	movzx	edx, BYTE PTR [rax]
	mov	ecx, 16
	call	??2@YAPEAX_KUImNewWrapper@@PEAX@Z	; operator new
	mov	QWORD PTR $T3[rbp], rax
	cmp	QWORD PTR $T3[rbp], 0
	je	SHORT $LN4@CreateNewW
	mov	rcx, QWORD PTR $T3[rbp]
	call	??0ImGuiWindowSettings@@QEAA@XZ		; ImGuiWindowSettings::ImGuiWindowSettings
	mov	QWORD PTR tv92[rbp], rax
	jmp	SHORT $LN5@CreateNewW
$LN4@CreateNewW:
	mov	QWORD PTR tv92[rbp], 0
$LN5@CreateNewW:
	mov	rax, QWORD PTR tv92[rbp]
	mov	QWORD PTR $T2[rbp], rax
; Line 10420
	xor	r8d, r8d
	mov	rdx, QWORD PTR name_len$[rbp]
	mov	rcx, QWORD PTR name$[rbp]
	call	?ImHashStr@@YAIPEBD_KI@Z		; ImHashStr
	mov	rcx, QWORD PTR settings$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 10421
	mov	rax, QWORD PTR name_len$[rbp]
	inc	rax
	mov	QWORD PTR tv132[rbp], rax
	mov	rcx, QWORD PTR settings$[rbp]
	call	?GetName@ImGuiWindowSettings@@QEAAPEADXZ ; ImGuiWindowSettings::GetName
	mov	rdi, rax
	mov	rsi, QWORD PTR name$[rbp]
	mov	rax, QWORD PTR tv132[rbp]
	mov	rcx, rax
	rep movsb
; Line 10423
	mov	rax, QWORD PTR settings$[rbp]
; Line 10424
	lea	rsp, QWORD PTR [rbp+496]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z ENDP ; ImGui::CreateNewWindowSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
g$ = 8
p$1 = 40
name_len$ = 72
chunk_size$ = 104
settings$ = 136
$T2 = 360
$T3 = 392
$T4 = 424
$T5 = 452
tv150 = 472
tv132 = 472
tv92 = 472
tv77 = 472
tv151 = 480
name$ = 528
?dtor$0@?0??CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z@4HA PROC ; `ImGui::CreateNewWindowSettings'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	r8, QWORD PTR settings$[rbp]
	mov	rax, QWORD PTR $T4[rbp]
	movzx	edx, BYTE PTR [rax]
	mov	rcx, QWORD PTR $T3[rbp]
	call	??3@YAXPEAXUImNewWrapper@@0@Z		; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??CreateNewWindowSettings@ImGui@@YAPEAUImGuiWindowSettings@@PEBD@Z@4HA ENDP ; `ImGui::CreateNewWindowSettings'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ClearIniSettings@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
handler_n$1 = 36
tv83 = 248
tv75 = 248
tv128 = 256
tv90 = 264
tv94 = 272
?ClearIniSettings@ImGui@@YAXXZ PROC			; ImGui::ClearIniSettings, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10453
$LN7:
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10454
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10455
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12392				; 00003068H
	mov	rcx, rax
	call	?clear@ImGuiTextBuffer@@QEAAXXZ		; ImGuiTextBuffer::clear
; Line 10456
	mov	DWORD PTR handler_n$1[rbp], 0
	jmp	SHORT $LN4@ClearIniSe
$LN2@ClearIniSe:
	mov	eax, DWORD PTR handler_n$1[rbp]
	inc	eax
	mov	DWORD PTR handler_n$1[rbp], eax
$LN4@ClearIniSe:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+12408]
	cmp	DWORD PTR handler_n$1[rbp], eax
	jge	$LN3@ClearIniSe
; Line 10457
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12408				; 00003078H
	mov	QWORD PTR tv75[rbp], rax
	mov	edx, DWORD PTR handler_n$1[rbp]
	mov	rcx, QWORD PTR tv75[rbp]
	call	??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z ; ImVector<ImGuiSettingsHandler>::operator[]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN5@ClearIniSe
; Line 10458
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12408				; 00003078H
	mov	QWORD PTR tv83[rbp], rax
	mov	edx, DWORD PTR handler_n$1[rbp]
	mov	rcx, QWORD PTR tv83[rbp]
	call	??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z ; ImVector<ImGuiSettingsHandler>::operator[]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR tv128[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12408				; 00003078H
	mov	QWORD PTR tv90[rbp], rax
	mov	edx, DWORD PTR handler_n$1[rbp]
	mov	rcx, QWORD PTR tv90[rbp]
	call	??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z ; ImVector<ImGuiSettingsHandler>::operator[]
	mov	QWORD PTR tv94[rbp], rax
	mov	rdx, QWORD PTR tv94[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	call	QWORD PTR tv128[rbp]
$LN5@ClearIniSe:
	jmp	$LN2@ClearIniSe
$LN3@ClearIniSe:
; Line 10459
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?ClearIniSettings@ImGui@@YAXXZ ENDP			; ImGui::ClearIniSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?MarkIniSettingsDirty@ImGui@@YAXPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
g$ = 8
window$ = 256
?MarkIniSettingsDirty@ImGui@@YAXPEAUImGuiWindow@@@Z PROC ; ImGui::MarkIniSettingsDirty, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10397
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10398
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10399
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 256				; 00000100H
	test	eax, eax
	jne	SHORT $LN2@MarkIniSet
; Line 10400
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rax+12388]
	jb	SHORT $LN3@MarkIniSet
; Line 10401
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+28]
	movss	DWORD PTR [rax+12388], xmm0
$LN3@MarkIniSet:
$LN2@MarkIniSet:
; Line 10402
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?MarkIniSettingsDirty@ImGui@@YAXPEAUImGuiWindow@@@Z ENDP ; ImGui::MarkIniSettingsDirty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?MarkIniSettingsDirty@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
?MarkIniSettingsDirty@ImGui@@YAXXZ PROC			; ImGui::MarkIniSettingsDirty, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10390
$LN4:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10391
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10392
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rax+12388]
	jb	SHORT $LN2@MarkIniSet
; Line 10393
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+28]
	movss	DWORD PTR [rax+12388], xmm0
$LN2@MarkIniSet:
; Line 10394
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?MarkIniSettingsDirty@ImGui@@YAXXZ ENDP			; ImGui::MarkIniSettingsDirty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CallContextHooks@ImGui@@YAXPEAUImGuiContext@@W4ImGuiContextHookType@@@Z
_TEXT	SEGMENT
g$ = 8
n$1 = 36
tv81 = 248
tv73 = 248
tv94 = 256
tv88 = 264
tv92 = 272
ctx$ = 320
hook_type$ = 328
?CallContextHooks@ImGui@@YAXPEAUImGuiContext@@W4ImGuiContextHookType@@@Z PROC ; ImGui::CallContextHooks, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3438
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3439
	mov	rax, QWORD PTR ctx$[rbp]
	mov	QWORD PTR g$[rbp], rax
; Line 3440
	mov	DWORD PTR n$1[rbp], 0
	jmp	SHORT $LN4@CallContex
$LN2@CallContex:
	mov	eax, DWORD PTR n$1[rbp]
	inc	eax
	mov	DWORD PTR n$1[rbp], eax
$LN4@CallContex:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+12456]
	cmp	DWORD PTR n$1[rbp], eax
	jge	$LN3@CallContex
; Line 3441
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12456				; 000030a8H
	mov	QWORD PTR tv73[rbp], rax
	mov	edx, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR tv73[rbp]
	call	??A?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@H@Z ; ImVector<ImGuiContextHook>::operator[]
	mov	ecx, DWORD PTR hook_type$[rbp]
	cmp	DWORD PTR [rax+4], ecx
	jne	SHORT $LN5@CallContex
; Line 3442
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12456				; 000030a8H
	mov	QWORD PTR tv81[rbp], rax
	mov	edx, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR tv81[rbp]
	call	??A?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@H@Z ; ImVector<ImGuiContextHook>::operator[]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR tv94[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12456				; 000030a8H
	mov	QWORD PTR tv88[rbp], rax
	mov	edx, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR tv88[rbp]
	call	??A?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@H@Z ; ImVector<ImGuiContextHook>::operator[]
	mov	QWORD PTR tv92[rbp], rax
	mov	rdx, QWORD PTR tv92[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	call	QWORD PTR tv94[rbp]
$LN5@CallContex:
	jmp	$LN2@CallContex
$LN3@CallContex:
; Line 3443
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?CallContextHooks@ImGui@@YAXPEAUImGuiContext@@W4ImGuiContextHookType@@@Z ENDP ; ImGui::CallContextHooks
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RemoveContextHook@ImGui@@YAXPEAUImGuiContext@@I@Z
_TEXT	SEGMENT
g$ = 8
n$1 = 36
tv87 = 248
tv79 = 248
ctx$ = 288
hook_id$ = 296
?RemoveContextHook@ImGui@@YAXPEAUImGuiContext@@I@Z PROC	; ImGui::RemoveContextHook, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3427
$LN8:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3428
	mov	rax, QWORD PTR ctx$[rbp]
	mov	QWORD PTR g$[rbp], rax
; Line 3429
	cmp	DWORD PTR hook_id$[rbp], 0
	jne	SHORT $LN7@RemoveCont
	mov	eax, DWORD PTR ?__LINE__Var@?0??RemoveContextHook@ImGui@@YAXPEAUImGuiContext@@I@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BK@LEOMHFJC@?$AAh?$AAo?$AAo?$AAk?$AA_?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@RemoveCont:
; Line 3430
	mov	DWORD PTR n$1[rbp], 0
	jmp	SHORT $LN4@RemoveCont
$LN2@RemoveCont:
	mov	eax, DWORD PTR n$1[rbp]
	inc	eax
	mov	DWORD PTR n$1[rbp], eax
$LN4@RemoveCont:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+12456]
	cmp	DWORD PTR n$1[rbp], eax
	jge	SHORT $LN3@RemoveCont
; Line 3431
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12456				; 000030a8H
	mov	QWORD PTR tv79[rbp], rax
	mov	edx, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR tv79[rbp]
	call	??A?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@H@Z ; ImVector<ImGuiContextHook>::operator[]
	mov	ecx, DWORD PTR hook_id$[rbp]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN5@RemoveCont
; Line 3432
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12456				; 000030a8H
	mov	QWORD PTR tv87[rbp], rax
	mov	edx, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR tv87[rbp]
	call	??A?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@H@Z ; ImVector<ImGuiContextHook>::operator[]
	mov	DWORD PTR [rax+4], 7
$LN5@RemoveCont:
	jmp	SHORT $LN2@RemoveCont
$LN3@RemoveCont:
; Line 3433
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?RemoveContextHook@ImGui@@YAXPEAUImGuiContext@@I@Z ENDP	; ImGui::RemoveContextHook
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?AddContextHook@ImGui@@YAIPEAUImGuiContext@@PEBUImGuiContextHook@@@Z
_TEXT	SEGMENT
g$ = 8
tv86 = 212
tv79 = 216
ctx$ = 256
hook$ = 264
?AddContextHook@ImGui@@YAIPEAUImGuiContext@@PEBUImGuiContextHook@@@Z PROC ; ImGui::AddContextHook, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3417
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3418
	mov	rax, QWORD PTR ctx$[rbp]
	mov	QWORD PTR g$[rbp], rax
; Line 3419
	mov	rax, QWORD PTR hook$[rbp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN3@AddContext
	mov	rax, QWORD PTR hook$[rbp]
	cmp	DWORD PTR [rax], 0
	jne	SHORT $LN3@AddContext
	mov	rax, QWORD PTR hook$[rbp]
	cmp	DWORD PTR [rax+4], 7
	jne	SHORT $LN4@AddContext
$LN3@AddContext:
	mov	eax, DWORD PTR ?__LINE__Var@?0??AddContextHook@ImGui@@YAIPEAUImGuiContext@@PEBUImGuiContextHook@@@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1LO@DGOFJFDA@?$AAh?$AAo?$AAo?$AAk?$AA?9?$AA?$DO?$AAC?$AAa?$AAl?$AAl?$AAb?$AAa?$AAc?$AAk?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@AddContext:
; Line 3420
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12456				; 000030a8H
	mov	QWORD PTR tv79[rbp], rax
	mov	rdx, QWORD PTR hook$[rbp]
	mov	rcx, QWORD PTR tv79[rbp]
	call	?push_back@?$ImVector@UImGuiContextHook@@@@QEAAXAEBUImGuiContextHook@@@Z ; ImVector<ImGuiContextHook>::push_back
; Line 3421
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+12472]
	inc	eax
	mov	DWORD PTR tv86[rbp], eax
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR tv86[rbp]
	mov	DWORD PTR [rax+12472], ecx
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12456				; 000030a8H
	mov	rcx, rax
	call	?back@?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@XZ ; ImVector<ImGuiContextHook>::back
	mov	ecx, DWORD PTR tv86[rbp]
	mov	DWORD PTR [rax], ecx
; Line 3422
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+12472]
; Line 3423
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?AddContextHook@ImGui@@YAIPEAUImGuiContext@@PEBUImGuiContextHook@@@Z ENDP ; ImGui::AddContextHook
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?UpdateMouseMovingWindowEndFrame@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
root_window$1 = 40
is_closed_popup$2 = 68
modal$3 = 104
hovered_window_above_modal$4 = 132
$T5 = 356
tv180 = 388
tv95 = 388
tv186 = 392
tv151 = 392
tv84 = 392
?UpdateMouseMovingWindowEndFrame@ImGui@@YAXXZ PROC	; ImGui::UpdateMouseMovingWindowEndFrame, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3586
$LN22:
	push	rbp
	push	rdi
	sub	rsp, 440				; 000001b8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3587
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3588
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	jne	SHORT $LN3@UpdateMous
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7240], 0
	je	SHORT $LN2@UpdateMous
$LN3@UpdateMous:
; Line 3589
	jmp	$LN1@UpdateMous
$LN2@UpdateMous:
; Line 3592
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN4@UpdateMous
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	movzx	eax, BYTE PTR [rax+148]
	test	eax, eax
	je	SHORT $LN4@UpdateMous
; Line 3593
	jmp	$LN1@UpdateMous
$LN4@UpdateMous:
; Line 3597
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1056]
	test	eax, eax
	je	$LN5@UpdateMous
; Line 3601
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7192], 0
	je	SHORT $LN14@UpdateMous
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7192]
	mov	rax, QWORD PTR [rax+904]
	mov	QWORD PTR tv84[rbp], rax
	jmp	SHORT $LN15@UpdateMous
$LN14@UpdateMous:
	mov	QWORD PTR tv84[rbp], 0
$LN15@UpdateMous:
	mov	rax, QWORD PTR tv84[rbp]
	mov	QWORD PTR root_window$1[rbp], rax
; Line 3602
	cmp	QWORD PTR root_window$1[rbp], 0
	je	SHORT $LN16@UpdateMous
	mov	rax, QWORD PTR root_window$1[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	je	SHORT $LN16@UpdateMous
	mov	edx, 256				; 00000100H
	mov	rax, QWORD PTR root_window$1[rbp]
	mov	ecx, DWORD PTR [rax+164]
	call	?IsPopupOpen@ImGui@@YA_NIH@Z		; ImGui::IsPopupOpen
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN16@UpdateMous
	mov	BYTE PTR tv95[rbp], 1
	jmp	SHORT $LN17@UpdateMous
$LN16@UpdateMous:
	mov	BYTE PTR tv95[rbp], 0
$LN17@UpdateMous:
	movzx	eax, BYTE PTR tv95[rbp]
	mov	BYTE PTR is_closed_popup$2[rbp], al
; Line 3604
	cmp	QWORD PTR root_window$1[rbp], 0
	je	$LN6@UpdateMous
	movzx	eax, BYTE PTR is_closed_popup$2[rbp]
	test	eax, eax
	jne	$LN6@UpdateMous
; Line 3606
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+7192]
	call	?StartMouseMovingWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::StartMouseMovingWindow
; Line 3609
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+205]
	test	eax, eax
	je	SHORT $LN8@UpdateMous
	mov	rax, QWORD PTR root_window$1[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 1
	test	eax, eax
	jne	SHORT $LN8@UpdateMous
; Line 3610
	lea	rdx, QWORD PTR $T5[rbp]
	mov	rcx, QWORD PTR root_window$1[rbp]
	call	?TitleBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ ; ImGuiWindow::TitleBarRect
	mov	QWORD PTR tv151[rbp], rax
	mov	eax, 8
	imul	rax, rax, 0
	mov	rcx, QWORD PTR g$[rbp]
	lea	rax, QWORD PTR [rcx+rax+972]
	mov	rdx, rax
	mov	rcx, QWORD PTR tv151[rbp]
	call	?Contains@ImRect@@QEBA_NAEBUImVec2@@@Z	; ImRect::Contains
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN9@UpdateMous
; Line 3611
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7208], 0
$LN9@UpdateMous:
$LN8@UpdateMous:
; Line 3614
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7251]
	test	eax, eax
	je	SHORT $LN10@UpdateMous
; Line 3615
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7208], 0
$LN10@UpdateMous:
; Line 3616
	jmp	SHORT $LN7@UpdateMous
$LN6@UpdateMous:
; Line 3617
	cmp	QWORD PTR root_window$1[rbp], 0
	jne	SHORT $LN11@UpdateMous
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN11@UpdateMous
	call	?GetTopMostPopupModal@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetTopMostPopupModal
	test	rax, rax
	jne	SHORT $LN11@UpdateMous
; Line 3620
	xor	ecx, ecx
	call	?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::FocusWindow
$LN11@UpdateMous:
$LN7@UpdateMous:
$LN5@UpdateMous:
; Line 3627
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1056]
	test	eax, eax
	je	$LN12@UpdateMous
; Line 3631
	call	?GetTopMostPopupModal@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetTopMostPopupModal
	mov	QWORD PTR modal$3[rbp], rax
; Line 3632
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7192], 0
	je	SHORT $LN18@UpdateMous
	mov	rdx, QWORD PTR modal$3[rbp]
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+7192]
	call	?IsWindowAbove@ImGui@@YA_NPEAUImGuiWindow@@0@Z ; ImGui::IsWindowAbove
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@UpdateMous
	mov	DWORD PTR tv180[rbp], 1
	jmp	SHORT $LN19@UpdateMous
$LN18@UpdateMous:
	mov	DWORD PTR tv180[rbp], 0
$LN19@UpdateMous:
	movzx	eax, BYTE PTR tv180[rbp]
	mov	BYTE PTR hovered_window_above_modal$4[rbp], al
; Line 3633
	movzx	eax, BYTE PTR hovered_window_above_modal$4[rbp]
	test	eax, eax
	je	SHORT $LN20@UpdateMous
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7192]
	mov	QWORD PTR tv186[rbp], rax
	jmp	SHORT $LN21@UpdateMous
$LN20@UpdateMous:
	mov	rax, QWORD PTR modal$3[rbp]
	mov	QWORD PTR tv186[rbp], rax
$LN21@UpdateMous:
	mov	dl, 1
	mov	rcx, QWORD PTR tv186[rbp]
	call	?ClosePopupsOverWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z ; ImGui::ClosePopupsOverWindow
$LN12@UpdateMous:
$LN1@UpdateMous:
; Line 3635
	lea	rsp, QWORD PTR [rbp+408]
	pop	rdi
	pop	rbp
	ret	0
?UpdateMouseMovingWindowEndFrame@ImGui@@YAXXZ ENDP	; ImGui::UpdateMouseMovingWindowEndFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?UpdateMouseMovingWindowNewFrame@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
moving_window$4 = 40
pos$5 = 72
__$ArrayPad$ = 280
?UpdateMouseMovingWindowNewFrame@ImGui@@YAXXZ PROC	; ImGui::UpdateMouseMovingWindowNewFrame, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3546
$LN14:
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3547
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3548
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7208], 0
	je	$LN2@UpdateMous
; Line 3552
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rax+7260]
	call	?KeepAliveID@ImGui@@YAXI@Z		; ImGui::KeepAliveID
; Line 3553
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7208], 0
	je	SHORT $LN11@UpdateMous
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7208]
	cmp	QWORD PTR [rax+904], 0
	jne	SHORT $LN12@UpdateMous
$LN11@UpdateMous:
	mov	eax, DWORD PTR ?__LINE__Var@?0??UpdateMouseMovingWindowNewFrame@ImGui@@YAXXZ@4JA
	add	eax, 7
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1FK@PIJFGHBG@?$AAg?$AA?4?$AAM?$AAo?$AAv?$AAi?$AAn?$AAg?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN12@UpdateMous:
; Line 3554
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7208]
	mov	rax, QWORD PTR [rax+904]
	mov	QWORD PTR moving_window$4[rbp], rax
; Line 3555
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+304]
	test	eax, eax
	je	$LN4@UpdateMous
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 296				; 00000128H
	mov	rcx, rax
	call	?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z ; ImGui::IsMousePosValid
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@UpdateMous
; Line 3557
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7296				; 00001c80H
	mov	rcx, QWORD PTR g$[rbp]
	add	rcx, 296				; 00000128H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR pos$5[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
; Line 3558
	mov	rax, QWORD PTR moving_window$4[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	ucomiss	xmm0, DWORD PTR pos$5[rbp]
	jp	SHORT $LN7@UpdateMous
	jne	SHORT $LN7@UpdateMous
	mov	rax, QWORD PTR moving_window$4[rbp]
	movss	xmm0, DWORD PTR [rax+20]
	ucomiss	xmm0, DWORD PTR pos$5[rbp+4]
	jp	SHORT $LN13@UpdateMous
	je	SHORT $LN6@UpdateMous
$LN13@UpdateMous:
$LN7@UpdateMous:
; Line 3560
	mov	rcx, QWORD PTR moving_window$4[rbp]
	call	?MarkIniSettingsDirty@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::MarkIniSettingsDirty
; Line 3561
	mov	r8d, 1
	lea	rdx, QWORD PTR pos$5[rbp]
	mov	rcx, QWORD PTR moving_window$4[rbp]
	call	?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z ; ImGui::SetWindowPos
$LN6@UpdateMous:
; Line 3563
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+7208]
	call	?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::FocusWindow
; Line 3564
	jmp	SHORT $LN5@UpdateMous
$LN4@UpdateMous:
; Line 3567
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7208], 0
; Line 3568
	call	?ClearActiveID@ImGui@@YAXXZ		; ImGui::ClearActiveID
$LN5@UpdateMous:
; Line 3570
	jmp	SHORT $LN3@UpdateMous
$LN2@UpdateMous:
; Line 3574
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7304], 0
	je	SHORT $LN8@UpdateMous
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7304]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7260]
	cmp	DWORD PTR [rax+84], ecx
	jne	SHORT $LN8@UpdateMous
; Line 3576
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rax+7260]
	call	?KeepAliveID@ImGui@@YAXI@Z		; ImGui::KeepAliveID
; Line 3577
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+304]
	test	eax, eax
	jne	SHORT $LN9@UpdateMous
; Line 3578
	call	?ClearActiveID@ImGui@@YAXXZ		; ImGui::ClearActiveID
$LN9@UpdateMous:
$LN8@UpdateMous:
$LN3@UpdateMous:
; Line 3581
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?UpdateMouseMovingWindowNewFrame@ImGui@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?UpdateMouseMovingWindowNewFrame@ImGui@@YAXXZ ENDP	; ImGui::UpdateMouseMovingWindowNewFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?StartMouseMovingWindow@ImGui@@YAXPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
g$ = 8
can_move_window$ = 36
$T1 = 260
window$ = 320
?StartMouseMovingWindow@ImGui@@YAXPEAUImGuiWindow@@@Z PROC ; ImGui::StartMouseMovingWindow, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3521
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3525
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3526
	mov	rcx, QWORD PTR window$[rbp]
	call	?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::FocusWindow
; Line 3527
	mov	rdx, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rax+84]
	call	?SetActiveID@ImGui@@YAXIPEAUImGuiWindow@@@Z ; ImGui::SetActiveID
; Line 3528
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7710], 1
; Line 3529
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+904]
	add	rax, 16
	mov	ecx, 8
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR g$[rbp]
	lea	rcx, QWORD PTR [rdx+rcx+972]
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T1[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+7296], rax
; Line 3530
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7274], 1
; Line 3531
	call	?SetActiveIdUsingNavAndKeys@ImGui@@YAXXZ ; ImGui::SetActiveIdUsingNavAndKeys
; Line 3533
	mov	BYTE PTR can_move_window$[rbp], 1
; Line 3534
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@StartMouse
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+904]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN2@StartMouse
$LN3@StartMouse:
; Line 3535
	mov	BYTE PTR can_move_window$[rbp], 0
$LN2@StartMouse:
; Line 3536
	movzx	eax, BYTE PTR can_move_window$[rbp]
	test	eax, eax
	je	SHORT $LN4@StartMouse
; Line 3537
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax+7208], rcx
$LN4@StartMouse:
; Line 3538
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?StartMouseMovingWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ENDP ; ImGui::StartMouseMovingWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?UpdateHoveredWindowAndCaptureFlags@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
clear_hovered_windows$ = 36
modal_window$ = 72
mouse_earliest_button_down$ = 100
mouse_any_down$ = 132
i$1 = 164
mouse_avail_to_imgui$ = 196
mouse_dragging_extern_payload$ = 228
$T2 = 452
$T3 = 484
tv252 = 500
tv230 = 500
tv223 = 500
tv215 = 500
tv202 = 500
tv187 = 500
tv180 = 500
tv142 = 500
tv253 = 504
?UpdateHoveredWindowAndCaptureFlags@ImGui@@YAXXZ PROC	; ImGui::UpdateHoveredWindowAndCaptureFlags, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3834
$LN38:
	push	rbp
	push	rdi
	sub	rsp, 552				; 00000228H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3835
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3836
	movss	xmm2, DWORD PTR __real@40800000
	movss	xmm1, DWORD PTR __real@40800000
	lea	rcx, QWORD PTR $T2[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rcx, QWORD PTR g$[rbp]
	add	rcx, 5568				; 000015c0H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T3[rbp]
	call	?ImMax@@YA?AUImVec2@@AEBU1@0@Z		; ImMax
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+7172], rax
; Line 3842
	mov	BYTE PTR clear_hovered_windows$[rbp], 0
; Line 3843
	call	?FindHoveredWindow@@YAXXZ		; FindHoveredWindow
; Line 3846
	call	?GetTopMostPopupModal@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetTopMostPopupModal
	mov	QWORD PTR modal_window$[rbp], rax
; Line 3847
	cmp	QWORD PTR modal_window$[rbp], 0
	je	SHORT $LN5@UpdateHove
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7192], 0
	je	SHORT $LN5@UpdateHove
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7192]
	mov	rdx, QWORD PTR modal_window$[rbp]
	mov	rcx, QWORD PTR [rax+904]
	call	?IsWindowChildOf@ImGui@@YA_NPEAUImGuiWindow@@0@Z ; ImGui::IsWindowChildOf
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@UpdateHove
; Line 3848
	mov	BYTE PTR clear_hovered_windows$[rbp], 1
$LN5@UpdateHove:
; Line 3851
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+8]
	and	eax, 16
	test	eax, eax
	je	SHORT $LN6@UpdateHove
; Line 3852
	mov	BYTE PTR clear_hovered_windows$[rbp], 1
$LN6@UpdateHove:
; Line 3855
	mov	DWORD PTR mouse_earliest_button_down$[rbp], -1
; Line 3856
	mov	BYTE PTR mouse_any_down$[rbp], 0
; Line 3857
	mov	DWORD PTR i$1[rbp], 0
	jmp	SHORT $LN4@UpdateHove
$LN2@UpdateHove:
	mov	eax, DWORD PTR i$1[rbp]
	inc	eax
	mov	DWORD PTR i$1[rbp], eax
$LN4@UpdateHove:
	cmp	DWORD PTR i$1[rbp], 5
	jge	$LN3@UpdateHove
; Line 3859
	movsxd	rax, DWORD PTR i$1[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1056]
	test	eax, eax
	je	SHORT $LN7@UpdateHove
; Line 3860
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7192], 0
	jne	SHORT $LN19@UpdateHove
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7576], 0
	jg	SHORT $LN19@UpdateHove
	mov	DWORD PTR tv142[rbp], 0
	jmp	SHORT $LN20@UpdateHove
$LN19@UpdateHove:
	mov	DWORD PTR tv142[rbp], 1
$LN20@UpdateHove:
	movsxd	rax, DWORD PTR i$1[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	edx, BYTE PTR tv142[rbp]
	mov	BYTE PTR [rcx+rax+1071], dl
$LN7@UpdateHove:
; Line 3861
	movzx	eax, BYTE PTR mouse_any_down$[rbp]
	movsxd	rcx, DWORD PTR i$1[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx+304]
	or	eax, ecx
	mov	BYTE PTR mouse_any_down$[rbp], al
; Line 3862
	movsxd	rax, DWORD PTR i$1[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+304]
	test	eax, eax
	je	SHORT $LN8@UpdateHove
; Line 3863
	cmp	DWORD PTR mouse_earliest_button_down$[rbp], -1
	je	SHORT $LN10@UpdateHove
	movsxd	rax, DWORD PTR i$1[rbp]
	movsxd	rcx, DWORD PTR mouse_earliest_button_down$[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	mov	r8, QWORD PTR g$[rbp]
	movsd	xmm0, QWORD PTR [rdx+rcx*8+1016]
	comisd	xmm0, QWORD PTR [r8+rax*8+1016]
	jbe	SHORT $LN9@UpdateHove
$LN10@UpdateHove:
; Line 3864
	mov	eax, DWORD PTR i$1[rbp]
	mov	DWORD PTR mouse_earliest_button_down$[rbp], eax
$LN9@UpdateHove:
$LN8@UpdateHove:
; Line 3865
	jmp	$LN2@UpdateHove
$LN3@UpdateHove:
; Line 3866
	cmp	DWORD PTR mouse_earliest_button_down$[rbp], -1
	je	SHORT $LN21@UpdateHove
	movsxd	rax, DWORD PTR mouse_earliest_button_down$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1071]
	test	eax, eax
	jne	SHORT $LN21@UpdateHove
	mov	BYTE PTR tv180[rbp], 0
	jmp	SHORT $LN22@UpdateHove
$LN21@UpdateHove:
	mov	BYTE PTR tv180[rbp], 1
$LN22@UpdateHove:
	movzx	eax, BYTE PTR tv180[rbp]
	mov	BYTE PTR mouse_avail_to_imgui$[rbp], al
; Line 3870
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8012]
	test	eax, eax
	je	SHORT $LN23@UpdateHove
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+8016]
	and	eax, 16
	test	eax, eax
	je	SHORT $LN23@UpdateHove
	mov	BYTE PTR tv187[rbp], 1
	jmp	SHORT $LN24@UpdateHove
$LN23@UpdateHove:
	mov	BYTE PTR tv187[rbp], 0
$LN24@UpdateHove:
	movzx	eax, BYTE PTR tv187[rbp]
	mov	BYTE PTR mouse_dragging_extern_payload$[rbp], al
; Line 3871
	movzx	eax, BYTE PTR mouse_avail_to_imgui$[rbp]
	test	eax, eax
	jne	SHORT $LN11@UpdateHove
	movzx	eax, BYTE PTR mouse_dragging_extern_payload$[rbp]
	test	eax, eax
	jne	SHORT $LN11@UpdateHove
; Line 3872
	mov	BYTE PTR clear_hovered_windows$[rbp], 1
$LN11@UpdateHove:
; Line 3874
	movzx	eax, BYTE PTR clear_hovered_windows$[rbp]
	test	eax, eax
	je	SHORT $LN12@UpdateHove
; Line 3875
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7200], 0
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7192], 0
$LN12@UpdateHove:
; Line 3878
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+13064], -1
	je	SHORT $LN13@UpdateHove
; Line 3879
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+13064], 0
	je	SHORT $LN25@UpdateHove
	mov	DWORD PTR tv202[rbp], 1
	jmp	SHORT $LN26@UpdateHove
$LN25@UpdateHove:
	mov	DWORD PTR tv202[rbp], 0
$LN26@UpdateHove:
	mov	rax, QWORD PTR g$[rbp]
	movzx	ecx, BYTE PTR tv202[rbp]
	mov	BYTE PTR [rax+920], cl
	jmp	SHORT $LN14@UpdateHove
$LN13@UpdateHove:
; Line 3881
	movzx	eax, BYTE PTR mouse_avail_to_imgui$[rbp]
	test	eax, eax
	je	SHORT $LN28@UpdateHove
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7192], 0
	jne	SHORT $LN27@UpdateHove
	movzx	eax, BYTE PTR mouse_any_down$[rbp]
	test	eax, eax
	jne	SHORT $LN27@UpdateHove
$LN28@UpdateHove:
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7576], 0
	jg	SHORT $LN27@UpdateHove
	mov	DWORD PTR tv215[rbp], 0
	jmp	SHORT $LN29@UpdateHove
$LN27@UpdateHove:
	mov	DWORD PTR tv215[rbp], 1
$LN29@UpdateHove:
	mov	rax, QWORD PTR g$[rbp]
	movzx	ecx, BYTE PTR tv215[rbp]
	mov	BYTE PTR [rax+920], cl
$LN14@UpdateHove:
; Line 3884
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+13068], -1
	je	SHORT $LN15@UpdateHove
; Line 3885
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+13068], 0
	je	SHORT $LN30@UpdateHove
	mov	DWORD PTR tv223[rbp], 1
	jmp	SHORT $LN31@UpdateHove
$LN30@UpdateHove:
	mov	DWORD PTR tv223[rbp], 0
$LN31@UpdateHove:
	mov	rax, QWORD PTR g$[rbp]
	movzx	ecx, BYTE PTR tv223[rbp]
	mov	BYTE PTR [rax+921], cl
	jmp	SHORT $LN16@UpdateHove
$LN15@UpdateHove:
; Line 3887
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	jne	SHORT $LN32@UpdateHove
	cmp	QWORD PTR modal_window$[rbp], 0
	jne	SHORT $LN32@UpdateHove
	mov	DWORD PTR tv230[rbp], 0
	jmp	SHORT $LN33@UpdateHove
$LN32@UpdateHove:
	mov	DWORD PTR tv230[rbp], 1
$LN33@UpdateHove:
	mov	rax, QWORD PTR g$[rbp]
	movzx	ecx, BYTE PTR tv230[rbp]
	mov	BYTE PTR [rax+921], cl
$LN16@UpdateHove:
; Line 3888
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+925]
	test	eax, eax
	je	SHORT $LN17@UpdateHove
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+8]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN17@UpdateHove
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+8]
	and	eax, 8
	test	eax, eax
	jne	SHORT $LN17@UpdateHove
; Line 3889
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+921], 1
$LN17@UpdateHove:
; Line 3892
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+13072], -1
	je	SHORT $LN36@UpdateHove
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+13072], 0
	je	SHORT $LN34@UpdateHove
	mov	DWORD PTR tv252[rbp], 1
	jmp	SHORT $LN35@UpdateHove
$LN34@UpdateHove:
	mov	DWORD PTR tv252[rbp], 0
$LN35@UpdateHove:
	mov	eax, DWORD PTR tv252[rbp]
	mov	DWORD PTR tv253[rbp], eax
	jmp	SHORT $LN37@UpdateHove
$LN36@UpdateHove:
	mov	DWORD PTR tv253[rbp], 0
$LN37@UpdateHove:
	mov	rax, QWORD PTR g$[rbp]
	movzx	ecx, BYTE PTR tv253[rbp]
	mov	BYTE PTR [rax+922], cl
; Line 3893
	lea	rsp, QWORD PTR [rbp+520]
	pop	rdi
	pop	rbp
	ret	0
?UpdateHoveredWindowAndCaptureFlags@ImGui@@YAXXZ ENDP	; ImGui::UpdateHoveredWindowAndCaptureFlags
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Shutdown@ImGui@@YAXPEAUImGuiContext@@@Z
_TEXT	SEGMENT
g$ = 8
backup_context$1 = 40
context$ = 288
?Shutdown@ImGui@@YAXPEAUImGuiContext@@@Z PROC		; ImGui::Shutdown, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4166
$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4168
	mov	rax, QWORD PTR context$[rbp]
	mov	QWORD PTR g$[rbp], rax
; Line 4169
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+168], 0
	je	SHORT $LN2@Shutdown
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+1]
	test	eax, eax
	je	SHORT $LN2@Shutdown
; Line 4171
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+168]
	mov	BYTE PTR [rax+24], 0
; Line 4172
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+168]
	call	??$IM_DELETE@UImFontAtlas@@@@YAXPEAUImFontAtlas@@@Z ; IM_DELETE<ImFontAtlas>
$LN2@Shutdown:
; Line 4174
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+168], 0
; Line 4177
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	jne	SHORT $LN3@Shutdown
; Line 4178
	jmp	$LN1@Shutdown
$LN3@Shutdown:
; Line 4181
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12385]
	test	eax, eax
	je	SHORT $LN4@Shutdown
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+32], 0
	je	SHORT $LN4@Shutdown
; Line 4183
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR backup_context$1[rbp], rax
; Line 4184
	mov	rcx, QWORD PTR g$[rbp]
	call	?SetCurrentContext@ImGui@@YAXPEAUImGuiContext@@@Z ; ImGui::SetCurrentContext
; Line 4185
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?SaveIniSettingsToDisk@ImGui@@YAXPEBD@Z	; ImGui::SaveIniSettingsToDisk
; Line 4186
	mov	rcx, QWORD PTR backup_context$1[rbp]
	call	?SetCurrentContext@ImGui@@YAXPEAUImGuiContext@@@Z ; ImGui::SetCurrentContext
$LN4@Shutdown:
; Line 4189
	mov	edx, 6
	mov	rcx, QWORD PTR g$[rbp]
	call	?CallContextHooks@ImGui@@YAXPEAUImGuiContext@@W4ImGuiContextHookType@@@Z ; ImGui::CallContextHooks
; Line 4192
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	rcx, rax
	call	?clear_delete@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ ; ImVector<ImGuiWindow *>::clear_delete
; Line 4193
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7104				; 00001bc0H
	mov	rcx, rax
	call	?clear@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ ; ImVector<ImGuiWindow *>::clear
; Line 4194
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7120				; 00001bd0H
	mov	rcx, rax
	call	?clear@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ ; ImVector<ImGuiWindow *>::clear
; Line 4195
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7184], 0
; Line 4196
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7136				; 00001be0H
	mov	rcx, rax
	call	?clear@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ ; ImVector<ImGuiWindow *>::clear
; Line 4197
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7152				; 00001bf0H
	mov	rcx, rax
	call	?Clear@ImGuiStorage@@QEAAXXZ		; ImGuiStorage::Clear
; Line 4198
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7624], 0
; Line 4199
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7200], 0
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7192], 0
; Line 4200
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7328], 0
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7304], 0
; Line 4201
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7208], 0
; Line 4202
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7480				; 00001d38H
	mov	rcx, rax
	call	?clear@?$ImVector@UImGuiColorMod@@@@QEAAXXZ ; ImVector<ImGuiColorMod>::clear
; Line 4203
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7496				; 00001d48H
	mov	rcx, rax
	call	?clear@?$ImVector@UImGuiStyleMod@@@@QEAAXXZ ; ImVector<ImGuiStyleMod>::clear
; Line 4204
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7512				; 00001d58H
	mov	rcx, rax
	call	?clear@?$ImVector@PEAUImFont@@@@QEAAXXZ	; ImVector<ImFont *>::clear
; Line 4205
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	rcx, rax
	call	?clear@?$ImVector@UImGuiPopupData@@@@QEAAXXZ ; ImVector<ImGuiPopupData>::clear
; Line 4206
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7592				; 00001da8H
	mov	rcx, rax
	call	?clear@?$ImVector@UImGuiPopupData@@@@QEAAXXZ ; ImVector<ImGuiPopupData>::clear
; Line 4208
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7608				; 00001db8H
	mov	rcx, rax
	call	?clear_delete@?$ImVector@PEAUImGuiViewportP@@@@QEAAXXZ ; ImVector<ImGuiViewportP *>::clear_delete
; Line 4210
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8288				; 00002060H
	mov	rcx, rax
	call	?Clear@?$ImPool@UImGuiTabBar@@@@QEAAXXZ	; ImPool<ImGuiTabBar>::Clear
; Line 4211
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8328				; 00002088H
	mov	rcx, rax
	call	?clear@?$ImVector@UImGuiPtrOrIndex@@@@QEAAXXZ ; ImVector<ImGuiPtrOrIndex>::clear
; Line 4212
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8344				; 00002098H
	mov	rcx, rax
	call	?clear@?$ImVector@UImGuiShrinkWidthItem@@@@QEAAXXZ ; ImVector<ImGuiShrinkWidthItem>::clear
; Line 4214
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8192				; 00002000H
	mov	rcx, rax
	call	?Clear@?$ImPool@UImGuiTable@@@@QEAAXXZ	; ImPool<ImGuiTable>::Clear
; Line 4215
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8232				; 00002028H
	mov	rcx, rax
	call	?clear_destruct@?$ImVector@UImGuiTableTempData@@@@QEAAXXZ ; ImVector<ImGuiTableTempData>::clear_destruct
; Line 4216
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8264				; 00002048H
	mov	rcx, rax
	call	?clear@?$ImVector@UImDrawChannel@@@@QEAAXXZ ; ImVector<ImDrawChannel>::clear
; Line 4218
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12336				; 00003030H
	mov	rcx, rax
	call	?clear@?$ImVector@D@@QEAAXXZ		; ImVector<char>::clear
; Line 4219
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12352				; 00003040H
	mov	rcx, rax
	call	?clear@?$ImVector@I@@QEAAXXZ		; ImVector<unsigned int>::clear
; Line 4220
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8368				; 000020b0H
	mov	rcx, rax
	call	?ClearFreeMemory@ImGuiInputTextState@@QEAAXXZ ; ImGuiInputTextState::ClearFreeMemory
; Line 4222
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12424				; 00003088H
	mov	rcx, rax
	call	?clear@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAXXZ ; ImChunkStream<ImGuiWindowSettings>::clear
; Line 4223
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12408				; 00003078H
	mov	rcx, rax
	call	?clear@?$ImVector@UImGuiSettingsHandler@@@@QEAAXXZ ; ImVector<ImGuiSettingsHandler>::clear
; Line 4225
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+12488], 0
	je	SHORT $LN5@Shutdown
; Line 4228
	mov	ecx, 1
	call	QWORD PTR __imp___acrt_iob_func
	mov	rcx, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rcx+12488], rax
	je	SHORT $LN6@Shutdown
; Line 4230
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+12488]
	call	?ImFileClose@@YA_NPEAU_iobuf@@@Z	; ImFileClose
$LN6@Shutdown:
; Line 4231
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+12488], 0
$LN5@Shutdown:
; Line 4233
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12496				; 000030d0H
	mov	rcx, rax
	call	?clear@ImGuiTextBuffer@@QEAAXXZ		; ImGuiTextBuffer::clear
; Line 4235
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax], 0
$LN1@Shutdown:
; Line 4236
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?Shutdown@ImGui@@YAXPEAUImGuiContext@@@Z ENDP		; ImGui::Shutdown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z
_TEXT	SEGMENT
g$ = 8
ini_handler$5 = 48
viewport$ = 152
$T6 = 376
$T7 = 408
$T8 = 440
$T9 = 472
$T10 = 500
tv138 = 520
tv134 = 520
tv84 = 520
__$ArrayPad$ = 528
context$ = 576
?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z PROC		; ImGui::Initialize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4134
$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 584				; 00000248H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+616]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4135
	mov	rax, QWORD PTR context$[rbp]
	mov	QWORD PTR g$[rbp], rax
; Line 4136
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	jne	SHORT $LN3@Initialize
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12385]
	test	eax, eax
	je	SHORT $LN4@Initialize
$LN3@Initialize:
	mov	eax, DWORD PTR ?__LINE__Var@?0??Initialize@ImGui@@YAXPEAUImGuiContext@@@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EI@IBBBPCIN@?$AA?$CB?$AAg?$AA?4?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@Initialize:
; Line 4140
	lea	rcx, QWORD PTR ini_handler$5[rbp]
	call	??0ImGuiSettingsHandler@@QEAA@XZ	; ImGuiSettingsHandler::ImGuiSettingsHandler
; Line 4141
	lea	rax, OFFSET FLAT:??_C@_06BKKJGDHO@Window@
	mov	QWORD PTR ini_handler$5[rbp], rax
; Line 4142
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, OFFSET FLAT:??_C@_06BKKJGDHO@Window@
	call	?ImHashStr@@YAIPEBD_KI@Z		; ImHashStr
	mov	DWORD PTR ini_handler$5[rbp+8], eax
; Line 4143
	lea	rax, OFFSET FLAT:?WindowSettingsHandler_ClearAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@@Z ; WindowSettingsHandler_ClearAll
	mov	QWORD PTR ini_handler$5[rbp+16], rax
; Line 4144
	lea	rax, OFFSET FLAT:?WindowSettingsHandler_ReadOpen@@YAPEAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEBD@Z ; WindowSettingsHandler_ReadOpen
	mov	QWORD PTR ini_handler$5[rbp+32], rax
; Line 4145
	lea	rax, OFFSET FLAT:?WindowSettingsHandler_ReadLine@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAXPEBD@Z ; WindowSettingsHandler_ReadLine
	mov	QWORD PTR ini_handler$5[rbp+40], rax
; Line 4146
	lea	rax, OFFSET FLAT:?WindowSettingsHandler_ApplyAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@@Z ; WindowSettingsHandler_ApplyAll
	mov	QWORD PTR ini_handler$5[rbp+48], rax
; Line 4147
	lea	rax, OFFSET FLAT:?WindowSettingsHandler_WriteAll@@YAXPEAUImGuiContext@@PEAUImGuiSettingsHandler@@PEAUImGuiTextBuffer@@@Z ; WindowSettingsHandler_WriteAll
	mov	QWORD PTR ini_handler$5[rbp+56], rax
; Line 4148
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12408				; 00003078H
	mov	QWORD PTR tv84[rbp], rax
	lea	rdx, QWORD PTR ini_handler$5[rbp]
	mov	rcx, QWORD PTR tv84[rbp]
	call	?push_back@?$ImVector@UImGuiSettingsHandler@@@@QEAAXAEBUImGuiSettingsHandler@@@Z ; ImVector<ImGuiSettingsHandler>::push_back
; Line 4152
	mov	rcx, QWORD PTR context$[rbp]
	call	?TableSettingsInstallHandler@ImGui@@YAXPEAUImGuiContext@@@Z ; ImGui::TableSettingsInstallHandler
; Line 4155
	mov	ecx, 176				; 000000b0H
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR $T8[rbp], rax
	lea	rax, QWORD PTR $T10[rbp]
	mov	QWORD PTR $T9[rbp], rax
	mov	r8, QWORD PTR $T8[rbp]
	mov	rax, QWORD PTR $T9[rbp]
	movzx	edx, BYTE PTR [rax]
	mov	ecx, 176				; 000000b0H
	call	??2@YAPEAX_KUImNewWrapper@@PEAX@Z	; operator new
	mov	QWORD PTR $T7[rbp], rax
	cmp	QWORD PTR $T7[rbp], 0
	je	SHORT $LN5@Initialize
	mov	rcx, QWORD PTR $T7[rbp]
	call	??0ImGuiViewportP@@QEAA@XZ		; ImGuiViewportP::ImGuiViewportP
	mov	QWORD PTR tv134[rbp], rax
	jmp	SHORT $LN6@Initialize
$LN5@Initialize:
	mov	QWORD PTR tv134[rbp], 0
$LN6@Initialize:
	mov	rax, QWORD PTR tv134[rbp]
	mov	QWORD PTR $T6[rbp], rax
	mov	rax, QWORD PTR $T6[rbp]
	mov	QWORD PTR viewport$[rbp], rax
; Line 4156
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7608				; 00001db8H
	mov	QWORD PTR tv138[rbp], rax
	lea	rdx, QWORD PTR viewport$[rbp]
	mov	rcx, QWORD PTR tv138[rbp]
	call	?push_back@?$ImVector@PEAUImGuiViewportP@@@@QEAAXAEBQEAUImGuiViewportP@@@Z ; ImVector<ImGuiViewportP *>::push_back
; Line 4161
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax], 1
; Line 4162
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+552]
	pop	rdi
	pop	rbp
	ret	0
?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z ENDP		; ImGui::Initialize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
g$ = 8
ini_handler$5 = 48
viewport$ = 152
$T6 = 376
$T7 = 408
$T8 = 440
$T9 = 472
$T10 = 500
tv138 = 520
tv134 = 520
tv84 = 520
__$ArrayPad$ = 528
context$ = 576
?dtor$0@?0??Initialize@ImGui@@YAXPEAUImGuiContext@@@Z@4HA PROC ; `ImGui::Initialize'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	r8, QWORD PTR $T8[rbp]
	mov	rax, QWORD PTR $T9[rbp]
	movzx	edx, BYTE PTR [rax]
	mov	rcx, QWORD PTR $T7[rbp]
	call	??3@YAXPEAXUImNewWrapper@@0@Z		; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??Initialize@ImGui@@YAXPEAUImGuiContext@@@Z@4HA ENDP ; `ImGui::Initialize'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z
_TEXT	SEGMENT
viewport$ = 224
?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z PROC ; ImGui::GetForegroundDrawList, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3505
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3506
	lea	r8, OFFSET FLAT:??_C@_0N@MFHPHIIJ@?$CD?$CDForeground@
	mov	edx, 1
	mov	rcx, QWORD PTR viewport$[rbp]
	call	?GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z ; GetViewportDrawList
; Line 3507
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z ENDP ; ImGui::GetForegroundDrawList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z
_TEXT	SEGMENT
viewport$ = 224
?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z PROC ; ImGui::GetBackgroundDrawList, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3494
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3495
	lea	r8, OFFSET FLAT:??_C@_0N@MFFOHPLI@?$CD?$CDBackground@
	xor	edx, edx
	mov	rcx, QWORD PTR viewport$[rbp]
	call	?GetViewportDrawList@@YAPEAUImDrawList@@PEAUImGuiViewportP@@_KPEBD@Z ; GetViewportDrawList
; Line 3496
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z ENDP ; ImGui::GetBackgroundDrawList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiWindow@@@Z
_TEXT	SEGMENT
window$ = 224
?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiWindow@@@Z PROC ; ImGui::GetForegroundDrawList, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 2340
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	call	?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@XZ ; ImGui::GetForegroundDrawList
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiWindow@@@Z ENDP ; ImGui::GetForegroundDrawList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetDefaultFont@ImGui@@YAPEAUImFont@@XZ
_TEXT	SEGMENT
g$ = 8
tv77 = 216
tv75 = 224
?GetDefaultFont@ImGui@@YAPEAUImFont@@XZ PROC		; ImGui::GetDefaultFont, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 2339
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+184], 0
	je	SHORT $LN3@GetDefault
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+184]
	mov	QWORD PTR tv77[rbp], rax
	jmp	SHORT $LN4@GetDefault
$LN3@GetDefault:
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+168]
	add	rax, 72					; 00000048H
	mov	QWORD PTR tv75[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv75[rbp]
	call	??A?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@H@Z ; ImVector<ImFont *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv77[rbp], rax
$LN4@GetDefault:
	mov	rax, QWORD PTR tv77[rbp]
	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
?GetDefaultFont@ImGui@@YAPEAUImFont@@XZ ENDP		; ImGui::GetDefaultFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetCurrentFont@ImGui@@YAXPEAUImFont@@@Z
_TEXT	SEGMENT
g$ = 8
atlas$ = 40
tv132 = 244
font$ = 288
?SetCurrentFont@ImGui@@YAXPEAUImFont@@@Z PROC		; ImGui::SetCurrentFont, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6535
$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6536
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6537
	cmp	QWORD PTR font$[rbp], 0
	je	SHORT $LN3@SetCurrent
	mov	rcx, QWORD PTR font$[rbp]
	call	?IsLoaded@ImFont@@QEBA_NXZ		; ImFont::IsLoaded
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@SetCurrent
$LN3@SetCurrent:
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetCurrentFont@ImGui@@YAXPEAUImFont@@@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DC@JABAIOEL@?$AAf?$AAo?$AAn?$AAt?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAf?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAI@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@SetCurrent:
; Line 6538
	mov	rax, QWORD PTR font$[rbp]
	movss	xmm0, DWORD PTR [rax+92]
	comiss	xmm0, DWORD PTR __real@00000000
	ja	SHORT $LN5@SetCurrent
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetCurrentFont@ImGui@@YAXPEAUImFont@@@Z@4JA
	add	eax, 3
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@FNLEAELN@?$AAf?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAS?$AAc?$AAa?$AAl?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN5@SetCurrent:
; Line 6539
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR font$[rbp]
	mov	QWORD PTR [rax+6520], rcx
; Line 6540
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+6520]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+176]
	mulss	xmm0, DWORD PTR [rax+20]
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+6520]
	mulss	xmm0, DWORD PTR [rax+92]
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR g$[rbp]
	movss	DWORD PTR [rax+6532], xmm0
; Line 6541
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7184], 0
	je	SHORT $LN6@SetCurrent
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+7184]
	call	?CalcFontSize@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::CalcFontSize
	movss	DWORD PTR tv132[rbp], xmm0
	jmp	SHORT $LN7@SetCurrent
$LN6@SetCurrent:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv132[rbp], xmm0
$LN7@SetCurrent:
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR tv132[rbp]
	movss	DWORD PTR [rax+6528], xmm0
; Line 6543
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+6520]
	mov	rax, QWORD PTR [rax+64]
	mov	QWORD PTR atlas$[rbp], rax
; Line 6544
	mov	rax, QWORD PTR atlas$[rbp]
	mov	rax, QWORD PTR [rax+64]
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+6536], rax
; Line 6545
	mov	rax, QWORD PTR atlas$[rbp]
	add	rax, 120				; 00000078H
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+7040], rax
; Line 6546
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+6520]
	mov	QWORD PTR [rax+6544], rcx
; Line 6547
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+6528]
	movss	DWORD PTR [rax+6552], xmm0
; Line 6548
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?SetCurrentFont@ImGui@@YAXPEAUImFont@@@Z ENDP		; ImGui::SetCurrentFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BringWindowToDisplayBack@ImGui@@YAXPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
g$ = 8
i$1 = 36
tv138 = 248
tv93 = 248
tv80 = 248
tv69 = 248
tv132 = 256
tv86 = 264
tv90 = 272
window$ = 320
?BringWindowToDisplayBack@ImGui@@YAXPEAUImGuiWindow@@@Z PROC ; ImGui::BringWindowToDisplayBack, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6455
$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6456
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6457
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv69[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv69[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax], rcx
	jne	SHORT $LN5@BringWindo
; Line 6458
	jmp	$LN1@BringWindo
$LN5@BringWindo:
; Line 6459
	mov	DWORD PTR i$1[rbp], 0
	jmp	SHORT $LN4@BringWindo
$LN2@BringWindo:
	mov	eax, DWORD PTR i$1[rbp]
	inc	eax
	mov	DWORD PTR i$1[rbp], eax
$LN4@BringWindo:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7088]
	cmp	DWORD PTR i$1[rbp], eax
	jge	$LN3@BringWindo
; Line 6460
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv80[rbp], rax
	mov	edx, DWORD PTR i$1[rbp]
	mov	rcx, QWORD PTR tv80[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax], rcx
	jne	$LN6@BringWindo
; Line 6462
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv93[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv132[rbp], rax
	movsxd	rax, DWORD PTR i$1[rbp]
	shl	rax, 3
	mov	QWORD PTR tv86[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv93[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	QWORD PTR tv90[rbp], rax
	mov	edx, 1
	mov	rcx, QWORD PTR tv132[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rcx, QWORD PTR tv86[rbp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv90[rbp]
	mov	rdx, rcx
	mov	rcx, rax
	call	memmove
; Line 6463
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv138[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv138[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 6464
	jmp	SHORT $LN3@BringWindo
$LN6@BringWindo:
; Line 6465
	jmp	$LN2@BringWindo
$LN3@BringWindo:
$LN1@BringWindo:
; Line 6466
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?BringWindowToDisplayBack@ImGui@@YAXPEAUImGuiWindow@@@Z ENDP ; ImGui::BringWindowToDisplayBack
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BringWindowToDisplayFront@ImGui@@YAXPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
g$ = 8
current_front_window$ = 40
i$1 = 68
tv146 = 280
tv130 = 280
tv80 = 280
tv137 = 288
tv90 = 296
tv94 = 304
window$ = 352
?BringWindowToDisplayFront@ImGui@@YAXPEAUImGuiWindow@@@Z PROC ; ImGui::BringWindowToDisplayFront, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6440
$LN9:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6441
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6442
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	rcx, rax
	call	?back@?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@XZ ; ImVector<ImGuiWindow *>::back
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR current_front_window$[rbp], rax
; Line 6443
	mov	rax, QWORD PTR window$[rbp]
	cmp	QWORD PTR current_front_window$[rbp], rax
	je	SHORT $LN6@BringWindo
	mov	rax, QWORD PTR current_front_window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+904], rcx
	jne	SHORT $LN5@BringWindo
$LN6@BringWindo:
; Line 6444
	jmp	$LN1@BringWindo
$LN5@BringWindo:
; Line 6445
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7088]
	sub	eax, 2
	mov	DWORD PTR i$1[rbp], eax
	jmp	SHORT $LN4@BringWindo
$LN2@BringWindo:
	mov	eax, DWORD PTR i$1[rbp]
	dec	eax
	mov	DWORD PTR i$1[rbp], eax
$LN4@BringWindo:
	cmp	DWORD PTR i$1[rbp], 0
	jl	$LN3@BringWindo
; Line 6446
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv80[rbp], rax
	mov	edx, DWORD PTR i$1[rbp]
	mov	rcx, QWORD PTR tv80[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax], rcx
	jne	$LN7@BringWindo
; Line 6448
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv130[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv137[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR i$1[rbp]
	mov	eax, DWORD PTR [rax+7088]
	sub	eax, ecx
	dec	eax
	cdqe
	shl	rax, 3
	mov	QWORD PTR tv90[rbp], rax
	mov	ecx, DWORD PTR i$1[rbp]
	inc	ecx
	mov	edx, ecx
	mov	rcx, QWORD PTR tv130[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	QWORD PTR tv94[rbp], rax
	mov	edx, DWORD PTR i$1[rbp]
	mov	rcx, QWORD PTR tv137[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rcx, QWORD PTR tv90[rbp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv94[rbp]
	mov	rdx, rcx
	mov	rcx, rax
	call	memmove
; Line 6449
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv146[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7088]
	dec	eax
	mov	edx, eax
	mov	rcx, QWORD PTR tv146[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 6450
	jmp	SHORT $LN3@BringWindo
$LN7@BringWindo:
; Line 6451
	jmp	$LN2@BringWindo
$LN3@BringWindo:
$LN1@BringWindo:
; Line 6452
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?BringWindowToDisplayFront@ImGui@@YAXPEAUImGuiWindow@@@Z ENDP ; ImGui::BringWindowToDisplayFront
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BringWindowToFocusFront@ImGui@@YAXPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
g$ = 8
cur_order$ = 36
new_order$ = 68
n$1 = 100
tv169 = 312
tv155 = 312
tv146 = 312
tv138 = 312
tv78 = 312
tv148 = 320
tv140 = 320
tv131 = 328
window$ = 368
?BringWindowToFocusFront@ImGui@@YAXPEAUImGuiWindow@@@Z PROC ; ImGui::BringWindowToFocusFront, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6419
$LN10:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6420
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6421
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+904]
	cmp	QWORD PTR window$[rbp], rax
	je	SHORT $LN7@BringWindo
	mov	eax, DWORD PTR ?__LINE__Var@?0??BringWindowToFocusFront@ImGui@@YAXPEAUImGuiWindow@@@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DK@MAFHBAAP@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAw?$AAi?$AAn?$AAd?$AAo@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@BringWindo:
; Line 6423
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, WORD PTR [rax+160]
	mov	DWORD PTR cur_order$[rbp], eax
; Line 6424
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7104				; 00001bc0H
	mov	QWORD PTR tv78[rbp], rax
	mov	edx, DWORD PTR cur_order$[rbp]
	mov	rcx, QWORD PTR tv78[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax], rcx
	je	SHORT $LN8@BringWindo
	mov	eax, DWORD PTR ?__LINE__Var@?0??BringWindowToFocusFront@ImGui@@YAXPEAUImGuiWindow@@@Z@4JA
	add	eax, 5
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1FC@LPBCMIDE@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AAF?$AAo?$AAc?$AAu?$AAs?$AAO@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN8@BringWindo:
; Line 6425
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7104				; 00001bc0H
	mov	rcx, rax
	call	?back@?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@XZ ; ImVector<ImGuiWindow *>::back
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax], rcx
	jne	SHORT $LN5@BringWindo
; Line 6426
	jmp	$LN1@BringWindo
$LN5@BringWindo:
; Line 6428
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7104]
	dec	eax
	mov	DWORD PTR new_order$[rbp], eax
; Line 6429
	mov	eax, DWORD PTR cur_order$[rbp]
	mov	DWORD PTR n$1[rbp], eax
	jmp	SHORT $LN4@BringWindo
$LN2@BringWindo:
	mov	eax, DWORD PTR n$1[rbp]
	inc	eax
	mov	DWORD PTR n$1[rbp], eax
$LN4@BringWindo:
	mov	eax, DWORD PTR new_order$[rbp]
	cmp	DWORD PTR n$1[rbp], eax
	jge	$LN3@BringWindo
; Line 6431
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7104				; 00001bc0H
	mov	QWORD PTR tv138[rbp], rax
	mov	eax, DWORD PTR n$1[rbp]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR tv138[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv140[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7104				; 00001bc0H
	mov	QWORD PTR tv131[rbp], rax
	mov	edx, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR tv131[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rcx, QWORD PTR tv140[rbp]
	mov	QWORD PTR [rax], rcx
; Line 6432
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7104				; 00001bc0H
	mov	QWORD PTR tv146[rbp], rax
	mov	edx, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR tv146[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rax, QWORD PTR [rax]
	add	rax, 160				; 000000a0H
	mov	QWORD PTR tv148[rbp], rax
	mov	rax, QWORD PTR tv148[rbp]
	movzx	eax, WORD PTR [rax]
	dec	ax
	mov	rcx, QWORD PTR tv148[rbp]
	mov	WORD PTR [rcx], ax
; Line 6433
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7104				; 00001bc0H
	mov	QWORD PTR tv155[rbp], rax
	mov	edx, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR tv155[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rax, QWORD PTR [rax]
	movsx	eax, WORD PTR [rax+160]
	cmp	eax, DWORD PTR n$1[rbp]
	je	SHORT $LN9@BringWindo
	mov	eax, DWORD PTR ?__LINE__Var@?0??BringWindowToFocusFront@ImGui@@YAXPEAUImGuiWindow@@@Z@4JA
	add	eax, 14
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1FA@BPAOPAIC@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AAF?$AAo?$AAc?$AAu?$AAs?$AAO@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN9@BringWindo:
; Line 6434
	jmp	$LN2@BringWindo
$LN3@BringWindo:
; Line 6435
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7104				; 00001bc0H
	mov	QWORD PTR tv169[rbp], rax
	mov	edx, DWORD PTR new_order$[rbp]
	mov	rcx, QWORD PTR tv169[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 6436
	mov	rax, QWORD PTR window$[rbp]
	movzx	ecx, WORD PTR new_order$[rbp]
	mov	WORD PTR [rax+160], cx
$LN1@BringWindo:
; Line 6437
	lea	rsp, QWORD PTR [rbp+344]
	pop	rdi
	pop	rbp
	ret	0
?BringWindowToFocusFront@ImGui@@YAXPEAUImGuiWindow@@@Z ENDP ; ImGui::BringWindowToFocusFront
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FocusTopMostWindowUnderOne@ImGui@@YAXPEAUImGuiWindow@@0@Z
_TEXT	SEGMENT
g$ = 8
start_idx$ = 36
i$1 = 68
window$2 = 104
focus_window$3 = 136
tv69 = 340
tv78 = 344
under_this_window$ = 384
ignore_window$ = 392
?FocusTopMostWindowUnderOne@ImGui@@YAXPEAUImGuiWindow@@0@Z PROC ; ImGui::FocusTopMostWindowUnderOne, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6513
$LN11:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6514
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6516
	cmp	QWORD PTR under_this_window$[rbp], 0
	je	SHORT $LN8@FocusTopMo
	mov	rcx, QWORD PTR under_this_window$[rbp]
	call	?FindWindowFocusIndex@ImGui@@YAHPEAUImGuiWindow@@@Z ; ImGui::FindWindowFocusIndex
	mov	DWORD PTR tv69[rbp], eax
	jmp	SHORT $LN9@FocusTopMo
$LN8@FocusTopMo:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7104]
	mov	DWORD PTR tv69[rbp], eax
$LN9@FocusTopMo:
	mov	eax, DWORD PTR tv69[rbp]
	dec	eax
	mov	DWORD PTR start_idx$[rbp], eax
; Line 6517
	mov	eax, DWORD PTR start_idx$[rbp]
	mov	DWORD PTR i$1[rbp], eax
	jmp	SHORT $LN4@FocusTopMo
$LN2@FocusTopMo:
	mov	eax, DWORD PTR i$1[rbp]
	dec	eax
	mov	DWORD PTR i$1[rbp], eax
$LN4@FocusTopMo:
	cmp	DWORD PTR i$1[rbp], 0
	jl	$LN3@FocusTopMo
; Line 6520
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7104				; 00001bc0H
	mov	QWORD PTR tv78[rbp], rax
	mov	edx, DWORD PTR i$1[rbp]
	mov	rcx, QWORD PTR tv78[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR window$2[rbp], rax
; Line 6521
	mov	rax, QWORD PTR window$2[rbp]
	mov	rax, QWORD PTR [rax+904]
	cmp	QWORD PTR window$2[rbp], rax
	je	SHORT $LN10@FocusTopMo
	mov	eax, DWORD PTR ?__LINE__Var@?0??FocusTopMostWindowUnderOne@ImGui@@YAXPEAUImGuiWindow@@0@Z@4JA
	add	eax, 8
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DK@MAFHBAAP@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAw?$AAi?$AAn?$AAd?$AAo@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN10@FocusTopMo:
; Line 6522
	mov	rax, QWORD PTR ignore_window$[rbp]
	cmp	QWORD PTR window$2[rbp], rax
	je	SHORT $LN5@FocusTopMo
	mov	rax, QWORD PTR window$2[rbp]
	movzx	eax, BYTE PTR [rax+143]
	test	eax, eax
	je	SHORT $LN5@FocusTopMo
; Line 6523
	mov	rax, QWORD PTR window$2[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 262656				; 00040200H
	cmp	eax, 262656				; 00040200H
	je	SHORT $LN6@FocusTopMo
; Line 6525
	mov	rcx, QWORD PTR window$2[rbp]
	call	?NavRestoreLastChildNavWindow@ImGui@@YAPEAUImGuiWindow@@PEAU2@@Z ; ImGui::NavRestoreLastChildNavWindow
	mov	QWORD PTR focus_window$3[rbp], rax
; Line 6526
	mov	rcx, QWORD PTR focus_window$3[rbp]
	call	?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::FocusWindow
; Line 6527
	jmp	SHORT $LN1@FocusTopMo
$LN6@FocusTopMo:
$LN5@FocusTopMo:
; Line 6529
	jmp	$LN2@FocusTopMo
$LN3@FocusTopMo:
; Line 6530
	xor	ecx, ecx
	call	?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::FocusWindow
$LN1@FocusTopMo:
; Line 6531
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?FocusTopMostWindowUnderOne@ImGui@@YAXPEAUImGuiWindow@@0@Z ENDP ; ImGui::FocusTopMostWindowUnderOne
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
g$ = 8
focus_front_window$ = 40
display_front_window$ = 72
tv77 = 276
tv130 = 280
tv95 = 280
window$ = 320
?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z PROC		; ImGui::FocusWindow, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6470
$LN16:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6471
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6473
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+7624], rcx
	je	$LN2@FocusWindo
; Line 6475
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax+7624], rcx
; Line 6476
	cmp	QWORD PTR window$[rbp], 0
	je	SHORT $LN3@FocusWindo
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7711]
	test	eax, eax
	je	SHORT $LN3@FocusWindo
; Line 6477
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7709], 1
$LN3@FocusWindo:
; Line 6478
	cmp	QWORD PTR window$[rbp], 0
	je	SHORT $LN9@FocusWindo
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rcx+rax+936]
	mov	DWORD PTR tv77[rbp], eax
	jmp	SHORT $LN10@FocusWindo
$LN9@FocusWindo:
	mov	DWORD PTR tv77[rbp], 0
$LN10@FocusWindo:
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR tv77[rbp]
	mov	DWORD PTR [rax+7632], ecx
; Line 6479
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7636], 0
; Line 6480
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7708], 0
; Line 6481
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7700], 0
; Line 6482
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7736], 0
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7713], 0
; Line 6483
	call	?NavUpdateAnyRequestFlag@ImGui@@YAXXZ	; ImGui::NavUpdateAnyRequestFlag
$LN2@FocusWindo:
; Line 6488
	xor	edx, edx
	mov	rcx, QWORD PTR window$[rbp]
	call	?ClosePopupsOverWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z ; ImGui::ClosePopupsOverWindow
; Line 6491
	cmp	QWORD PTR window$[rbp], 0
	je	SHORT $LN11@FocusWindo
	mov	rax, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+904], 0
	jne	SHORT $LN11@FocusWindo
	mov	eax, DWORD PTR ?__LINE__Var@?0??FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z@4JA
	add	eax, 21
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EO@CDDKCBBF@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN11@FocusWindo:
; Line 6492
	cmp	QWORD PTR window$[rbp], 0
	je	SHORT $LN12@FocusWindo
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+904]
	mov	QWORD PTR tv95[rbp], rax
	jmp	SHORT $LN13@FocusWindo
$LN12@FocusWindo:
	mov	QWORD PTR tv95[rbp], 0
$LN13@FocusWindo:
	mov	rax, QWORD PTR tv95[rbp]
	mov	QWORD PTR focus_front_window$[rbp], rax
; Line 6493
	cmp	QWORD PTR window$[rbp], 0
	je	SHORT $LN14@FocusWindo
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+904]
	mov	QWORD PTR tv130[rbp], rax
	jmp	SHORT $LN15@FocusWindo
$LN14@FocusWindo:
	mov	QWORD PTR tv130[rbp], 0
$LN15@FocusWindo:
	mov	rax, QWORD PTR tv130[rbp]
	mov	QWORD PTR display_front_window$[rbp], rax
; Line 6498
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	je	SHORT $LN4@FocusWindo
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7304], 0
	je	SHORT $LN4@FocusWindo
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7304]
	mov	rcx, QWORD PTR focus_front_window$[rbp]
	cmp	QWORD PTR [rax+904], rcx
	je	SHORT $LN4@FocusWindo
; Line 6499
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7274]
	test	eax, eax
	jne	SHORT $LN5@FocusWindo
; Line 6500
	call	?ClearActiveID@ImGui@@YAXXZ		; ImGui::ClearActiveID
$LN5@FocusWindo:
$LN4@FocusWindo:
; Line 6503
	cmp	QWORD PTR window$[rbp], 0
	jne	SHORT $LN6@FocusWindo
; Line 6504
	jmp	SHORT $LN1@FocusWindo
$LN6@FocusWindo:
; Line 6507
	mov	rcx, QWORD PTR focus_front_window$[rbp]
	call	?BringWindowToFocusFront@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::BringWindowToFocusFront
; Line 6508
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR display_front_window$[rbp]
	mov	ecx, DWORD PTR [rcx+12]
	mov	eax, DWORD PTR [rax+12]
	or	eax, ecx
	and	eax, 8192				; 00002000H
	test	eax, eax
	jne	SHORT $LN7@FocusWindo
; Line 6509
	mov	rcx, QWORD PTR display_front_window$[rbp]
	call	?BringWindowToDisplayFront@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::BringWindowToDisplayFront
$LN7@FocusWindo:
$LN1@FocusWindo:
; Line 6510
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ENDP		; ImGui::FocusWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetWindowHitTestHole@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@1@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
window$ = 320
pos$ = 328
size$ = 336
?SetWindowHitTestHole@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@1@Z PROC ; ImGui::SetWindowHitTestHole, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6853
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6854
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, WORD PTR [rax+624]
	test	eax, eax
	je	SHORT $LN3@SetWindowH
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetWindowHitTestHole@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@1@Z@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DO@GKCJBPLO@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAH?$AAi?$AAt?$AAT?$AAe?$AAs?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@SetWindowH:
; Line 6855
	mov	rdx, QWORD PTR size$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImVec2ih@@QEAA@AEBUImVec2@@@Z	; ImVec2ih::ImVec2ih
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+624], eax
; Line 6856
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	mov	r8, rax
	mov	rdx, QWORD PTR pos$[rbp]
	lea	rcx, QWORD PTR $T3[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rbp]
	call	??0ImVec2ih@@QEAA@AEBUImVec2@@@Z	; ImVec2ih::ImVec2ih
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+628], eax
; Line 6857
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?SetWindowHitTestHole@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@1@Z ENDP ; ImGui::SetWindowHitTestHole
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetWindowCollapsed@ImGui@@YAXPEAUImGuiWindow@@_NH@Z
_TEXT	SEGMENT
window$ = 224
collapsed$ = 232
cond$ = 240
?SetWindowCollapsed@ImGui@@YAXPEAUImGuiWindow@@_NH@Z PROC ; ImGui::SetWindowCollapsed, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6842
$LN4:
	mov	DWORD PTR [rsp+24], r8d
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6844
	cmp	DWORD PTR cond$[rbp], 0
	je	SHORT $LN2@SetWindowC
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+180]
	shl	eax, 8
	sar	eax, 24
	and	eax, DWORD PTR cond$[rbp]
	test	eax, eax
	jne	SHORT $LN2@SetWindowC
; Line 6845
	jmp	SHORT $LN1@SetWindowC
$LN2@SetWindowC:
; Line 6846
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+180]
	shl	eax, 8
	sar	eax, 24
	and	eax, -15
	and	eax, 255				; 000000ffH
	shl	eax, 16
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+180]
	and	ecx, -16711681				; ffffffffff00ffffH
	or	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+180], eax
; Line 6849
	mov	rax, QWORD PTR window$[rbp]
	movzx	ecx, BYTE PTR collapsed$[rbp]
	mov	BYTE PTR [rax+145], cl
$LN1@SetWindowC:
; Line 6850
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?SetWindowCollapsed@ImGui@@YAXPEAUImGuiWindow@@_NH@Z ENDP ; ImGui::SetWindowCollapsed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetWindowSize@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z
_TEXT	SEGMENT
window$ = 224
size$ = 232
cond$ = 240
?SetWindowSize@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z PROC ; ImGui::SetWindowSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6799
$LN9:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6801
	cmp	DWORD PTR cond$[rbp], 0
	je	SHORT $LN2@SetWindowS
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+180]
	shl	eax, 16
	sar	eax, 24
	and	eax, DWORD PTR cond$[rbp]
	test	eax, eax
	jne	SHORT $LN2@SetWindowS
; Line 6802
	jmp	$LN1@SetWindowS
$LN2@SetWindowS:
; Line 6804
	cmp	DWORD PTR cond$[rbp], 0
	je	SHORT $LN8@SetWindowS
	mov	ecx, DWORD PTR cond$[rbp]
	call	?ImIsPowerOfTwo@@YA_NH@Z		; ImIsPowerOfTwo
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@SetWindowS
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetWindowSize@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z@4JA
	add	eax, 5
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EE@PBEDMJFL@?$AAc?$AAo?$AAn?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAI?$AAm@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN8@SetWindowS:
; Line 6805
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+180]
	shl	eax, 16
	sar	eax, 24
	and	eax, -15
	and	eax, 255				; 000000ffH
	shl	eax, 8
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+180]
	and	ecx, -65281				; ffffffffffff00ffH
	or	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+180], eax
; Line 6808
	mov	rax, QWORD PTR size$[rbp]
	movss	xmm0, DWORD PTR [rax]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN3@SetWindowS
; Line 6810
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+168], 0
; Line 6811
	mov	rax, QWORD PTR size$[rbp]
	cvttss2si eax, DWORD PTR [rax]
	cvtsi2ss xmm0, eax
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+32], xmm0
; Line 6812
	jmp	SHORT $LN4@SetWindowS
$LN3@SetWindowS:
; Line 6815
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+168], 2
; Line 6816
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+171], 0
$LN4@SetWindowS:
; Line 6818
	mov	rax, QWORD PTR size$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN5@SetWindowS
; Line 6820
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+169], 0
; Line 6821
	mov	rax, QWORD PTR size$[rbp]
	cvttss2si eax, DWORD PTR [rax+4]
	cvtsi2ss xmm0, eax
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+36], xmm0
; Line 6822
	jmp	SHORT $LN6@SetWindowS
$LN5@SetWindowS:
; Line 6825
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+169], 2
; Line 6826
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+171], 0
$LN6@SetWindowS:
$LN1@SetWindowS:
; Line 6828
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?SetWindowSize@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z ENDP ; ImGui::SetWindowSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z
_TEXT	SEGMENT
old_pos$ = 8
offset$ = 40
$T5 = 260
$T6 = 292
__$ArrayPad$ = 312
window$ = 352
pos$ = 360
cond$ = 368
?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z PROC ; ImGui::SetWindowPos, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6761
$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6763
	cmp	DWORD PTR cond$[rbp], 0
	je	SHORT $LN2@SetWindowP
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+180]
	shl	eax, 24
	sar	eax, 24
	and	eax, DWORD PTR cond$[rbp]
	test	eax, eax
	jne	SHORT $LN2@SetWindowP
; Line 6764
	jmp	$LN1@SetWindowP
$LN2@SetWindowP:
; Line 6766
	cmp	DWORD PTR cond$[rbp], 0
	je	SHORT $LN4@SetWindowP
	mov	ecx, DWORD PTR cond$[rbp]
	call	?ImIsPowerOfTwo@@YA_NH@Z		; ImIsPowerOfTwo
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@SetWindowP
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z@4JA
	add	eax, 5
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EE@PBEDMJFL@?$AAc?$AAo?$AAn?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAI?$AAm@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@SetWindowP:
; Line 6767
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+180]
	shl	eax, 24
	sar	eax, 24
	and	eax, -15
	and	eax, 255				; 000000ffH
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+180]
	and	ecx, -256				; ffffffffffffff00H
	or	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+180], eax
; Line 6768
	movss	xmm2, DWORD PTR __real@7f7fffff
	movss	xmm1, DWORD PTR __real@7f7fffff
	lea	rcx, QWORD PTR $T5[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+184], rax
; Line 6771
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR old_pos$[rbp], rax
; Line 6772
	mov	rdx, QWORD PTR pos$[rbp]
	lea	rcx, QWORD PTR $T6[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+16], rax
; Line 6773
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	lea	r8, QWORD PTR old_pos$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR offset$[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
; Line 6774
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 216				; 000000d8H
	lea	rdx, QWORD PTR offset$[rbp]
	mov	rcx, rax
	call	??Y@YAAEAUImVec2@@AEAU0@AEBU0@@Z	; operator+=
; Line 6775
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 240				; 000000f0H
	lea	rdx, QWORD PTR offset$[rbp]
	mov	rcx, rax
	call	??Y@YAAEAUImVec2@@AEAU0@AEBU0@@Z	; operator+=
; Line 6776
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 248				; 000000f8H
	lea	rdx, QWORD PTR offset$[rbp]
	mov	rcx, rax
	call	??Y@YAAEAUImVec2@@AEAU0@AEBU0@@Z	; operator+=
; Line 6777
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 232				; 000000e8H
	lea	rdx, QWORD PTR offset$[rbp]
	mov	rcx, rax
	call	??Y@YAAEAUImVec2@@AEAU0@AEBU0@@Z	; operator+=
$LN1@SetWindowP:
; Line 6778
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z ENDP ; ImGui::SetWindowPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsWindowNavFocusable@ImGui@@YA_NPEAUImGuiWindow@@@Z
_TEXT	SEGMENT
tv72 = 192
window$ = 240
?IsWindowNavFocusable@ImGui@@YA_NPEAUImGuiWindow@@@Z PROC ; ImGui::IsWindowNavFocusable, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6737
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6738
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+143]
	test	eax, eax
	je	SHORT $LN3@IsWindowNa
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+904]
	cmp	QWORD PTR window$[rbp], rax
	jne	SHORT $LN3@IsWindowNa
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 524288				; 00080000H
	test	eax, eax
	jne	SHORT $LN3@IsWindowNa
	mov	DWORD PTR tv72[rbp], 1
	jmp	SHORT $LN4@IsWindowNa
$LN3@IsWindowNa:
	mov	DWORD PTR tv72[rbp], 0
$LN4@IsWindowNa:
	movzx	eax, BYTE PTR tv72[rbp]
; Line 6739
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?IsWindowNavFocusable@ImGui@@YA_NPEAUImGuiWindow@@@Z ENDP ; ImGui::IsWindowNavFocusable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsWindowAbove@ImGui@@YA_NPEAUImGuiWindow@@0@Z
_TEXT	SEGMENT
g$ = 8
i$1 = 36
candidate_window$2 = 72
tv74 = 280
potential_above$ = 320
potential_below$ = 328
?IsWindowAbove@ImGui@@YA_NPEAUImGuiWindow@@0@Z PROC	; ImGui::IsWindowAbove, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6660
$LN8:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6661
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6662
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7088]
	dec	eax
	mov	DWORD PTR i$1[rbp], eax
	jmp	SHORT $LN4@IsWindowAb
$LN2@IsWindowAb:
	mov	eax, DWORD PTR i$1[rbp]
	dec	eax
	mov	DWORD PTR i$1[rbp], eax
$LN4@IsWindowAb:
	cmp	DWORD PTR i$1[rbp], 0
	jl	SHORT $LN3@IsWindowAb
; Line 6664
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv74[rbp], rax
	mov	edx, DWORD PTR i$1[rbp]
	mov	rcx, QWORD PTR tv74[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR candidate_window$2[rbp], rax
; Line 6665
	mov	rax, QWORD PTR potential_above$[rbp]
	cmp	QWORD PTR candidate_window$2[rbp], rax
	jne	SHORT $LN5@IsWindowAb
; Line 6666
	mov	al, 1
	jmp	SHORT $LN1@IsWindowAb
$LN5@IsWindowAb:
; Line 6667
	mov	rax, QWORD PTR potential_below$[rbp]
	cmp	QWORD PTR candidate_window$2[rbp], rax
	jne	SHORT $LN6@IsWindowAb
; Line 6668
	xor	al, al
	jmp	SHORT $LN1@IsWindowAb
$LN6@IsWindowAb:
; Line 6669
	jmp	SHORT $LN2@IsWindowAb
$LN3@IsWindowAb:
; Line 6670
	xor	al, al
$LN1@IsWindowAb:
; Line 6671
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?IsWindowAbove@ImGui@@YA_NPEAUImGuiWindow@@0@Z ENDP	; ImGui::IsWindowAbove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsWindowChildOf@ImGui@@YA_NPEAUImGuiWindow@@0@Z
_TEXT	SEGMENT
window$ = 224
potential_parent$ = 232
?IsWindowChildOf@ImGui@@YA_NPEAUImGuiWindow@@0@Z PROC	; ImGui::IsWindowChildOf, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6647
$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6648
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR potential_parent$[rbp]
	cmp	QWORD PTR [rax+904], rcx
	jne	SHORT $LN4@IsWindowCh
; Line 6649
	mov	al, 1
	jmp	SHORT $LN1@IsWindowCh
$LN4@IsWindowCh:
$LN2@IsWindowCh:
; Line 6650
	cmp	QWORD PTR window$[rbp], 0
	je	SHORT $LN3@IsWindowCh
; Line 6652
	mov	rax, QWORD PTR potential_parent$[rbp]
	cmp	QWORD PTR window$[rbp], rax
	jne	SHORT $LN5@IsWindowCh
; Line 6653
	mov	al, 1
	jmp	SHORT $LN1@IsWindowCh
$LN5@IsWindowCh:
; Line 6654
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+896]
	mov	QWORD PTR window$[rbp], rax
; Line 6655
	jmp	SHORT $LN2@IsWindowCh
$LN3@IsWindowCh:
; Line 6656
	xor	al, al
$LN1@IsWindowCh:
; Line 6657
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?IsWindowChildOf@ImGui@@YA_NPEAUImGuiWindow@@0@Z ENDP	; ImGui::IsWindowChildOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CalcWindowNextAutoFitSize@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z
_TEXT	SEGMENT
size_contents_current$ = 8
size_contents_ideal$ = 40
size_auto_fit$ = 72
size_final$ = 104
__$ArrayPad$ = 312
__$ReturnUdt$ = 352
window$ = 360
?CalcWindowNextAutoFitSize@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z PROC ; ImGui::CalcWindowNextAutoFitSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5284
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5285
	lea	rcx, QWORD PTR size_contents_current$[rbp]
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
; Line 5286
	lea	rcx, QWORD PTR size_contents_ideal$[rbp]
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
; Line 5287
	lea	r8, QWORD PTR size_contents_ideal$[rbp]
	lea	rdx, QWORD PTR size_contents_current$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?CalcWindowContentSizes@@YAXPEAUImGuiWindow@@PEAUImVec2@@1@Z ; CalcWindowContentSizes
; Line 5288
	lea	r8, QWORD PTR size_contents_ideal$[rbp]
	mov	rdx, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR size_auto_fit$[rbp]
	call	?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z ; CalcWindowAutoFitSize
; Line 5289
	lea	r8, QWORD PTR size_auto_fit$[rbp]
	mov	rdx, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR size_final$[rbp]
	call	?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z ; CalcWindowSizeAfterConstraint
; Line 5290
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR size_final$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 5291
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?CalcWindowNextAutoFitSize@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?CalcWindowNextAutoFitSize@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z ENDP ; ImGui::CalcWindowNextAutoFitSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?UpdateWindowParentAndRootLinks@ImGui@@YAXPEAUImGuiWindow@@H0@Z
_TEXT	SEGMENT
window$ = 224
flags$ = 232
parent_window$ = 240
?UpdateWindowParentAndRootLinks@ImGui@@YAXPEAUImGuiWindow@@H0@Z PROC ; ImGui::UpdateWindowParentAndRootLinks, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5719
$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5720
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR parent_window$[rbp]
	mov	QWORD PTR [rax+896], rcx
; Line 5721
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax+920], rcx
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax+912], rcx
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax+904], rcx
; Line 5722
	cmp	QWORD PTR parent_window$[rbp], 0
	je	SHORT $LN4@UpdateWind
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN4@UpdateWind
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 33554432				; 02000000H
	test	eax, eax
	jne	SHORT $LN4@UpdateWind
; Line 5723
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR parent_window$[rbp]
	mov	rcx, QWORD PTR [rcx+904]
	mov	QWORD PTR [rax+904], rcx
$LN4@UpdateWind:
; Line 5724
	cmp	QWORD PTR parent_window$[rbp], 0
	je	SHORT $LN5@UpdateWind
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 134217728				; 08000000H
	test	eax, eax
	jne	SHORT $LN5@UpdateWind
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 83886080				; 05000000H
	test	eax, eax
	je	SHORT $LN5@UpdateWind
; Line 5725
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR parent_window$[rbp]
	mov	rcx, QWORD PTR [rcx+912]
	mov	QWORD PTR [rax+912], rcx
$LN5@UpdateWind:
$LN2@UpdateWind:
; Line 5726
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+920]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 8388608				; 00800000H
	test	eax, eax
	je	SHORT $LN3@UpdateWind
; Line 5728
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+920]
	cmp	QWORD PTR [rax+896], 0
	jne	SHORT $LN7@UpdateWind
	mov	eax, DWORD PTR ?__LINE__Var@?0??UpdateWindowParentAndRootLinks@ImGui@@YAXPEAUImGuiWindow@@H0@Z@4JA
	add	eax, 9
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1FI@JBDNHGBD@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAR?$AAo?$AAo?$AAt?$AAW?$AAi?$AAn@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@UpdateWind:
; Line 5729
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+920]
	mov	rcx, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+896]
	mov	QWORD PTR [rcx+920], rax
; Line 5730
	jmp	SHORT $LN2@UpdateWind
$LN3@UpdateWind:
; Line 5731
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?UpdateWindowParentAndRootLinks@ImGui@@YAXPEAUImGuiWindow@@H0@Z ENDP ; ImGui::UpdateWindowParentAndRootLinks
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FindWindowByName@ImGui@@YAPEAUImGuiWindow@@PEBD@Z
_TEXT	SEGMENT
id$ = 4
name$ = 256
?FindWindowByName@ImGui@@YAPEAUImGuiWindow@@PEBD@Z PROC	; ImGui::FindWindowByName, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5125
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5126
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR name$[rbp]
	call	?ImHashStr@@YAIPEBD_KI@Z		; ImHashStr
	mov	DWORD PTR id$[rbp], eax
; Line 5127
	mov	ecx, DWORD PTR id$[rbp]
	call	?FindWindowByID@ImGui@@YAPEAUImGuiWindow@@I@Z ; ImGui::FindWindowByID
; Line 5128
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?FindWindowByName@ImGui@@YAPEAUImGuiWindow@@PEBD@Z ENDP	; ImGui::FindWindowByName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FindWindowByID@ImGui@@YAPEAUImGuiWindow@@I@Z
_TEXT	SEGMENT
g$ = 8
tv69 = 216
id$ = 256
?FindWindowByID@ImGui@@YAPEAUImGuiWindow@@I@Z PROC	; ImGui::FindWindowByID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5119
$LN3:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5120
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 5121
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7152				; 00001bf0H
	mov	QWORD PTR tv69[rbp], rax
	mov	edx, DWORD PTR id$[rbp]
	mov	rcx, QWORD PTR tv69[rbp]
	call	?GetVoidPtr@ImGuiStorage@@QEBAPEAXI@Z	; ImGuiStorage::GetVoidPtr
; Line 5122
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?FindWindowByID@ImGui@@YAPEAUImGuiWindow@@I@Z ENDP	; ImGui::FindWindowByID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ
_TEXT	SEGMENT
g$ = 8
?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ PROC	; ImGui::GetCurrentWindow, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 2317
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	BYTE PTR [rax+144], 1
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ ENDP	; ImGui::GetCurrentWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ
_TEXT	SEGMENT
g$ = 8
?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ PROC	; ImGui::GetCurrentWindowRead, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 2316
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ ENDP	; ImGui::GetCurrentWindowRead
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GImGuiTableTempData@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GImGuiTableTempData@@QEAAPEAXI@Z PROC		; ImGuiTableTempData::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ImGuiTableTempData@@QEAA@XZ
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 112				; 00000070H
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_GImGuiTableTempData@@QEAAPEAXI@Z ENDP		; ImGuiTableTempData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ImGuiTableTempData@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1ImGuiTableTempData@@QEAA@XZ PROC			; ImGuiTableTempData::~ImGuiTableTempData, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rcx, rax
	call	??1ImDrawListSplitter@@QEAA@XZ		; ImDrawListSplitter::~ImDrawListSplitter
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1ImGuiTableTempData@@QEAA@XZ ENDP			; ImGuiTableTempData::~ImGuiTableTempData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GImGuiTable@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GImGuiTable@@QEAAPEAXI@Z PROC			; ImGuiTable::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ImGuiTable@@QEAA@XZ			; ImGuiTable::~ImGuiTable
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 520				; 00000208H
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_GImGuiTable@@QEAAPEAXI@Z ENDP			; ImGuiTable::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ImGuiTable@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1ImGuiTable@@QEAA@XZ PROC				; ImGuiTable::~ImGuiTable, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 2240
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 448				; 000001c0H
	mov	rcx, rax
	call	??1?$ImVector@UImGuiTableColumnSortSpecs@@@@QEAA@XZ ; ImVector<ImGuiTableColumnSortSpecs>::~ImVector<ImGuiTableColumnSortSpecs>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 408				; 00000198H
	mov	rcx, rax
	call	??1ImGuiTextBuffer@@QEAA@XZ
	npad	1
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1ImGuiTable@@QEAA@XZ ENDP				; ImGuiTable::~ImGuiTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImGuiTableColumnSortSpecs@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImGuiTableColumnSortSpecs@@@@QEAA@XZ PROC ; ImVector<ImGuiTableColumnSortSpecs>::~ImVector<ImGuiTableColumnSortSpecs>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImGuiTableColumnSortSpecs@@@@QEAA@XZ ENDP ; ImVector<ImGuiTableColumnSortSpecs>::~ImVector<ImGuiTableColumnSortSpecs>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImSpan@UImGuiTableColumn@@@@QEAAAEAUImGuiTableColumn@@H@Z
_TEXT	SEGMENT
p$ = 8
this$ = 256
i$ = 264
??A?$ImSpan@UImGuiTableColumn@@@@QEAAAEAUImGuiTableColumn@@H@Z PROC ; ImSpan<ImGuiTableColumn>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 571
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 104				; 00000068H
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx]
	mov	QWORD PTR p$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR p$[rbp], rax
	jb	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	cmp	QWORD PTR p$[rbp], rax
	jb	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 571				; 0000023bH
	lea	rdx, OFFSET FLAT:??_C@_1GO@IOCEAJPC@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DC@DHFOGPCD@?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAp?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	mov	rax, QWORD PTR p$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImSpan@UImGuiTableColumn@@@@QEAAAEAUImGuiTableColumn@@H@Z ENDP ; ImSpan<ImGuiTableColumn>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GImGuiTabBar@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GImGuiTabBar@@QEAAPEAXI@Z PROC			; ImGuiTabBar::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ImGuiTabBar@@QEAA@XZ
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 152				; 00000098H
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_GImGuiTabBar@@QEAAPEAXI@Z ENDP			; ImGuiTabBar::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ImGuiTabBar@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1ImGuiTabBar@@QEAA@XZ PROC				; ImGuiTabBar::~ImGuiTabBar, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 136				; 00000088H
	mov	rcx, rax
	call	??1ImGuiTextBuffer@@QEAA@XZ
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??1?$ImVector@UImGuiTabItem@@@@QEAA@XZ	; ImVector<ImGuiTabItem>::~ImVector<ImGuiTabItem>
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1ImGuiTabBar@@QEAA@XZ ENDP				; ImGuiTabBar::~ImGuiTabBar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetTabName@ImGuiTabBar@@QEBAPEBDPEBUImGuiTabItem@@@Z
_TEXT	SEGMENT
this$ = 224
tab$ = 232
?GetTabName@ImGuiTabBar@@QEBAPEBDPEBUImGuiTabItem@@@Z PROC ; ImGuiTabBar::GetTabName, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 2045
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
; Line 2046
	mov	rax, QWORD PTR tab$[rbp]
	cmp	DWORD PTR [rax+28], -1
	je	SHORT $LN3@GetTabName
	mov	rax, QWORD PTR tab$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+136]
	cmp	DWORD PTR [rax+28], ecx
	jl	SHORT $LN4@GetTabName
$LN3@GetTabName:
	mov	r8d, 2046				; 000007feH
	lea	rdx, OFFSET FLAT:??_C@_1GO@IOCEAJPC@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1HM@PJKJLKEH@?$AAt?$AAa?$AAb?$AA?9?$AA?$DO?$AAN?$AAa?$AAm?$AAe?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@GetTabName:
; Line 2047
	mov	rax, QWORD PTR tab$[rbp]
	movsxd	rax, DWORD PTR [rax+28]
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+144]
; Line 2048
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetTabName@ImGuiTabBar@@QEBAPEBDPEBUImGuiTabItem@@@Z ENDP ; ImGuiTabBar::GetTabName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@UImGuiTabItem@@@@QEAAAEAUImGuiTabItem@@H@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@UImGuiTabItem@@@@QEAAAEAUImGuiTabItem@@H@Z PROC ; ImVector<ImGuiTabItem>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1694
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1694				; 0000069eH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 40				; 00000028H
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@UImGuiTabItem@@@@QEAAAEAUImGuiTabItem@@H@Z ENDP ; ImVector<ImGuiTabItem>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImGuiTabItem@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImGuiTabItem@@@@QEAA@XZ PROC		; ImVector<ImGuiTabItem>::~ImVector<ImGuiTabItem>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImGuiTabItem@@@@QEAA@XZ ENDP		; ImVector<ImGuiTabItem>::~ImVector<ImGuiTabItem>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GImGuiWindow@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GImGuiWindow@@QEAAPEAXI@Z PROC			; ImGuiWindow::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ImGuiWindow@@QEAA@XZ			; ImGuiWindow::~ImGuiWindow
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 992				; 000003e0H
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_GImGuiWindow@@QEAAPEAXI@Z ENDP			; ImGuiWindow::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?MenuBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ
_TEXT	SEGMENT
y1$ = 4
tv88 = 212
tv90 = 216
tv86 = 220
this$ = 256
__$ReturnUdt$ = 264
?MenuBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ PROC	; ImGuiWindow::MenuBarRect, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1953
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	?TitleBarHeight@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::TitleBarHeight
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+20]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR y1$[rbp], xmm0
	mov	rcx, QWORD PTR this$[rbp]
	call	?MenuBarHeight@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::MenuBarHeight
	movss	xmm1, DWORD PTR y1$[rbp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv88[rbp], xmm0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	addss	xmm0, DWORD PTR [rcx+32]
	movss	DWORD PTR tv90[rbp], xmm0
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	movss	DWORD PTR tv86[rbp], xmm0
	movss	xmm0, DWORD PTR tv88[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR tv90[rbp]
	movss	xmm2, DWORD PTR y1$[rbp]
	movss	xmm1, DWORD PTR tv86[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?MenuBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ ENDP	; ImGuiWindow::MenuBarRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?MenuBarHeight@ImGuiWindow@@QEBAMXZ
_TEXT	SEGMENT
g$ = 8
tv78 = 212
this$ = 256
?MenuBarHeight@ImGuiWindow@@QEBAMXZ PROC		; ImGuiWindow::MenuBarHeight, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1952
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 1024				; 00000400H
	test	eax, eax
	je	SHORT $LN3@MenuBarHei
	mov	rcx, QWORD PTR this$[rbp]
	call	?CalcFontSize@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::CalcFontSize
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+352]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+5532]
	mulss	xmm1, DWORD PTR __real@40000000
	addss	xmm0, xmm1
	movss	DWORD PTR tv78[rbp], xmm0
	jmp	SHORT $LN4@MenuBarHei
$LN3@MenuBarHei:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv78[rbp], xmm0
$LN4@MenuBarHei:
	movss	xmm0, DWORD PTR tv78[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?MenuBarHeight@ImGuiWindow@@QEBAMXZ ENDP		; ImGuiWindow::MenuBarHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?TitleBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ
_TEXT	SEGMENT
$T1 = 196
tv83 = 212
tv81 = 216
this$ = 256
__$ReturnUdt$ = 264
?TitleBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ PROC	; ImGuiWindow::TitleBarRect, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1951
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	?TitleBarHeight@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::TitleBarHeight
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+20]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv83[rbp], xmm0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	addss	xmm0, DWORD PTR [rcx+32]
	movss	DWORD PTR tv81[rbp], xmm0
	movss	xmm2, DWORD PTR tv83[rbp]
	movss	xmm1, DWORD PTR tv81[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 16
	mov	r8, rax
	mov	rdx, rcx
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?TitleBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ ENDP	; ImGuiWindow::TitleBarRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?TitleBarHeight@ImGuiWindow@@QEBAMXZ
_TEXT	SEGMENT
g$ = 8
tv74 = 212
this$ = 256
?TitleBarHeight@ImGuiWindow@@QEBAMXZ PROC		; ImGuiWindow::TitleBarHeight, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1950
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN3@TitleBarHe
	xorps	xmm0, xmm0
	movss	DWORD PTR tv74[rbp], xmm0
	jmp	SHORT $LN4@TitleBarHe
$LN3@TitleBarHe:
	mov	rcx, QWORD PTR this$[rbp]
	call	?CalcFontSize@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::CalcFontSize
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+5532]
	mulss	xmm1, DWORD PTR __real@40000000
	addss	xmm0, xmm1
	movss	DWORD PTR tv74[rbp], xmm0
$LN4@TitleBarHe:
	movss	xmm0, DWORD PTR tv74[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?TitleBarHeight@ImGuiWindow@@QEBAMXZ ENDP		; ImGuiWindow::TitleBarHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CalcFontSize@ImGuiWindow@@QEBAMXZ
_TEXT	SEGMENT
g$ = 8
scale$ = 36
this$ = 288
?CalcFontSize@ImGuiWindow@@QEBAMXZ PROC			; ImGuiWindow::CalcFontSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1949
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+6532]
	mulss	xmm0, DWORD PTR [rcx+680]
	movss	DWORD PTR scale$[rbp], xmm0
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+896], 0
	je	SHORT $LN2@CalcFontSi
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+896]
	movss	xmm0, DWORD PTR scale$[rbp]
	mulss	xmm0, DWORD PTR [rax+680]
	movss	DWORD PTR scale$[rbp], xmm0
$LN2@CalcFontSi:
	movss	xmm0, DWORD PTR scale$[rbp]
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?CalcFontSize@ImGuiWindow@@QEBAMXZ ENDP			; ImGuiWindow::CalcFontSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Rect@ImGuiWindow@@QEBA?AUImRect@@XZ
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
?Rect@ImGuiWindow@@QEBA?AUImRect@@XZ PROC		; ImGuiWindow::Rect, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1948
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+20]
	addss	xmm0, DWORD PTR [rcx+28]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+16]
	addss	xmm1, DWORD PTR [rcx+24]
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm2, DWORD PTR [rax+20]
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+16]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?Rect@ImGuiWindow@@QEBA?AUImRect@@XZ ENDP		; ImGuiWindow::Rect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetIDFromRectangle@ImGuiWindow@@QEAAIAEBUImRect@@@Z
_TEXT	SEGMENT
seed$ = 4
r_rel$ = 40
id$ = 84
__$ArrayPad$ = 296
this$ = 336
r_abs$ = 344
?GetIDFromRectangle@ImGuiWindow@@QEAAIAEBUImRect@@@Z PROC ; ImGuiWindow::GetIDFromRectangle, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3004
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+376]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3005
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 200				; 000000c8H
	mov	rcx, rax
	call	?back@?$ImVector@I@@QEAAAEAIXZ		; ImVector<unsigned int>::back
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR seed$[rbp], eax
; Line 3006
	mov	rax, QWORD PTR r_abs$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR [rcx+16]
	cvttss2si eax, xmm0
	mov	DWORD PTR r_rel$[rbp], eax
	mov	rax, QWORD PTR r_abs$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR [rcx+20]
	cvttss2si eax, xmm0
	mov	DWORD PTR r_rel$[rbp+4], eax
	mov	rax, QWORD PTR r_abs$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	subss	xmm0, DWORD PTR [rcx+16]
	cvttss2si eax, xmm0
	mov	DWORD PTR r_rel$[rbp+8], eax
	mov	rax, QWORD PTR r_abs$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	subss	xmm0, DWORD PTR [rcx+20]
	cvttss2si eax, xmm0
	mov	DWORD PTR r_rel$[rbp+12], eax
; Line 3007
	mov	r8d, DWORD PTR seed$[rbp]
	mov	edx, 16
	lea	rcx, QWORD PTR r_rel$[rbp]
	call	?ImHashData@@YAIPEBX_KI@Z		; ImHashData
	mov	DWORD PTR id$[rbp], eax
; Line 3008
	mov	ecx, DWORD PTR id$[rbp]
	call	?KeepAliveID@ImGui@@YAXI@Z		; ImGui::KeepAliveID
; Line 3009
	mov	eax, DWORD PTR id$[rbp]
; Line 3010
	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?GetIDFromRectangle@ImGuiWindow@@QEAAIAEBUImRect@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
?GetIDFromRectangle@ImGuiWindow@@QEAAIAEBUImRect@@@Z ENDP ; ImGuiWindow::GetIDFromRectangle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetIDNoKeepAlive@ImGuiWindow@@QEAAIH@Z
_TEXT	SEGMENT
seed$ = 4
id$ = 36
this$ = 288
n$ = 296
?GetIDNoKeepAlive@ImGuiWindow@@QEAAIH@Z PROC		; ImGuiWindow::GetIDNoKeepAlive, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2992
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2993
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 200				; 000000c8H
	mov	rcx, rax
	call	?back@?$ImVector@I@@QEAAAEAIXZ		; ImVector<unsigned int>::back
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR seed$[rbp], eax
; Line 2994
	mov	r8d, DWORD PTR seed$[rbp]
	mov	edx, 4
	lea	rcx, QWORD PTR n$[rbp]
	call	?ImHashData@@YAIPEBX_KI@Z		; ImHashData
	mov	DWORD PTR id$[rbp], eax
; Line 2999
	mov	eax, DWORD PTR id$[rbp]
; Line 3000
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?GetIDNoKeepAlive@ImGuiWindow@@QEAAIH@Z ENDP		; ImGuiWindow::GetIDNoKeepAlive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetIDNoKeepAlive@ImGuiWindow@@QEAAIPEBX@Z
_TEXT	SEGMENT
seed$ = 4
id$ = 36
this$ = 288
ptr$ = 296
?GetIDNoKeepAlive@ImGuiWindow@@QEAAIPEBX@Z PROC		; ImGuiWindow::GetIDNoKeepAlive, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2981
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2982
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 200				; 000000c8H
	mov	rcx, rax
	call	?back@?$ImVector@I@@QEAAAEAIXZ		; ImVector<unsigned int>::back
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR seed$[rbp], eax
; Line 2983
	mov	r8d, DWORD PTR seed$[rbp]
	mov	edx, 8
	lea	rcx, QWORD PTR ptr$[rbp]
	call	?ImHashData@@YAIPEBX_KI@Z		; ImHashData
	mov	DWORD PTR id$[rbp], eax
; Line 2988
	mov	eax, DWORD PTR id$[rbp]
; Line 2989
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?GetIDNoKeepAlive@ImGuiWindow@@QEAAIPEBX@Z ENDP		; ImGuiWindow::GetIDNoKeepAlive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetIDNoKeepAlive@ImGuiWindow@@QEAAIPEBD0@Z
_TEXT	SEGMENT
seed$ = 4
id$ = 36
tv75 = 244
tv71 = 248
this$ = 288
str$ = 296
str_end$ = 304
?GetIDNoKeepAlive@ImGuiWindow@@QEAAIPEBD0@Z PROC	; ImGuiWindow::GetIDNoKeepAlive, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2970
$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2971
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 200				; 000000c8H
	mov	rcx, rax
	call	?back@?$ImVector@I@@QEAAAEAIXZ		; ImVector<unsigned int>::back
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR seed$[rbp], eax
; Line 2972
	mov	eax, DWORD PTR seed$[rbp]
	mov	DWORD PTR tv75[rbp], eax
	cmp	QWORD PTR str_end$[rbp], 0
	je	SHORT $LN3@GetIDNoKee
	mov	rax, QWORD PTR str$[rbp]
	mov	rcx, QWORD PTR str_end$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv71[rbp], rax
	jmp	SHORT $LN4@GetIDNoKee
$LN3@GetIDNoKee:
	mov	QWORD PTR tv71[rbp], 0
$LN4@GetIDNoKee:
	mov	r8d, DWORD PTR tv75[rbp]
	mov	rdx, QWORD PTR tv71[rbp]
	mov	rcx, QWORD PTR str$[rbp]
	call	?ImHashStr@@YAIPEBD_KI@Z		; ImHashStr
	mov	DWORD PTR id$[rbp], eax
; Line 2977
	mov	eax, DWORD PTR id$[rbp]
; Line 2978
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?GetIDNoKeepAlive@ImGuiWindow@@QEAAIPEBD0@Z ENDP	; ImGuiWindow::GetIDNoKeepAlive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetID@ImGuiWindow@@QEAAIH@Z
_TEXT	SEGMENT
seed$ = 4
id$ = 36
this$ = 288
n$ = 296
?GetID@ImGuiWindow@@QEAAIH@Z PROC			; ImGuiWindow::GetID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2958
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2959
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 200				; 000000c8H
	mov	rcx, rax
	call	?back@?$ImVector@I@@QEAAAEAIXZ		; ImVector<unsigned int>::back
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR seed$[rbp], eax
; Line 2960
	mov	r8d, DWORD PTR seed$[rbp]
	mov	edx, 4
	lea	rcx, QWORD PTR n$[rbp]
	call	?ImHashData@@YAIPEBX_KI@Z		; ImHashData
	mov	DWORD PTR id$[rbp], eax
; Line 2961
	mov	ecx, DWORD PTR id$[rbp]
	call	?KeepAliveID@ImGui@@YAXI@Z		; ImGui::KeepAliveID
; Line 2966
	mov	eax, DWORD PTR id$[rbp]
; Line 2967
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?GetID@ImGuiWindow@@QEAAIH@Z ENDP			; ImGuiWindow::GetID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetID@ImGuiWindow@@QEAAIPEBX@Z
_TEXT	SEGMENT
seed$ = 4
id$ = 36
this$ = 288
ptr$ = 296
?GetID@ImGuiWindow@@QEAAIPEBX@Z PROC			; ImGuiWindow::GetID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2946
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2947
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 200				; 000000c8H
	mov	rcx, rax
	call	?back@?$ImVector@I@@QEAAAEAIXZ		; ImVector<unsigned int>::back
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR seed$[rbp], eax
; Line 2948
	mov	r8d, DWORD PTR seed$[rbp]
	mov	edx, 8
	lea	rcx, QWORD PTR ptr$[rbp]
	call	?ImHashData@@YAIPEBX_KI@Z		; ImHashData
	mov	DWORD PTR id$[rbp], eax
; Line 2949
	mov	ecx, DWORD PTR id$[rbp]
	call	?KeepAliveID@ImGui@@YAXI@Z		; ImGui::KeepAliveID
; Line 2954
	mov	eax, DWORD PTR id$[rbp]
; Line 2955
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?GetID@ImGuiWindow@@QEAAIPEBX@Z ENDP			; ImGuiWindow::GetID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetID@ImGuiWindow@@QEAAIPEBD0@Z
_TEXT	SEGMENT
seed$ = 4
id$ = 36
tv75 = 244
tv71 = 248
this$ = 288
str$ = 296
str_end$ = 304
?GetID@ImGuiWindow@@QEAAIPEBD0@Z PROC			; ImGuiWindow::GetID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2934
$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2935
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 200				; 000000c8H
	mov	rcx, rax
	call	?back@?$ImVector@I@@QEAAAEAIXZ		; ImVector<unsigned int>::back
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR seed$[rbp], eax
; Line 2936
	mov	eax, DWORD PTR seed$[rbp]
	mov	DWORD PTR tv75[rbp], eax
	cmp	QWORD PTR str_end$[rbp], 0
	je	SHORT $LN3@GetID
	mov	rax, QWORD PTR str$[rbp]
	mov	rcx, QWORD PTR str_end$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv71[rbp], rax
	jmp	SHORT $LN4@GetID
$LN3@GetID:
	mov	QWORD PTR tv71[rbp], 0
$LN4@GetID:
	mov	r8d, DWORD PTR tv75[rbp]
	mov	rdx, QWORD PTR tv71[rbp]
	mov	rcx, QWORD PTR str$[rbp]
	call	?ImHashStr@@YAIPEBD_KI@Z		; ImHashStr
	mov	DWORD PTR id$[rbp], eax
; Line 2937
	mov	ecx, DWORD PTR id$[rbp]
	call	?KeepAliveID@ImGui@@YAXI@Z		; ImGui::KeepAliveID
; Line 2942
	mov	eax, DWORD PTR id$[rbp]
; Line 2943
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?GetID@ImGuiWindow@@QEAAIPEBD0@Z ENDP			; ImGuiWindow::GetID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ImGuiWindow@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1ImGuiWindow@@QEAA@XZ PROC				; ImGuiWindow::~ImGuiWindow, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2927
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2928
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 696				; 000002b8H
	mov	rcx, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rcx+688], rax
	je	SHORT $LN3@ImGuiWindo
	mov	eax, DWORD PTR ?__LINE__Var@?0???1ImGuiWindow@@QEAA@XZ@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DE@OJBIPCGA@?$AAD?$AAr?$AAa?$AAw?$AAL?$AAi?$AAs?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CG?$AAD?$AAr@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@ImGuiWindo:
; Line 2929
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$IM_DELETE@D@@YAXPEAD@Z		; IM_DELETE<char>
; Line 2930
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 664				; 00000298H
	mov	rcx, rax
	call	?clear_destruct@?$ImVector@UImGuiOldColumns@@@@QEAAXXZ ; ImVector<ImGuiOldColumns>::clear_destruct
; Line 2931
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 696				; 000002b8H
	mov	rcx, rax
	call	??1ImDrawList@@QEAA@XZ			; ImDrawList::~ImDrawList
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 664				; 00000298H
	mov	rcx, rax
	call	??1?$ImVector@UImGuiOldColumns@@@@QEAA@XZ ; ImVector<ImGuiOldColumns>::~ImVector<ImGuiOldColumns>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 648				; 00000288H
	mov	rcx, rax
	call	??1ImGuiStorage@@QEAA@XZ
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 216				; 000000d8H
	mov	rcx, rax
	call	??1ImGuiWindowTempData@@QEAA@XZ
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 200				; 000000c8H
	mov	rcx, rax
	call	??1?$ImVector@I@@QEAA@XZ		; ImVector<unsigned int>::~ImVector<unsigned int>
	npad	1
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1ImGuiWindow@@QEAA@XZ ENDP				; ImGuiWindow::~ImGuiWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
tv278 = 280
tv199 = 280
tv169 = 280
tv279 = 288
this$ = 336
context$ = 344
name$ = 352
??0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z PROC	; ImGuiWindow::ImGuiWindow, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2904
$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 24
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 40					; 00000028H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 48					; 00000030H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 56					; 00000038H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 64					; 00000040H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 92					; 0000005cH
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 100				; 00000064H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 108				; 0000006cH
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 116				; 00000074H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 124				; 0000007cH
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 132				; 00000084H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 184				; 000000b8H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 192				; 000000c0H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 200				; 000000c8H
	mov	rcx, rax
	call	??0?$ImVector@I@@QEAA@XZ		; ImVector<unsigned int>::ImVector<unsigned int>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 216				; 000000d8H
	mov	rcx, rax
	call	??0ImGuiWindowTempData@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 512				; 00000200H
	mov	rcx, rax
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 528				; 00000210H
	mov	rcx, rax
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 544				; 00000220H
	mov	rcx, rax
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 560				; 00000230H
	mov	rcx, rax
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 576				; 00000240H
	mov	rcx, rax
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 592				; 00000250H
	mov	rcx, rax
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 608				; 00000260H
	mov	rcx, rax
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 624				; 00000270H
	mov	rcx, rax
	call	??0ImVec2ih@@QEAA@XZ			; ImVec2ih::ImVec2ih
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 628				; 00000274H
	mov	rcx, rax
	call	??0ImVec2ih@@QEAA@XZ			; ImVec2ih::ImVec2ih
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 648				; 00000288H
	mov	rcx, rax
	call	??0ImGuiStorage@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 664				; 00000298H
	mov	rcx, rax
	call	??0?$ImVector@UImGuiOldColumns@@@@QEAA@XZ ; ImVector<ImGuiOldColumns>::ImVector<ImGuiOldColumns>
	npad	1
; Line 2903
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 696				; 000002b8H
	mov	QWORD PTR tv169[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv169[rbp]
	call	??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z ; ImDrawList::ImDrawList
	npad	1
; Line 2904
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 944				; 000003b0H
	lea	r9, OFFSET FLAT:??0ImRect@@QEAA@XZ	; ImRect::ImRect
	mov	r8d, 2
	mov	edx, 16
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z
; Line 2905
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	ecx, 992				; 000003e0H
	rep stosb
; Line 2906
	mov	rcx, QWORD PTR name$[rbp]
	call	?ImStrdup@@YAPEADPEBD@Z			; ImStrdup
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax
; Line 2907
	mov	rax, QWORD PTR name$[rbp]
	mov	QWORD PTR tv278[rbp], rax
	mov	QWORD PTR tv279[rbp], -1
$LL8@ImGuiWindo:
	inc	QWORD PTR tv279[rbp]
	mov	rax, QWORD PTR tv278[rbp]
	mov	rcx, QWORD PTR tv279[rbp]
	cmp	BYTE PTR [rax+rcx], 0
	jne	SHORT $LL8@ImGuiWindo
	mov	rax, QWORD PTR tv279[rbp]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+80], eax
; Line 2908
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR name$[rbp]
	call	?ImHashStr@@YAIPEBD_KI@Z		; ImHashStr
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+8], eax
; Line 2909
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 200				; 000000c8H
	mov	QWORD PTR tv199[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rdx, rax
	mov	rcx, QWORD PTR tv199[rbp]
	call	?push_back@?$ImVector@I@@QEAAXAEBI@Z	; ImVector<unsigned int>::push_back
; Line 2910
	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:??_C@_05EJCOBEBF@?$CDMOVE@
	mov	rcx, QWORD PTR this$[rbp]
	call	?GetID@ImGuiWindow@@QEAAIPEBD0@Z	; ImGuiWindow::GetID
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+84], eax
; Line 2911
	movss	xmm2, DWORD PTR __real@7f7fffff
	movss	xmm1, DWORD PTR __real@7f7fffff
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+108], rax
; Line 2912
	movss	xmm2, DWORD PTR __real@3f000000
	movss	xmm1, DWORD PTR __real@3f000000
	lea	rcx, QWORD PTR $T2[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+116], rax
; Line 2913
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+169], -1
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+168], -1
; Line 2914
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+172], -1
; Line 2915
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+180]
	and	eax, -16711681				; ffffffffff00ffffH
	or	eax, 983040				; 000f0000H
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+180], eax
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+180]
	and	eax, -65281				; ffffffffffff00ffH
	or	eax, 3840				; 00000f00H
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+180], eax
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+180]
	and	eax, -256				; ffffffffffffff00H
	or	eax, 15
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+180], eax
; Line 2916
	movss	xmm2, DWORD PTR __real@7f7fffff
	movss	xmm1, DWORD PTR __real@7f7fffff
	lea	rcx, QWORD PTR $T3[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+192], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+192]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+184], rax
; Line 2917
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+632], -1
; Line 2918
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [rax+636], xmm0
; Line 2919
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rax+680], xmm0
; Line 2920
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+684], -1
; Line 2921
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 696				; 000002b8H
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+688], rax
; Line 2922
	mov	rax, QWORD PTR context$[rbp]
	add	rax, 6536				; 00001988H
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+688]
	mov	QWORD PTR [rcx+56], rax
; Line 2923
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax+64], rcx
; Line 2924
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z ENDP	; ImGuiWindow::ImGuiWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
tv278 = 280
tv199 = 280
tv169 = 280
tv279 = 288
this$ = 336
context$ = 344
name$ = 352
?dtor$0@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA PROC ; `ImGuiWindow::ImGuiWindow'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 200				; 000000c8H
	call	??1?$ImVector@I@@QEAA@XZ		; ImVector<unsigned int>::~ImVector<unsigned int>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA ENDP ; `ImGuiWindow::ImGuiWindow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
tv278 = 280
tv199 = 280
tv169 = 280
tv279 = 288
this$ = 336
context$ = 344
name$ = 352
?dtor$1@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA PROC ; `ImGuiWindow::ImGuiWindow'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 216				; 000000d8H
	call	??1ImGuiWindowTempData@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA ENDP ; `ImGuiWindow::ImGuiWindow'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
tv278 = 280
tv199 = 280
tv169 = 280
tv279 = 288
this$ = 336
context$ = 344
name$ = 352
?dtor$2@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA PROC ; `ImGuiWindow::ImGuiWindow'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 648				; 00000288H
	call	??1ImGuiStorage@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA ENDP ; `ImGuiWindow::ImGuiWindow'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
tv278 = 280
tv199 = 280
tv169 = 280
tv279 = 288
this$ = 336
context$ = 344
name$ = 352
?dtor$3@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA PROC ; `ImGuiWindow::ImGuiWindow'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 664				; 00000298H
	call	??1?$ImVector@UImGuiOldColumns@@@@QEAA@XZ ; ImVector<ImGuiOldColumns>::~ImVector<ImGuiOldColumns>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA ENDP ; `ImGuiWindow::ImGuiWindow'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
tv278 = 280
tv199 = 280
tv169 = 280
tv279 = 288
this$ = 336
context$ = 344
name$ = 352
?dtor$4@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA PROC ; `ImGuiWindow::ImGuiWindow'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 696				; 000002b8H
	call	??1ImDrawList@@QEAA@XZ			; ImDrawList::~ImDrawList
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0???0ImGuiWindow@@QEAA@PEAUImGuiContext@@PEBD@Z@4HA ENDP ; `ImGuiWindow::ImGuiWindow'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@UImGuiOldColumns@@@@QEAAAEAUImGuiOldColumns@@H@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@UImGuiOldColumns@@@@QEAAAEAUImGuiOldColumns@@H@Z PROC ; ImVector<ImGuiOldColumns>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1694
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1694				; 0000069eH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 136				; 00000088H
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@UImGuiOldColumns@@@@QEAAAEAUImGuiOldColumns@@H@Z ENDP ; ImVector<ImGuiOldColumns>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear_destruct@?$ImVector@UImGuiOldColumns@@@@QEAAXXZ
_TEXT	SEGMENT
n$1 = 4
tv75 = 216
this$ = 256
?clear_destruct@?$ImVector@UImGuiOldColumns@@@@QEAAXXZ PROC ; ImVector<ImGuiOldColumns>::clear_destruct, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1687
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	DWORD PTR n$1[rbp], 0
	jmp	SHORT $LN4@clear_dest
$LN2@clear_dest:
	mov	eax, DWORD PTR n$1[rbp]
	inc	eax
	mov	DWORD PTR n$1[rbp], eax
$LN4@clear_dest:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR n$1[rbp], eax
	jge	SHORT $LN3@clear_dest
	movsxd	rax, DWORD PTR n$1[rbp]
	imul	rax, rax, 136				; 00000088H
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR tv75[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv75[rbp]
	call	??_GImGuiOldColumns@@QEAAPEAXI@Z
	jmp	SHORT $LN2@clear_dest
$LN3@clear_dest:
	mov	rcx, QWORD PTR this$[rbp]
	call	?clear@?$ImVector@UImGuiOldColumns@@@@QEAAXXZ ; ImVector<ImGuiOldColumns>::clear
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?clear_destruct@?$ImVector@UImGuiOldColumns@@@@QEAAXXZ ENDP ; ImVector<ImGuiOldColumns>::clear_destruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@UImGuiOldColumns@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@UImGuiOldColumns@@@@QEAAXXZ PROC	; ImVector<ImGuiOldColumns>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@UImGuiOldColumns@@@@QEAAXXZ ENDP	; ImVector<ImGuiOldColumns>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImGuiOldColumns@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImGuiOldColumns@@@@QEAA@XZ PROC		; ImVector<ImGuiOldColumns>::~ImVector<ImGuiOldColumns>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImGuiOldColumns@@@@QEAA@XZ ENDP		; ImVector<ImGuiOldColumns>::~ImVector<ImGuiOldColumns>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@UImGuiOldColumns@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@UImGuiOldColumns@@@@QEAA@XZ PROC		; ImVector<ImGuiOldColumns>::ImVector<ImGuiOldColumns>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@UImGuiOldColumns@@@@QEAA@XZ ENDP		; ImVector<ImGuiOldColumns>::ImVector<ImGuiOldColumns>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ImGuiWindowTempData@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1ImGuiWindowTempData@@QEAA@XZ PROC			; ImGuiWindowTempData::~ImGuiWindowTempData, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 264				; 00000108H
	mov	rcx, rax
	call	??1?$ImVector@M@@QEAA@XZ		; ImVector<float>::~ImVector<float>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 248				; 000000f8H
	mov	rcx, rax
	call	??1?$ImVector@M@@QEAA@XZ		; ImVector<float>::~ImVector<float>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 184				; 000000b8H
	mov	rcx, rax
	call	??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ ; ImVector<ImGuiWindow *>::~ImVector<ImGuiWindow *>
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1ImGuiWindowTempData@@QEAA@XZ ENDP			; ImGuiWindowTempData::~ImGuiWindowTempData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiWindowTempData@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiWindowTempData@@QEAA@XZ PROC			; ImGuiWindowTempData::ImGuiWindowTempData, COMDAT
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 24
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 40					; 00000028H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 48					; 00000030H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 64					; 00000040H
	mov	rcx, rax
	call	??0ImVec1@@QEAA@XZ			; ImVec1::ImVec1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 68					; 00000044H
	mov	rcx, rax
	call	??0ImVec1@@QEAA@XZ			; ImVec1::ImVec1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 72					; 00000048H
	mov	rcx, rax
	call	??0ImVec1@@QEAA@XZ			; ImVec1::ImVec1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 84					; 00000054H
	mov	rcx, rax
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 100				; 00000064H
	mov	rcx, rax
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 132				; 00000084H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 140				; 0000008cH
	mov	rcx, rax
	call	??0ImGuiMenuColumns@@QEAA@XZ		; ImGuiMenuColumns::ImGuiMenuColumns
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 184				; 000000b8H
	mov	rcx, rax
	call	??0?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ ; ImVector<ImGuiWindow *>::ImVector<ImGuiWindow *>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 248				; 000000f8H
	mov	rcx, rax
	call	??0?$ImVector@M@@QEAA@XZ		; ImVector<float>::ImVector<float>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 264				; 00000108H
	mov	rcx, rax
	call	??0?$ImVector@M@@QEAA@XZ		; ImVector<float>::ImVector<float>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 280				; 00000118H
	mov	rcx, rax
	call	??0ImGuiStackSizes@@QEAA@XZ		; ImGuiStackSizes::ImGuiStackSizes
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiWindowTempData@@QEAA@XZ ENDP			; ImGuiWindowTempData::ImGuiWindowTempData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
?dtor$0@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA PROC	; `ImGuiWindowTempData::ImGuiWindowTempData'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 184				; 000000b8H
	call	??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ ; ImVector<ImGuiWindow *>::~ImVector<ImGuiWindow *>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA ENDP	; `ImGuiWindowTempData::ImGuiWindowTempData'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
?dtor$1@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA PROC	; `ImGuiWindowTempData::ImGuiWindowTempData'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 248				; 000000f8H
	call	??1?$ImVector@M@@QEAA@XZ		; ImVector<float>::~ImVector<float>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA ENDP	; `ImGuiWindowTempData::ImGuiWindowTempData'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
?dtor$2@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA PROC	; `ImGuiWindowTempData::ImGuiWindowTempData'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 264				; 00000108H
	call	??1?$ImVector@M@@QEAA@XZ		; ImVector<float>::~ImVector<float>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???0ImGuiWindowTempData@@QEAA@XZ@4HA ENDP	; `ImGuiWindowTempData::ImGuiWindowTempData'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GImGuiContext@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GImGuiContext@@QEAAPEAXI@Z PROC			; ImGuiContext::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ImGuiContext@@QEAA@XZ
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 16152				; 00003f18H
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_GImGuiContext@@QEAAPEAXI@Z ENDP			; ImGuiContext::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ImGuiContext@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1ImGuiContext@@QEAA@XZ PROC				; ImGuiContext::~ImGuiContext, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12496				; 000030d0H
	mov	rcx, rax
	call	??1ImGuiTextBuffer@@QEAA@XZ
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12456				; 000030a8H
	mov	rcx, rax
	call	??1?$ImVector@UImGuiContextHook@@@@QEAA@XZ ; ImVector<ImGuiContextHook>::~ImVector<ImGuiContextHook>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12440				; 00003098H
	mov	rcx, rax
	call	??1?$ImChunkStream@UImGuiTableSettings@@@@QEAA@XZ
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12424				; 00003088H
	mov	rcx, rax
	call	??1?$ImChunkStream@UImGuiWindowSettings@@@@QEAA@XZ
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12408				; 00003078H
	mov	rcx, rax
	call	??1?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ ; ImVector<ImGuiSettingsHandler>::~ImVector<ImGuiSettingsHandler>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12392				; 00003068H
	mov	rcx, rax
	call	??1ImGuiTextBuffer@@QEAA@XZ
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12352				; 00003040H
	mov	rcx, rax
	call	??1?$ImVector@I@@QEAA@XZ		; ImVector<unsigned int>::~ImVector<unsigned int>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12336				; 00003030H
	mov	rcx, rax
	call	??1?$ImVector@D@@QEAA@XZ		; ImVector<char>::~ImVector<char>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12104				; 00002f48H
	mov	rcx, rax
	call	??1ImFont@@QEAA@XZ			; ImFont::~ImFont
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8368				; 000020b0H
	mov	rcx, rax
	call	??1ImGuiInputTextState@@QEAA@XZ
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8344				; 00002098H
	mov	rcx, rax
	call	??1?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ ; ImVector<ImGuiShrinkWidthItem>::~ImVector<ImGuiShrinkWidthItem>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8328				; 00002088H
	mov	rcx, rax
	call	??1?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ ; ImVector<ImGuiPtrOrIndex>::~ImVector<ImGuiPtrOrIndex>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8288				; 00002060H
	mov	rcx, rax
	call	??1?$ImPool@UImGuiTabBar@@@@QEAA@XZ	; ImPool<ImGuiTabBar>::~ImPool<ImGuiTabBar>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8264				; 00002048H
	mov	rcx, rax
	call	??1?$ImVector@UImDrawChannel@@@@QEAA@XZ	; ImVector<ImDrawChannel>::~ImVector<ImDrawChannel>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8248				; 00002038H
	mov	rcx, rax
	call	??1?$ImVector@M@@QEAA@XZ		; ImVector<float>::~ImVector<float>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8232				; 00002028H
	mov	rcx, rax
	call	??1?$ImVector@UImGuiTableTempData@@@@QEAA@XZ ; ImVector<ImGuiTableTempData>::~ImVector<ImGuiTableTempData>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8192				; 00002000H
	mov	rcx, rax
	call	??1?$ImPool@UImGuiTable@@@@QEAA@XZ	; ImPool<ImGuiTable>::~ImPool<ImGuiTable>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8144				; 00001fd0H
	mov	rcx, rax
	call	??1?$ImVector@E@@QEAA@XZ		; ImVector<unsigned char>::~ImVector<unsigned char>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7608				; 00001db8H
	mov	rcx, rax
	call	??1?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ ; ImVector<ImGuiViewportP *>::~ImVector<ImGuiViewportP *>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7592				; 00001da8H
	mov	rcx, rax
	call	??1?$ImVector@UImGuiPopupData@@@@QEAA@XZ ; ImVector<ImGuiPopupData>::~ImVector<ImGuiPopupData>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7576				; 00001d98H
	mov	rcx, rax
	call	??1?$ImVector@UImGuiPopupData@@@@QEAA@XZ ; ImVector<ImGuiPopupData>::~ImVector<ImGuiPopupData>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7560				; 00001d88H
	mov	rcx, rax
	call	??1?$ImVector@UImGuiGroupData@@@@QEAA@XZ ; ImVector<ImGuiGroupData>::~ImVector<ImGuiGroupData>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7544				; 00001d78H
	mov	rcx, rax
	call	??1?$ImVector@H@@QEAA@XZ		; ImVector<int>::~ImVector<int>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7528				; 00001d68H
	mov	rcx, rax
	call	??1?$ImVector@I@@QEAA@XZ		; ImVector<unsigned int>::~ImVector<unsigned int>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7512				; 00001d58H
	mov	rcx, rax
	call	??1?$ImVector@PEAUImFont@@@@QEAA@XZ	; ImVector<ImFont *>::~ImVector<ImFont *>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7496				; 00001d48H
	mov	rcx, rax
	call	??1?$ImVector@UImGuiStyleMod@@@@QEAA@XZ	; ImVector<ImGuiStyleMod>::~ImVector<ImGuiStyleMod>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7480				; 00001d38H
	mov	rcx, rax
	call	??1?$ImVector@UImGuiColorMod@@@@QEAA@XZ	; ImVector<ImGuiColorMod>::~ImVector<ImGuiColorMod>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7152				; 00001bf0H
	mov	rcx, rax
	call	??1ImGuiStorage@@QEAA@XZ
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7136				; 00001be0H
	mov	rcx, rax
	call	??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ ; ImVector<ImGuiWindow *>::~ImVector<ImGuiWindow *>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7120				; 00001bd0H
	mov	rcx, rax
	call	??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ ; ImVector<ImGuiWindow *>::~ImVector<ImGuiWindow *>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7104				; 00001bc0H
	mov	rcx, rax
	call	??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ ; ImVector<ImGuiWindow *>::~ImVector<ImGuiWindow *>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	rcx, rax
	call	??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ ; ImVector<ImGuiWindow *>::~ImVector<ImGuiWindow *>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??1ImGuiIO@@QEAA@XZ
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1ImGuiContext@@QEAA@XZ ENDP				; ImGuiContext::~ImGuiContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
??0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z PROC		; ImGuiContext::ImGuiContext, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1633
$LN43:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 544				; 00000220H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??0ImGuiIO@@QEAA@XZ			; ImGuiIO::ImGuiIO
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 5472				; 00001560H
	mov	rcx, rax
	call	??0ImGuiStyle@@QEAA@XZ			; ImGuiStyle::ImGuiStyle
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 6536				; 00001988H
	mov	rcx, rax
	call	??0ImDrawListSharedData@@QEAA@XZ	; ImDrawListSharedData::ImDrawListSharedData
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	rcx, rax
	call	??0?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ ; ImVector<ImGuiWindow *>::ImVector<ImGuiWindow *>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7104				; 00001bc0H
	mov	rcx, rax
	call	??0?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ ; ImVector<ImGuiWindow *>::ImVector<ImGuiWindow *>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7120				; 00001bd0H
	mov	rcx, rax
	call	??0?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ ; ImVector<ImGuiWindow *>::ImVector<ImGuiWindow *>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7136				; 00001be0H
	mov	rcx, rax
	call	??0?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ ; ImVector<ImGuiWindow *>::ImVector<ImGuiWindow *>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7152				; 00001bf0H
	mov	rcx, rax
	call	??0ImGuiStorage@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7172				; 00001c04H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7224				; 00001c38H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7296				; 00001c80H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7344				; 00001cb0H
	mov	rcx, rax
	call	??0ImGuiNextWindowData@@QEAA@XZ		; ImGuiNextWindowData::ImGuiNextWindowData
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7456				; 00001d20H
	mov	rcx, rax
	call	??0ImGuiNextItemData@@QEAA@XZ		; ImGuiNextItemData::ImGuiNextItemData
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7480				; 00001d38H
	mov	rcx, rax
	call	??0?$ImVector@UImGuiColorMod@@@@QEAA@XZ	; ImVector<ImGuiColorMod>::ImVector<ImGuiColorMod>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7496				; 00001d48H
	mov	rcx, rax
	call	??0?$ImVector@UImGuiStyleMod@@@@QEAA@XZ	; ImVector<ImGuiStyleMod>::ImVector<ImGuiStyleMod>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7512				; 00001d58H
	mov	rcx, rax
	call	??0?$ImVector@PEAUImFont@@@@QEAA@XZ	; ImVector<ImFont *>::ImVector<ImFont *>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7528				; 00001d68H
	mov	rcx, rax
	call	??0?$ImVector@I@@QEAA@XZ		; ImVector<unsigned int>::ImVector<unsigned int>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7544				; 00001d78H
	mov	rcx, rax
	call	??0?$ImVector@H@@QEAA@XZ		; ImVector<int>::ImVector<int>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7560				; 00001d88H
	mov	rcx, rax
	call	??0?$ImVector@UImGuiGroupData@@@@QEAA@XZ ; ImVector<ImGuiGroupData>::ImVector<ImGuiGroupData>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7576				; 00001d98H
	mov	rcx, rax
	call	??0?$ImVector@UImGuiPopupData@@@@QEAA@XZ ; ImVector<ImGuiPopupData>::ImVector<ImGuiPopupData>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7592				; 00001da8H
	mov	rcx, rax
	call	??0?$ImVector@UImGuiPopupData@@@@QEAA@XZ ; ImVector<ImGuiPopupData>::ImVector<ImGuiPopupData>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7608				; 00001db8H
	mov	rcx, rax
	call	??0?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ ; ImVector<ImGuiViewportP *>::ImVector<ImGuiViewportP *>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7680				; 00001e00H
	mov	rcx, rax
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7720				; 00001e28H
	mov	rcx, rax
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7768				; 00001e58H
	mov	rcx, rax
	call	??0ImGuiNavItemData@@QEAA@XZ		; ImGuiNavItemData::ImGuiNavItemData
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7816				; 00001e88H
	mov	rcx, rax
	call	??0ImGuiNavItemData@@QEAA@XZ		; ImGuiNavItemData::ImGuiNavItemData
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 7864				; 00001eb8H
	mov	rcx, rax
	call	??0ImGuiNavItemData@@QEAA@XZ		; ImGuiNavItemData::ImGuiNavItemData
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8032				; 00001f60H
	mov	rcx, rax
	call	??0ImGuiPayload@@QEAA@XZ		; ImGuiPayload::ImGuiPayload
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8096				; 00001fa0H
	mov	rcx, rax
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8144				; 00001fd0H
	mov	rcx, rax
	call	??0?$ImVector@E@@QEAA@XZ		; ImVector<unsigned char>::ImVector<unsigned char>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8192				; 00002000H
	mov	rcx, rax
	call	??0?$ImPool@UImGuiTable@@@@QEAA@XZ	; ImPool<ImGuiTable>::ImPool<ImGuiTable>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8232				; 00002028H
	mov	rcx, rax
	call	??0?$ImVector@UImGuiTableTempData@@@@QEAA@XZ ; ImVector<ImGuiTableTempData>::ImVector<ImGuiTableTempData>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8248				; 00002038H
	mov	rcx, rax
	call	??0?$ImVector@M@@QEAA@XZ		; ImVector<float>::ImVector<float>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8264				; 00002048H
	mov	rcx, rax
	call	??0?$ImVector@UImDrawChannel@@@@QEAA@XZ	; ImVector<ImDrawChannel>::ImVector<ImDrawChannel>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8288				; 00002060H
	mov	rcx, rax
	call	??0?$ImPool@UImGuiTabBar@@@@QEAA@XZ	; ImPool<ImGuiTabBar>::ImPool<ImGuiTabBar>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8328				; 00002088H
	mov	rcx, rax
	call	??0?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ ; ImVector<ImGuiPtrOrIndex>::ImVector<ImGuiPtrOrIndex>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8344				; 00002098H
	mov	rcx, rax
	call	??0?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ ; ImVector<ImGuiShrinkWidthItem>::ImVector<ImGuiShrinkWidthItem>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8360				; 000020a8H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8368				; 000020b0H
	mov	rcx, rax
	call	??0ImGuiInputTextState@@QEAA@XZ		; ImGuiInputTextState::ImGuiInputTextState
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12104				; 00002f48H
	mov	rcx, rax
	call	??0ImFont@@QEAA@XZ			; ImFont::ImFont
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12244				; 00002fd4H
	mov	rcx, rax
	call	??0ImVec4@@QEAA@XZ			; ImVec4::ImVec4
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12260				; 00002fe4H
	mov	rcx, rax
	call	??0ImGuiComboPreviewData@@QEAA@XZ	; ImGuiComboPreviewData::ImGuiComboPreviewData
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12336				; 00003030H
	mov	rcx, rax
	call	??0?$ImVector@D@@QEAA@XZ		; ImVector<char>::ImVector<char>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12352				; 00003040H
	mov	rcx, rax
	call	??0?$ImVector@I@@QEAA@XZ		; ImVector<unsigned int>::ImVector<unsigned int>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12368				; 00003050H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12376				; 00003058H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12392				; 00003068H
	mov	rcx, rax
	call	??0ImGuiTextBuffer@@QEAA@XZ		; ImGuiTextBuffer::ImGuiTextBuffer
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12408				; 00003078H
	mov	rcx, rax
	call	??0?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ ; ImVector<ImGuiSettingsHandler>::ImVector<ImGuiSettingsHandler>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12424				; 00003088H
	mov	rcx, rax
	call	??0?$ImChunkStream@UImGuiWindowSettings@@@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12440				; 00003098H
	mov	rcx, rax
	call	??0?$ImChunkStream@UImGuiTableSettings@@@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12456				; 000030a8H
	mov	rcx, rax
	call	??0?$ImVector@UImGuiContextHook@@@@QEAA@XZ ; ImVector<ImGuiContextHook>::ImVector<ImGuiContextHook>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12496				; 000030d0H
	mov	rcx, rax
	call	??0ImGuiTextBuffer@@QEAA@XZ		; ImGuiTextBuffer::ImGuiTextBuffer
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12556				; 0000310cH
	mov	rcx, rax
	call	??0ImGuiMetricsConfig@@QEAA@XZ		; ImGuiMetricsConfig::ImGuiMetricsConfig
; Line 1635
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax], 0
; Line 1636
	cmp	QWORD PTR shared_font_atlas$[rbp], 0
	je	SHORT $LN3@ImGuiConte
	mov	BYTE PTR tv304[rbp], 0
	jmp	SHORT $LN4@ImGuiConte
$LN3@ImGuiConte:
	mov	BYTE PTR tv304[rbp], 1
$LN4@ImGuiConte:
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, BYTE PTR tv304[rbp]
	mov	BYTE PTR [rax+1], cl
; Line 1637
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+6520], 0
; Line 1638
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+6532], xmm0
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+6528], xmm0
; Line 1639
	cmp	QWORD PTR shared_font_atlas$[rbp], 0
	je	SHORT $LN7@ImGuiConte
	mov	rax, QWORD PTR shared_font_atlas$[rbp]
	mov	QWORD PTR tv327[rbp], rax
	jmp	$LN8@ImGuiConte
$LN7@ImGuiConte:
	mov	ecx, 1168				; 00000490H
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR $T3[rbp], rax
	lea	rax, QWORD PTR $T5[rbp]
	mov	QWORD PTR $T4[rbp], rax
	mov	r8, QWORD PTR $T3[rbp]
	mov	rax, QWORD PTR $T4[rbp]
	movzx	edx, BYTE PTR [rax]
	mov	ecx, 1168				; 00000490H
	call	??2@YAPEAX_KUImNewWrapper@@PEAX@Z	; operator new
	mov	QWORD PTR $T2[rbp], rax
	cmp	QWORD PTR $T2[rbp], 0
	je	SHORT $LN5@ImGuiConte
	mov	rcx, QWORD PTR $T2[rbp]
	call	??0ImFontAtlas@@QEAA@XZ			; ImFontAtlas::ImFontAtlas
	mov	QWORD PTR tv326[rbp], rax
	jmp	SHORT $LN6@ImGuiConte
$LN5@ImGuiConte:
	mov	QWORD PTR tv326[rbp], 0
$LN6@ImGuiConte:
	mov	rax, QWORD PTR tv326[rbp]
	mov	QWORD PTR $T1[rbp], rax
	mov	rax, QWORD PTR $T1[rbp]
	mov	QWORD PTR tv327[rbp], rax
$LN8@ImGuiConte:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR tv327[rbp]
	mov	QWORD PTR [rax+168], rcx
; Line 1640
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+7048], xmm0
; Line 1641
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7056], 0
; Line 1642
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7064], -1
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7060], -1
; Line 1643
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7070], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7069], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7068], 0
; Line 1644
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7071], 0
; Line 1645
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7072], 0
; Line 1646
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7076], 0
; Line 1647
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+7080], 0
; Line 1649
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7168], 0
; Line 1650
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+7184], 0
; Line 1651
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+7192], 0
; Line 1652
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+7200], 0
; Line 1653
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+7208], 0
; Line 1654
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+7216], 0
; Line 1655
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+7232], xmm0
; Line 1657
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7236], 0
; Line 1658
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7244], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7240], 0
; Line 1659
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7248], 0
; Line 1660
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7250], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7249], 0
; Line 1661
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7251], 0
; Line 1662
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+7256], xmm0
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+7252], xmm0
; Line 1663
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7260], 0
; Line 1664
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7264], 0
; Line 1665
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+7268], xmm0
; Line 1666
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7272], 0
; Line 1667
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7273], 0
; Line 1668
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7274], 0
; Line 1669
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7275], 0
; Line 1670
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7276], 0
; Line 1671
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7277], 0
; Line 1672
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7278], 0
; Line 1673
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7280], 0
; Line 1674
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7284], 0
; Line 1675
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+7288], 0
; Line 1676
	movss	xmm2, DWORD PTR __real@bf800000
	movss	xmm1, DWORD PTR __real@bf800000
	lea	rcx, QWORD PTR $T6[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+7296], rax
; Line 1677
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+7304], 0
; Line 1678
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7312], 0
; Line 1679
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7316], -1
; Line 1680
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7320], 0
; Line 1681
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7324], 0
; Line 1682
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7325], 0
; Line 1683
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+7328], 0
; Line 1684
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7336], 0
; Line 1685
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+7340], xmm0
; Line 1687
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+7624], 0
; Line 1688
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7652], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7648], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7644], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7640], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7636], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7632], 0
; Line 1689
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7672], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7664], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7660], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7656], 0
; Line 1690
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7668], 0
; Line 1691
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7676], 0
; Line 1692
	lea	rcx, QWORD PTR $T7[rbp]
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rcx, QWORD PTR this$[rbp]
	lea	rdi, QWORD PTR [rcx+7680]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
; Line 1693
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7696], 0
; Line 1694
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7700], 0
; Line 1695
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7704], 2147483647	; 7fffffffH
; Line 1696
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7708], 0
; Line 1697
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7709], 0
; Line 1698
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7710], 1
; Line 1699
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7711], 0
; Line 1700
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7712], 0
; Line 1701
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7713], 0
; Line 1702
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7714], 0
; Line 1703
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7716], 0
; Line 1704
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7736], 0
; Line 1705
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7740], 0
; Line 1706
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7744], 0
; Line 1707
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7748], 0
; Line 1708
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7760], -1
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7756], -1
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7752], -1
; Line 1709
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+7912], 0
; Line 1710
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7920], 0
; Line 1712
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+7944], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+7936], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+7928], 0
; Line 1713
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+7956], xmm0
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+7952], xmm0
; Line 1714
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+7960], 0
; Line 1716
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+7976], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+7968], 0
; Line 1717
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7988], 2147483647	; 7fffffffH
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7984], 2147483647	; 7fffffffH
; Line 1718
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7996], 2147483647	; 7fffffffH
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+7992], 2147483647	; 7fffffffH
; Line 1719
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+8000], 0
; Line 1721
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8004], xmm0
; Line 1722
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+8008], 0
; Line 1724
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+8014], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+8013], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+8012], 0
; Line 1725
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+8016], 0
; Line 1726
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+8020], -1
; Line 1727
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+8024], -1
; Line 1728
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+8112], 0
; Line 1729
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+8116], 0
; Line 1730
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8120], xmm0
; Line 1731
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+8124], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+8128], 0
; Line 1732
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+8132], -1
; Line 1733
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+8136], 0
; Line 1734
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8160				; 00001fe0H
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb
; Line 1736
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8176], 0
; Line 1737
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+8184], -1
; Line 1738
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8280], 0
; Line 1740
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T8[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+8360], rax
; Line 1741
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+12216], 0
; Line 1742
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+12220], 177209344	; 0a900000H
; Line 1743
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12228], xmm0
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12224], xmm0
; Line 1744
	mov	eax, 4
	imul	rax, rax, 2
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR [rcx+rax+12232], xmm0
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR [rcx+rax+12232], xmm0
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR [rcx+rax+12232], xmm0
; Line 1745
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12308], xmm0
; Line 1746
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+12312], 0
; Line 1747
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+12313], 0
; Line 1748
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12316], xmm0
; Line 1749
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@3c23d70a
	movss	DWORD PTR [rax+12320], xmm0
; Line 1750
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12324], xmm0
; Line 1751
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+12328], 0
; Line 1752
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [rax+12332], xmm0
; Line 1754
	movss	xmm2, DWORD PTR __real@7f7fffff
	movss	xmm1, DWORD PTR __real@7f7fffff
	lea	rcx, QWORD PTR $T9[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+12376], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+12376]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+12368], rax
; Line 1755
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+12384], 46		; 0000002eH
; Line 1757
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+12385], 0
; Line 1758
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12388], xmm0
; Line 1759
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+12472], 0
; Line 1761
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+12476], 0
; Line 1762
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+12480], 0
; Line 1763
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+12520], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+12512], 0
; Line 1764
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+12488], 0
; Line 1765
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR [rax+12528], xmm0
; Line 1766
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+12532], 0
; Line 1767
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+12536], 0
; Line 1768
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+12544], 2
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+12540], 2
; Line 1770
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+12548], 0
; Line 1771
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+12552], 0
; Line 1773
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12572				; 0000311cH
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 480				; 000001e0H
	rep stosb
; Line 1774
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+13056], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+13052], 0
; Line 1775
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+13060], xmm0
; Line 1776
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+13072], -1
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+13068], -1
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+13064], -1
; Line 1777
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 13076				; 00003314H
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 3073				; 00000c01H
	rep stosb
; Line 1778
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+512]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
??0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z ENDP		; ImGuiContext::ImGuiContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$0@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1ImGuiIO@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$1@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 7088				; 00001bb0H
	call	??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ ; ImVector<ImGuiWindow *>::~ImVector<ImGuiWindow *>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$2@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 7104				; 00001bc0H
	call	??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ ; ImVector<ImGuiWindow *>::~ImVector<ImGuiWindow *>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$3@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 7120				; 00001bd0H
	call	??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ ; ImVector<ImGuiWindow *>::~ImVector<ImGuiWindow *>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$4@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 7136				; 00001be0H
	call	??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ ; ImVector<ImGuiWindow *>::~ImVector<ImGuiWindow *>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$5@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 7152				; 00001bf0H
	call	??1ImGuiStorage@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$6@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$6
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 7480				; 00001d38H
	call	??1?$ImVector@UImGuiColorMod@@@@QEAA@XZ	; ImVector<ImGuiColorMod>::~ImVector<ImGuiColorMod>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$6@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$7@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$7
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 7496				; 00001d48H
	call	??1?$ImVector@UImGuiStyleMod@@@@QEAA@XZ	; ImVector<ImGuiStyleMod>::~ImVector<ImGuiStyleMod>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$7@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$8@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$8
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 7512				; 00001d58H
	call	??1?$ImVector@PEAUImFont@@@@QEAA@XZ	; ImVector<ImFont *>::~ImVector<ImFont *>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$8@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$9@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$9
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 7528				; 00001d68H
	call	??1?$ImVector@I@@QEAA@XZ		; ImVector<unsigned int>::~ImVector<unsigned int>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$9@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$10@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$10
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 7544				; 00001d78H
	call	??1?$ImVector@H@@QEAA@XZ		; ImVector<int>::~ImVector<int>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$10@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$11@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$11
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 7560				; 00001d88H
	call	??1?$ImVector@UImGuiGroupData@@@@QEAA@XZ ; ImVector<ImGuiGroupData>::~ImVector<ImGuiGroupData>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$11@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$12@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$12
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 7576				; 00001d98H
	call	??1?$ImVector@UImGuiPopupData@@@@QEAA@XZ ; ImVector<ImGuiPopupData>::~ImVector<ImGuiPopupData>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$12@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$13@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$13
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 7592				; 00001da8H
	call	??1?$ImVector@UImGuiPopupData@@@@QEAA@XZ ; ImVector<ImGuiPopupData>::~ImVector<ImGuiPopupData>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$13@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$13
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$14@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$14
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 7608				; 00001db8H
	call	??1?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ ; ImVector<ImGuiViewportP *>::~ImVector<ImGuiViewportP *>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$14@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$14
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$15@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$15
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8144				; 00001fd0H
	call	??1?$ImVector@E@@QEAA@XZ		; ImVector<unsigned char>::~ImVector<unsigned char>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$15@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$16@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$16
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8192				; 00002000H
	call	??1?$ImPool@UImGuiTable@@@@QEAA@XZ	; ImPool<ImGuiTable>::~ImPool<ImGuiTable>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$16@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$16
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$17@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$17
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8232				; 00002028H
	call	??1?$ImVector@UImGuiTableTempData@@@@QEAA@XZ ; ImVector<ImGuiTableTempData>::~ImVector<ImGuiTableTempData>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$17@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$17
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$18@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$18
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8248				; 00002038H
	call	??1?$ImVector@M@@QEAA@XZ		; ImVector<float>::~ImVector<float>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$18@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$18
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$19@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$19
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8264				; 00002048H
	call	??1?$ImVector@UImDrawChannel@@@@QEAA@XZ	; ImVector<ImDrawChannel>::~ImVector<ImDrawChannel>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$19@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$19
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$20@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$20
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8288				; 00002060H
	call	??1?$ImPool@UImGuiTabBar@@@@QEAA@XZ	; ImPool<ImGuiTabBar>::~ImPool<ImGuiTabBar>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$20@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$20
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$21@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$21
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8328				; 00002088H
	call	??1?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ ; ImVector<ImGuiPtrOrIndex>::~ImVector<ImGuiPtrOrIndex>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$21@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$21
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$22@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$22
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8344				; 00002098H
	call	??1?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ ; ImVector<ImGuiShrinkWidthItem>::~ImVector<ImGuiShrinkWidthItem>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$22@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$22
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$23@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$23
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8368				; 000020b0H
	call	??1ImGuiInputTextState@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$23@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$23
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$24@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$24
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 12104				; 00002f48H
	call	??1ImFont@@QEAA@XZ			; ImFont::~ImFont
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$24@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$24
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$25@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$25
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 12336				; 00003030H
	call	??1?$ImVector@D@@QEAA@XZ		; ImVector<char>::~ImVector<char>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$25@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$25
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$26@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$26
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 12352				; 00003040H
	call	??1?$ImVector@I@@QEAA@XZ		; ImVector<unsigned int>::~ImVector<unsigned int>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$26@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$26
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$27@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$27
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 12392				; 00003068H
	call	??1ImGuiTextBuffer@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$27@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$27
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$28@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$28
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 12408				; 00003078H
	call	??1?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ ; ImVector<ImGuiSettingsHandler>::~ImVector<ImGuiSettingsHandler>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$28@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$28
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$29@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$29
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 12424				; 00003088H
	call	??1?$ImChunkStream@UImGuiWindowSettings@@@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$29@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$29
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$30@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$30
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 12440				; 00003098H
	call	??1?$ImChunkStream@UImGuiTableSettings@@@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$30@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$30
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$31@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$31
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 12456				; 000030a8H
	call	??1?$ImVector@UImGuiContextHook@@@@QEAA@XZ ; ImVector<ImGuiContextHook>::~ImVector<ImGuiContextHook>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$31@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$31
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$32@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$32
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 12496				; 000030d0H
	call	??1ImGuiTextBuffer@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$32@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$32
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
$T4 = 296
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 436
$T9 = 468
tv304 = 484
tv327 = 488
tv326 = 496
this$ = 544
shared_font_atlas$ = 552
?dtor$33@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGuiContext::ImGuiContext'::`1'::dtor$33
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	r8, QWORD PTR $T3[rbp]
	mov	rax, QWORD PTR $T4[rbp]
	movzx	edx, BYTE PTR [rax]
	mov	rcx, QWORD PTR $T2[rbp]
	call	??3@YAXPEAXUImNewWrapper@@0@Z		; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$33@?0???0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGuiContext::ImGuiContext'::`1'::dtor$33
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?erase@?$ImVector@UImGuiContextHook@@@@QEAAPEAUImGuiContextHook@@PEBU2@@Z
_TEXT	SEGMENT
off$ = 8
tv95 = 216
this$ = 256
it$ = 264
?erase@?$ImVector@UImGuiContextHook@@@@QEAAPEAUImGuiContextHook@@PEBU2@@Z PROC ; ImVector<ImGuiContextHook>::erase, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1717
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	cmp	QWORD PTR it$[rbp], rax
	jb	SHORT $LN3@erase
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	cmp	QWORD PTR it$[rbp], rax
	jb	SHORT $LN4@erase
$LN3@erase:
	mov	r8d, 1717				; 000006b5H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DO@NPHOAPAC@?$AAi?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@erase:
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR it$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 5
	mov	QWORD PTR off$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	sub	rax, QWORD PTR off$[rbp]
	dec	rax
	imul	rax, rax, 32				; 00000020H
	imul	rcx, QWORD PTR off$[rbp], 32		; 00000020H
	mov	rdx, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rdx+8]
	lea	rcx, QWORD PTR [rdx+rcx+32]
	imul	rdx, QWORD PTR off$[rbp], 32		; 00000020H
	mov	r8, QWORD PTR this$[rbp]
	add	rdx, QWORD PTR [r8+8]
	mov	QWORD PTR tv95[rbp], rdx
	mov	r8, rax
	mov	rdx, rcx
	mov	rax, QWORD PTR tv95[rbp]
	mov	rcx, rax
	call	memmove
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	imul	rax, QWORD PTR off$[rbp], 32		; 00000020H
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?erase@?$ImVector@UImGuiContextHook@@@@QEAAPEAUImGuiContextHook@@PEBU2@@Z ENDP ; ImVector<ImGuiContextHook>::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$ImVector@UImGuiContextHook@@@@QEAAXAEBUImGuiContextHook@@@Z
_TEXT	SEGMENT
this$ = 224
v$ = 232
?push_back@?$ImVector@UImGuiContextHook@@@@QEAAXAEBUImGuiContextHook@@@Z PROC ; ImVector<ImGuiContextHook>::push_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1714
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 224				; 000000e0H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN2@push_back
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@UImGuiContextHook@@@@QEBAHH@Z ; ImVector<ImGuiContextHook>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@UImGuiContextHook@@@@QEAAXH@Z ; ImVector<ImGuiContextHook>::reserve
$LN2@push_back:
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v$[rbp]
	mov	ecx, 32					; 00000020H
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+192]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?push_back@?$ImVector@UImGuiContextHook@@@@QEAAXAEBUImGuiContextHook@@@Z ENDP ; ImVector<ImGuiContextHook>::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@UImGuiContextHook@@@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@UImGuiContextHook@@@@QEAAXH@Z PROC	; ImVector<ImGuiContextHook>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@UImGuiContextHook@@@@QEAAXH@Z ENDP	; ImVector<ImGuiContextHook>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_grow_capacity@?$ImVector@UImGuiContextHook@@@@QEBAHH@Z
_TEXT	SEGMENT
new_capacity$ = 4
tv72 = 212
tv70 = 212
this$ = 256
sz$ = 264
?_grow_capacity@?$ImVector@UImGuiContextHook@@@@QEBAHH@Z PROC ; ImVector<ImGuiContextHook>::_grow_capacity, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1707
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+4], 0
	je	SHORT $LN3@grow_capac
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@grow_capac
$LN3@grow_capac:
	mov	DWORD PTR tv70[rbp], 8
$LN4@grow_capac:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR new_capacity$[rbp], eax
	mov	eax, DWORD PTR sz$[rbp]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jle	SHORT $LN5@grow_capac
	mov	eax, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	jmp	SHORT $LN6@grow_capac
$LN5@grow_capac:
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tv72[rbp], eax
$LN6@grow_capac:
	mov	eax, DWORD PTR tv72[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_grow_capacity@?$ImVector@UImGuiContextHook@@@@QEBAHH@Z ENDP ; ImVector<ImGuiContextHook>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?back@?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@XZ
_TEXT	SEGMENT
this$ = 224
?back@?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@XZ PROC ; ImVector<ImGuiContextHook>::back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1703
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@back
	mov	r8d, 1703				; 000006a7H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cdqe
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?back@?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@XZ ENDP ; ImVector<ImGuiContextHook>::back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@H@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@H@Z PROC ; ImVector<ImGuiContextHook>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1694
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1694				; 0000069eH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@H@Z ENDP ; ImVector<ImGuiContextHook>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImGuiContextHook@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImGuiContextHook@@@@QEAA@XZ PROC		; ImVector<ImGuiContextHook>::~ImVector<ImGuiContextHook>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImGuiContextHook@@@@QEAA@XZ ENDP		; ImVector<ImGuiContextHook>::~ImVector<ImGuiContextHook>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@UImGuiContextHook@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@UImGuiContextHook@@@@QEAA@XZ PROC		; ImVector<ImGuiContextHook>::ImVector<ImGuiContextHook>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@UImGuiContextHook@@@@QEAA@XZ ENDP		; ImVector<ImGuiContextHook>::ImVector<ImGuiContextHook>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImChunkStream@UImGuiTableSettings@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImChunkStream@UImGuiTableSettings@@@@QEAA@XZ PROC	; ImChunkStream<ImGuiTableSettings>::~ImChunkStream<ImGuiTableSettings>, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??1?$ImVector@D@@QEAA@XZ		; ImVector<char>::~ImVector<char>
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImChunkStream@UImGuiTableSettings@@@@QEAA@XZ ENDP	; ImChunkStream<ImGuiTableSettings>::~ImChunkStream<ImGuiTableSettings>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImChunkStream@UImGuiTableSettings@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImChunkStream@UImGuiTableSettings@@@@QEAA@XZ PROC	; ImChunkStream<ImGuiTableSettings>::ImChunkStream<ImGuiTableSettings>, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$ImVector@D@@QEAA@XZ		; ImVector<char>::ImVector<char>
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImChunkStream@UImGuiTableSettings@@@@QEAA@XZ ENDP	; ImChunkStream<ImGuiTableSettings>::ImChunkStream<ImGuiTableSettings>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?end@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@XZ
_TEXT	SEGMENT
this$ = 224
?end@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@XZ PROC ; ImChunkStream<ImGuiTableSettings>::end, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 658
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?end@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@XZ ENDP ; ImChunkStream<ImGuiTableSettings>::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?chunk_size@?$ImChunkStream@UImGuiTableSettings@@@@QEAAHPEBUImGuiTableSettings@@@Z
_TEXT	SEGMENT
this$ = 224
p$ = 232
?chunk_size@?$ImChunkStream@UImGuiTableSettings@@@@QEAAHPEBUImGuiTableSettings@@@Z PROC ; ImChunkStream<ImGuiTableSettings>::chunk_size, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 657
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	eax, 4
	imul	rax, rax, -1
	mov	rcx, QWORD PTR p$[rbp]
	mov	eax, DWORD PTR [rcx+rax]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?chunk_size@?$ImChunkStream@UImGuiTableSettings@@@@QEAAHPEBUImGuiTableSettings@@@Z ENDP ; ImChunkStream<ImGuiTableSettings>::chunk_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?next_chunk@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@PEAU2@@Z
_TEXT	SEGMENT
HDR_SZ$ = 8
this$ = 256
p$ = 264
?next_chunk@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@PEAU2@@Z PROC ; ImChunkStream<ImGuiTableSettings>::next_chunk, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 656
$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	QWORD PTR HDR_SZ$[rbp], 4
	mov	rcx, QWORD PTR this$[rbp]
	call	?begin@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@XZ ; ImChunkStream<ImGuiTableSettings>::begin
	cmp	QWORD PTR p$[rbp], rax
	jb	SHORT $LN4@next_chunk
	mov	rcx, QWORD PTR this$[rbp]
	call	?end@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@XZ ; ImChunkStream<ImGuiTableSettings>::end
	cmp	QWORD PTR p$[rbp], rax
	jb	SHORT $LN5@next_chunk
$LN4@next_chunk:
	mov	r8d, 656				; 00000290H
	lea	rdx, OFFSET FLAT:??_C@_1GO@IOCEAJPC@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DE@BDDBABLK@?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAb?$AAe?$AAg?$AAi?$AAn?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN5@next_chunk:
	mov	rdx, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?chunk_size@?$ImChunkStream@UImGuiTableSettings@@@@QEAAHPEBUImGuiTableSettings@@@Z ; ImChunkStream<ImGuiTableSettings>::chunk_size
	cdqe
	mov	rcx, QWORD PTR p$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR p$[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?end@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@XZ ; ImChunkStream<ImGuiTableSettings>::end
	add	rax, QWORD PTR HDR_SZ$[rbp]
	cmp	QWORD PTR p$[rbp], rax
	jne	SHORT $LN2@next_chunk
	xor	eax, eax
	jmp	SHORT $LN1@next_chunk
$LN2@next_chunk:
	mov	rcx, QWORD PTR this$[rbp]
	call	?end@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@XZ ; ImChunkStream<ImGuiTableSettings>::end
	cmp	QWORD PTR p$[rbp], rax
	jb	SHORT $LN6@next_chunk
	mov	r8d, 656				; 00000290H
	lea	rdx, OFFSET FLAT:??_C@_1GO@IOCEAJPC@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BE@OEELIPPM@?$AAp?$AA?5?$AA?$DM?$AA?5?$AAe?$AAn?$AAd?$AA?$CI?$AA?$CJ@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@next_chunk:
	mov	rax, QWORD PTR p$[rbp]
$LN1@next_chunk:
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?next_chunk@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@PEAU2@@Z ENDP ; ImChunkStream<ImGuiTableSettings>::next_chunk
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?begin@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@XZ
_TEXT	SEGMENT
HDR_SZ$ = 8
this$ = 256
?begin@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@XZ PROC ; ImChunkStream<ImGuiTableSettings>::begin, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 655
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	QWORD PTR HDR_SZ$[rbp], 4
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	jne	SHORT $LN2@begin
	xor	eax, eax
	jmp	SHORT $LN1@begin
$LN2@begin:
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, QWORD PTR HDR_SZ$[rbp]
$LN1@begin:
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?begin@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@XZ ENDP ; ImChunkStream<ImGuiTableSettings>::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$ImChunkStream@UImGuiTableSettings@@@@QEBAHXZ
_TEXT	SEGMENT
this$ = 224
?size@?$ImChunkStream@UImGuiTableSettings@@@@QEBAHXZ PROC ; ImChunkStream<ImGuiTableSettings>::size, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 653
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?size@?$ImChunkStream@UImGuiTableSettings@@@@QEBAHXZ ENDP ; ImChunkStream<ImGuiTableSettings>::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImChunkStream@UImGuiWindowSettings@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImChunkStream@UImGuiWindowSettings@@@@QEAA@XZ PROC	; ImChunkStream<ImGuiWindowSettings>::~ImChunkStream<ImGuiWindowSettings>, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??1?$ImVector@D@@QEAA@XZ		; ImVector<char>::~ImVector<char>
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImChunkStream@UImGuiWindowSettings@@@@QEAA@XZ ENDP	; ImChunkStream<ImGuiWindowSettings>::~ImChunkStream<ImGuiWindowSettings>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImChunkStream@UImGuiWindowSettings@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImChunkStream@UImGuiWindowSettings@@@@QEAA@XZ PROC	; ImChunkStream<ImGuiWindowSettings>::ImChunkStream<ImGuiWindowSettings>, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$ImVector@D@@QEAA@XZ		; ImVector<char>::ImVector<char>
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImChunkStream@UImGuiWindowSettings@@@@QEAA@XZ ENDP	; ImChunkStream<ImGuiWindowSettings>::ImChunkStream<ImGuiWindowSettings>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ptr_from_offset@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@H@Z
_TEXT	SEGMENT
this$ = 224
off$ = 232
?ptr_from_offset@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@H@Z PROC ; ImChunkStream<ImGuiWindowSettings>::ptr_from_offset, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 660
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR off$[rbp], 4
	jl	SHORT $LN3@ptr_from_o
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR off$[rbp], eax
	jl	SHORT $LN4@ptr_from_o
$LN3@ptr_from_o:
	mov	r8d, 660				; 00000294H
	lea	rdx, OFFSET FLAT:??_C@_1GO@IOCEAJPC@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DG@EPOMENA@?$AAo?$AAf?$AAf?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA4?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAo?$AAf?$AAf@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@ptr_from_o:
	movsxd	rax, DWORD PTR off$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?ptr_from_offset@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@H@Z ENDP ; ImChunkStream<ImGuiWindowSettings>::ptr_from_offset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?offset_from_ptr@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAHPEBUImGuiWindowSettings@@@Z
_TEXT	SEGMENT
off$ = 8
this$ = 256
p$ = 264
?offset_from_ptr@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAHPEBUImGuiWindowSettings@@@Z PROC ; ImChunkStream<ImGuiWindowSettings>::offset_from_ptr, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 659
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	?begin@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ ; ImChunkStream<ImGuiWindowSettings>::begin
	cmp	QWORD PTR p$[rbp], rax
	jb	SHORT $LN3@offset_fro
	mov	rcx, QWORD PTR this$[rbp]
	call	?end@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ ; ImChunkStream<ImGuiWindowSettings>::end
	cmp	QWORD PTR p$[rbp], rax
	jb	SHORT $LN4@offset_fro
$LN3@offset_fro:
	mov	r8d, 659				; 00000293H
	lea	rdx, OFFSET FLAT:??_C@_1GO@IOCEAJPC@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DE@BDDBABLK@?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAb?$AAe?$AAg?$AAi?$AAn?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@offset_fro:
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR p$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR off$[rbp], rax
	mov	eax, DWORD PTR off$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?offset_from_ptr@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAHPEBUImGuiWindowSettings@@@Z ENDP ; ImChunkStream<ImGuiWindowSettings>::offset_from_ptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?end@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ
_TEXT	SEGMENT
this$ = 224
?end@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ PROC ; ImChunkStream<ImGuiWindowSettings>::end, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 658
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?end@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ ENDP ; ImChunkStream<ImGuiWindowSettings>::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?chunk_size@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAHPEBUImGuiWindowSettings@@@Z
_TEXT	SEGMENT
this$ = 224
p$ = 232
?chunk_size@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAHPEBUImGuiWindowSettings@@@Z PROC ; ImChunkStream<ImGuiWindowSettings>::chunk_size, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 657
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	eax, 4
	imul	rax, rax, -1
	mov	rcx, QWORD PTR p$[rbp]
	mov	eax, DWORD PTR [rcx+rax]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?chunk_size@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAHPEBUImGuiWindowSettings@@@Z ENDP ; ImChunkStream<ImGuiWindowSettings>::chunk_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?next_chunk@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@PEAU2@@Z
_TEXT	SEGMENT
HDR_SZ$ = 8
this$ = 256
p$ = 264
?next_chunk@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@PEAU2@@Z PROC ; ImChunkStream<ImGuiWindowSettings>::next_chunk, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 656
$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	QWORD PTR HDR_SZ$[rbp], 4
	mov	rcx, QWORD PTR this$[rbp]
	call	?begin@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ ; ImChunkStream<ImGuiWindowSettings>::begin
	cmp	QWORD PTR p$[rbp], rax
	jb	SHORT $LN4@next_chunk
	mov	rcx, QWORD PTR this$[rbp]
	call	?end@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ ; ImChunkStream<ImGuiWindowSettings>::end
	cmp	QWORD PTR p$[rbp], rax
	jb	SHORT $LN5@next_chunk
$LN4@next_chunk:
	mov	r8d, 656				; 00000290H
	lea	rdx, OFFSET FLAT:??_C@_1GO@IOCEAJPC@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DE@BDDBABLK@?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAb?$AAe?$AAg?$AAi?$AAn?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN5@next_chunk:
	mov	rdx, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?chunk_size@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAHPEBUImGuiWindowSettings@@@Z ; ImChunkStream<ImGuiWindowSettings>::chunk_size
	cdqe
	mov	rcx, QWORD PTR p$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR p$[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?end@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ ; ImChunkStream<ImGuiWindowSettings>::end
	add	rax, QWORD PTR HDR_SZ$[rbp]
	cmp	QWORD PTR p$[rbp], rax
	jne	SHORT $LN2@next_chunk
	xor	eax, eax
	jmp	SHORT $LN1@next_chunk
$LN2@next_chunk:
	mov	rcx, QWORD PTR this$[rbp]
	call	?end@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ ; ImChunkStream<ImGuiWindowSettings>::end
	cmp	QWORD PTR p$[rbp], rax
	jb	SHORT $LN6@next_chunk
	mov	r8d, 656				; 00000290H
	lea	rdx, OFFSET FLAT:??_C@_1GO@IOCEAJPC@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BE@OEELIPPM@?$AAp?$AA?5?$AA?$DM?$AA?5?$AAe?$AAn?$AAd?$AA?$CI?$AA?$CJ@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@next_chunk:
	mov	rax, QWORD PTR p$[rbp]
$LN1@next_chunk:
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?next_chunk@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@PEAU2@@Z ENDP ; ImChunkStream<ImGuiWindowSettings>::next_chunk
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?begin@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ
_TEXT	SEGMENT
HDR_SZ$ = 8
this$ = 256
?begin@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ PROC ; ImChunkStream<ImGuiWindowSettings>::begin, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 655
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	QWORD PTR HDR_SZ$[rbp], 4
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	jne	SHORT $LN2@begin
	xor	eax, eax
	jmp	SHORT $LN1@begin
$LN2@begin:
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, QWORD PTR HDR_SZ$[rbp]
$LN1@begin:
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?begin@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ ENDP ; ImChunkStream<ImGuiWindowSettings>::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?alloc_chunk@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@_K@Z
_TEXT	SEGMENT
HDR_SZ$ = 8
off$ = 36
tv74 = 248
this$ = 288
sz$ = 296
?alloc_chunk@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@_K@Z PROC ; ImChunkStream<ImGuiWindowSettings>::alloc_chunk, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 654
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	QWORD PTR HDR_SZ$[rbp], 4
	mov	rax, QWORD PTR HDR_SZ$[rbp]
	mov	rcx, QWORD PTR sz$[rbp]
	lea	rax, QWORD PTR [rax+rcx+3]
	mov	ecx, -4					; fffffffcH
	and	rax, rcx
	mov	QWORD PTR sz$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR off$[rbp], eax
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv74[rbp], rax
	mov	eax, DWORD PTR sz$[rbp]
	mov	ecx, DWORD PTR off$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	edx, eax
	mov	rcx, QWORD PTR tv74[rbp]
	call	?resize@?$ImVector@D@@QEAAXH@Z		; ImVector<char>::resize
	movsxd	rax, DWORD PTR off$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	mov	ecx, 4
	imul	rcx, rcx, 0
	mov	edx, DWORD PTR sz$[rbp]
	mov	DWORD PTR [rax+rcx], edx
	movsxd	rax, DWORD PTR off$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	add	rcx, rax
	mov	rax, rcx
	movsxd	rcx, DWORD PTR HDR_SZ$[rbp]
	add	rax, rcx
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?alloc_chunk@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@_K@Z ENDP ; ImChunkStream<ImGuiWindowSettings>::alloc_chunk
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$ImChunkStream@UImGuiWindowSettings@@@@QEBAHXZ
_TEXT	SEGMENT
this$ = 224
?size@?$ImChunkStream@UImGuiWindowSettings@@@@QEBAHXZ PROC ; ImChunkStream<ImGuiWindowSettings>::size, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 653
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?size@?$ImChunkStream@UImGuiWindowSettings@@@@QEBAHXZ ENDP ; ImChunkStream<ImGuiWindowSettings>::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@?$ImChunkStream@UImGuiWindowSettings@@@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 192
this$ = 240
?empty@?$ImChunkStream@UImGuiWindowSettings@@@@QEBA_NXZ PROC ; ImChunkStream<ImGuiWindowSettings>::empty, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 652
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv67[rbp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv67[rbp], 0
$LN4@empty:
	movzx	eax, BYTE PTR tv67[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?empty@?$ImChunkStream@UImGuiWindowSettings@@@@QEBA_NXZ ENDP ; ImChunkStream<ImGuiWindowSettings>::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAXXZ PROC ; ImChunkStream<ImGuiWindowSettings>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 651
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?clear@?$ImVector@D@@QEAAXXZ		; ImVector<char>::clear
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAXXZ ENDP ; ImChunkStream<ImGuiWindowSettings>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$ImVector@UImGuiSettingsHandler@@@@QEAAXAEBUImGuiSettingsHandler@@@Z
_TEXT	SEGMENT
this$ = 224
v$ = 232
?push_back@?$ImVector@UImGuiSettingsHandler@@@@QEAAXAEBUImGuiSettingsHandler@@@Z PROC ; ImVector<ImGuiSettingsHandler>::push_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1714
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 224				; 000000e0H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN2@push_back
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@UImGuiSettingsHandler@@@@QEBAHH@Z ; ImVector<ImGuiSettingsHandler>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@UImGuiSettingsHandler@@@@QEAAXH@Z ; ImVector<ImGuiSettingsHandler>::reserve
$LN2@push_back:
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 72				; 00000048H
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v$[rbp]
	mov	ecx, 72					; 00000048H
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+192]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?push_back@?$ImVector@UImGuiSettingsHandler@@@@QEAAXAEBUImGuiSettingsHandler@@@Z ENDP ; ImVector<ImGuiSettingsHandler>::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@UImGuiSettingsHandler@@@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@UImGuiSettingsHandler@@@@QEAAXH@Z PROC ; ImVector<ImGuiSettingsHandler>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	imul	rax, rax, 72				; 00000048H
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 72				; 00000048H
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@UImGuiSettingsHandler@@@@QEAAXH@Z ENDP ; ImVector<ImGuiSettingsHandler>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_grow_capacity@?$ImVector@UImGuiSettingsHandler@@@@QEBAHH@Z
_TEXT	SEGMENT
new_capacity$ = 4
tv72 = 212
tv70 = 212
this$ = 256
sz$ = 264
?_grow_capacity@?$ImVector@UImGuiSettingsHandler@@@@QEBAHH@Z PROC ; ImVector<ImGuiSettingsHandler>::_grow_capacity, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1707
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+4], 0
	je	SHORT $LN3@grow_capac
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@grow_capac
$LN3@grow_capac:
	mov	DWORD PTR tv70[rbp], 8
$LN4@grow_capac:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR new_capacity$[rbp], eax
	mov	eax, DWORD PTR sz$[rbp]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jle	SHORT $LN5@grow_capac
	mov	eax, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	jmp	SHORT $LN6@grow_capac
$LN5@grow_capac:
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tv72[rbp], eax
$LN6@grow_capac:
	mov	eax, DWORD PTR tv72[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_grow_capacity@?$ImVector@UImGuiSettingsHandler@@@@QEBAHH@Z ENDP ; ImVector<ImGuiSettingsHandler>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z PROC ; ImVector<ImGuiSettingsHandler>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1694
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1694				; 0000069eH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 72				; 00000048H
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z ENDP ; ImVector<ImGuiSettingsHandler>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@UImGuiSettingsHandler@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@UImGuiSettingsHandler@@@@QEAAXXZ PROC	; ImVector<ImGuiSettingsHandler>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@UImGuiSettingsHandler@@@@QEAAXXZ ENDP	; ImVector<ImGuiSettingsHandler>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ PROC	; ImVector<ImGuiSettingsHandler>::~ImVector<ImGuiSettingsHandler>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ ENDP	; ImVector<ImGuiSettingsHandler>::~ImVector<ImGuiSettingsHandler>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ PROC	; ImVector<ImGuiSettingsHandler>::ImVector<ImGuiSettingsHandler>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@UImGuiSettingsHandler@@@@QEAA@XZ ENDP	; ImVector<ImGuiSettingsHandler>::ImVector<ImGuiSettingsHandler>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@UImGuiShrinkWidthItem@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@UImGuiShrinkWidthItem@@@@QEAAXXZ PROC	; ImVector<ImGuiShrinkWidthItem>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@UImGuiShrinkWidthItem@@@@QEAAXXZ ENDP	; ImVector<ImGuiShrinkWidthItem>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ PROC	; ImVector<ImGuiShrinkWidthItem>::~ImVector<ImGuiShrinkWidthItem>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ ENDP	; ImVector<ImGuiShrinkWidthItem>::~ImVector<ImGuiShrinkWidthItem>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ PROC	; ImVector<ImGuiShrinkWidthItem>::ImVector<ImGuiShrinkWidthItem>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@UImGuiShrinkWidthItem@@@@QEAA@XZ ENDP	; ImVector<ImGuiShrinkWidthItem>::ImVector<ImGuiShrinkWidthItem>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@UImGuiPtrOrIndex@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@UImGuiPtrOrIndex@@@@QEAAXXZ PROC	; ImVector<ImGuiPtrOrIndex>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@UImGuiPtrOrIndex@@@@QEAAXXZ ENDP	; ImVector<ImGuiPtrOrIndex>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ PROC		; ImVector<ImGuiPtrOrIndex>::~ImVector<ImGuiPtrOrIndex>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ ENDP		; ImVector<ImGuiPtrOrIndex>::~ImVector<ImGuiPtrOrIndex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ PROC		; ImVector<ImGuiPtrOrIndex>::ImVector<ImGuiPtrOrIndex>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@UImGuiPtrOrIndex@@@@QEAA@XZ ENDP		; ImVector<ImGuiPtrOrIndex>::ImVector<ImGuiPtrOrIndex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?TryGetMapData@?$ImPool@UImGuiTabBar@@@@QEAAPEAUImGuiTabBar@@H@Z
_TEXT	SEGMENT
idx$ = 4
tv70 = 216
this$ = 256
n$ = 264
?TryGetMapData@?$ImPool@UImGuiTabBar@@@@QEAAPEAUImGuiTabBar@@H@Z PROC ; ImPool<ImGuiTabBar>::TryGetMapData, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 635
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	QWORD PTR tv70[rbp], rax
	mov	edx, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR tv70[rbp]
	call	??A?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAAEAUImGuiStoragePair@ImGuiStorage@@H@Z ; ImVector<ImGuiStorage::ImGuiStoragePair>::operator[]
	mov	eax, DWORD PTR [rax+8]
	mov	DWORD PTR idx$[rbp], eax
	cmp	DWORD PTR idx$[rbp], -1
	jne	SHORT $LN2@TryGetMapD
	xor	eax, eax
	jmp	SHORT $LN1@TryGetMapD
$LN2@TryGetMapD:
	mov	edx, DWORD PTR idx$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?GetByIndex@?$ImPool@UImGuiTabBar@@@@QEAAPEAUImGuiTabBar@@H@Z ; ImPool<ImGuiTabBar>::GetByIndex
$LN1@TryGetMapD:
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?TryGetMapData@?$ImPool@UImGuiTabBar@@@@QEAAPEAUImGuiTabBar@@H@Z ENDP ; ImPool<ImGuiTabBar>::TryGetMapData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetMapSize@?$ImPool@UImGuiTabBar@@@@QEBAHXZ
_TEXT	SEGMENT
this$ = 224
?GetMapSize@?$ImPool@UImGuiTabBar@@@@QEBAHXZ PROC	; ImPool<ImGuiTabBar>::GetMapSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 634
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+16]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetMapSize@?$ImPool@UImGuiTabBar@@@@QEBAHXZ ENDP	; ImPool<ImGuiTabBar>::GetMapSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetAliveCount@?$ImPool@UImGuiTabBar@@@@QEBAHXZ
_TEXT	SEGMENT
this$ = 224
?GetAliveCount@?$ImPool@UImGuiTabBar@@@@QEBAHXZ PROC	; ImPool<ImGuiTabBar>::GetAliveCount, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 632
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+36]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetAliveCount@?$ImPool@UImGuiTabBar@@@@QEBAHXZ ENDP	; ImPool<ImGuiTabBar>::GetAliveCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Clear@?$ImPool@UImGuiTabBar@@@@QEAAXXZ
_TEXT	SEGMENT
n$1 = 4
idx$2 = 36
tv83 = 248
tv75 = 248
tv88 = 256
this$ = 304
?Clear@?$ImPool@UImGuiTabBar@@@@QEAAXXZ PROC		; ImPool<ImGuiTabBar>::Clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 624
$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	DWORD PTR n$1[rbp], 0
	jmp	SHORT $LN4@Clear
$LN2@Clear:
	mov	eax, DWORD PTR n$1[rbp]
	inc	eax
	mov	DWORD PTR n$1[rbp], eax
$LN4@Clear:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+16]
	cmp	DWORD PTR n$1[rbp], eax
	jge	SHORT $LN3@Clear
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	QWORD PTR tv75[rbp], rax
	mov	edx, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR tv75[rbp]
	call	??A?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAAEAUImGuiStoragePair@ImGuiStorage@@H@Z ; ImVector<ImGuiStorage::ImGuiStoragePair>::operator[]
	mov	eax, DWORD PTR [rax+8]
	mov	DWORD PTR idx$2[rbp], eax
	cmp	DWORD PTR idx$2[rbp], -1
	je	SHORT $LN5@Clear
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv83[rbp], rax
	mov	edx, DWORD PTR idx$2[rbp]
	mov	rcx, QWORD PTR tv83[rbp]
	call	??A?$ImVector@UImGuiTabBar@@@@QEAAAEAUImGuiTabBar@@H@Z ; ImVector<ImGuiTabBar>::operator[]
	mov	QWORD PTR tv88[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv88[rbp]
	call	??_GImGuiTabBar@@QEAAPEAXI@Z
$LN5@Clear:
	jmp	SHORT $LN2@Clear
$LN3@Clear:
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rcx, rax
	call	?Clear@ImGuiStorage@@QEAAXXZ		; ImGuiStorage::Clear
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?clear@?$ImVector@UImGuiTabBar@@@@QEAAXXZ ; ImVector<ImGuiTabBar>::clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+36], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+32], 0
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
?Clear@?$ImPool@UImGuiTabBar@@@@QEAAXXZ ENDP		; ImPool<ImGuiTabBar>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetByIndex@?$ImPool@UImGuiTabBar@@@@QEAAPEAUImGuiTabBar@@H@Z
_TEXT	SEGMENT
tv69 = 192
this$ = 240
n$ = 248
?GetByIndex@?$ImPool@UImGuiTabBar@@@@QEAAPEAUImGuiTabBar@@H@Z PROC ; ImPool<ImGuiTabBar>::GetByIndex, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 620
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv69[rbp], rax
	mov	edx, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR tv69[rbp]
	call	??A?$ImVector@UImGuiTabBar@@@@QEAAAEAUImGuiTabBar@@H@Z ; ImVector<ImGuiTabBar>::operator[]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?GetByIndex@?$ImPool@UImGuiTabBar@@@@QEAAPEAUImGuiTabBar@@H@Z ENDP ; ImPool<ImGuiTabBar>::GetByIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImPool@UImGuiTabBar@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImPool@UImGuiTabBar@@@@QEAA@XZ PROC		; ImPool<ImGuiTabBar>::~ImPool<ImGuiTabBar>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 618
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	?Clear@?$ImPool@UImGuiTabBar@@@@QEAAXXZ	; ImPool<ImGuiTabBar>::Clear
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rcx, rax
	call	??1ImGuiStorage@@QEAA@XZ
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??1?$ImVector@UImGuiTabBar@@@@QEAA@XZ	; ImVector<ImGuiTabBar>::~ImVector<ImGuiTabBar>
	npad	1
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImPool@UImGuiTabBar@@@@QEAA@XZ ENDP		; ImPool<ImGuiTabBar>::~ImPool<ImGuiTabBar>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImPool@UImGuiTabBar@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImPool@UImGuiTabBar@@@@QEAA@XZ PROC		; ImPool<ImGuiTabBar>::ImPool<ImGuiTabBar>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 617
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$ImVector@UImGuiTabBar@@@@QEAA@XZ	; ImVector<ImGuiTabBar>::ImVector<ImGuiTabBar>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rcx, rax
	call	??0ImGuiStorage@@QEAA@XZ
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+36], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+32], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImPool@UImGuiTabBar@@@@QEAA@XZ ENDP		; ImPool<ImGuiTabBar>::ImPool<ImGuiTabBar>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
?dtor$0@?0???0?$ImPool@UImGuiTabBar@@@@QEAA@XZ@4HA PROC	; `ImPool<ImGuiTabBar>::ImPool<ImGuiTabBar>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$ImVector@UImGuiTabBar@@@@QEAA@XZ	; ImVector<ImGuiTabBar>::~ImVector<ImGuiTabBar>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$ImPool@UImGuiTabBar@@@@QEAA@XZ@4HA ENDP	; `ImPool<ImGuiTabBar>::ImPool<ImGuiTabBar>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@UImGuiTabBar@@@@QEAAAEAUImGuiTabBar@@H@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@UImGuiTabBar@@@@QEAAAEAUImGuiTabBar@@H@Z PROC ; ImVector<ImGuiTabBar>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1694
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1694				; 0000069eH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 152				; 00000098H
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@UImGuiTabBar@@@@QEAAAEAUImGuiTabBar@@H@Z ENDP ; ImVector<ImGuiTabBar>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@UImGuiTabBar@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@UImGuiTabBar@@@@QEAAXXZ PROC		; ImVector<ImGuiTabBar>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@UImGuiTabBar@@@@QEAAXXZ ENDP		; ImVector<ImGuiTabBar>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImGuiTabBar@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImGuiTabBar@@@@QEAA@XZ PROC		; ImVector<ImGuiTabBar>::~ImVector<ImGuiTabBar>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImGuiTabBar@@@@QEAA@XZ ENDP		; ImVector<ImGuiTabBar>::~ImVector<ImGuiTabBar>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@UImGuiTabBar@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@UImGuiTabBar@@@@QEAA@XZ PROC		; ImVector<ImGuiTabBar>::ImVector<ImGuiTabBar>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@UImGuiTabBar@@@@QEAA@XZ ENDP		; ImVector<ImGuiTabBar>::ImVector<ImGuiTabBar>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@UImGuiTableTempData@@@@QEAAAEAUImGuiTableTempData@@H@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@UImGuiTableTempData@@@@QEAAAEAUImGuiTableTempData@@H@Z PROC ; ImVector<ImGuiTableTempData>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1694
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1694				; 0000069eH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 112				; 00000070H
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@UImGuiTableTempData@@@@QEAAAEAUImGuiTableTempData@@H@Z ENDP ; ImVector<ImGuiTableTempData>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear_destruct@?$ImVector@UImGuiTableTempData@@@@QEAAXXZ
_TEXT	SEGMENT
n$1 = 4
tv75 = 216
this$ = 256
?clear_destruct@?$ImVector@UImGuiTableTempData@@@@QEAAXXZ PROC ; ImVector<ImGuiTableTempData>::clear_destruct, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1687
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	DWORD PTR n$1[rbp], 0
	jmp	SHORT $LN4@clear_dest
$LN2@clear_dest:
	mov	eax, DWORD PTR n$1[rbp]
	inc	eax
	mov	DWORD PTR n$1[rbp], eax
$LN4@clear_dest:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR n$1[rbp], eax
	jge	SHORT $LN3@clear_dest
	movsxd	rax, DWORD PTR n$1[rbp]
	imul	rax, rax, 112				; 00000070H
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR tv75[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv75[rbp]
	call	??_GImGuiTableTempData@@QEAAPEAXI@Z
	jmp	SHORT $LN2@clear_dest
$LN3@clear_dest:
	mov	rcx, QWORD PTR this$[rbp]
	call	?clear@?$ImVector@UImGuiTableTempData@@@@QEAAXXZ ; ImVector<ImGuiTableTempData>::clear
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?clear_destruct@?$ImVector@UImGuiTableTempData@@@@QEAAXXZ ENDP ; ImVector<ImGuiTableTempData>::clear_destruct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@UImGuiTableTempData@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@UImGuiTableTempData@@@@QEAAXXZ PROC	; ImVector<ImGuiTableTempData>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@UImGuiTableTempData@@@@QEAAXXZ ENDP	; ImVector<ImGuiTableTempData>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImGuiTableTempData@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImGuiTableTempData@@@@QEAA@XZ PROC	; ImVector<ImGuiTableTempData>::~ImVector<ImGuiTableTempData>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImGuiTableTempData@@@@QEAA@XZ ENDP	; ImVector<ImGuiTableTempData>::~ImVector<ImGuiTableTempData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@UImGuiTableTempData@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@UImGuiTableTempData@@@@QEAA@XZ PROC	; ImVector<ImGuiTableTempData>::ImVector<ImGuiTableTempData>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@UImGuiTableTempData@@@@QEAA@XZ ENDP	; ImVector<ImGuiTableTempData>::ImVector<ImGuiTableTempData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?TryGetMapData@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z
_TEXT	SEGMENT
idx$ = 4
tv70 = 216
this$ = 256
n$ = 264
?TryGetMapData@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z PROC ; ImPool<ImGuiTable>::TryGetMapData, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 635
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	QWORD PTR tv70[rbp], rax
	mov	edx, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR tv70[rbp]
	call	??A?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAAEAUImGuiStoragePair@ImGuiStorage@@H@Z ; ImVector<ImGuiStorage::ImGuiStoragePair>::operator[]
	mov	eax, DWORD PTR [rax+8]
	mov	DWORD PTR idx$[rbp], eax
	cmp	DWORD PTR idx$[rbp], -1
	jne	SHORT $LN2@TryGetMapD
	xor	eax, eax
	jmp	SHORT $LN1@TryGetMapD
$LN2@TryGetMapD:
	mov	edx, DWORD PTR idx$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?GetByIndex@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z ; ImPool<ImGuiTable>::GetByIndex
$LN1@TryGetMapD:
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?TryGetMapData@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z ENDP ; ImPool<ImGuiTable>::TryGetMapData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetMapSize@?$ImPool@UImGuiTable@@@@QEBAHXZ
_TEXT	SEGMENT
this$ = 224
?GetMapSize@?$ImPool@UImGuiTable@@@@QEBAHXZ PROC	; ImPool<ImGuiTable>::GetMapSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 634
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+16]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetMapSize@?$ImPool@UImGuiTable@@@@QEBAHXZ ENDP	; ImPool<ImGuiTable>::GetMapSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetAliveCount@?$ImPool@UImGuiTable@@@@QEBAHXZ
_TEXT	SEGMENT
this$ = 224
?GetAliveCount@?$ImPool@UImGuiTable@@@@QEBAHXZ PROC	; ImPool<ImGuiTable>::GetAliveCount, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 632
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+36]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetAliveCount@?$ImPool@UImGuiTable@@@@QEBAHXZ ENDP	; ImPool<ImGuiTable>::GetAliveCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Clear@?$ImPool@UImGuiTable@@@@QEAAXXZ
_TEXT	SEGMENT
n$1 = 4
idx$2 = 36
tv83 = 248
tv75 = 248
tv88 = 256
this$ = 304
?Clear@?$ImPool@UImGuiTable@@@@QEAAXXZ PROC		; ImPool<ImGuiTable>::Clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 624
$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	DWORD PTR n$1[rbp], 0
	jmp	SHORT $LN4@Clear
$LN2@Clear:
	mov	eax, DWORD PTR n$1[rbp]
	inc	eax
	mov	DWORD PTR n$1[rbp], eax
$LN4@Clear:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+16]
	cmp	DWORD PTR n$1[rbp], eax
	jge	SHORT $LN3@Clear
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	QWORD PTR tv75[rbp], rax
	mov	edx, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR tv75[rbp]
	call	??A?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAAEAUImGuiStoragePair@ImGuiStorage@@H@Z ; ImVector<ImGuiStorage::ImGuiStoragePair>::operator[]
	mov	eax, DWORD PTR [rax+8]
	mov	DWORD PTR idx$2[rbp], eax
	cmp	DWORD PTR idx$2[rbp], -1
	je	SHORT $LN5@Clear
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv83[rbp], rax
	mov	edx, DWORD PTR idx$2[rbp]
	mov	rcx, QWORD PTR tv83[rbp]
	call	??A?$ImVector@UImGuiTable@@@@QEAAAEAUImGuiTable@@H@Z ; ImVector<ImGuiTable>::operator[]
	mov	QWORD PTR tv88[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv88[rbp]
	call	??_GImGuiTable@@QEAAPEAXI@Z
$LN5@Clear:
	jmp	SHORT $LN2@Clear
$LN3@Clear:
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rcx, rax
	call	?Clear@ImGuiStorage@@QEAAXXZ		; ImGuiStorage::Clear
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?clear@?$ImVector@UImGuiTable@@@@QEAAXXZ ; ImVector<ImGuiTable>::clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+36], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+32], 0
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
?Clear@?$ImPool@UImGuiTable@@@@QEAAXXZ ENDP		; ImPool<ImGuiTable>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetByIndex@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z
_TEXT	SEGMENT
tv69 = 192
this$ = 240
n$ = 248
?GetByIndex@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z PROC ; ImPool<ImGuiTable>::GetByIndex, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 620
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv69[rbp], rax
	mov	edx, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR tv69[rbp]
	call	??A?$ImVector@UImGuiTable@@@@QEAAAEAUImGuiTable@@H@Z ; ImVector<ImGuiTable>::operator[]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?GetByIndex@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z ENDP ; ImPool<ImGuiTable>::GetByIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImPool@UImGuiTable@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImPool@UImGuiTable@@@@QEAA@XZ PROC			; ImPool<ImGuiTable>::~ImPool<ImGuiTable>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 618
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	?Clear@?$ImPool@UImGuiTable@@@@QEAAXXZ	; ImPool<ImGuiTable>::Clear
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rcx, rax
	call	??1ImGuiStorage@@QEAA@XZ
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??1?$ImVector@UImGuiTable@@@@QEAA@XZ	; ImVector<ImGuiTable>::~ImVector<ImGuiTable>
	npad	1
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImPool@UImGuiTable@@@@QEAA@XZ ENDP			; ImPool<ImGuiTable>::~ImPool<ImGuiTable>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImPool@UImGuiTable@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImPool@UImGuiTable@@@@QEAA@XZ PROC			; ImPool<ImGuiTable>::ImPool<ImGuiTable>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 617
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$ImVector@UImGuiTable@@@@QEAA@XZ	; ImVector<ImGuiTable>::ImVector<ImGuiTable>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rcx, rax
	call	??0ImGuiStorage@@QEAA@XZ
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+36], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+32], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImPool@UImGuiTable@@@@QEAA@XZ ENDP			; ImPool<ImGuiTable>::ImPool<ImGuiTable>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
?dtor$0@?0???0?$ImPool@UImGuiTable@@@@QEAA@XZ@4HA PROC	; `ImPool<ImGuiTable>::ImPool<ImGuiTable>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$ImVector@UImGuiTable@@@@QEAA@XZ	; ImVector<ImGuiTable>::~ImVector<ImGuiTable>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$ImPool@UImGuiTable@@@@QEAA@XZ@4HA ENDP	; `ImPool<ImGuiTable>::ImPool<ImGuiTable>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@UImGuiTable@@@@QEAAAEAUImGuiTable@@H@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@UImGuiTable@@@@QEAAAEAUImGuiTable@@H@Z PROC ; ImVector<ImGuiTable>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1694
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1694				; 0000069eH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 520				; 00000208H
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@UImGuiTable@@@@QEAAAEAUImGuiTable@@H@Z ENDP ; ImVector<ImGuiTable>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@UImGuiTable@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@UImGuiTable@@@@QEAAXXZ PROC		; ImVector<ImGuiTable>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@UImGuiTable@@@@QEAAXXZ ENDP		; ImVector<ImGuiTable>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImGuiTable@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImGuiTable@@@@QEAA@XZ PROC		; ImVector<ImGuiTable>::~ImVector<ImGuiTable>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImGuiTable@@@@QEAA@XZ ENDP		; ImVector<ImGuiTable>::~ImVector<ImGuiTable>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@UImGuiTable@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@UImGuiTable@@@@QEAA@XZ PROC		; ImVector<ImGuiTable>::ImVector<ImGuiTable>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@UImGuiTable@@@@QEAA@XZ ENDP		; ImVector<ImGuiTable>::ImVector<ImGuiTable>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@E@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@E@@QEAAXH@Z PROC			; ImVector<unsigned char>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@E@@QEAAXH@Z ENDP			; ImVector<unsigned char>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$ImVector@E@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 224
new_size$ = 232
?resize@?$ImVector@E@@QEAAXH@Z PROC			; ImVector<unsigned char>::resize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1708
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_size$[rbp], eax
	jle	SHORT $LN2@resize
	mov	edx, DWORD PTR new_size$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@E@@QEBAHH@Z	; ImVector<unsigned char>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@E@@QEAAXH@Z		; ImVector<unsigned char>::reserve
$LN2@resize:
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_size$[rbp]
	mov	DWORD PTR [rax], ecx
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?resize@?$ImVector@E@@QEAAXH@Z ENDP			; ImVector<unsigned char>::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_grow_capacity@?$ImVector@E@@QEBAHH@Z
_TEXT	SEGMENT
new_capacity$ = 4
tv72 = 212
tv70 = 212
this$ = 256
sz$ = 264
?_grow_capacity@?$ImVector@E@@QEBAHH@Z PROC		; ImVector<unsigned char>::_grow_capacity, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1707
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+4], 0
	je	SHORT $LN3@grow_capac
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@grow_capac
$LN3@grow_capac:
	mov	DWORD PTR tv70[rbp], 8
$LN4@grow_capac:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR new_capacity$[rbp], eax
	mov	eax, DWORD PTR sz$[rbp]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jle	SHORT $LN5@grow_capac
	mov	eax, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	jmp	SHORT $LN6@grow_capac
$LN5@grow_capac:
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tv72[rbp], eax
$LN6@grow_capac:
	mov	eax, DWORD PTR tv72[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_grow_capacity@?$ImVector@E@@QEBAHH@Z ENDP		; ImVector<unsigned char>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@E@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@E@@QEAAXXZ PROC			; ImVector<unsigned char>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@E@@QEAAXXZ ENDP			; ImVector<unsigned char>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@E@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@E@@QEAA@XZ PROC				; ImVector<unsigned char>::~ImVector<unsigned char>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@E@@QEAA@XZ ENDP				; ImVector<unsigned char>::~ImVector<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@E@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@E@@QEAA@XZ PROC				; ImVector<unsigned char>::ImVector<unsigned char>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@E@@QEAA@XZ ENDP				; ImVector<unsigned char>::ImVector<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$ImVector@PEAUImGuiViewportP@@@@QEAAXAEBQEAUImGuiViewportP@@@Z
_TEXT	SEGMENT
this$ = 224
v$ = 232
?push_back@?$ImVector@PEAUImGuiViewportP@@@@QEAAXAEBQEAUImGuiViewportP@@@Z PROC ; ImVector<ImGuiViewportP *>::push_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1714
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN2@push_back
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@PEAUImGuiViewportP@@@@QEBAHH@Z ; ImVector<ImGuiViewportP *>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@PEAUImGuiViewportP@@@@QEAAXH@Z ; ImVector<ImGuiViewportP *>::reserve
$LN2@push_back:
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rdx, QWORD PTR v$[rbp]
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR [rcx+rax*8], rdx
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?push_back@?$ImVector@PEAUImGuiViewportP@@@@QEAAXAEBQEAUImGuiViewportP@@@Z ENDP ; ImVector<ImGuiViewportP *>::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@PEAUImGuiViewportP@@@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@PEAUImGuiViewportP@@@@QEAAXH@Z PROC	; ImVector<ImGuiViewportP *>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	shl	rax, 3
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	shl	rax, 3
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@PEAUImGuiViewportP@@@@QEAAXH@Z ENDP	; ImVector<ImGuiViewportP *>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_grow_capacity@?$ImVector@PEAUImGuiViewportP@@@@QEBAHH@Z
_TEXT	SEGMENT
new_capacity$ = 4
tv72 = 212
tv70 = 212
this$ = 256
sz$ = 264
?_grow_capacity@?$ImVector@PEAUImGuiViewportP@@@@QEBAHH@Z PROC ; ImVector<ImGuiViewportP *>::_grow_capacity, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1707
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+4], 0
	je	SHORT $LN3@grow_capac
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@grow_capac
$LN3@grow_capac:
	mov	DWORD PTR tv70[rbp], 8
$LN4@grow_capac:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR new_capacity$[rbp], eax
	mov	eax, DWORD PTR sz$[rbp]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jle	SHORT $LN5@grow_capac
	mov	eax, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	jmp	SHORT $LN6@grow_capac
$LN5@grow_capac:
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tv72[rbp], eax
$LN6@grow_capac:
	mov	eax, DWORD PTR tv72[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_grow_capacity@?$ImVector@PEAUImGuiViewportP@@@@QEBAHH@Z ENDP ; ImVector<ImGuiViewportP *>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z PROC ; ImVector<ImGuiViewportP *>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1694
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1694				; 0000069eH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	lea	rax, QWORD PTR [rcx+rax*8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z ENDP ; ImVector<ImGuiViewportP *>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear_delete@?$ImVector@PEAUImGuiViewportP@@@@QEAAXXZ
_TEXT	SEGMENT
n$1 = 4
this$ = 256
?clear_delete@?$ImVector@PEAUImGuiViewportP@@@@QEAAXXZ PROC ; ImVector<ImGuiViewportP *>::clear_delete, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1686
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	DWORD PTR n$1[rbp], 0
	jmp	SHORT $LN4@clear_dele
$LN2@clear_dele:
	mov	eax, DWORD PTR n$1[rbp]
	inc	eax
	mov	DWORD PTR n$1[rbp], eax
$LN4@clear_dele:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR n$1[rbp], eax
	jge	SHORT $LN3@clear_dele
	movsxd	rax, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rcx, QWORD PTR [rcx+rax*8]
	call	??$IM_DELETE@UImGuiViewportP@@@@YAXPEAUImGuiViewportP@@@Z ; IM_DELETE<ImGuiViewportP>
	jmp	SHORT $LN2@clear_dele
$LN3@clear_dele:
	mov	rcx, QWORD PTR this$[rbp]
	call	?clear@?$ImVector@PEAUImGuiViewportP@@@@QEAAXXZ ; ImVector<ImGuiViewportP *>::clear
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?clear_delete@?$ImVector@PEAUImGuiViewportP@@@@QEAAXXZ ENDP ; ImVector<ImGuiViewportP *>::clear_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@PEAUImGuiViewportP@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@PEAUImGuiViewportP@@@@QEAAXXZ PROC	; ImVector<ImGuiViewportP *>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@PEAUImGuiViewportP@@@@QEAAXXZ ENDP	; ImVector<ImGuiViewportP *>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ PROC	; ImVector<ImGuiViewportP *>::~ImVector<ImGuiViewportP *>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ ENDP	; ImVector<ImGuiViewportP *>::~ImVector<ImGuiViewportP *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ PROC	; ImVector<ImGuiViewportP *>::ImVector<ImGuiViewportP *>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@PEAUImGuiViewportP@@@@QEAA@XZ ENDP	; ImVector<ImGuiViewportP *>::ImVector<ImGuiViewportP *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pop_back@?$ImVector@UImGuiPopupData@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?pop_back@?$ImVector@UImGuiPopupData@@@@QEAAXXZ PROC	; ImVector<ImGuiPopupData>::pop_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1715
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@pop_back
	mov	r8d, 1715				; 000006b3H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@pop_back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?pop_back@?$ImVector@UImGuiPopupData@@@@QEAAXXZ ENDP	; ImVector<ImGuiPopupData>::pop_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$ImVector@UImGuiPopupData@@@@QEAAXAEBUImGuiPopupData@@@Z
_TEXT	SEGMENT
this$ = 224
v$ = 232
?push_back@?$ImVector@UImGuiPopupData@@@@QEAAXAEBUImGuiPopupData@@@Z PROC ; ImVector<ImGuiPopupData>::push_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1714
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 224				; 000000e0H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN2@push_back
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@UImGuiPopupData@@@@QEBAHH@Z ; ImVector<ImGuiPopupData>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@UImGuiPopupData@@@@QEAAXH@Z ; ImVector<ImGuiPopupData>::reserve
$LN2@push_back:
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 48				; 00000030H
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v$[rbp]
	mov	ecx, 48					; 00000030H
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+192]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?push_back@?$ImVector@UImGuiPopupData@@@@QEAAXAEBUImGuiPopupData@@@Z ENDP ; ImVector<ImGuiPopupData>::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@UImGuiPopupData@@@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@UImGuiPopupData@@@@QEAAXH@Z PROC	; ImVector<ImGuiPopupData>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	imul	rax, rax, 48				; 00000030H
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 48				; 00000030H
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@UImGuiPopupData@@@@QEAAXH@Z ENDP	; ImVector<ImGuiPopupData>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$ImVector@UImGuiPopupData@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 224
new_size$ = 232
?resize@?$ImVector@UImGuiPopupData@@@@QEAAXH@Z PROC	; ImVector<ImGuiPopupData>::resize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1708
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_size$[rbp], eax
	jle	SHORT $LN2@resize
	mov	edx, DWORD PTR new_size$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@UImGuiPopupData@@@@QEBAHH@Z ; ImVector<ImGuiPopupData>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@UImGuiPopupData@@@@QEAAXH@Z ; ImVector<ImGuiPopupData>::reserve
$LN2@resize:
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_size$[rbp]
	mov	DWORD PTR [rax], ecx
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?resize@?$ImVector@UImGuiPopupData@@@@QEAAXH@Z ENDP	; ImVector<ImGuiPopupData>::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_grow_capacity@?$ImVector@UImGuiPopupData@@@@QEBAHH@Z
_TEXT	SEGMENT
new_capacity$ = 4
tv72 = 212
tv70 = 212
this$ = 256
sz$ = 264
?_grow_capacity@?$ImVector@UImGuiPopupData@@@@QEBAHH@Z PROC ; ImVector<ImGuiPopupData>::_grow_capacity, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1707
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+4], 0
	je	SHORT $LN3@grow_capac
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@grow_capac
$LN3@grow_capac:
	mov	DWORD PTR tv70[rbp], 8
$LN4@grow_capac:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR new_capacity$[rbp], eax
	mov	eax, DWORD PTR sz$[rbp]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jle	SHORT $LN5@grow_capac
	mov	eax, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	jmp	SHORT $LN6@grow_capac
$LN5@grow_capac:
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tv72[rbp], eax
$LN6@grow_capac:
	mov	eax, DWORD PTR tv72[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_grow_capacity@?$ImVector@UImGuiPopupData@@@@QEBAHH@Z ENDP ; ImVector<ImGuiPopupData>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?back@?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@XZ
_TEXT	SEGMENT
this$ = 224
?back@?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@XZ PROC ; ImVector<ImGuiPopupData>::back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1703
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@back
	mov	r8d, 1703				; 000006a7H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cdqe
	imul	rax, rax, 48				; 00000030H
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?back@?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@XZ ENDP ; ImVector<ImGuiPopupData>::back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z PROC ; ImVector<ImGuiPopupData>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1694
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1694				; 0000069eH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 48				; 00000030H
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ENDP ; ImVector<ImGuiPopupData>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@UImGuiPopupData@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@UImGuiPopupData@@@@QEAAXXZ PROC	; ImVector<ImGuiPopupData>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@UImGuiPopupData@@@@QEAAXXZ ENDP	; ImVector<ImGuiPopupData>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImGuiPopupData@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImGuiPopupData@@@@QEAA@XZ PROC		; ImVector<ImGuiPopupData>::~ImVector<ImGuiPopupData>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImGuiPopupData@@@@QEAA@XZ ENDP		; ImVector<ImGuiPopupData>::~ImVector<ImGuiPopupData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@UImGuiPopupData@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@UImGuiPopupData@@@@QEAA@XZ PROC		; ImVector<ImGuiPopupData>::ImVector<ImGuiPopupData>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@UImGuiPopupData@@@@QEAA@XZ ENDP		; ImVector<ImGuiPopupData>::ImVector<ImGuiPopupData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pop_back@?$ImVector@UImGuiGroupData@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?pop_back@?$ImVector@UImGuiGroupData@@@@QEAAXXZ PROC	; ImVector<ImGuiGroupData>::pop_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1715
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@pop_back
	mov	r8d, 1715				; 000006b3H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@pop_back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?pop_back@?$ImVector@UImGuiGroupData@@@@QEAAXXZ ENDP	; ImVector<ImGuiGroupData>::pop_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@UImGuiGroupData@@@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@UImGuiGroupData@@@@QEAAXH@Z PROC	; ImVector<ImGuiGroupData>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	imul	rax, rax, 48				; 00000030H
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 48				; 00000030H
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@UImGuiGroupData@@@@QEAAXH@Z ENDP	; ImVector<ImGuiGroupData>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$ImVector@UImGuiGroupData@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 224
new_size$ = 232
?resize@?$ImVector@UImGuiGroupData@@@@QEAAXH@Z PROC	; ImVector<ImGuiGroupData>::resize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1708
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_size$[rbp], eax
	jle	SHORT $LN2@resize
	mov	edx, DWORD PTR new_size$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@UImGuiGroupData@@@@QEBAHH@Z ; ImVector<ImGuiGroupData>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@UImGuiGroupData@@@@QEAAXH@Z ; ImVector<ImGuiGroupData>::reserve
$LN2@resize:
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_size$[rbp]
	mov	DWORD PTR [rax], ecx
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?resize@?$ImVector@UImGuiGroupData@@@@QEAAXH@Z ENDP	; ImVector<ImGuiGroupData>::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_grow_capacity@?$ImVector@UImGuiGroupData@@@@QEBAHH@Z
_TEXT	SEGMENT
new_capacity$ = 4
tv72 = 212
tv70 = 212
this$ = 256
sz$ = 264
?_grow_capacity@?$ImVector@UImGuiGroupData@@@@QEBAHH@Z PROC ; ImVector<ImGuiGroupData>::_grow_capacity, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1707
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+4], 0
	je	SHORT $LN3@grow_capac
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@grow_capac
$LN3@grow_capac:
	mov	DWORD PTR tv70[rbp], 8
$LN4@grow_capac:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR new_capacity$[rbp], eax
	mov	eax, DWORD PTR sz$[rbp]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jle	SHORT $LN5@grow_capac
	mov	eax, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	jmp	SHORT $LN6@grow_capac
$LN5@grow_capac:
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tv72[rbp], eax
$LN6@grow_capac:
	mov	eax, DWORD PTR tv72[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_grow_capacity@?$ImVector@UImGuiGroupData@@@@QEBAHH@Z ENDP ; ImVector<ImGuiGroupData>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?back@?$ImVector@UImGuiGroupData@@@@QEAAAEAUImGuiGroupData@@XZ
_TEXT	SEGMENT
this$ = 224
?back@?$ImVector@UImGuiGroupData@@@@QEAAAEAUImGuiGroupData@@XZ PROC ; ImVector<ImGuiGroupData>::back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1703
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@back
	mov	r8d, 1703				; 000006a7H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cdqe
	imul	rax, rax, 48				; 00000030H
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?back@?$ImVector@UImGuiGroupData@@@@QEAAAEAUImGuiGroupData@@XZ ENDP ; ImVector<ImGuiGroupData>::back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@UImGuiGroupData@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@UImGuiGroupData@@@@QEAAXXZ PROC	; ImVector<ImGuiGroupData>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@UImGuiGroupData@@@@QEAAXXZ ENDP	; ImVector<ImGuiGroupData>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImGuiGroupData@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImGuiGroupData@@@@QEAA@XZ PROC		; ImVector<ImGuiGroupData>::~ImVector<ImGuiGroupData>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImGuiGroupData@@@@QEAA@XZ ENDP		; ImVector<ImGuiGroupData>::~ImVector<ImGuiGroupData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@UImGuiGroupData@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@UImGuiGroupData@@@@QEAA@XZ PROC		; ImVector<ImGuiGroupData>::ImVector<ImGuiGroupData>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@UImGuiGroupData@@@@QEAA@XZ ENDP		; ImVector<ImGuiGroupData>::ImVector<ImGuiGroupData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pop_back@?$ImVector@H@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?pop_back@?$ImVector@H@@QEAAXXZ PROC			; ImVector<int>::pop_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1715
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@pop_back
	mov	r8d, 1715				; 000006b3H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@pop_back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?pop_back@?$ImVector@H@@QEAAXXZ ENDP			; ImVector<int>::pop_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$ImVector@H@@QEAAXAEBH@Z
_TEXT	SEGMENT
this$ = 224
v$ = 232
?push_back@?$ImVector@H@@QEAAXAEBH@Z PROC		; ImVector<int>::push_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1714
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN2@push_back
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@H@@QEBAHH@Z	; ImVector<int>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@H@@QEAAXH@Z		; ImVector<int>::reserve
$LN2@push_back:
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rdx, QWORD PTR v$[rbp]
	mov	edx, DWORD PTR [rdx]
	mov	DWORD PTR [rcx+rax*4], edx
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?push_back@?$ImVector@H@@QEAAXAEBH@Z ENDP		; ImVector<int>::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@H@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@H@@QEAAXH@Z PROC			; ImVector<int>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	shl	rax, 2
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	shl	rax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@H@@QEAAXH@Z ENDP			; ImVector<int>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$ImVector@H@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 224
new_size$ = 232
?resize@?$ImVector@H@@QEAAXH@Z PROC			; ImVector<int>::resize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1708
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_size$[rbp], eax
	jle	SHORT $LN2@resize
	mov	edx, DWORD PTR new_size$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@H@@QEBAHH@Z	; ImVector<int>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@H@@QEAAXH@Z		; ImVector<int>::reserve
$LN2@resize:
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_size$[rbp]
	mov	DWORD PTR [rax], ecx
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?resize@?$ImVector@H@@QEAAXH@Z ENDP			; ImVector<int>::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_grow_capacity@?$ImVector@H@@QEBAHH@Z
_TEXT	SEGMENT
new_capacity$ = 4
tv72 = 212
tv70 = 212
this$ = 256
sz$ = 264
?_grow_capacity@?$ImVector@H@@QEBAHH@Z PROC		; ImVector<int>::_grow_capacity, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1707
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+4], 0
	je	SHORT $LN3@grow_capac
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@grow_capac
$LN3@grow_capac:
	mov	DWORD PTR tv70[rbp], 8
$LN4@grow_capac:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR new_capacity$[rbp], eax
	mov	eax, DWORD PTR sz$[rbp]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jle	SHORT $LN5@grow_capac
	mov	eax, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	jmp	SHORT $LN6@grow_capac
$LN5@grow_capac:
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tv72[rbp], eax
$LN6@grow_capac:
	mov	eax, DWORD PTR tv72[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_grow_capacity@?$ImVector@H@@QEBAHH@Z ENDP		; ImVector<int>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?back@?$ImVector@H@@QEAAAEAHXZ
_TEXT	SEGMENT
this$ = 224
?back@?$ImVector@H@@QEAAAEAHXZ PROC			; ImVector<int>::back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1703
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@back
	mov	r8d, 1703				; 000006a7H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cdqe
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	lea	rax, QWORD PTR [rcx+rax*4]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?back@?$ImVector@H@@QEAAAEAHXZ ENDP			; ImVector<int>::back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@H@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@H@@QEAAXXZ PROC			; ImVector<int>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@H@@QEAAXXZ ENDP			; ImVector<int>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@H@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@H@@QEAA@XZ PROC				; ImVector<int>::~ImVector<int>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@H@@QEAA@XZ ENDP				; ImVector<int>::~ImVector<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@H@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@H@@QEAA@XZ PROC				; ImVector<int>::ImVector<int>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@H@@QEAA@XZ ENDP				; ImVector<int>::ImVector<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pop_back@?$ImVector@UImGuiStyleMod@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?pop_back@?$ImVector@UImGuiStyleMod@@@@QEAAXXZ PROC	; ImVector<ImGuiStyleMod>::pop_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1715
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@pop_back
	mov	r8d, 1715				; 000006b3H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@pop_back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?pop_back@?$ImVector@UImGuiStyleMod@@@@QEAAXXZ ENDP	; ImVector<ImGuiStyleMod>::pop_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$ImVector@UImGuiStyleMod@@@@QEAAXAEBUImGuiStyleMod@@@Z
_TEXT	SEGMENT
this$ = 224
v$ = 232
?push_back@?$ImVector@UImGuiStyleMod@@@@QEAAXAEBUImGuiStyleMod@@@Z PROC ; ImVector<ImGuiStyleMod>::push_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1714
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 224				; 000000e0H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN2@push_back
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@UImGuiStyleMod@@@@QEBAHH@Z ; ImVector<ImGuiStyleMod>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@UImGuiStyleMod@@@@QEAAXH@Z ; ImVector<ImGuiStyleMod>::reserve
$LN2@push_back:
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v$[rbp]
	mov	ecx, 12
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+192]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?push_back@?$ImVector@UImGuiStyleMod@@@@QEAAXAEBUImGuiStyleMod@@@Z ENDP ; ImVector<ImGuiStyleMod>::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@UImGuiStyleMod@@@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@UImGuiStyleMod@@@@QEAAXH@Z PROC	; ImVector<ImGuiStyleMod>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	imul	rax, rax, 12
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@UImGuiStyleMod@@@@QEAAXH@Z ENDP	; ImVector<ImGuiStyleMod>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_grow_capacity@?$ImVector@UImGuiStyleMod@@@@QEBAHH@Z
_TEXT	SEGMENT
new_capacity$ = 4
tv72 = 212
tv70 = 212
this$ = 256
sz$ = 264
?_grow_capacity@?$ImVector@UImGuiStyleMod@@@@QEBAHH@Z PROC ; ImVector<ImGuiStyleMod>::_grow_capacity, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1707
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+4], 0
	je	SHORT $LN3@grow_capac
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@grow_capac
$LN3@grow_capac:
	mov	DWORD PTR tv70[rbp], 8
$LN4@grow_capac:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR new_capacity$[rbp], eax
	mov	eax, DWORD PTR sz$[rbp]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jle	SHORT $LN5@grow_capac
	mov	eax, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	jmp	SHORT $LN6@grow_capac
$LN5@grow_capac:
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tv72[rbp], eax
$LN6@grow_capac:
	mov	eax, DWORD PTR tv72[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_grow_capacity@?$ImVector@UImGuiStyleMod@@@@QEBAHH@Z ENDP ; ImVector<ImGuiStyleMod>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?back@?$ImVector@UImGuiStyleMod@@@@QEAAAEAUImGuiStyleMod@@XZ
_TEXT	SEGMENT
this$ = 224
?back@?$ImVector@UImGuiStyleMod@@@@QEAAAEAUImGuiStyleMod@@XZ PROC ; ImVector<ImGuiStyleMod>::back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1703
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@back
	mov	r8d, 1703				; 000006a7H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cdqe
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?back@?$ImVector@UImGuiStyleMod@@@@QEAAAEAUImGuiStyleMod@@XZ ENDP ; ImVector<ImGuiStyleMod>::back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@UImGuiStyleMod@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@UImGuiStyleMod@@@@QEAAXXZ PROC	; ImVector<ImGuiStyleMod>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@UImGuiStyleMod@@@@QEAAXXZ ENDP	; ImVector<ImGuiStyleMod>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImGuiStyleMod@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImGuiStyleMod@@@@QEAA@XZ PROC		; ImVector<ImGuiStyleMod>::~ImVector<ImGuiStyleMod>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImGuiStyleMod@@@@QEAA@XZ ENDP		; ImVector<ImGuiStyleMod>::~ImVector<ImGuiStyleMod>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@UImGuiStyleMod@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@UImGuiStyleMod@@@@QEAA@XZ PROC		; ImVector<ImGuiStyleMod>::ImVector<ImGuiStyleMod>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@UImGuiStyleMod@@@@QEAA@XZ ENDP		; ImVector<ImGuiStyleMod>::ImVector<ImGuiStyleMod>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pop_back@?$ImVector@UImGuiColorMod@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?pop_back@?$ImVector@UImGuiColorMod@@@@QEAAXXZ PROC	; ImVector<ImGuiColorMod>::pop_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1715
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@pop_back
	mov	r8d, 1715				; 000006b3H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@pop_back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?pop_back@?$ImVector@UImGuiColorMod@@@@QEAAXXZ ENDP	; ImVector<ImGuiColorMod>::pop_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$ImVector@UImGuiColorMod@@@@QEAAXAEBUImGuiColorMod@@@Z
_TEXT	SEGMENT
this$ = 224
v$ = 232
?push_back@?$ImVector@UImGuiColorMod@@@@QEAAXAEBUImGuiColorMod@@@Z PROC ; ImVector<ImGuiColorMod>::push_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1714
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 224				; 000000e0H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN2@push_back
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@UImGuiColorMod@@@@QEBAHH@Z ; ImVector<ImGuiColorMod>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@UImGuiColorMod@@@@QEAAXH@Z ; ImVector<ImGuiColorMod>::reserve
$LN2@push_back:
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 20
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v$[rbp]
	mov	ecx, 20
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+192]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?push_back@?$ImVector@UImGuiColorMod@@@@QEAAXAEBUImGuiColorMod@@@Z ENDP ; ImVector<ImGuiColorMod>::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@UImGuiColorMod@@@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@UImGuiColorMod@@@@QEAAXH@Z PROC	; ImVector<ImGuiColorMod>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	imul	rax, rax, 20
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 20
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@UImGuiColorMod@@@@QEAAXH@Z ENDP	; ImVector<ImGuiColorMod>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_grow_capacity@?$ImVector@UImGuiColorMod@@@@QEBAHH@Z
_TEXT	SEGMENT
new_capacity$ = 4
tv72 = 212
tv70 = 212
this$ = 256
sz$ = 264
?_grow_capacity@?$ImVector@UImGuiColorMod@@@@QEBAHH@Z PROC ; ImVector<ImGuiColorMod>::_grow_capacity, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1707
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+4], 0
	je	SHORT $LN3@grow_capac
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@grow_capac
$LN3@grow_capac:
	mov	DWORD PTR tv70[rbp], 8
$LN4@grow_capac:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR new_capacity$[rbp], eax
	mov	eax, DWORD PTR sz$[rbp]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jle	SHORT $LN5@grow_capac
	mov	eax, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	jmp	SHORT $LN6@grow_capac
$LN5@grow_capac:
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tv72[rbp], eax
$LN6@grow_capac:
	mov	eax, DWORD PTR tv72[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_grow_capacity@?$ImVector@UImGuiColorMod@@@@QEBAHH@Z ENDP ; ImVector<ImGuiColorMod>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?back@?$ImVector@UImGuiColorMod@@@@QEAAAEAUImGuiColorMod@@XZ
_TEXT	SEGMENT
this$ = 224
?back@?$ImVector@UImGuiColorMod@@@@QEAAAEAUImGuiColorMod@@XZ PROC ; ImVector<ImGuiColorMod>::back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1703
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@back
	mov	r8d, 1703				; 000006a7H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cdqe
	imul	rax, rax, 20
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?back@?$ImVector@UImGuiColorMod@@@@QEAAAEAUImGuiColorMod@@XZ ENDP ; ImVector<ImGuiColorMod>::back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@UImGuiColorMod@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@UImGuiColorMod@@@@QEAAXXZ PROC	; ImVector<ImGuiColorMod>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@UImGuiColorMod@@@@QEAAXXZ ENDP	; ImVector<ImGuiColorMod>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImGuiColorMod@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImGuiColorMod@@@@QEAA@XZ PROC		; ImVector<ImGuiColorMod>::~ImVector<ImGuiColorMod>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImGuiColorMod@@@@QEAA@XZ ENDP		; ImVector<ImGuiColorMod>::~ImVector<ImGuiColorMod>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@UImGuiColorMod@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@UImGuiColorMod@@@@QEAA@XZ PROC		; ImVector<ImGuiColorMod>::ImVector<ImGuiColorMod>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@UImGuiColorMod@@@@QEAA@XZ ENDP		; ImVector<ImGuiColorMod>::ImVector<ImGuiColorMod>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@?$ImVector@PEAUImGuiWindow@@@@QEAAPEAPEAUImGuiWindow@@PEBQEAU2@AEBQEAU2@@Z
_TEXT	SEGMENT
off$ = 8
tv139 = 216
this$ = 256
it$ = 264
v$ = 272
?insert@?$ImVector@PEAUImGuiWindow@@@@QEAAPEAPEAUImGuiWindow@@PEBQEAU2@AEBQEAU2@@Z PROC ; ImVector<ImGuiWindow *>::insert, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1720
$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	cmp	QWORD PTR it$[rbp], rax
	jb	SHORT $LN5@insert
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	lea	rax, QWORD PTR [rcx+rax*8]
	cmp	QWORD PTR it$[rbp], rax
	jbe	SHORT $LN6@insert
$LN5@insert:
	mov	r8d, 1720				; 000006b8H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EA@INDCAEFK@?$AAi?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@insert:
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR it$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 3
	mov	QWORD PTR off$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN2@insert
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@PEAUImGuiWindow@@@@QEBAHH@Z ; ImVector<ImGuiWindow *>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z ; ImVector<ImGuiWindow *>::reserve
$LN2@insert:
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	cmp	QWORD PTR off$[rbp], rax
	jge	SHORT $LN3@insert
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	sub	rax, QWORD PTR off$[rbp]
	shl	rax, 3
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rdx, QWORD PTR off$[rbp]
	lea	rcx, QWORD PTR [rcx+rdx*8]
	mov	rdx, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rdx+8]
	mov	r8, QWORD PTR off$[rbp]
	lea	rdx, QWORD PTR [rdx+r8*8+8]
	mov	QWORD PTR tv139[rbp], rdx
	mov	r8, rax
	mov	rdx, rcx
	mov	rax, QWORD PTR tv139[rbp]
	mov	rcx, rax
	call	memmove
$LN3@insert:
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR off$[rbp]
	mov	rdx, QWORD PTR v$[rbp]
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR [rax+rcx*8], rdx
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR off$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?insert@?$ImVector@PEAUImGuiWindow@@@@QEAAPEAPEAUImGuiWindow@@PEBQEAU2@AEBQEAU2@@Z ENDP ; ImVector<ImGuiWindow *>::insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_front@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z
_TEXT	SEGMENT
this$ = 224
v$ = 232
?push_front@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z PROC ; ImVector<ImGuiWindow *>::push_front, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1716
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jne	SHORT $LN2@push_front
	mov	rdx, QWORD PTR v$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?push_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z ; ImVector<ImGuiWindow *>::push_back
	jmp	SHORT $LN3@push_front
$LN2@push_front:
	mov	r8, QWORD PTR v$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR this$[rbp]
	call	?insert@?$ImVector@PEAUImGuiWindow@@@@QEAAPEAPEAUImGuiWindow@@PEBQEAU2@AEBQEAU2@@Z ; ImVector<ImGuiWindow *>::insert
$LN3@push_front:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?push_front@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z ENDP ; ImVector<ImGuiWindow *>::push_front
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pop_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?pop_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ PROC	; ImVector<ImGuiWindow *>::pop_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1715
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@pop_back
	mov	r8d, 1715				; 000006b3H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@pop_back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?pop_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ ENDP	; ImVector<ImGuiWindow *>::pop_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z
_TEXT	SEGMENT
this$ = 224
v$ = 232
?push_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z PROC ; ImVector<ImGuiWindow *>::push_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1714
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN2@push_back
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@PEAUImGuiWindow@@@@QEBAHH@Z ; ImVector<ImGuiWindow *>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z ; ImVector<ImGuiWindow *>::reserve
$LN2@push_back:
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rdx, QWORD PTR v$[rbp]
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR [rcx+rax*8], rdx
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?push_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z ENDP ; ImVector<ImGuiWindow *>::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z PROC	; ImVector<ImGuiWindow *>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	shl	rax, 3
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	shl	rax, 3
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z ENDP	; ImVector<ImGuiWindow *>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 224
new_size$ = 232
?resize@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z PROC	; ImVector<ImGuiWindow *>::resize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1708
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_size$[rbp], eax
	jle	SHORT $LN2@resize
	mov	edx, DWORD PTR new_size$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@PEAUImGuiWindow@@@@QEBAHH@Z ; ImVector<ImGuiWindow *>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z ; ImVector<ImGuiWindow *>::reserve
$LN2@resize:
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_size$[rbp]
	mov	DWORD PTR [rax], ecx
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?resize@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z ENDP	; ImVector<ImGuiWindow *>::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_grow_capacity@?$ImVector@PEAUImGuiWindow@@@@QEBAHH@Z
_TEXT	SEGMENT
new_capacity$ = 4
tv72 = 212
tv70 = 212
this$ = 256
sz$ = 264
?_grow_capacity@?$ImVector@PEAUImGuiWindow@@@@QEBAHH@Z PROC ; ImVector<ImGuiWindow *>::_grow_capacity, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1707
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+4], 0
	je	SHORT $LN3@grow_capac
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@grow_capac
$LN3@grow_capac:
	mov	DWORD PTR tv70[rbp], 8
$LN4@grow_capac:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR new_capacity$[rbp], eax
	mov	eax, DWORD PTR sz$[rbp]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jle	SHORT $LN5@grow_capac
	mov	eax, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	jmp	SHORT $LN6@grow_capac
$LN5@grow_capac:
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tv72[rbp], eax
$LN6@grow_capac:
	mov	eax, DWORD PTR tv72[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_grow_capacity@?$ImVector@PEAUImGuiWindow@@@@QEBAHH@Z ENDP ; ImVector<ImGuiWindow *>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?swap@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEAU1@@Z
_TEXT	SEGMENT
rhs_size$ = 4
rhs_cap$ = 36
rhs_data$ = 72
this$ = 320
rhs$ = 328
?swap@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEAU1@@Z PROC	; ImVector<ImGuiWindow *>::swap, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1705
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR rhs$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR rhs_size$[rbp], eax
	mov	rax, QWORD PTR rhs$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR rhs_size$[rbp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR rhs$[rbp]
	mov	eax, DWORD PTR [rax+4]
	mov	DWORD PTR rhs_cap$[rbp], eax
	mov	rax, QWORD PTR rhs$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR rhs_cap$[rbp]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR rhs$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR rhs_data$[rbp], rax
	mov	rax, QWORD PTR rhs$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR rhs_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?swap@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEAU1@@Z ENDP	; ImVector<ImGuiWindow *>::swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?back@?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@XZ
_TEXT	SEGMENT
this$ = 224
?back@?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@XZ PROC ; ImVector<ImGuiWindow *>::back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1703
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@back
	mov	r8d, 1703				; 000006a7H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cdqe
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	lea	rax, QWORD PTR [rcx+rax*8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?back@?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@XZ ENDP ; ImVector<ImGuiWindow *>::back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z PROC ; ImVector<ImGuiWindow *>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1694
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1694				; 0000069eH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	lea	rax, QWORD PTR [rcx+rax*8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ENDP ; ImVector<ImGuiWindow *>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@?$ImVector@PEAUImGuiWindow@@@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 192
this$ = 240
?empty@?$ImVector@PEAUImGuiWindow@@@@QEBA_NXZ PROC	; ImVector<ImGuiWindow *>::empty, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1689
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv66[rbp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv66[rbp], 0
$LN4@empty:
	movzx	eax, BYTE PTR tv66[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?empty@?$ImVector@PEAUImGuiWindow@@@@QEBA_NXZ ENDP	; ImVector<ImGuiWindow *>::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear_delete@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ
_TEXT	SEGMENT
n$1 = 4
this$ = 256
?clear_delete@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ PROC ; ImVector<ImGuiWindow *>::clear_delete, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1686
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	DWORD PTR n$1[rbp], 0
	jmp	SHORT $LN4@clear_dele
$LN2@clear_dele:
	mov	eax, DWORD PTR n$1[rbp]
	inc	eax
	mov	DWORD PTR n$1[rbp], eax
$LN4@clear_dele:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR n$1[rbp], eax
	jge	SHORT $LN3@clear_dele
	movsxd	rax, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rcx, QWORD PTR [rcx+rax*8]
	call	??$IM_DELETE@UImGuiWindow@@@@YAXPEAUImGuiWindow@@@Z ; IM_DELETE<ImGuiWindow>
	jmp	SHORT $LN2@clear_dele
$LN3@clear_dele:
	mov	rcx, QWORD PTR this$[rbp]
	call	?clear@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ ; ImVector<ImGuiWindow *>::clear
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?clear_delete@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ ENDP ; ImVector<ImGuiWindow *>::clear_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ PROC	; ImVector<ImGuiWindow *>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ ENDP	; ImVector<ImGuiWindow *>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ PROC		; ImVector<ImGuiWindow *>::~ImVector<ImGuiWindow *>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ ENDP		; ImVector<ImGuiWindow *>::~ImVector<ImGuiWindow *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ PROC		; ImVector<ImGuiWindow *>::ImVector<ImGuiWindow *>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@PEAUImGuiWindow@@@@QEAA@XZ ENDP		; ImVector<ImGuiWindow *>::ImVector<ImGuiWindow *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CompareWithCurrentState@ImGuiStackSizes@@QEAAXXZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
this$ = 288
?CompareWithCurrentState@ImGuiStackSizes@@QEAAXXZ PROC	; ImGuiStackSizes::CompareWithCurrentState, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7332
$LN17:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7333
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7334
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7339
	mov	rax, QWORD PTR this$[rbp]
	movsx	eax, WORD PTR [rax]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	eax, DWORD PTR [rcx+200]
	jne	SHORT $LN3@CompareWit
	lea	rax, OFFSET FLAT:??_C@_0CL@ILEOFLMG@PushID?1PopID?5or?5TreeNode?1TreePo@
	test	rax, rax
	jne	SHORT $LN4@CompareWit
$LN3@CompareWit:
	mov	eax, DWORD PTR ?__LINE__Var@?0??CompareWithCurrentState@ImGuiStackSizes@@QEAAXXZ@4JA
	add	eax, 7
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1KM@GPENMPEF@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAI?$AAD?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?5?$AA?$DN@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@CompareWit:
; Line 7343
	mov	rax, QWORD PTR this$[rbp]
	movsx	eax, WORD PTR [rax+10]
	mov	rcx, QWORD PTR g$[rbp]
	cmp	eax, DWORD PTR [rcx+7560]
	jne	SHORT $LN5@CompareWit
	lea	rax, OFFSET FLAT:??_C@_0BO@DCHDJEI@BeginGroup?1EndGroup?5Mismatch?$CB@
	test	rax, rax
	jne	SHORT $LN6@CompareWit
$LN5@CompareWit:
	mov	eax, DWORD PTR ?__LINE__Var@?0??CompareWithCurrentState@ImGuiStackSizes@@QEAAXXZ@4JA
	add	eax, 11
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1JC@FNBHEOLL@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAG?$AAr?$AAo?$AAu?$AAp?$AAS?$AAt?$AAa?$AAc@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@CompareWit:
; Line 7344
	mov	rax, QWORD PTR this$[rbp]
	movsx	eax, WORD PTR [rax+12]
	mov	rcx, QWORD PTR g$[rbp]
	cmp	eax, DWORD PTR [rcx+7592]
	jne	SHORT $LN7@CompareWit
	lea	rax, OFFSET FLAT:??_C@_0DD@CEJDOFG@BeginPopup?1EndPopup?5or?5BeginMen@
	test	rax, rax
	jne	SHORT $LN8@CompareWit
$LN7@CompareWit:
	mov	eax, DWORD PTR ?__LINE__Var@?0??CompareWithCurrentState@ImGuiStackSizes@@QEAAXXZ@4JA
	add	eax, 12
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1NA@IJOEJOEN@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAB?$AAe?$AAg?$AAi?$AAn?$AAP?$AAo?$AAp?$AAu@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN8@CompareWit:
; Line 7345
	mov	rax, QWORD PTR this$[rbp]
	movsx	eax, WORD PTR [rax+2]
	mov	rcx, QWORD PTR g$[rbp]
	cmp	eax, DWORD PTR [rcx+7480]
	jl	SHORT $LN9@CompareWit
	lea	rax, OFFSET FLAT:??_C@_0CH@CECAGKKJ@PushStyleColor?1PopStyleColor?5Mi@
	test	rax, rax
	jne	SHORT $LN10@CompareWit
$LN9@CompareWit:
	mov	eax, DWORD PTR ?__LINE__Var@?0??CompareWithCurrentState@ImGuiStackSizes@@QEAAXXZ@4JA
	add	eax, 13
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1KE@NCANFJNK@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAC?$AAo?$AAl?$AAo?$AAr?$AAS?$AAt?$AAa?$AAc@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN10@CompareWit:
; Line 7346
	mov	rax, QWORD PTR this$[rbp]
	movsx	eax, WORD PTR [rax+4]
	mov	rcx, QWORD PTR g$[rbp]
	cmp	eax, DWORD PTR [rcx+7496]
	jl	SHORT $LN11@CompareWit
	lea	rax, OFFSET FLAT:??_C@_0CD@DKPEIHNP@PushStyleVar?1PopStyleVar?5Mismat@
	test	rax, rax
	jne	SHORT $LN12@CompareWit
$LN11@CompareWit:
	mov	eax, DWORD PTR ?__LINE__Var@?0??CompareWithCurrentState@ImGuiStackSizes@@QEAAXXZ@4JA
	add	eax, 14
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1KI@DHADCEOH@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAS?$AAt?$AAy?$AAl?$AAe?$AAV?$AAa?$AAr?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN12@CompareWit:
; Line 7347
	mov	rax, QWORD PTR this$[rbp]
	movsx	eax, WORD PTR [rax+6]
	mov	rcx, QWORD PTR g$[rbp]
	cmp	eax, DWORD PTR [rcx+7512]
	jl	SHORT $LN13@CompareWit
	lea	rax, OFFSET FLAT:??_C@_0BL@JNELFKGN@PushFont?1PopFont?5Mismatch?$CB@
	test	rax, rax
	jne	SHORT $LN14@CompareWit
$LN13@CompareWit:
	mov	eax, DWORD PTR ?__LINE__Var@?0??CompareWithCurrentState@ImGuiStackSizes@@QEAAXXZ@4JA
	add	eax, 15
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1II@EKMLEPAG@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAF?$AAo?$AAn?$AAt?$AAS?$AAt?$AAa?$AAc?$AAk@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN14@CompareWit:
; Line 7348
	mov	rax, QWORD PTR this$[rbp]
	movsx	eax, WORD PTR [rax+8]
	mov	rcx, QWORD PTR g$[rbp]
	cmp	eax, DWORD PTR [rcx+7528]
	jne	SHORT $LN15@CompareWit
	lea	rax, OFFSET FLAT:??_C@_0CH@BLGIKBOK@PushFocusScope?1PopFocusScope?5Mi@
	test	rax, rax
	jne	SHORT $LN16@CompareWit
$LN15@CompareWit:
	mov	eax, DWORD PTR ?__LINE__Var@?0??CompareWithCurrentState@ImGuiStackSizes@@QEAAXXZ@4JA
	add	eax, 16
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1LI@DNMDNCBF@?$AAS?$AAi?$AAz?$AAe?$AAO?$AAf?$AAF?$AAo?$AAc?$AAu?$AAs?$AAS?$AAc?$AAo?$AAp@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN16@CompareWit:
; Line 7349
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?CompareWithCurrentState@ImGuiStackSizes@@QEAAXXZ ENDP	; ImGuiStackSizes::CompareWithCurrentState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetToCurrentState@ImGuiStackSizes@@QEAAXXZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
this$ = 288
?SetToCurrentState@ImGuiStackSizes@@QEAAXXZ PROC	; ImGuiStackSizes::SetToCurrentState, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7318
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7319
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7320
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7321
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movzx	ecx, WORD PTR [rcx+200]
	mov	WORD PTR [rax], cx
; Line 7322
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	ecx, WORD PTR [rcx+7480]
	mov	WORD PTR [rax+2], cx
; Line 7323
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	ecx, WORD PTR [rcx+7496]
	mov	WORD PTR [rax+4], cx
; Line 7324
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	ecx, WORD PTR [rcx+7512]
	mov	WORD PTR [rax+6], cx
; Line 7325
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	ecx, WORD PTR [rcx+7528]
	mov	WORD PTR [rax+8], cx
; Line 7326
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	ecx, WORD PTR [rcx+7560]
	mov	WORD PTR [rax+10], cx
; Line 7327
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	ecx, WORD PTR [rcx+7592]
	mov	WORD PTR [rax+12], cx
; Line 7328
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?SetToCurrentState@ImGuiStackSizes@@QEAAXXZ ENDP	; ImGuiStackSizes::SetToCurrentState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiStackSizes@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiStackSizes@@QEAA@XZ PROC			; ImGuiStackSizes::ImGuiStackSizes, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1359
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	ecx, 14
	rep stosb
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiStackSizes@@QEAA@XZ ENDP			; ImGuiStackSizes::ImGuiStackSizes
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiMetricsConfig@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiMetricsConfig@@QEAA@XZ PROC			; ImGuiMetricsConfig::ImGuiMetricsConfig, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1337
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
; Line 1339
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax], 0
; Line 1340
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+1], 0
; Line 1341
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+2], 0
; Line 1342
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+3], 1
; Line 1343
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+4], 1
; Line 1344
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+8], -1
; Line 1345
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+12], -1
; Line 1346
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiMetricsConfig@@QEAA@XZ ENDP			; ImGuiMetricsConfig::ImGuiMetricsConfig
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiSettingsHandler@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiSettingsHandler@@QEAA@XZ PROC			; ImGuiSettingsHandler::ImGuiSettingsHandler, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1320
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	ecx, 72					; 00000048H
	rep stosb
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiSettingsHandler@@QEAA@XZ ENDP			; ImGuiSettingsHandler::ImGuiSettingsHandler
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetName@ImGuiWindowSettings@@QEAAPEADXZ
_TEXT	SEGMENT
this$ = 224
?GetName@ImGuiWindowSettings@@QEAAPEADXZ PROC		; ImGuiWindowSettings::GetName, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1305
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetName@ImGuiWindowSettings@@QEAAPEADXZ ENDP		; ImGuiWindowSettings::GetName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiWindowSettings@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiWindowSettings@@QEAA@XZ PROC			; ImGuiWindowSettings::ImGuiWindowSettings, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1304
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 4
	mov	rcx, rax
	call	??0ImVec2ih@@QEAA@XZ			; ImVec2ih::ImVec2ih
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??0ImVec2ih@@QEAA@XZ			; ImVec2ih::ImVec2ih
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	ecx, 16
	rep stosb
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiWindowSettings@@QEAA@XZ ENDP			; ImGuiWindowSettings::ImGuiWindowSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$IM_DELETE@UImDrawList@@@@YAXPEAUImDrawList@@@Z
_TEXT	SEGMENT
p$ = 224
??$IM_DELETE@UImDrawList@@@@YAXPEAUImDrawList@@@Z PROC	; IM_DELETE<ImDrawList>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1653
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	QWORD PTR p$[rbp], 0
	je	SHORT $LN2@IM_DELETE
	xor	edx, edx
	mov	rcx, QWORD PTR p$[rbp]
	call	??_GImDrawList@@QEAAPEAXI@Z
	mov	rcx, QWORD PTR p$[rbp]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN2@IM_DELETE:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$IM_DELETE@UImDrawList@@@@YAXPEAUImDrawList@@@Z ENDP	; IM_DELETE<ImDrawList>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GImGuiViewportP@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GImGuiViewportP@@QEAAPEAXI@Z PROC			; ImGuiViewportP::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ImGuiViewportP@@QEAA@XZ		; ImGuiViewportP::~ImGuiViewportP
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 176				; 000000b0H
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_GImGuiViewportP@@QEAAPEAXI@Z ENDP			; ImGuiViewportP::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetWorkRect@ImGuiViewportP@@QEBA?AUImRect@@XZ
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
?GetWorkRect@ImGuiViewportP@@QEBA?AUImRect@@XZ PROC	; ImGuiViewportP::GetWorkRect, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1285
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+24]
	addss	xmm0, DWORD PTR [rcx+32]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+20]
	addss	xmm1, DWORD PTR [rcx+28]
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm2, DWORD PTR [rax+24]
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+20]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetWorkRect@ImGuiViewportP@@QEBA?AUImRect@@XZ ENDP	; ImGuiViewportP::GetWorkRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetMainRect@ImGuiViewportP@@QEBA?AUImRect@@XZ
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
?GetMainRect@ImGuiViewportP@@QEBA?AUImRect@@XZ PROC	; ImGuiViewportP::GetMainRect, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1284
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	addss	xmm0, DWORD PTR [rcx+16]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	addss	xmm1, DWORD PTR [rcx+12]
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm2, DWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetMainRect@ImGuiViewportP@@QEBA?AUImRect@@XZ ENDP	; ImGuiViewportP::GetMainRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?UpdateWorkRect@ImGuiViewportP@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
this$ = 288
?UpdateWorkRect@ImGuiViewportP@@QEAAXXZ PROC		; ImGuiViewportP::UpdateWorkRect, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1281
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 144				; 00000090H
	mov	r8, rax
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?CalcWorkRectPos@ImGuiViewportP@@QEBA?AUImVec2@@AEBU2@@Z ; ImGuiViewportP::CalcWorkRectPos
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+20], rax
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 152				; 00000098H
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 144				; 00000090H
	mov	r9, rax
	mov	r8, rcx
	lea	rdx, QWORD PTR $T2[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?CalcWorkRectSize@ImGuiViewportP@@QEBA?AUImVec2@@AEBU2@0@Z ; ImGuiViewportP::CalcWorkRectSize
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+28], rax
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?UpdateWorkRect@ImGuiViewportP@@QEAAXXZ ENDP		; ImGuiViewportP::UpdateWorkRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CalcWorkRectSize@ImGuiViewportP@@QEBA?AUImVec2@@AEBU2@0@Z
_TEXT	SEGMENT
tv129 = 192
tv95 = 196
this$ = 240
__$ReturnUdt$ = 248
off_min$ = 256
off_max$ = 264
?CalcWorkRectSize@ImGuiViewportP@@QEBA?AUImVec2@@AEBU2@0@Z PROC ; ImGuiViewportP::CalcWorkRectSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1280
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR off_min$[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	subss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR off_max$[rbp]
	addss	xmm0, DWORD PTR [rax+4]
	movaps	xmm1, xmm0
	xorps	xmm0, xmm0
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR tv129[rbp], xmm0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR off_min$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	subss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR off_max$[rbp]
	addss	xmm0, DWORD PTR [rax]
	movaps	xmm1, xmm0
	xorps	xmm0, xmm0
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR tv95[rbp], xmm0
	movss	xmm2, DWORD PTR tv129[rbp]
	movss	xmm1, DWORD PTR tv95[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?CalcWorkRectSize@ImGuiViewportP@@QEBA?AUImVec2@@AEBU2@0@Z ENDP ; ImGuiViewportP::CalcWorkRectSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CalcWorkRectPos@ImGuiViewportP@@QEBA?AUImVec2@@AEBU2@@Z
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
off_min$ = 240
?CalcWorkRectPos@ImGuiViewportP@@QEBA?AUImVec2@@AEBU2@@Z PROC ; ImGuiViewportP::CalcWorkRectPos, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1279
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR off_min$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	addss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR off_min$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	addss	xmm1, DWORD PTR [rcx]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?CalcWorkRectPos@ImGuiViewportP@@QEBA?AUImVec2@@AEBU2@@Z ENDP ; ImGuiViewportP::CalcWorkRectPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ImGuiViewportP@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1ImGuiViewportP@@QEAA@XZ PROC				; ImGuiViewportP::~ImGuiViewportP, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1276
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	eax, 8
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rcx+rax+48], 0
	je	SHORT $LN2@ImGuiViewp
	mov	eax, 8
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+rax+48]
	call	??$IM_DELETE@UImDrawList@@@@YAXPEAUImDrawList@@@Z ; IM_DELETE<ImDrawList>
$LN2@ImGuiViewp:
	mov	eax, 8
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rcx+rax+48], 0
	je	SHORT $LN3@ImGuiViewp
	mov	eax, 8
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+rax+48]
	call	??$IM_DELETE@UImDrawList@@@@YAXPEAUImDrawList@@@Z ; IM_DELETE<ImDrawList>
$LN3@ImGuiViewp:
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 112				; 00000070H
	mov	rcx, rax
	call	??1ImDrawDataBuilder@@QEAA@XZ
	npad	1
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1ImGuiViewportP@@QEAA@XZ ENDP				; ImGuiViewportP::~ImGuiViewportP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiViewportP@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiViewportP@@QEAA@XZ PROC				; ImGuiViewportP::ImGuiViewportP, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1275
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0ImGuiViewport@@QEAA@XZ		; ImGuiViewport::ImGuiViewport
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 64					; 00000040H
	mov	rcx, rax
	call	??0ImDrawData@@QEAA@XZ			; ImDrawData::ImDrawData
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 112				; 00000070H
	mov	rcx, rax
	call	??0ImDrawDataBuilder@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 144				; 00000090H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 152				; 00000098H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 160				; 000000a0H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 168				; 000000a8H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+rax+36], -1
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+rax+36], -1
	mov	eax, 8
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+rax+48], 0
	mov	eax, 8
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+rax+48], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiViewportP@@QEAA@XZ ENDP				; ImGuiViewportP::ImGuiViewportP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
?dtor$0@?0???0ImGuiViewportP@@QEAA@XZ@4HA PROC		; `ImGuiViewportP::ImGuiViewportP'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 112				; 00000070H
	call	??1ImDrawDataBuilder@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0ImGuiViewportP@@QEAA@XZ@4HA ENDP		; `ImGuiViewportP::ImGuiViewportP'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GImGuiOldColumns@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GImGuiOldColumns@@QEAAPEAXI@Z PROC			; ImGuiOldColumns::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ImGuiOldColumns@@QEAA@XZ
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 136				; 00000088H
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_GImGuiOldColumns@@QEAAPEAXI@Z ENDP			; ImGuiOldColumns::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ImGuiOldColumns@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1ImGuiOldColumns@@QEAA@XZ PROC			; ImGuiOldColumns::~ImGuiOldColumns, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 112				; 00000070H
	mov	rcx, rax
	call	??1ImDrawListSplitter@@QEAA@XZ		; ImDrawListSplitter::~ImDrawListSplitter
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 96					; 00000060H
	mov	rcx, rax
	call	??1?$ImVector@UImGuiOldColumnData@@@@QEAA@XZ ; ImVector<ImGuiOldColumnData>::~ImVector<ImGuiOldColumnData>
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1ImGuiOldColumns@@QEAA@XZ ENDP			; ImGuiOldColumns::~ImGuiOldColumns
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@UImGuiOldColumnData@@@@QEAAAEAUImGuiOldColumnData@@H@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@UImGuiOldColumnData@@@@QEAAAEAUImGuiOldColumnData@@H@Z PROC ; ImVector<ImGuiOldColumnData>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1694
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1694				; 0000069eH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 28
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@UImGuiOldColumnData@@@@QEAAAEAUImGuiOldColumnData@@H@Z ENDP ; ImVector<ImGuiOldColumnData>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImGuiOldColumnData@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImGuiOldColumnData@@@@QEAA@XZ PROC	; ImVector<ImGuiOldColumnData>::~ImVector<ImGuiOldColumnData>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImGuiOldColumnData@@@@QEAA@XZ ENDP	; ImVector<ImGuiOldColumnData>::~ImVector<ImGuiOldColumnData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiNextItemData@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiNextItemData@@QEAA@XZ PROC			; ImGuiNextItemData::ImGuiNextItemData, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1166
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	ecx, 20
	rep stosb
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiNextItemData@@QEAA@XZ ENDP			; ImGuiNextItemData::ImGuiNextItemData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ClearFlags@ImGuiNextWindowData@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?ClearFlags@ImGuiNextWindowData@@QEAAXXZ PROC		; ImGuiNextWindowData::ClearFlags, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1148
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?ClearFlags@ImGuiNextWindowData@@QEAAXXZ ENDP		; ImGuiNextWindowData::ClearFlags
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiNextWindowData@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiNextWindowData@@QEAA@XZ PROC			; ImGuiNextWindowData::ImGuiNextWindowData, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1147
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 24
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 40					; 00000028H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 48					; 00000030H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 60					; 0000003cH
	mov	rcx, rax
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 100				; 00000064H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	ecx, 112				; 00000070H
	rep stosb
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiNextWindowData@@QEAA@XZ ENDP			; ImGuiNextWindowData::ImGuiNextWindowData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Clear@ImGuiNavItemData@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 196
this$ = 272
?Clear@ImGuiNavItemData@@QEAAXXZ PROC			; ImGuiNavItemData::Clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1112
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+12], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+8], 0
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rcx, QWORD PTR this$[rbp]
	lea	rdi, QWORD PTR [rcx+16]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR [rax+40], xmm0
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR [rax+36], xmm0
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR [rax+32], xmm0
	lea	rsp, QWORD PTR [rbp+240]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?Clear@ImGuiNavItemData@@QEAAXXZ ENDP			; ImGuiNavItemData::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiNavItemData@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiNavItemData@@QEAA@XZ PROC			; ImGuiNavItemData::ImGuiNavItemData, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1111
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rcx, rax
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rcx, QWORD PTR this$[rbp]
	call	?Clear@ImGuiNavItemData@@QEAAXXZ	; ImGuiNavItemData::Clear
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiNavItemData@@QEAA@XZ ENDP			; ImGuiNavItemData::ImGuiNavItemData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiPopupData@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiPopupData@@QEAA@XZ PROC				; ImGuiPopupData::ImGuiPopupData, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1098
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 40					; 00000028H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	ecx, 48					; 00000030H
	rep stosb
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+24], -1
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiPopupData@@QEAA@XZ ENDP				; ImGuiPopupData::ImGuiPopupData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$ImMin@H@@YAHHH@Z
_TEXT	SEGMENT
tv65 = 192
lhs$ = 240
rhs$ = 248
??$ImMin@H@@YAHHH@Z PROC				; ImMin<int>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 412
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	eax, DWORD PTR rhs$[rbp]
	cmp	DWORD PTR lhs$[rbp], eax
	jge	SHORT $LN3@ImMin
	mov	eax, DWORD PTR lhs$[rbp]
	mov	DWORD PTR tv65[rbp], eax
	jmp	SHORT $LN4@ImMin
$LN3@ImMin:
	mov	eax, DWORD PTR rhs$[rbp]
	mov	DWORD PTR tv65[rbp], eax
$LN4@ImMin:
	mov	eax, DWORD PTR tv65[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??$ImMin@H@@YAHHH@Z ENDP				; ImMin<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ImGuiInputTextState@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1ImGuiInputTextState@@QEAA@XZ PROC			; ImGuiInputTextState::~ImGuiInputTextState, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 48					; 00000030H
	mov	rcx, rax
	call	??1?$ImVector@D@@QEAA@XZ		; ImVector<char>::~ImVector<char>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	rcx, rax
	call	??1?$ImVector@D@@QEAA@XZ		; ImVector<char>::~ImVector<char>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rcx, rax
	call	??1?$ImVector@G@@QEAA@XZ		; ImVector<unsigned short>::~ImVector<unsigned short>
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1ImGuiInputTextState@@QEAA@XZ ENDP			; ImGuiInputTextState::~ImGuiInputTextState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ClearFreeMemory@ImGuiInputTextState@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?ClearFreeMemory@ImGuiInputTextState@@QEAAXXZ PROC	; ImGuiInputTextState::ClearFreeMemory, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1071
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rcx, rax
	call	?clear@?$ImVector@G@@QEAAXXZ		; ImVector<unsigned short>::clear
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	rcx, rax
	call	?clear@?$ImVector@D@@QEAAXXZ		; ImVector<char>::clear
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 48					; 00000030H
	mov	rcx, rax
	call	?clear@?$ImVector@D@@QEAAXXZ		; ImVector<char>::clear
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?ClearFreeMemory@ImGuiInputTextState@@QEAAXXZ ENDP	; ImGuiInputTextState::ClearFreeMemory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiInputTextState@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiInputTextState@@QEAA@XZ PROC			; ImGuiInputTextState::ImGuiInputTextState, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1069
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rcx, rax
	call	??0?$ImVector@G@@QEAA@XZ		; ImVector<unsigned short>::ImVector<unsigned short>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	rcx, rax
	call	??0?$ImVector@D@@QEAA@XZ		; ImVector<char>::ImVector<char>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 48					; 00000030H
	mov	rcx, rax
	call	??0?$ImVector@D@@QEAA@XZ		; ImVector<char>::ImVector<char>
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	ecx, 3736				; 00000e98H
	rep stosb
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiInputTextState@@QEAA@XZ ENDP			; ImGuiInputTextState::ImGuiInputTextState
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
?dtor$0@?0???0ImGuiInputTextState@@QEAA@XZ@4HA PROC	; `ImGuiInputTextState::ImGuiInputTextState'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 16
	call	??1?$ImVector@G@@QEAA@XZ		; ImVector<unsigned short>::~ImVector<unsigned short>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0ImGuiInputTextState@@QEAA@XZ@4HA ENDP	; `ImGuiInputTextState::ImGuiInputTextState'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
?dtor$1@?0???0ImGuiInputTextState@@QEAA@XZ@4HA PROC	; `ImGuiInputTextState::ImGuiInputTextState'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 32					; 00000020H
	call	??1?$ImVector@D@@QEAA@XZ		; ImVector<char>::~ImVector<char>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0ImGuiInputTextState@@QEAA@XZ@4HA ENDP	; `ImGuiInputTextState::ImGuiInputTextState'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiMenuColumns@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiMenuColumns@@QEAA@XZ PROC			; ImGuiMenuColumns::ImGuiMenuColumns, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1042
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	ecx, 36					; 00000024H
	rep stosb
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiMenuColumns@@QEAA@XZ ENDP			; ImGuiMenuColumns::ImGuiMenuColumns
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiComboPreviewData@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiComboPreviewData@@QEAA@XZ PROC			; ImGuiComboPreviewData::ImGuiComboPreviewData, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1016
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0ImRect@@QEAA@XZ			; ImRect::ImRect
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 24
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	ecx, 48					; 00000030H
	rep stosb
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiComboPreviewData@@QEAA@XZ ENDP			; ImGuiComboPreviewData::ImGuiComboPreviewData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiStyleMod@@QEAA@HUImVec2@@@Z
_TEXT	SEGMENT
this$ = 224
idx$ = 232
v$ = 240
??0ImGuiStyleMod@@QEAA@HUImVec2@@@Z PROC		; ImGuiStyleMod::ImGuiStyleMod, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1003
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR idx$[rbp]
	mov	DWORD PTR [rax], ecx
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR v$[rbp]
	movss	DWORD PTR [rcx+rax+4], xmm0
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR v$[rbp+4]
	movss	DWORD PTR [rcx+rax+4], xmm0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiStyleMod@@QEAA@HUImVec2@@@Z ENDP		; ImGuiStyleMod::ImGuiStyleMod
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiStyleMod@@QEAA@HM@Z
_TEXT	SEGMENT
this$ = 224
idx$ = 232
v$ = 240
??0ImGuiStyleMod@@QEAA@HM@Z PROC			; ImGuiStyleMod::ImGuiStyleMod, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 1002
$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR idx$[rbp]
	mov	DWORD PTR [rax], ecx
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR v$[rbp]
	movss	DWORD PTR [rcx+rax+4], xmm0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiStyleMod@@QEAA@HM@Z ENDP			; ImGuiStyleMod::ImGuiStyleMod
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiColorMod@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiColorMod@@QEAA@XZ PROC				; ImGuiColorMod::ImGuiColorMod, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 4
	mov	rcx, rax
	call	??0ImVec4@@QEAA@XZ			; ImVec4::ImVec4
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiColorMod@@QEAA@XZ ENDP				; ImGuiColorMod::ImGuiColorMod
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ImDrawDataBuilder@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1ImDrawDataBuilder@@QEAA@XZ PROC			; ImDrawDataBuilder::~ImDrawDataBuilder, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	lea	r9, OFFSET FLAT:??1?$ImVector@PEAUImDrawList@@@@QEAA@XZ ; ImVector<ImDrawList *>::~ImVector<ImDrawList *>
	mov	r8d, 2
	mov	edx, 16
	mov	rcx, rax
	call	??_M@YAXPEAX_K1P6AX0@Z@Z
	npad	1
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1ImDrawDataBuilder@@QEAA@XZ ENDP			; ImDrawDataBuilder::~ImDrawDataBuilder
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImDrawDataBuilder@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImDrawDataBuilder@@QEAA@XZ PROC			; ImDrawDataBuilder::ImDrawDataBuilder, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??1?$ImVector@PEAUImDrawList@@@@QEAA@XZ ; ImVector<ImDrawList *>::~ImVector<ImDrawList *>
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, OFFSET FLAT:??0?$ImVector@PEAUImDrawList@@@@QEAA@XZ ; ImVector<ImDrawList *>::ImVector<ImDrawList *>
	mov	r8d, 2
	mov	edx, 16
	mov	rcx, rax
	call	??_L@YAXPEAX_K1P6AX0@Z2@Z
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImDrawDataBuilder@@QEAA@XZ ENDP			; ImDrawDataBuilder::ImDrawDataBuilder
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FlattenIntoSingleLayer@ImDrawDataBuilder@@QEAAXXZ
_TEXT	SEGMENT
n$ = 4
size$ = 36
i$1 = 68
layer_n$2 = 100
layer$3 = 136
tv143 = 344
tv82 = 344
tv130 = 352
tv133 = 360
this$ = 400
?FlattenIntoSingleLayer@ImDrawDataBuilder@@QEAAXXZ PROC	; ImDrawDataBuilder::FlattenIntoSingleLayer, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4325
$LN10:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 400				; 00000190H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4326
	mov	eax, 16
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rcx+rax]
	mov	DWORD PTR n$[rbp], eax
; Line 4327
	mov	eax, DWORD PTR n$[rbp]
	mov	DWORD PTR size$[rbp], eax
; Line 4328
	mov	DWORD PTR i$1[rbp], 1
	jmp	SHORT $LN4@FlattenInt
$LN2@FlattenInt:
	mov	eax, DWORD PTR i$1[rbp]
	inc	eax
	mov	DWORD PTR i$1[rbp], eax
$LN4@FlattenInt:
	cmp	DWORD PTR i$1[rbp], 2
	jge	SHORT $LN3@FlattenInt
; Line 4329
	movsxd	rax, DWORD PTR i$1[rbp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rcx+rax]
	mov	ecx, DWORD PTR size$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR size$[rbp], eax
	jmp	SHORT $LN2@FlattenInt
$LN3@FlattenInt:
; Line 4330
	mov	eax, 16
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv82[rbp], rax
	mov	edx, DWORD PTR size$[rbp]
	mov	rcx, QWORD PTR tv82[rbp]
	call	?resize@?$ImVector@PEAUImDrawList@@@@QEAAXH@Z ; ImVector<ImDrawList *>::resize
; Line 4331
	mov	DWORD PTR layer_n$2[rbp], 1
	jmp	SHORT $LN7@FlattenInt
$LN5@FlattenInt:
	mov	eax, DWORD PTR layer_n$2[rbp]
	inc	eax
	mov	DWORD PTR layer_n$2[rbp], eax
$LN7@FlattenInt:
	cmp	DWORD PTR layer_n$2[rbp], 2
	jge	$LN6@FlattenInt
; Line 4333
	movsxd	rax, DWORD PTR layer_n$2[rbp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR layer$3[rbp], rax
; Line 4334
	mov	rcx, QWORD PTR layer$3[rbp]
	call	?empty@?$ImVector@PEAUImDrawList@@@@QEBA_NXZ ; ImVector<ImDrawList *>::empty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@FlattenInt
; Line 4335
	jmp	SHORT $LN5@FlattenInt
$LN8@FlattenInt:
; Line 4336
	mov	eax, 16
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv143[rbp], rax
	mov	rax, QWORD PTR layer$3[rbp]
	movsxd	rax, DWORD PTR [rax]
	shl	rax, 3
	mov	QWORD PTR tv130[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR layer$3[rbp]
	call	??A?$ImVector@PEAUImDrawList@@@@QEAAAEAPEAUImDrawList@@H@Z ; ImVector<ImDrawList *>::operator[]
	mov	QWORD PTR tv133[rbp], rax
	mov	edx, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR tv143[rbp]
	call	??A?$ImVector@PEAUImDrawList@@@@QEAAAEAPEAUImDrawList@@H@Z ; ImVector<ImDrawList *>::operator[]
	mov	rdi, rax
	mov	rax, QWORD PTR tv133[rbp]
	mov	rsi, rax
	mov	rax, QWORD PTR tv130[rbp]
	mov	rcx, rax
	rep movsb
; Line 4337
	mov	rax, QWORD PTR layer$3[rbp]
	mov	eax, DWORD PTR [rax]
	mov	ecx, DWORD PTR n$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR n$[rbp], eax
; Line 4338
	xor	edx, edx
	mov	rcx, QWORD PTR layer$3[rbp]
	call	?resize@?$ImVector@PEAUImDrawList@@@@QEAAXH@Z ; ImVector<ImDrawList *>::resize
; Line 4339
	jmp	$LN5@FlattenInt
$LN6@FlattenInt:
; Line 4340
	lea	rsp, QWORD PTR [rbp+368]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?FlattenIntoSingleLayer@ImDrawDataBuilder@@QEAAXXZ ENDP	; ImDrawDataBuilder::FlattenIntoSingleLayer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetDrawListCount@ImDrawDataBuilder@@QEBAHXZ
_TEXT	SEGMENT
count$ = 4
n$1 = 36
this$ = 288
?GetDrawListCount@ImDrawDataBuilder@@QEBAHXZ PROC	; ImDrawDataBuilder::GetDrawListCount, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 723
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	DWORD PTR count$[rbp], 0
	mov	DWORD PTR n$1[rbp], 0
	jmp	SHORT $LN4@GetDrawLis
$LN2@GetDrawLis:
	mov	eax, DWORD PTR n$1[rbp]
	inc	eax
	mov	DWORD PTR n$1[rbp], eax
$LN4@GetDrawLis:
	cmp	DWORD PTR n$1[rbp], 2
	jge	SHORT $LN3@GetDrawLis
	movsxd	rax, DWORD PTR n$1[rbp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rcx+rax]
	mov	ecx, DWORD PTR count$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR count$[rbp], eax
	jmp	SHORT $LN2@GetDrawLis
$LN3@GetDrawLis:
	mov	eax, DWORD PTR count$[rbp]
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?GetDrawListCount@ImDrawDataBuilder@@QEBAHXZ ENDP	; ImDrawDataBuilder::GetDrawListCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Clear@ImDrawDataBuilder@@QEAAXXZ
_TEXT	SEGMENT
n$1 = 4
tv73 = 216
this$ = 256
?Clear@ImDrawDataBuilder@@QEAAXXZ PROC			; ImDrawDataBuilder::Clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 721
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	DWORD PTR n$1[rbp], 0
	jmp	SHORT $LN4@Clear
$LN2@Clear:
	mov	eax, DWORD PTR n$1[rbp]
	inc	eax
	mov	DWORD PTR n$1[rbp], eax
$LN4@Clear:
	cmp	DWORD PTR n$1[rbp], 2
	jge	SHORT $LN3@Clear
	movsxd	rax, DWORD PTR n$1[rbp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv73[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv73[rbp]
	call	?resize@?$ImVector@PEAUImDrawList@@@@QEAAXH@Z ; ImVector<ImDrawList *>::resize
	jmp	SHORT $LN2@Clear
$LN3@Clear:
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?Clear@ImDrawDataBuilder@@QEAAXXZ ENDP			; ImDrawDataBuilder::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$ImVector@PEAUImDrawList@@@@QEAAXAEBQEAUImDrawList@@@Z
_TEXT	SEGMENT
this$ = 224
v$ = 232
?push_back@?$ImVector@PEAUImDrawList@@@@QEAAXAEBQEAUImDrawList@@@Z PROC ; ImVector<ImDrawList *>::push_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1714
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN2@push_back
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@PEAUImDrawList@@@@QEBAHH@Z ; ImVector<ImDrawList *>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@PEAUImDrawList@@@@QEAAXH@Z ; ImVector<ImDrawList *>::reserve
$LN2@push_back:
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rdx, QWORD PTR v$[rbp]
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR [rcx+rax*8], rdx
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?push_back@?$ImVector@PEAUImDrawList@@@@QEAAXAEBQEAUImDrawList@@@Z ENDP ; ImVector<ImDrawList *>::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@PEAUImDrawList@@@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@PEAUImDrawList@@@@QEAAXH@Z PROC	; ImVector<ImDrawList *>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	shl	rax, 3
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	shl	rax, 3
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@PEAUImDrawList@@@@QEAAXH@Z ENDP	; ImVector<ImDrawList *>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$ImVector@PEAUImDrawList@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 224
new_size$ = 232
?resize@?$ImVector@PEAUImDrawList@@@@QEAAXH@Z PROC	; ImVector<ImDrawList *>::resize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1708
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_size$[rbp], eax
	jle	SHORT $LN2@resize
	mov	edx, DWORD PTR new_size$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@PEAUImDrawList@@@@QEBAHH@Z ; ImVector<ImDrawList *>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@PEAUImDrawList@@@@QEAAXH@Z ; ImVector<ImDrawList *>::reserve
$LN2@resize:
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_size$[rbp]
	mov	DWORD PTR [rax], ecx
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?resize@?$ImVector@PEAUImDrawList@@@@QEAAXH@Z ENDP	; ImVector<ImDrawList *>::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_grow_capacity@?$ImVector@PEAUImDrawList@@@@QEBAHH@Z
_TEXT	SEGMENT
new_capacity$ = 4
tv72 = 212
tv70 = 212
this$ = 256
sz$ = 264
?_grow_capacity@?$ImVector@PEAUImDrawList@@@@QEBAHH@Z PROC ; ImVector<ImDrawList *>::_grow_capacity, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1707
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+4], 0
	je	SHORT $LN3@grow_capac
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@grow_capac
$LN3@grow_capac:
	mov	DWORD PTR tv70[rbp], 8
$LN4@grow_capac:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR new_capacity$[rbp], eax
	mov	eax, DWORD PTR sz$[rbp]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jle	SHORT $LN5@grow_capac
	mov	eax, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	jmp	SHORT $LN6@grow_capac
$LN5@grow_capac:
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tv72[rbp], eax
$LN6@grow_capac:
	mov	eax, DWORD PTR tv72[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_grow_capacity@?$ImVector@PEAUImDrawList@@@@QEBAHH@Z ENDP ; ImVector<ImDrawList *>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@PEAUImDrawList@@@@QEAAAEAPEAUImDrawList@@H@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@PEAUImDrawList@@@@QEAAAEAPEAUImDrawList@@H@Z PROC ; ImVector<ImDrawList *>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1694
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1694				; 0000069eH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	lea	rax, QWORD PTR [rcx+rax*8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@PEAUImDrawList@@@@QEAAAEAPEAUImDrawList@@H@Z ENDP ; ImVector<ImDrawList *>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@?$ImVector@PEAUImDrawList@@@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 192
this$ = 240
?empty@?$ImVector@PEAUImDrawList@@@@QEBA_NXZ PROC	; ImVector<ImDrawList *>::empty, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1689
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv66[rbp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv66[rbp], 0
$LN4@empty:
	movzx	eax, BYTE PTR tv66[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?empty@?$ImVector@PEAUImDrawList@@@@QEBA_NXZ ENDP	; ImVector<ImDrawList *>::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@PEAUImDrawList@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@PEAUImDrawList@@@@QEAA@XZ PROC		; ImVector<ImDrawList *>::~ImVector<ImDrawList *>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@PEAUImDrawList@@@@QEAA@XZ ENDP		; ImVector<ImDrawList *>::~ImVector<ImDrawList *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@PEAUImDrawList@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@PEAUImDrawList@@@@QEAA@XZ PROC		; ImVector<ImDrawList *>::ImVector<ImDrawList *>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@PEAUImDrawList@@@@QEAA@XZ ENDP		; ImVector<ImDrawList *>::ImVector<ImDrawList *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?ToVec4@ImRect@@QEBA?AUImVec4@@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
?ToVec4@ImRect@@QEBA?AUImVec4@@XZ PROC			; ImRect::ToVec4, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 506
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	movss	DWORD PTR [rsp+32], xmm0
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm3, DWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm2, DWORD PTR [rax+4]
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec4@@QEAA@MMMM@Z			; ImVec4::ImVec4
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?ToVec4@ImRect@@QEBA?AUImVec4@@XZ ENDP			; ImRect::ToVec4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?IsInverted@ImRect@@QEBA_NXZ
_TEXT	SEGMENT
tv74 = 64
this$ = 96
?IsInverted@ImRect@@QEBA_NXZ PROC			; ImRect::IsInverted, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 505
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax]
	comiss	xmm0, DWORD PTR [rcx+8]
	ja	SHORT $LN3@IsInverted
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	comiss	xmm0, DWORD PTR [rcx+12]
	ja	SHORT $LN3@IsInverted
	mov	DWORD PTR tv74[rbp], 0
	jmp	SHORT $LN4@IsInverted
$LN3@IsInverted:
	mov	DWORD PTR tv74[rbp], 1
$LN4@IsInverted:
	movzx	eax, BYTE PTR tv74[rbp]
	lea	rsp, QWORD PTR [rbp+80]
	pop	rbp
	ret	0
?IsInverted@ImRect@@QEBA_NXZ ENDP			; ImRect::IsInverted
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?ClipWithFull@ImRect@@QEAAXAEBU1@@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
this$ = 96
r$ = 104
?ClipWithFull@ImRect@@QEAAXAEBU1@@Z PROC		; ImRect::ClipWithFull, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 503
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR r$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR r$[rbp]
	mov	r9, QWORD PTR [rdx+8]
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T1[rbp]
	call	?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z	; ImClamp
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR r$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	mov	rdx, QWORD PTR r$[rbp]
	mov	r9, QWORD PTR [rdx+8]
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T2[rbp]
	call	?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z	; ImClamp
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+8], rax
	lea	rsp, QWORD PTR [rbp+80]
	pop	rbp
	ret	0
?ClipWithFull@ImRect@@QEAAXAEBU1@@Z ENDP		; ImRect::ClipWithFull
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?ClipWith@ImRect@@QEAAXAEBU1@@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
this$ = 96
r$ = 104
?ClipWith@ImRect@@QEAAXAEBU1@@Z PROC			; ImRect::ClipWith, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 502
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR r$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T1[rbp]
	call	?ImMax@@YA?AUImVec2@@AEBU1@0@Z		; ImMax
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR r$[rbp]
	add	rax, 8
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T2[rbp]
	call	?ImMin@@YA?AUImVec2@@AEBU1@0@Z		; ImMin
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+8], rax
	lea	rsp, QWORD PTR [rbp+80]
	pop	rbp
	ret	0
?ClipWith@ImRect@@QEAAXAEBU1@@Z ENDP			; ImRect::ClipWith
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?TranslateY@ImRect@@QEAAXM@Z
_TEXT	SEGMENT
this$ = 80
dy$ = 88
?TranslateY@ImRect@@QEAAXM@Z PROC			; ImRect::TranslateY, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 501
$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	addss	xmm0, DWORD PTR dy$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	addss	xmm0, DWORD PTR dy$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+12], xmm0
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?TranslateY@ImRect@@QEAAXM@Z ENDP			; ImRect::TranslateY
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?TranslateX@ImRect@@QEAAXM@Z
_TEXT	SEGMENT
this$ = 80
dx$ = 88
?TranslateX@ImRect@@QEAAXM@Z PROC			; ImRect::TranslateX, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 500
$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax]
	addss	xmm0, DWORD PTR dx$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	addss	xmm0, DWORD PTR dx$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+8], xmm0
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?TranslateX@ImRect@@QEAAXM@Z ENDP			; ImRect::TranslateX
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?Expand@ImRect@@QEAAXAEBUImVec2@@@Z
_TEXT	SEGMENT
this$ = 80
amount$ = 88
?Expand@ImRect@@QEAAXAEBUImVec2@@@Z PROC		; ImRect::Expand, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 498
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR amount$[rbp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR amount$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR amount$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	addss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR amount$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	addss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+12], xmm0
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?Expand@ImRect@@QEAAXAEBUImVec2@@@Z ENDP		; ImRect::Expand
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?Expand@ImRect@@QEAAXM@Z
_TEXT	SEGMENT
this$ = 80
amount$ = 88
?Expand@ImRect@@QEAAXM@Z PROC				; ImRect::Expand, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 497
$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR amount$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR amount$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	addss	xmm0, DWORD PTR amount$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	addss	xmm0, DWORD PTR amount$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+12], xmm0
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?Expand@ImRect@@QEAAXM@Z ENDP				; ImRect::Expand
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?Add@ImRect@@QEAAXAEBU1@@Z
_TEXT	SEGMENT
this$ = 80
r$ = 88
?Add@ImRect@@QEAAXAEBU1@@Z PROC				; ImRect::Add, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 496
$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR r$[rbp]
	movss	xmm0, DWORD PTR [rax]
	comiss	xmm0, DWORD PTR [rcx]
	jbe	SHORT $LN2@Add
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR r$[rbp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
$LN2@Add:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR r$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	comiss	xmm0, DWORD PTR [rcx+4]
	jbe	SHORT $LN3@Add
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR r$[rbp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+4], xmm0
$LN3@Add:
	mov	rax, QWORD PTR r$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	comiss	xmm0, DWORD PTR [rcx+8]
	jbe	SHORT $LN4@Add
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR r$[rbp]
	movss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR [rax+8], xmm0
$LN4@Add:
	mov	rax, QWORD PTR r$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	comiss	xmm0, DWORD PTR [rcx+12]
	jbe	SHORT $LN5@Add
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR r$[rbp]
	movss	xmm0, DWORD PTR [rcx+12]
	movss	DWORD PTR [rax+12], xmm0
$LN5@Add:
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?Add@ImRect@@QEAAXAEBU1@@Z ENDP				; ImRect::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?Add@ImRect@@QEAAXAEBUImVec2@@@Z
_TEXT	SEGMENT
this$ = 80
p$ = 88
?Add@ImRect@@QEAAXAEBUImVec2@@@Z PROC			; ImRect::Add, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 495
$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR p$[rbp]
	movss	xmm0, DWORD PTR [rax]
	comiss	xmm0, DWORD PTR [rcx]
	jbe	SHORT $LN2@Add
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR p$[rbp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
$LN2@Add:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR p$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	comiss	xmm0, DWORD PTR [rcx+4]
	jbe	SHORT $LN3@Add
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR p$[rbp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+4], xmm0
$LN3@Add:
	mov	rax, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax]
	comiss	xmm0, DWORD PTR [rcx+8]
	jbe	SHORT $LN4@Add
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR p$[rbp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax+8], xmm0
$LN4@Add:
	mov	rax, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	comiss	xmm0, DWORD PTR [rcx+12]
	jbe	SHORT $LN5@Add
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR p$[rbp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+12], xmm0
$LN5@Add:
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?Add@ImRect@@QEAAXAEBUImVec2@@@Z ENDP			; ImRect::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?Overlaps@ImRect@@QEBA_NAEBU1@@Z
_TEXT	SEGMENT
tv84 = 64
this$ = 96
r$ = 104
?Overlaps@ImRect@@QEBA_NAEBU1@@Z PROC			; ImRect::Overlaps, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 494
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR r$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	comiss	xmm0, DWORD PTR [rcx+4]
	jbe	SHORT $LN3@Overlaps
	mov	rax, QWORD PTR r$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	comiss	xmm0, DWORD PTR [rcx+4]
	jbe	SHORT $LN3@Overlaps
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR r$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	comiss	xmm0, DWORD PTR [rcx]
	jbe	SHORT $LN3@Overlaps
	mov	rax, QWORD PTR r$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	comiss	xmm0, DWORD PTR [rcx]
	jbe	SHORT $LN3@Overlaps
	mov	DWORD PTR tv84[rbp], 1
	jmp	SHORT $LN4@Overlaps
$LN3@Overlaps:
	mov	DWORD PTR tv84[rbp], 0
$LN4@Overlaps:
	movzx	eax, BYTE PTR tv84[rbp]
	lea	rsp, QWORD PTR [rbp+80]
	pop	rbp
	ret	0
?Overlaps@ImRect@@QEBA_NAEBU1@@Z ENDP			; ImRect::Overlaps
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?Contains@ImRect@@QEBA_NAEBU1@@Z
_TEXT	SEGMENT
tv84 = 64
this$ = 96
r$ = 104
?Contains@ImRect@@QEBA_NAEBU1@@Z PROC			; ImRect::Contains, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 493
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR r$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax]
	comiss	xmm0, DWORD PTR [rcx]
	jb	SHORT $LN3@Contains
	mov	rax, QWORD PTR r$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	comiss	xmm0, DWORD PTR [rcx+4]
	jb	SHORT $LN3@Contains
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR r$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	comiss	xmm0, DWORD PTR [rcx+8]
	jb	SHORT $LN3@Contains
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR r$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	comiss	xmm0, DWORD PTR [rcx+12]
	jb	SHORT $LN3@Contains
	mov	DWORD PTR tv84[rbp], 1
	jmp	SHORT $LN4@Contains
$LN3@Contains:
	mov	DWORD PTR tv84[rbp], 0
$LN4@Contains:
	movzx	eax, BYTE PTR tv84[rbp]
	lea	rsp, QWORD PTR [rbp+80]
	pop	rbp
	ret	0
?Contains@ImRect@@QEBA_NAEBU1@@Z ENDP			; ImRect::Contains
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?Contains@ImRect@@QEBA_NAEBUImVec2@@@Z
_TEXT	SEGMENT
tv80 = 64
this$ = 96
p$ = 104
?Contains@ImRect@@QEBA_NAEBUImVec2@@@Z PROC		; ImRect::Contains, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 492
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax]
	comiss	xmm0, DWORD PTR [rcx]
	jb	SHORT $LN3@Contains
	mov	rax, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	comiss	xmm0, DWORD PTR [rcx+4]
	jb	SHORT $LN3@Contains
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR p$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	comiss	xmm0, DWORD PTR [rcx]
	jbe	SHORT $LN3@Contains
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR p$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	comiss	xmm0, DWORD PTR [rcx+4]
	jbe	SHORT $LN3@Contains
	mov	DWORD PTR tv80[rbp], 1
	jmp	SHORT $LN4@Contains
$LN3@Contains:
	mov	DWORD PTR tv80[rbp], 0
$LN4@Contains:
	movzx	eax, BYTE PTR tv80[rbp]
	lea	rsp, QWORD PTR [rbp+80]
	pop	rbp
	ret	0
?Contains@ImRect@@QEBA_NAEBUImVec2@@@Z ENDP		; ImRect::Contains
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetBR@ImRect@@QEBA?AUImVec2@@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
?GetBR@ImRect@@QEBA?AUImVec2@@XZ PROC			; ImRect::GetBR, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 491
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?GetBR@ImRect@@QEBA?AUImVec2@@XZ ENDP			; ImRect::GetBR
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetBL@ImRect@@QEBA?AUImVec2@@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
?GetBL@ImRect@@QEBA?AUImVec2@@XZ PROC			; ImRect::GetBL, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 490
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm2, DWORD PTR [rax+12]
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?GetBL@ImRect@@QEBA?AUImVec2@@XZ ENDP			; ImRect::GetBL
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetHeight@ImRect@@QEBAMXZ
_TEXT	SEGMENT
this$ = 80
?GetHeight@ImRect@@QEBAMXZ PROC				; ImRect::GetHeight, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 486
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	subss	xmm0, DWORD PTR [rcx+4]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?GetHeight@ImRect@@QEBAMXZ ENDP				; ImRect::GetHeight
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetWidth@ImRect@@QEBAMXZ
_TEXT	SEGMENT
this$ = 80
?GetWidth@ImRect@@QEBAMXZ PROC				; ImRect::GetWidth, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 485
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	subss	xmm0, DWORD PTR [rcx]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?GetWidth@ImRect@@QEBAMXZ ENDP				; ImRect::GetWidth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?GetSize@ImRect@@QEBA?AUImVec2@@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
?GetSize@ImRect@@QEBA?AUImVec2@@XZ PROC			; ImRect::GetSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 484
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	subss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+8]
	subss	xmm1, DWORD PTR [rcx]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?GetSize@ImRect@@QEBA?AUImVec2@@XZ ENDP			; ImRect::GetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ImRect@@QEAA@MMMM@Z
_TEXT	SEGMENT
tv76 = 64
tv70 = 64
this$ = 96
x1$ = 104
y1$ = 112
x2$ = 120
y2$ = 128
??0ImRect@@QEAA@MMMM@Z PROC				; ImRect::ImRect, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 481
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv70[rbp], rax
	movss	xmm2, DWORD PTR y1$[rbp]
	movss	xmm1, DWORD PTR x1$[rbp]
	mov	rcx, QWORD PTR tv70[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	QWORD PTR tv76[rbp], rax
	movss	xmm2, DWORD PTR y2$[rbp]
	movss	xmm1, DWORD PTR x2$[rbp]
	mov	rcx, QWORD PTR tv76[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+80]
	pop	rbp
	ret	0
??0ImRect@@QEAA@MMMM@Z ENDP				; ImRect::ImRect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ImRect@@QEAA@AEBUImVec4@@@Z
_TEXT	SEGMENT
tv80 = 64
tv72 = 64
this$ = 96
v$ = 104
??0ImRect@@QEAA@AEBUImVec4@@@Z PROC			; ImRect::ImRect, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 480
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv72[rbp], rax
	mov	rax, QWORD PTR v$[rbp]
	movss	xmm2, DWORD PTR [rax+4]
	mov	rax, QWORD PTR v$[rbp]
	movss	xmm1, DWORD PTR [rax]
	mov	rcx, QWORD PTR tv72[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	QWORD PTR tv80[rbp], rax
	mov	rax, QWORD PTR v$[rbp]
	movss	xmm2, DWORD PTR [rax+12]
	mov	rax, QWORD PTR v$[rbp]
	movss	xmm1, DWORD PTR [rax+8]
	mov	rcx, QWORD PTR tv80[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+80]
	pop	rbp
	ret	0
??0ImRect@@QEAA@AEBUImVec4@@@Z ENDP			; ImRect::ImRect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ImRect@@QEAA@AEBUImVec2@@0@Z
_TEXT	SEGMENT
this$ = 80
min$ = 88
max$ = 96
??0ImRect@@QEAA@AEBUImVec2@@0@Z PROC			; ImRect::ImRect, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 479
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR min$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR max$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??0ImRect@@QEAA@AEBUImVec2@@0@Z ENDP			; ImRect::ImRect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ImRect@@QEAA@XZ
_TEXT	SEGMENT
tv76 = 64
tv70 = 64
this$ = 96
??0ImRect@@QEAA@XZ PROC					; ImRect::ImRect, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 478
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv70[rbp], rax
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	mov	rcx, QWORD PTR tv70[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	QWORD PTR tv76[rbp], rax
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	mov	rcx, QWORD PTR tv76[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+80]
	pop	rbp
	ret	0
??0ImRect@@QEAA@XZ ENDP					; ImRect::ImRect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ImVec2ih@@QEAA@AEBUImVec2@@@Z
_TEXT	SEGMENT
this$ = 80
rhs$ = 88
??0ImVec2ih@@QEAA@AEBUImVec2@@@Z PROC			; ImVec2ih::ImVec2ih, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 468
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR rhs$[rbp]
	cvttss2si eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx], ax
	mov	rax, QWORD PTR rhs$[rbp]
	cvttss2si eax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+2], ax
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??0ImVec2ih@@QEAA@AEBUImVec2@@@Z ENDP			; ImVec2ih::ImVec2ih
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ImVec2ih@@QEAA@FF@Z
_TEXT	SEGMENT
this$ = 80
_x$ = 88
_y$ = 96
??0ImVec2ih@@QEAA@FF@Z PROC				; ImVec2ih::ImVec2ih, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 467
$LN3:
	mov	WORD PTR [rsp+24], r8w
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR _x$[rbp]
	mov	WORD PTR [rax], cx
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR _y$[rbp]
	mov	WORD PTR [rax+2], cx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??0ImVec2ih@@QEAA@FF@Z ENDP				; ImVec2ih::ImVec2ih
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ImVec2ih@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0ImVec2ih@@QEAA@XZ PROC				; ImVec2ih::ImVec2ih, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 466
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	xor	eax, eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+2], ax
	xor	eax, eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx], ax
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??0ImVec2ih@@QEAA@XZ ENDP				; ImVec2ih::ImVec2ih
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ImVec1@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0ImVec1@@QEAA@XZ PROC					; ImVec1::ImVec1, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 458
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??0ImVec1@@QEAA@XZ ENDP					; ImVec1::ImVec1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImGetDirQuadrantFromDelta@@YAHMM@Z
_TEXT	SEGMENT
tv72 = 192
tv70 = 192
tv64 = 192
dx$ = 240
dy$ = 248
?ImGetDirQuadrantFromDelta@@YAHMM@Z PROC		; ImGetDirQuadrantFromDelta, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8658
$LN8:
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8659
	movss	xmm0, DWORD PTR dx$[rbp]
	call	fabsf
	movss	DWORD PTR tv64[rbp], xmm0
	movss	xmm0, DWORD PTR dy$[rbp]
	call	fabsf
	movss	xmm1, DWORD PTR tv64[rbp]
	comiss	xmm1, xmm0
	jbe	SHORT $LN2@ImGetDirQu
; Line 8660
	movss	xmm0, DWORD PTR dx$[rbp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN4@ImGetDirQu
	mov	DWORD PTR tv70[rbp], 1
	jmp	SHORT $LN5@ImGetDirQu
$LN4@ImGetDirQu:
	mov	DWORD PTR tv70[rbp], 0
$LN5@ImGetDirQu:
	mov	eax, DWORD PTR tv70[rbp]
	jmp	SHORT $LN1@ImGetDirQu
$LN2@ImGetDirQu:
; Line 8661
	movss	xmm0, DWORD PTR dy$[rbp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN6@ImGetDirQu
	mov	DWORD PTR tv72[rbp], 3
	jmp	SHORT $LN7@ImGetDirQu
$LN6@ImGetDirQu:
	mov	DWORD PTR tv72[rbp], 2
$LN7@ImGetDirQu:
	mov	eax, DWORD PTR tv72[rbp]
$LN1@ImGetDirQu:
; Line 8662
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?ImGetDirQuadrantFromDelta@@YAHMM@Z ENDP		; ImGetDirQuadrantFromDelta
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImTriangleArea@@YAMAEBUImVec2@@00@Z
_TEXT	SEGMENT
a$ = 224
b$ = 232
c$ = 240
?ImTriangleArea@@YAMAEBUImVec2@@00@Z PROC		; ImTriangleArea, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 449
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR b$[rbp]
	mov	rcx, QWORD PTR c$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR a$[rbp]
	movss	xmm1, DWORD PTR [rax]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR c$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	subss	xmm1, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR b$[rbp]
	movss	xmm2, DWORD PTR [rax]
	mulss	xmm2, xmm1
	movaps	xmm1, xmm2
	addss	xmm0, xmm1
	mov	rax, QWORD PTR a$[rbp]
	mov	rcx, QWORD PTR b$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	subss	xmm1, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR c$[rbp]
	movss	xmm2, DWORD PTR [rax]
	mulss	xmm2, xmm1
	movaps	xmm1, xmm2
	addss	xmm0, xmm1
	call	fabsf
	mulss	xmm0, DWORD PTR __real@3f000000
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?ImTriangleArea@@YAMAEBUImVec2@@00@Z ENDP		; ImTriangleArea
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImTriangleBarycentricCoords@@YAXAEBUImVec2@@000AEAM11@Z
_TEXT	SEGMENT
v0$ = 8
v1$ = 40
v2$ = 72
denom$ = 100
__$ArrayPad$ = 312
a$ = 352
b$ = 360
c$ = 368
p$ = 376
out_u$ = 384
out_v$ = 392
out_w$ = 400
?ImTriangleBarycentricCoords@@YAXAEBUImVec2@@000AEAM11@Z PROC ; ImTriangleBarycentricCoords, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1269
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1270
	mov	r8, QWORD PTR a$[rbp]
	mov	rdx, QWORD PTR b$[rbp]
	lea	rcx, QWORD PTR v0$[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
; Line 1271
	mov	r8, QWORD PTR a$[rbp]
	mov	rdx, QWORD PTR c$[rbp]
	lea	rcx, QWORD PTR v1$[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
; Line 1272
	mov	r8, QWORD PTR a$[rbp]
	mov	rdx, QWORD PTR p$[rbp]
	lea	rcx, QWORD PTR v2$[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
; Line 1273
	movss	xmm0, DWORD PTR v0$[rbp]
	mulss	xmm0, DWORD PTR v1$[rbp+4]
	movss	xmm1, DWORD PTR v1$[rbp]
	mulss	xmm1, DWORD PTR v0$[rbp+4]
	subss	xmm0, xmm1
	movss	DWORD PTR denom$[rbp], xmm0
; Line 1274
	movss	xmm0, DWORD PTR v2$[rbp]
	mulss	xmm0, DWORD PTR v1$[rbp+4]
	movss	xmm1, DWORD PTR v1$[rbp]
	mulss	xmm1, DWORD PTR v2$[rbp+4]
	subss	xmm0, xmm1
	divss	xmm0, DWORD PTR denom$[rbp]
	mov	rax, QWORD PTR out_v$[rbp]
	movss	DWORD PTR [rax], xmm0
; Line 1275
	movss	xmm0, DWORD PTR v0$[rbp]
	mulss	xmm0, DWORD PTR v2$[rbp+4]
	movss	xmm1, DWORD PTR v2$[rbp]
	mulss	xmm1, DWORD PTR v0$[rbp+4]
	subss	xmm0, xmm1
	divss	xmm0, DWORD PTR denom$[rbp]
	mov	rax, QWORD PTR out_w$[rbp]
	movss	DWORD PTR [rax], xmm0
; Line 1276
	mov	rax, QWORD PTR out_v$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR [rax]
	mov	rax, QWORD PTR out_w$[rbp]
	subss	xmm0, DWORD PTR [rax]
	mov	rax, QWORD PTR out_u$[rbp]
	movss	DWORD PTR [rax], xmm0
; Line 1277
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?ImTriangleBarycentricCoords@@YAXAEBUImVec2@@000AEAM11@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?ImTriangleBarycentricCoords@@YAXAEBUImVec2@@000AEAM11@Z ENDP ; ImTriangleBarycentricCoords
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImTriangleClosestPoint@@YA?AUImVec2@@AEBU1@000@Z
_TEXT	SEGMENT
proj_ab$ = 8
proj_bc$ = 40
proj_ca$ = 72
dist2_ab$ = 100
dist2_bc$ = 132
dist2_ca$ = 164
m$ = 196
$T6 = 420
$T7 = 452
$T8 = 484
__$ArrayPad$ = 504
__$ReturnUdt$ = 544
a$ = 552
b$ = 560
c$ = 568
p$ = 576
?ImTriangleClosestPoint@@YA?AUImVec2@@AEBU1@000@Z PROC	; ImTriangleClosestPoint, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1280
$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 552				; 00000228H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+584]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1281
	mov	r9, QWORD PTR p$[rbp]
	mov	r8, QWORD PTR b$[rbp]
	mov	rdx, QWORD PTR a$[rbp]
	lea	rcx, QWORD PTR proj_ab$[rbp]
	call	?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z ; ImLineClosestPoint
; Line 1282
	mov	r9, QWORD PTR p$[rbp]
	mov	r8, QWORD PTR c$[rbp]
	mov	rdx, QWORD PTR b$[rbp]
	lea	rcx, QWORD PTR proj_bc$[rbp]
	call	?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z ; ImLineClosestPoint
; Line 1283
	mov	r9, QWORD PTR p$[rbp]
	mov	r8, QWORD PTR a$[rbp]
	mov	rdx, QWORD PTR c$[rbp]
	lea	rcx, QWORD PTR proj_ca$[rbp]
	call	?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z ; ImLineClosestPoint
; Line 1284
	lea	r8, QWORD PTR proj_ab$[rbp]
	mov	rdx, QWORD PTR p$[rbp]
	lea	rcx, QWORD PTR $T6[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rcx, rax
	call	?ImLengthSqr@@YAMAEBUImVec2@@@Z		; ImLengthSqr
	movss	DWORD PTR dist2_ab$[rbp], xmm0
; Line 1285
	lea	r8, QWORD PTR proj_bc$[rbp]
	mov	rdx, QWORD PTR p$[rbp]
	lea	rcx, QWORD PTR $T7[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rcx, rax
	call	?ImLengthSqr@@YAMAEBUImVec2@@@Z		; ImLengthSqr
	movss	DWORD PTR dist2_bc$[rbp], xmm0
; Line 1286
	lea	r8, QWORD PTR proj_ca$[rbp]
	mov	rdx, QWORD PTR p$[rbp]
	lea	rcx, QWORD PTR $T8[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rcx, rax
	call	?ImLengthSqr@@YAMAEBUImVec2@@@Z		; ImLengthSqr
	movss	DWORD PTR dist2_ca$[rbp], xmm0
; Line 1287
	movss	xmm1, DWORD PTR dist2_ca$[rbp]
	movss	xmm0, DWORD PTR dist2_bc$[rbp]
	call	??$ImMin@M@@YAMMM@Z			; ImMin<float>
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR dist2_ab$[rbp]
	call	??$ImMin@M@@YAMMM@Z			; ImMin<float>
	movss	DWORD PTR m$[rbp], xmm0
; Line 1288
	movss	xmm0, DWORD PTR m$[rbp]
	ucomiss	xmm0, DWORD PTR dist2_ab$[rbp]
	jp	SHORT $LN2@ImTriangle
	jne	SHORT $LN2@ImTriangle
; Line 1289
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR proj_ab$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@ImTriangle
$LN2@ImTriangle:
; Line 1290
	movss	xmm0, DWORD PTR m$[rbp]
	ucomiss	xmm0, DWORD PTR dist2_bc$[rbp]
	jp	SHORT $LN3@ImTriangle
	jne	SHORT $LN3@ImTriangle
; Line 1291
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR proj_bc$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@ImTriangle
$LN3@ImTriangle:
; Line 1292
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR proj_ca$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@ImTriangle:
; Line 1293
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?ImTriangleClosestPoint@@YA?AUImVec2@@AEBU1@000@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+520]
	pop	rdi
	pop	rbp
	ret	0
?ImTriangleClosestPoint@@YA?AUImVec2@@AEBU1@000@Z ENDP	; ImTriangleClosestPoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImTriangleContainsPoint@@YA_NAEBUImVec2@@000@Z
_TEXT	SEGMENT
b1$ = 4
b2$ = 36
b3$ = 68
tv156 = 276
tv148 = 276
tv130 = 276
tv80 = 276
a$ = 320
b$ = 328
c$ = 336
p$ = 344
?ImTriangleContainsPoint@@YA_NAEBUImVec2@@000@Z PROC	; ImTriangleContainsPoint, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1261
$LN11:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1262
	mov	rax, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR b$[rbp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR a$[rbp]
	mov	rcx, QWORD PTR b$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	subss	xmm1, DWORD PTR [rcx+4]
	mulss	xmm0, xmm1
	mov	rax, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR b$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	subss	xmm1, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR a$[rbp]
	mov	rcx, QWORD PTR b$[rbp]
	movss	xmm2, DWORD PTR [rax]
	subss	xmm2, DWORD PTR [rcx]
	mulss	xmm1, xmm2
	subss	xmm0, xmm1
	xorps	xmm1, xmm1
	comiss	xmm1, xmm0
	jbe	SHORT $LN3@ImTriangle
	mov	DWORD PTR tv80[rbp], 1
	jmp	SHORT $LN4@ImTriangle
$LN3@ImTriangle:
	mov	DWORD PTR tv80[rbp], 0
$LN4@ImTriangle:
	movzx	eax, BYTE PTR tv80[rbp]
	mov	BYTE PTR b1$[rbp], al
; Line 1263
	mov	rax, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR c$[rbp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR b$[rbp]
	mov	rcx, QWORD PTR c$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	subss	xmm1, DWORD PTR [rcx+4]
	mulss	xmm0, xmm1
	mov	rax, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR c$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	subss	xmm1, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR b$[rbp]
	mov	rcx, QWORD PTR c$[rbp]
	movss	xmm2, DWORD PTR [rax]
	subss	xmm2, DWORD PTR [rcx]
	mulss	xmm1, xmm2
	subss	xmm0, xmm1
	xorps	xmm1, xmm1
	comiss	xmm1, xmm0
	jbe	SHORT $LN5@ImTriangle
	mov	DWORD PTR tv130[rbp], 1
	jmp	SHORT $LN6@ImTriangle
$LN5@ImTriangle:
	mov	DWORD PTR tv130[rbp], 0
$LN6@ImTriangle:
	movzx	eax, BYTE PTR tv130[rbp]
	mov	BYTE PTR b2$[rbp], al
; Line 1264
	mov	rax, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR c$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	subss	xmm1, DWORD PTR [rcx+4]
	mulss	xmm0, xmm1
	mov	rax, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	subss	xmm1, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR c$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	movss	xmm2, DWORD PTR [rax]
	subss	xmm2, DWORD PTR [rcx]
	mulss	xmm1, xmm2
	subss	xmm0, xmm1
	xorps	xmm1, xmm1
	comiss	xmm1, xmm0
	jbe	SHORT $LN7@ImTriangle
	mov	DWORD PTR tv148[rbp], 1
	jmp	SHORT $LN8@ImTriangle
$LN7@ImTriangle:
	mov	DWORD PTR tv148[rbp], 0
$LN8@ImTriangle:
	movzx	eax, BYTE PTR tv148[rbp]
	mov	BYTE PTR b3$[rbp], al
; Line 1265
	movzx	eax, BYTE PTR b1$[rbp]
	movzx	ecx, BYTE PTR b2$[rbp]
	cmp	eax, ecx
	jne	SHORT $LN9@ImTriangle
	movzx	eax, BYTE PTR b2$[rbp]
	movzx	ecx, BYTE PTR b3$[rbp]
	cmp	eax, ecx
	jne	SHORT $LN9@ImTriangle
	mov	DWORD PTR tv156[rbp], 1
	jmp	SHORT $LN10@ImTriangle
$LN9@ImTriangle:
	mov	DWORD PTR tv156[rbp], 0
$LN10@ImTriangle:
	movzx	eax, BYTE PTR tv156[rbp]
; Line 1266
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?ImTriangleContainsPoint@@YA_NAEBUImVec2@@000@Z ENDP	; ImTriangleContainsPoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z
_TEXT	SEGMENT
ap$ = 8
ab_dir$ = 40
dot$ = 68
ab_len_sqr$ = 100
$T5 = 324
$T6 = 356
__$ArrayPad$ = 376
__$ReturnUdt$ = 416
a$ = 424
b$ = 432
p$ = 440
?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z PROC	; ImLineClosestPoint, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1248
$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 50					; 00000032H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+456]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1249
	mov	r8, QWORD PTR a$[rbp]
	mov	rdx, QWORD PTR p$[rbp]
	lea	rcx, QWORD PTR ap$[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
; Line 1250
	mov	r8, QWORD PTR a$[rbp]
	mov	rdx, QWORD PTR b$[rbp]
	lea	rcx, QWORD PTR ab_dir$[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
; Line 1251
	movss	xmm0, DWORD PTR ap$[rbp]
	mulss	xmm0, DWORD PTR ab_dir$[rbp]
	movss	xmm1, DWORD PTR ap$[rbp+4]
	mulss	xmm1, DWORD PTR ab_dir$[rbp+4]
	addss	xmm0, xmm1
	movss	DWORD PTR dot$[rbp], xmm0
; Line 1252
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR dot$[rbp]
	jbe	SHORT $LN2@ImLineClos
; Line 1253
	mov	rax, QWORD PTR a$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@ImLineClos
$LN2@ImLineClos:
; Line 1254
	movss	xmm0, DWORD PTR ab_dir$[rbp]
	mulss	xmm0, DWORD PTR ab_dir$[rbp]
	movss	xmm1, DWORD PTR ab_dir$[rbp+4]
	mulss	xmm1, DWORD PTR ab_dir$[rbp+4]
	addss	xmm0, xmm1
	movss	DWORD PTR ab_len_sqr$[rbp], xmm0
; Line 1255
	movss	xmm0, DWORD PTR dot$[rbp]
	comiss	xmm0, DWORD PTR ab_len_sqr$[rbp]
	jbe	SHORT $LN3@ImLineClos
; Line 1256
	mov	rax, QWORD PTR b$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@ImLineClos
$LN3@ImLineClos:
; Line 1257
	movss	xmm2, DWORD PTR dot$[rbp]
	lea	rdx, QWORD PTR ab_dir$[rbp]
	lea	rcx, QWORD PTR $T5[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	movss	xmm2, DWORD PTR ab_len_sqr$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T6[rbp]
	call	??K@YA?AUImVec2@@AEBU0@M@Z		; operator/
	mov	r8, rax
	mov	rdx, QWORD PTR a$[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@ImLineClos:
; Line 1258
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z ENDP	; ImLineClosestPoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU1@0000M@Z
_TEXT	SEGMENT
p_last$ = 8
p_closest$ = 40
p_closest_dist2$ = 68
__$ArrayPad$ = 280
__$ReturnUdt$ = 320
p1$ = 328
p2$ = 336
p3$ = 344
p4$ = 352
p$ = 360
tess_tol$ = 368
?ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU1@0000M@Z PROC ; ImBezierCubicClosestPointCasteljau, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1238
$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 408				; 00000198H
	lea	rbp, QWORD PTR [rsp+112]
	lea	rdi, QWORD PTR [rsp+112]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+440]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1239
	movss	xmm0, DWORD PTR tess_tol$[rbp]
	comiss	xmm0, DWORD PTR __real@00000000
	ja	SHORT $LN3@ImBezierCu
	mov	eax, DWORD PTR ?__LINE__Var@?0??ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU2@0000M@Z@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CA@PELHDBHK@?$AAt?$AAe?$AAs?$AAs?$AA_?$AAt?$AAo?$AAl?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AA0?$AAf@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@ImBezierCu:
; Line 1240
	mov	rax, QWORD PTR p1$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR p_last$[rbp], rax
; Line 1241
	lea	rcx, QWORD PTR p_closest$[rbp]
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
; Line 1242
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR p_closest_dist2$[rbp], xmm0
; Line 1243
	mov	DWORD PTR [rsp+104], 0
	movss	xmm0, DWORD PTR tess_tol$[rbp]
	movss	DWORD PTR [rsp+96], xmm0
	mov	rax, QWORD PTR p4$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR [rsp+88], xmm0
	mov	rax, QWORD PTR p4$[rbp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR [rsp+80], xmm0
	mov	rax, QWORD PTR p3$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR [rsp+72], xmm0
	mov	rax, QWORD PTR p3$[rbp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR [rsp+64], xmm0
	mov	rax, QWORD PTR p2$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR [rsp+56], xmm0
	mov	rax, QWORD PTR p2$[rbp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR [rsp+48], xmm0
	mov	rax, QWORD PTR p1$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR [rsp+40], xmm0
	mov	rax, QWORD PTR p1$[rbp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR [rsp+32], xmm0
	lea	r9, QWORD PTR p_closest_dist2$[rbp]
	lea	r8, QWORD PTR p_last$[rbp]
	lea	rdx, QWORD PTR p_closest$[rbp]
	mov	rcx, QWORD PTR p$[rbp]
	call	?ImBezierCubicClosestPointCasteljauStep@@YAXAEBUImVec2@@AEAU1@1AEAMMMMMMMMMMH@Z ; ImBezierCubicClosestPointCasteljauStep
; Line 1244
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR p_closest$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 1245
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-112]
	lea	rdx, OFFSET FLAT:?ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU1@0000M@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?ImBezierCubicClosestPointCasteljau@@YA?AUImVec2@@AEBU1@0000M@Z ENDP ; ImBezierCubicClosestPointCasteljau
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU1@0000H@Z
_TEXT	SEGMENT
p_last$ = 8
p_closest$ = 40
p_closest_dist2$ = 68
t_step$ = 100
i_step$7 = 132
p_current$8 = 168
p_line$9 = 200
dist2$10 = 228
$T11 = 452
__$ArrayPad$ = 472
__$ReturnUdt$ = 512
p1$ = 520
p2$ = 528
p3$ = 536
p4$ = 544
p$ = 552
num_segments$ = 560
?ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU1@0000H@Z PROC ; ImBezierCubicClosestPoint, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1180
$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 536				; 00000218H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+568]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1181
	cmp	DWORD PTR num_segments$[rbp], 0
	jg	SHORT $LN7@ImBezierCu
	mov	eax, DWORD PTR ?__LINE__Var@?0??ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU2@0000H@Z@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CC@OJIGCPJC@?$AAn?$AAu?$AAm?$AA_?$AAs?$AAe?$AAg?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?5?$AA?$DO?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@ImBezierCu:
; Line 1182
	mov	rax, QWORD PTR p1$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR p_last$[rbp], rax
; Line 1183
	lea	rcx, QWORD PTR p_closest$[rbp]
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
; Line 1184
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR p_closest_dist2$[rbp], xmm0
; Line 1185
	cvtsi2ss xmm0, DWORD PTR num_segments$[rbp]
	movss	xmm1, DWORD PTR __real@3f800000
	divss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR t_step$[rbp], xmm0
; Line 1186
	mov	DWORD PTR i_step$7[rbp], 1
	jmp	SHORT $LN4@ImBezierCu
$LN2@ImBezierCu:
	mov	eax, DWORD PTR i_step$7[rbp]
	inc	eax
	mov	DWORD PTR i_step$7[rbp], eax
$LN4@ImBezierCu:
	mov	eax, DWORD PTR num_segments$[rbp]
	cmp	DWORD PTR i_step$7[rbp], eax
	jg	$LN3@ImBezierCu
; Line 1188
	cvtsi2ss xmm0, DWORD PTR i_step$7[rbp]
	movss	xmm1, DWORD PTR t_step$[rbp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR [rsp+40], xmm0
	mov	rax, QWORD PTR p4$[rbp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR p3$[rbp]
	mov	r8, QWORD PTR p2$[rbp]
	mov	rdx, QWORD PTR p1$[rbp]
	lea	rcx, QWORD PTR p_current$8[rbp]
	call	?ImBezierCubicCalc@@YA?AUImVec2@@AEBU1@000M@Z ; ImBezierCubicCalc
; Line 1189
	mov	r9, QWORD PTR p$[rbp]
	lea	r8, QWORD PTR p_current$8[rbp]
	lea	rdx, QWORD PTR p_last$[rbp]
	lea	rcx, QWORD PTR p_line$9[rbp]
	call	?ImLineClosestPoint@@YA?AUImVec2@@AEBU1@00@Z ; ImLineClosestPoint
; Line 1190
	lea	r8, QWORD PTR p_line$9[rbp]
	mov	rdx, QWORD PTR p$[rbp]
	lea	rcx, QWORD PTR $T11[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rcx, rax
	call	?ImLengthSqr@@YAMAEBUImVec2@@@Z		; ImLengthSqr
	movss	DWORD PTR dist2$10[rbp], xmm0
; Line 1191
	movss	xmm0, DWORD PTR p_closest_dist2$[rbp]
	comiss	xmm0, DWORD PTR dist2$10[rbp]
	jbe	SHORT $LN5@ImBezierCu
; Line 1193
	mov	rax, QWORD PTR p_line$9[rbp]
	mov	QWORD PTR p_closest$[rbp], rax
; Line 1194
	movss	xmm0, DWORD PTR dist2$10[rbp]
	movss	DWORD PTR p_closest_dist2$[rbp], xmm0
$LN5@ImBezierCu:
; Line 1196
	mov	rax, QWORD PTR p_current$8[rbp]
	mov	QWORD PTR p_last$[rbp], rax
; Line 1197
	jmp	$LN2@ImBezierCu
$LN3@ImBezierCu:
; Line 1198
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR p_closest$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 1199
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU1@0000H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+488]
	pop	rdi
	pop	rbp
	ret	0
?ImBezierCubicClosestPoint@@YA?AUImVec2@@AEBU1@0000H@Z ENDP ; ImBezierCubicClosestPoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$ImMax@M@@YAMMM@Z
_TEXT	SEGMENT
tv65 = 192
lhs$ = 240
rhs$ = 248
??$ImMax@M@@YAMMM@Z PROC				; ImMax<float>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 413
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	movss	xmm0, DWORD PTR lhs$[rbp]
	comiss	xmm0, DWORD PTR rhs$[rbp]
	jb	SHORT $LN3@ImMax
	movss	xmm0, DWORD PTR lhs$[rbp]
	movss	DWORD PTR tv65[rbp], xmm0
	jmp	SHORT $LN4@ImMax
$LN3@ImMax:
	movss	xmm0, DWORD PTR rhs$[rbp]
	movss	DWORD PTR tv65[rbp], xmm0
$LN4@ImMax:
	movss	xmm0, DWORD PTR tv65[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??$ImMax@M@@YAMMM@Z ENDP				; ImMax<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$ImMin@M@@YAMMM@Z
_TEXT	SEGMENT
tv65 = 192
lhs$ = 240
rhs$ = 248
??$ImMin@M@@YAMMM@Z PROC				; ImMin<float>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 412
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	movss	xmm0, DWORD PTR rhs$[rbp]
	comiss	xmm0, DWORD PTR lhs$[rbp]
	jbe	SHORT $LN3@ImMin
	movss	xmm0, DWORD PTR lhs$[rbp]
	movss	DWORD PTR tv65[rbp], xmm0
	jmp	SHORT $LN4@ImMin
$LN3@ImMin:
	movss	xmm0, DWORD PTR rhs$[rbp]
	movss	DWORD PTR tv65[rbp], xmm0
$LN4@ImMin:
	movss	xmm0, DWORD PTR tv65[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??$ImMin@M@@YAMMM@Z ENDP				; ImMin<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?ImModPositive@@YAHHH@Z
_TEXT	SEGMENT
a$ = 80
b$ = 88
?ImModPositive@@YAHHH@Z PROC				; ImModPositive, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 433
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	eax, DWORD PTR b$[rbp]
	mov	ecx, DWORD PTR a$[rbp]
	add	ecx, eax
	mov	eax, ecx
	cdq
	idiv	DWORD PTR b$[rbp]
	mov	eax, edx
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?ImModPositive@@YAHHH@Z ENDP				; ImModPositive
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?ImFloor@@YA?AUImVec2@@AEBU1@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 80
v$ = 88
?ImFloor@@YA?AUImVec2@@AEBU1@@Z PROC			; ImFloor, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 432
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR v$[rbp]
	cvttss2si eax, DWORD PTR [rax+4]
	cvtsi2ss xmm0, eax
	mov	rax, QWORD PTR v$[rbp]
	cvttss2si eax, DWORD PTR [rax]
	cvtsi2ss xmm1, eax
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?ImFloor@@YA?AUImVec2@@AEBU1@@Z ENDP			; ImFloor
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?ImFloor@@YAMM@Z
_TEXT	SEGMENT
f$ = 80
?ImFloor@@YAMM@Z PROC					; ImFloor, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 430
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	cvttss2si eax, DWORD PTR f$[rbp]
	cvtsi2ss xmm0, eax
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?ImFloor@@YAMM@Z ENDP					; ImFloor
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?ImLengthSqr@@YAMAEBUImVec2@@@Z
_TEXT	SEGMENT
lhs$ = 80
?ImLengthSqr@@YAMAEBUImVec2@@@Z PROC			; ImLengthSqr, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 427
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR lhs$[rbp]
	mov	rcx, QWORD PTR lhs$[rbp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR lhs$[rbp]
	mov	rcx, QWORD PTR lhs$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	mulss	xmm1, DWORD PTR [rcx+4]
	addss	xmm0, xmm1
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?ImLengthSqr@@YAMAEBUImVec2@@@Z ENDP			; ImLengthSqr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?ImSaturate@@YAMM@Z
_TEXT	SEGMENT
tv67 = 64
tv66 = 68
f$ = 96
?ImSaturate@@YAMM@Z PROC				; ImSaturate, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 426
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR f$[rbp]
	jbe	SHORT $LN5@ImSaturate
	xorps	xmm0, xmm0
	movss	DWORD PTR tv67[rbp], xmm0
	jmp	SHORT $LN6@ImSaturate
$LN5@ImSaturate:
	movss	xmm0, DWORD PTR f$[rbp]
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	SHORT $LN3@ImSaturate
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv66[rbp], xmm0
	jmp	SHORT $LN4@ImSaturate
$LN3@ImSaturate:
	movss	xmm0, DWORD PTR f$[rbp]
	movss	DWORD PTR tv66[rbp], xmm0
$LN4@ImSaturate:
	movss	xmm0, DWORD PTR tv66[rbp]
	movss	DWORD PTR tv67[rbp], xmm0
$LN6@ImSaturate:
	movss	xmm0, DWORD PTR tv67[rbp]
	lea	rsp, QWORD PTR [rbp+80]
	pop	rbp
	ret	0
?ImSaturate@@YAMM@Z ENDP				; ImSaturate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?ImLerp@@YA?AUImVec2@@AEBU1@00@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 80
a$ = 88
b$ = 96
t$ = 104
?ImLerp@@YA?AUImVec2@@AEBU1@00@Z PROC			; ImLerp, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 424
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR b$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR t$[rbp]
	mulss	xmm0, DWORD PTR [rax+4]
	mov	rax, QWORD PTR a$[rbp]
	movss	xmm1, DWORD PTR [rax+4]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR b$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	movss	xmm1, DWORD PTR [rax]
	subss	xmm1, DWORD PTR [rcx]
	mov	rax, QWORD PTR t$[rbp]
	mulss	xmm1, DWORD PTR [rax]
	mov	rax, QWORD PTR a$[rbp]
	movss	xmm2, DWORD PTR [rax]
	addss	xmm2, xmm1
	movaps	xmm1, xmm2
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
?ImLerp@@YA?AUImVec2@@AEBU1@00@Z ENDP			; ImLerp
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z
_TEXT	SEGMENT
tv74 = 64
tv73 = 68
tv84 = 72
tv83 = 76
__$ReturnUdt$ = 96
v$ = 104
mn$ = 112
mx$ = 120
?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z PROC		; ImClamp, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 422
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR mn$[rbp]
	mov	rcx, QWORD PTR v$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	comiss	xmm0, DWORD PTR [rcx+4]
	jbe	SHORT $LN5@ImClamp
	mov	rax, QWORD PTR mn$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR tv74[rbp], xmm0
	jmp	SHORT $LN6@ImClamp
$LN5@ImClamp:
	mov	rax, QWORD PTR v$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	comiss	xmm0, DWORD PTR mx$[rbp+4]
	jbe	SHORT $LN3@ImClamp
	movss	xmm0, DWORD PTR mx$[rbp+4]
	movss	DWORD PTR tv73[rbp], xmm0
	jmp	SHORT $LN4@ImClamp
$LN3@ImClamp:
	mov	rax, QWORD PTR v$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR tv73[rbp], xmm0
$LN4@ImClamp:
	movss	xmm0, DWORD PTR tv73[rbp]
	movss	DWORD PTR tv74[rbp], xmm0
$LN6@ImClamp:
	mov	rax, QWORD PTR mn$[rbp]
	mov	rcx, QWORD PTR v$[rbp]
	movss	xmm0, DWORD PTR [rax]
	comiss	xmm0, DWORD PTR [rcx]
	jbe	SHORT $LN9@ImClamp
	mov	rax, QWORD PTR mn$[rbp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR tv84[rbp], xmm0
	jmp	SHORT $LN10@ImClamp
$LN9@ImClamp:
	mov	rax, QWORD PTR v$[rbp]
	movss	xmm0, DWORD PTR [rax]
	comiss	xmm0, DWORD PTR mx$[rbp]
	jbe	SHORT $LN7@ImClamp
	movss	xmm0, DWORD PTR mx$[rbp]
	movss	DWORD PTR tv83[rbp], xmm0
	jmp	SHORT $LN8@ImClamp
$LN7@ImClamp:
	mov	rax, QWORD PTR v$[rbp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR tv83[rbp], xmm0
$LN8@ImClamp:
	movss	xmm0, DWORD PTR tv83[rbp]
	movss	DWORD PTR tv84[rbp], xmm0
$LN10@ImClamp:
	movss	xmm2, DWORD PTR tv74[rbp]
	movss	xmm1, DWORD PTR tv84[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+80]
	pop	rbp
	ret	0
?ImClamp@@YA?AUImVec2@@AEBU1@0U1@@Z ENDP		; ImClamp
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?ImMax@@YA?AUImVec2@@AEBU1@0@Z
_TEXT	SEGMENT
tv71 = 64
tv78 = 68
__$ReturnUdt$ = 96
lhs$ = 104
rhs$ = 112
?ImMax@@YA?AUImVec2@@AEBU1@0@Z PROC			; ImMax, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 421
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR lhs$[rbp]
	mov	rcx, QWORD PTR rhs$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	comiss	xmm0, DWORD PTR [rcx+4]
	jb	SHORT $LN3@ImMax
	mov	rax, QWORD PTR lhs$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR tv71[rbp], xmm0
	jmp	SHORT $LN4@ImMax
$LN3@ImMax:
	mov	rax, QWORD PTR rhs$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR tv71[rbp], xmm0
$LN4@ImMax:
	mov	rax, QWORD PTR lhs$[rbp]
	mov	rcx, QWORD PTR rhs$[rbp]
	movss	xmm0, DWORD PTR [rax]
	comiss	xmm0, DWORD PTR [rcx]
	jb	SHORT $LN5@ImMax
	mov	rax, QWORD PTR lhs$[rbp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR tv78[rbp], xmm0
	jmp	SHORT $LN6@ImMax
$LN5@ImMax:
	mov	rax, QWORD PTR rhs$[rbp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR tv78[rbp], xmm0
$LN6@ImMax:
	movss	xmm2, DWORD PTR tv71[rbp]
	movss	xmm1, DWORD PTR tv78[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+80]
	pop	rbp
	ret	0
?ImMax@@YA?AUImVec2@@AEBU1@0@Z ENDP			; ImMax
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ?ImMin@@YA?AUImVec2@@AEBU1@0@Z
_TEXT	SEGMENT
tv71 = 64
tv78 = 68
__$ReturnUdt$ = 96
lhs$ = 104
rhs$ = 112
?ImMin@@YA?AUImVec2@@AEBU1@0@Z PROC			; ImMin, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 420
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 112				; 00000070H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR rhs$[rbp]
	mov	rcx, QWORD PTR lhs$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	comiss	xmm0, DWORD PTR [rcx+4]
	jbe	SHORT $LN3@ImMin
	mov	rax, QWORD PTR lhs$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR tv71[rbp], xmm0
	jmp	SHORT $LN4@ImMin
$LN3@ImMin:
	mov	rax, QWORD PTR rhs$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR tv71[rbp], xmm0
$LN4@ImMin:
	mov	rax, QWORD PTR rhs$[rbp]
	mov	rcx, QWORD PTR lhs$[rbp]
	movss	xmm0, DWORD PTR [rax]
	comiss	xmm0, DWORD PTR [rcx]
	jbe	SHORT $LN5@ImMin
	mov	rax, QWORD PTR lhs$[rbp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR tv78[rbp], xmm0
	jmp	SHORT $LN6@ImMin
$LN5@ImMin:
	mov	rax, QWORD PTR rhs$[rbp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR tv78[rbp], xmm0
$LN6@ImMin:
	movss	xmm2, DWORD PTR tv71[rbp]
	movss	xmm1, DWORD PTR tv78[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+80]
	pop	rbp
	ret	0
?ImMin@@YA?AUImVec2@@AEBU1@0@Z ENDP			; ImMin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImFileLoadToMemory@@YAPEAXPEBD0PEA_KH@Z
_TEXT	SEGMENT
f$ = 8
file_size$ = 40
file_data$ = 72
tv129 = 280
filename$ = 320
mode$ = 328
out_file_size$ = 336
padding_bytes$ = 344
?ImFileLoadToMemory@@YAPEAXPEBD0PEA_KH@Z PROC		; ImFileLoadToMemory, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1574
$LN12:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1575
	cmp	QWORD PTR filename$[rbp], 0
	je	SHORT $LN10@ImFileLoad
	cmp	QWORD PTR mode$[rbp], 0
	jne	SHORT $LN11@ImFileLoad
$LN10@ImFileLoad:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ImFileLoadToMemory@@YAPEAXPEBD0PEA_KH@Z@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CC@MDBCLFOC@?$AAf?$AAi?$AAl?$AAe?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAm?$AAo?$AAd@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN11@ImFileLoad:
; Line 1576
	cmp	QWORD PTR out_file_size$[rbp], 0
	je	SHORT $LN2@ImFileLoad
; Line 1577
	mov	rax, QWORD PTR out_file_size$[rbp]
	mov	QWORD PTR [rax], 0
$LN2@ImFileLoad:
; Line 1580
	mov	rdx, QWORD PTR mode$[rbp]
	mov	rcx, QWORD PTR filename$[rbp]
	call	?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z	; ImFileOpen
	mov	QWORD PTR f$[rbp], rax
	cmp	QWORD PTR f$[rbp], 0
	jne	SHORT $LN3@ImFileLoad
; Line 1581
	xor	eax, eax
	jmp	$LN1@ImFileLoad
$LN3@ImFileLoad:
; Line 1583
	mov	rcx, QWORD PTR f$[rbp]
	call	?ImFileGetSize@@YA_KPEAU_iobuf@@@Z	; ImFileGetSize
	mov	QWORD PTR file_size$[rbp], rax
; Line 1584
	cmp	QWORD PTR file_size$[rbp], -1
	jne	SHORT $LN4@ImFileLoad
; Line 1586
	mov	rcx, QWORD PTR f$[rbp]
	call	?ImFileClose@@YA_NPEAU_iobuf@@@Z	; ImFileClose
; Line 1587
	xor	eax, eax
	jmp	$LN1@ImFileLoad
$LN4@ImFileLoad:
; Line 1590
	movsxd	rax, DWORD PTR padding_bytes$[rbp]
	mov	rcx, QWORD PTR file_size$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR file_data$[rbp], rax
; Line 1591
	cmp	QWORD PTR file_data$[rbp], 0
	jne	SHORT $LN5@ImFileLoad
; Line 1593
	mov	rcx, QWORD PTR f$[rbp]
	call	?ImFileClose@@YA_NPEAU_iobuf@@@Z	; ImFileClose
; Line 1594
	xor	eax, eax
	jmp	$LN1@ImFileLoad
$LN5@ImFileLoad:
; Line 1596
	mov	r9, QWORD PTR f$[rbp]
	mov	r8, QWORD PTR file_size$[rbp]
	mov	edx, 1
	mov	rcx, QWORD PTR file_data$[rbp]
	call	?ImFileRead@@YA_KPEAX_K1PEAU_iobuf@@@Z	; ImFileRead
	cmp	rax, QWORD PTR file_size$[rbp]
	je	SHORT $LN6@ImFileLoad
; Line 1598
	mov	rcx, QWORD PTR f$[rbp]
	call	?ImFileClose@@YA_NPEAU_iobuf@@@Z	; ImFileClose
; Line 1599
	mov	rcx, QWORD PTR file_data$[rbp]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
; Line 1600
	xor	eax, eax
	jmp	SHORT $LN1@ImFileLoad
$LN6@ImFileLoad:
; Line 1602
	cmp	DWORD PTR padding_bytes$[rbp], 0
	jle	SHORT $LN7@ImFileLoad
; Line 1603
	movsxd	rax, DWORD PTR padding_bytes$[rbp]
	mov	QWORD PTR tv129[rbp], rax
	mov	rcx, QWORD PTR file_size$[rbp]
	mov	rdx, QWORD PTR file_data$[rbp]
	add	rdx, rcx
	mov	rcx, rdx
	mov	rdi, rcx
	xor	eax, eax
	mov	rcx, QWORD PTR tv129[rbp]
	rep stosb
$LN7@ImFileLoad:
; Line 1605
	mov	rcx, QWORD PTR f$[rbp]
	call	?ImFileClose@@YA_NPEAU_iobuf@@@Z	; ImFileClose
; Line 1606
	cmp	QWORD PTR out_file_size$[rbp], 0
	je	SHORT $LN8@ImFileLoad
; Line 1607
	mov	rax, QWORD PTR out_file_size$[rbp]
	mov	rcx, QWORD PTR file_size$[rbp]
	mov	QWORD PTR [rax], rcx
$LN8@ImFileLoad:
; Line 1609
	mov	rax, QWORD PTR file_data$[rbp]
$LN1@ImFileLoad:
; Line 1610
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?ImFileLoadToMemory@@YAPEAXPEBD0PEA_KH@Z ENDP		; ImFileLoadToMemory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImFileWrite@@YA_KPEBX_K1PEAU_iobuf@@@Z
_TEXT	SEGMENT
data$ = 224
sz$ = 232
count$ = 240
f$ = 248
?ImFileWrite@@YA_KPEBX_K1PEAU_iobuf@@@Z PROC		; ImFileWrite, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1567
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
	mov	r9, QWORD PTR f$[rbp]
	mov	r8, QWORD PTR count$[rbp]
	mov	rdx, QWORD PTR sz$[rbp]
	mov	rcx, QWORD PTR data$[rbp]
	call	QWORD PTR __imp_fwrite
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?ImFileWrite@@YA_KPEBX_K1PEAU_iobuf@@@Z ENDP		; ImFileWrite
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImFileRead@@YA_KPEAX_K1PEAU_iobuf@@@Z
_TEXT	SEGMENT
data$ = 224
sz$ = 232
count$ = 240
f$ = 248
?ImFileRead@@YA_KPEAX_K1PEAU_iobuf@@@Z PROC		; ImFileRead, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1566
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
	mov	r9, QWORD PTR f$[rbp]
	mov	r8, QWORD PTR count$[rbp]
	mov	rdx, QWORD PTR sz$[rbp]
	mov	rcx, QWORD PTR data$[rbp]
	call	QWORD PTR __imp_fread
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?ImFileRead@@YA_KPEAX_K1PEAU_iobuf@@@Z ENDP		; ImFileRead
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImFileGetSize@@YA_KPEAU_iobuf@@@Z
_TEXT	SEGMENT
off$ = 4
sz$ = 36
tv81 = 248
f$ = 288
?ImFileGetSize@@YA_KPEAU_iobuf@@@Z PROC			; ImFileGetSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1565
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
	mov	DWORD PTR off$[rbp], 0
	mov	DWORD PTR sz$[rbp], 0
	mov	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_ftell
	mov	DWORD PTR off$[rbp], eax
	cmp	DWORD PTR off$[rbp], -1
	je	SHORT $LN3@ImFileGetS
	mov	r8d, 2
	xor	edx, edx
	mov	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_fseek
	test	eax, eax
	jne	SHORT $LN3@ImFileGetS
	mov	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_ftell
	mov	DWORD PTR sz$[rbp], eax
	cmp	DWORD PTR sz$[rbp], -1
	je	SHORT $LN3@ImFileGetS
	xor	r8d, r8d
	mov	edx, DWORD PTR off$[rbp]
	mov	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_fseek
	test	eax, eax
	jne	SHORT $LN3@ImFileGetS
	movsxd	rax, DWORD PTR sz$[rbp]
	mov	QWORD PTR tv81[rbp], rax
	jmp	SHORT $LN4@ImFileGetS
$LN3@ImFileGetS:
	mov	QWORD PTR tv81[rbp], -1
$LN4@ImFileGetS:
	mov	rax, QWORD PTR tv81[rbp]
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?ImFileGetSize@@YA_KPEAU_iobuf@@@Z ENDP			; ImFileGetSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImFileClose@@YA_NPEAU_iobuf@@@Z
_TEXT	SEGMENT
tv67 = 192
f$ = 240
?ImFileClose@@YA_NPEAU_iobuf@@@Z PROC			; ImFileClose, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1564
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_fclose
	test	eax, eax
	jne	SHORT $LN3@ImFileClos
	mov	DWORD PTR tv67[rbp], 1
	jmp	SHORT $LN4@ImFileClos
$LN3@ImFileClos:
	mov	DWORD PTR tv67[rbp], 0
$LN4@ImFileClos:
	movzx	eax, BYTE PTR tv67[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?ImFileClose@@YA_NPEAU_iobuf@@@Z ENDP			; ImFileClose
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z
_TEXT	SEGMENT
filename_wsize$ = 4
mode_wsize$ = 36
buf$ = 72
$T4 = 312
tv146 = 328
tv144 = 336
__$ArrayPad$ = 344
filename$ = 384
mode$ = 392
?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z PROC			; ImFileOpen, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1547
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 408				; 00000198H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 42					; 0000002aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+440]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1551
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, -1
	mov	r8, QWORD PTR filename$[rbp]
	xor	edx, edx
	mov	ecx, 65001				; 0000fde9H
	call	QWORD PTR __imp_MultiByteToWideChar
	mov	DWORD PTR filename_wsize$[rbp], eax
; Line 1552
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, -1
	mov	r8, QWORD PTR mode$[rbp]
	xor	edx, edx
	mov	ecx, 65001				; 0000fde9H
	call	QWORD PTR __imp_MultiByteToWideChar
	mov	DWORD PTR mode_wsize$[rbp], eax
; Line 1553
	lea	rcx, QWORD PTR buf$[rbp]
	call	??0?$ImVector@G@@QEAA@XZ		; ImVector<unsigned short>::ImVector<unsigned short>
	npad	1
; Line 1554
	mov	eax, DWORD PTR mode_wsize$[rbp]
	mov	ecx, DWORD PTR filename_wsize$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	edx, eax
	lea	rcx, QWORD PTR buf$[rbp]
	call	?resize@?$ImVector@G@@QEAAXH@Z		; ImVector<unsigned short>::resize
; Line 1555
	xor	edx, edx
	lea	rcx, QWORD PTR buf$[rbp]
	call	??A?$ImVector@G@@QEAAAEAGH@Z		; ImVector<unsigned short>::operator[]
	mov	ecx, DWORD PTR filename_wsize$[rbp]
	mov	DWORD PTR [rsp+40], ecx
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, -1
	mov	r8, QWORD PTR filename$[rbp]
	xor	edx, edx
	mov	ecx, 65001				; 0000fde9H
	call	QWORD PTR __imp_MultiByteToWideChar
; Line 1556
	mov	edx, DWORD PTR filename_wsize$[rbp]
	lea	rcx, QWORD PTR buf$[rbp]
	call	??A?$ImVector@G@@QEAAAEAGH@Z		; ImVector<unsigned short>::operator[]
	mov	ecx, DWORD PTR mode_wsize$[rbp]
	mov	DWORD PTR [rsp+40], ecx
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, -1
	mov	r8, QWORD PTR mode$[rbp]
	xor	edx, edx
	mov	ecx, 65001				; 0000fde9H
	call	QWORD PTR __imp_MultiByteToWideChar
; Line 1557
	mov	edx, DWORD PTR filename_wsize$[rbp]
	lea	rcx, QWORD PTR buf$[rbp]
	call	??A?$ImVector@G@@QEAAAEAGH@Z		; ImVector<unsigned short>::operator[]
	mov	QWORD PTR tv146[rbp], rax
	xor	edx, edx
	lea	rcx, QWORD PTR buf$[rbp]
	call	??A?$ImVector@G@@QEAAAEAGH@Z		; ImVector<unsigned short>::operator[]
	mov	QWORD PTR tv144[rbp], rax
	mov	rdx, QWORD PTR tv146[rbp]
	mov	rcx, QWORD PTR tv144[rbp]
	call	QWORD PTR __imp__wfopen
	mov	QWORD PTR $T4[rbp], rax
	lea	rcx, QWORD PTR buf$[rbp]
	call	??1?$ImVector@G@@QEAA@XZ		; ImVector<unsigned short>::~ImVector<unsigned short>
	mov	rax, QWORD PTR $T4[rbp]
; Line 1561
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z ENDP			; ImFileOpen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
filename_wsize$ = 4
mode_wsize$ = 36
buf$ = 72
$T4 = 312
tv146 = 328
tv144 = 336
__$ArrayPad$ = 344
filename$ = 384
mode$ = 392
?dtor$0@?0??ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z@4HA PROC	; `ImFileOpen'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR buf$[rbp]
	call	??1?$ImVector@G@@QEAA@XZ		; ImVector<unsigned short>::~ImVector<unsigned short>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z@4HA ENDP	; `ImFileOpen'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??Z@YAAEAUImVec2@@AEAU0@AEBU0@@Z
_TEXT	SEGMENT
lhs$ = 80
rhs$ = 88
??Z@YAAEAUImVec2@@AEAU0@AEBU0@@Z PROC			; operator-=, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 349
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR lhs$[rbp]
	mov	rcx, QWORD PTR rhs$[rbp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR lhs$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR lhs$[rbp]
	mov	rcx, QWORD PTR rhs$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR lhs$[rbp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR lhs$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??Z@YAAEAUImVec2@@AEAU0@AEBU0@@Z ENDP			; operator-=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??Y@YAAEAUImVec2@@AEAU0@AEBU0@@Z
_TEXT	SEGMENT
lhs$ = 80
rhs$ = 88
??Y@YAAEAUImVec2@@AEAU0@AEBU0@@Z PROC			; operator+=, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 348
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR lhs$[rbp]
	mov	rcx, QWORD PTR rhs$[rbp]
	movss	xmm0, DWORD PTR [rax]
	addss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR lhs$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR lhs$[rbp]
	mov	rcx, QWORD PTR rhs$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	addss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR lhs$[rbp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR lhs$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??Y@YAAEAUImVec2@@AEAU0@AEBU0@@Z ENDP			; operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??X@YAAEAUImVec2@@AEAU0@M@Z
_TEXT	SEGMENT
lhs$ = 80
rhs$ = 88
??X@YAAEAUImVec2@@AEAU0@M@Z PROC			; operator*=, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 346
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR lhs$[rbp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR rhs$[rbp]
	mov	rax, QWORD PTR lhs$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR lhs$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	mulss	xmm0, DWORD PTR rhs$[rbp]
	mov	rax, QWORD PTR lhs$[rbp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR lhs$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??X@YAAEAUImVec2@@AEAU0@M@Z ENDP			; operator*=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??K@YA?AUImVec2@@AEBU0@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 80
lhs$ = 88
rhs$ = 96
??K@YA?AUImVec2@@AEBU0@0@Z PROC				; operator/, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 345
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR lhs$[rbp]
	mov	rcx, QWORD PTR rhs$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	divss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR lhs$[rbp]
	mov	rcx, QWORD PTR rhs$[rbp]
	movss	xmm1, DWORD PTR [rax]
	divss	xmm1, DWORD PTR [rcx]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??K@YA?AUImVec2@@AEBU0@0@Z ENDP				; operator/
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??D@YA?AUImVec2@@AEBU0@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 80
lhs$ = 88
rhs$ = 96
??D@YA?AUImVec2@@AEBU0@0@Z PROC				; operator*, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 344
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR lhs$[rbp]
	mov	rcx, QWORD PTR rhs$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	mulss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR lhs$[rbp]
	mov	rcx, QWORD PTR rhs$[rbp]
	movss	xmm1, DWORD PTR [rax]
	mulss	xmm1, DWORD PTR [rcx]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??D@YA?AUImVec2@@AEBU0@0@Z ENDP				; operator*
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??G@YA?AUImVec2@@AEBU0@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 80
lhs$ = 88
rhs$ = 96
??G@YA?AUImVec2@@AEBU0@0@Z PROC				; operator-, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 343
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR lhs$[rbp]
	mov	rcx, QWORD PTR rhs$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR lhs$[rbp]
	mov	rcx, QWORD PTR rhs$[rbp]
	movss	xmm1, DWORD PTR [rax]
	subss	xmm1, DWORD PTR [rcx]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??G@YA?AUImVec2@@AEBU0@0@Z ENDP				; operator-
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??H@YA?AUImVec2@@AEBU0@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 80
lhs$ = 88
rhs$ = 96
??H@YA?AUImVec2@@AEBU0@0@Z PROC				; operator+, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 342
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR lhs$[rbp]
	mov	rcx, QWORD PTR rhs$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	addss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR lhs$[rbp]
	mov	rcx, QWORD PTR rhs$[rbp]
	movss	xmm1, DWORD PTR [rax]
	addss	xmm1, DWORD PTR [rcx]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??H@YA?AUImVec2@@AEBU0@0@Z ENDP				; operator+
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??K@YA?AUImVec2@@AEBU0@M@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 80
lhs$ = 88
rhs$ = 96
??K@YA?AUImVec2@@AEBU0@M@Z PROC				; operator/, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 341
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR lhs$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	divss	xmm0, DWORD PTR rhs$[rbp]
	mov	rax, QWORD PTR lhs$[rbp]
	movss	xmm1, DWORD PTR [rax]
	divss	xmm1, DWORD PTR rhs$[rbp]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??K@YA?AUImVec2@@AEBU0@M@Z ENDP				; operator/
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??D@YA?AUImVec2@@AEBU0@M@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 80
lhs$ = 88
rhs$ = 96
??D@YA?AUImVec2@@AEBU0@M@Z PROC				; operator*, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 340
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR lhs$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	mulss	xmm0, DWORD PTR rhs$[rbp]
	mov	rax, QWORD PTR lhs$[rbp]
	movss	xmm1, DWORD PTR [rax]
	mulss	xmm1, DWORD PTR rhs$[rbp]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??D@YA?AUImVec2@@AEBU0@M@Z ENDP				; operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImTextCountUtf8BytesFromStr@@YAHPEBG0@Z
_TEXT	SEGMENT
bytes_count$ = 4
c$1 = 36
tv71 = 244
in_text$ = 288
in_text_end$ = 296
?ImTextCountUtf8BytesFromStr@@YAHPEBG0@Z PROC		; ImTextCountUtf8BytesFromStr, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1779
$LN8:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1780
	mov	DWORD PTR bytes_count$[rbp], 0
$LN2@ImTextCoun:
; Line 1781
	cmp	QWORD PTR in_text_end$[rbp], 0
	je	SHORT $LN4@ImTextCoun
	mov	rax, QWORD PTR in_text_end$[rbp]
	cmp	QWORD PTR in_text$[rbp], rax
	jae	SHORT $LN3@ImTextCoun
$LN4@ImTextCoun:
	mov	rax, QWORD PTR in_text$[rbp]
	movzx	eax, WORD PTR [rax]
	test	eax, eax
	je	SHORT $LN3@ImTextCoun
; Line 1783
	mov	rax, QWORD PTR in_text$[rbp]
	movzx	eax, WORD PTR [rax]
	mov	DWORD PTR tv71[rbp], eax
	mov	rax, QWORD PTR in_text$[rbp]
	add	rax, 2
	mov	QWORD PTR in_text$[rbp], rax
	mov	eax, DWORD PTR tv71[rbp]
	mov	DWORD PTR c$1[rbp], eax
; Line 1784
	cmp	DWORD PTR c$1[rbp], 128			; 00000080H
	jae	SHORT $LN5@ImTextCoun
; Line 1785
	mov	eax, DWORD PTR bytes_count$[rbp]
	inc	eax
	mov	DWORD PTR bytes_count$[rbp], eax
	jmp	SHORT $LN6@ImTextCoun
$LN5@ImTextCoun:
; Line 1787
	mov	ecx, DWORD PTR c$1[rbp]
	call	?ImTextCountUtf8BytesFromChar@@YAHI@Z	; ImTextCountUtf8BytesFromChar
	mov	ecx, DWORD PTR bytes_count$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR bytes_count$[rbp], eax
$LN6@ImTextCoun:
; Line 1788
	jmp	SHORT $LN2@ImTextCoun
$LN3@ImTextCoun:
; Line 1789
	mov	eax, DWORD PTR bytes_count$[rbp]
; Line 1790
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?ImTextCountUtf8BytesFromStr@@YAHPEBG0@Z ENDP		; ImTextCountUtf8BytesFromStr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImTextCountUtf8BytesFromChar@@YAHPEBD0@Z
_TEXT	SEGMENT
unused$ = 4
__$ArrayPad$ = 216
in_text$ = 256
in_text_end$ = 264
?ImTextCountUtf8BytesFromChar@@YAHPEBD0@Z PROC		; ImTextCountUtf8BytesFromChar, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1748
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 10
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1749
	mov	DWORD PTR unused$[rbp], 0
; Line 1750
	mov	r8, QWORD PTR in_text_end$[rbp]
	mov	rdx, QWORD PTR in_text$[rbp]
	lea	rcx, QWORD PTR unused$[rbp]
	call	?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z	; ImTextCharFromUtf8
; Line 1751
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?ImTextCountUtf8BytesFromChar@@YAHPEBD0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?ImTextCountUtf8BytesFromChar@@YAHPEBD0@Z ENDP		; ImTextCountUtf8BytesFromChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImTextCountCharsFromUtf8@@YAHPEBD0@Z
_TEXT	SEGMENT
char_count$ = 4
c$4 = 36
__$ArrayPad$ = 248
in_text$ = 288
in_text_end$ = 296
?ImTextCountCharsFromUtf8@@YAHPEBD0@Z PROC		; ImTextCountCharsFromUtf8, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1690
$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 18
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1691
	mov	DWORD PTR char_count$[rbp], 0
$LN2@ImTextCoun:
; Line 1692
	cmp	QWORD PTR in_text_end$[rbp], 0
	je	SHORT $LN4@ImTextCoun
	mov	rax, QWORD PTR in_text_end$[rbp]
	cmp	QWORD PTR in_text$[rbp], rax
	jae	SHORT $LN3@ImTextCoun
$LN4@ImTextCoun:
	mov	rax, QWORD PTR in_text$[rbp]
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN3@ImTextCoun
; Line 1695
	mov	r8, QWORD PTR in_text_end$[rbp]
	mov	rdx, QWORD PTR in_text$[rbp]
	lea	rcx, QWORD PTR c$4[rbp]
	call	?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z	; ImTextCharFromUtf8
	cdqe
	mov	rcx, QWORD PTR in_text$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR in_text$[rbp], rax
; Line 1696
	cmp	DWORD PTR c$4[rbp], 0
	jne	SHORT $LN5@ImTextCoun
; Line 1697
	jmp	SHORT $LN3@ImTextCoun
$LN5@ImTextCoun:
; Line 1698
	mov	eax, DWORD PTR char_count$[rbp]
	inc	eax
	mov	DWORD PTR char_count$[rbp], eax
; Line 1699
	jmp	SHORT $LN2@ImTextCoun
$LN3@ImTextCoun:
; Line 1700
	mov	eax, DWORD PTR char_count$[rbp]
; Line 1701
	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?ImTextCountCharsFromUtf8@@YAHPEBD0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?ImTextCountCharsFromUtf8@@YAHPEBD0@Z ENDP		; ImTextCountCharsFromUtf8
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImTextStrFromUtf8@@YAHPEAGHPEBD1PEAPEBD@Z
_TEXT	SEGMENT
buf_out$ = 8
buf_end$ = 40
c$4 = 68
__$ArrayPad$ = 280
buf$ = 320
buf_size$ = 328
in_text$ = 336
in_text_end$ = 344
in_text_remaining$ = 352
?ImTextStrFromUtf8@@YAHPEAGHPEBD1PEAPEBD@Z PROC		; ImTextStrFromUtf8, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1672
$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1673
	mov	rax, QWORD PTR buf$[rbp]
	mov	QWORD PTR buf_out$[rbp], rax
; Line 1674
	movsxd	rax, DWORD PTR buf_size$[rbp]
	mov	rcx, QWORD PTR buf$[rbp]
	lea	rax, QWORD PTR [rcx+rax*2]
	mov	QWORD PTR buf_end$[rbp], rax
$LN2@ImTextStrF:
; Line 1675
	mov	rax, QWORD PTR buf_end$[rbp]
	sub	rax, 2
	cmp	QWORD PTR buf_out$[rbp], rax
	jae	SHORT $LN3@ImTextStrF
	cmp	QWORD PTR in_text_end$[rbp], 0
	je	SHORT $LN4@ImTextStrF
	mov	rax, QWORD PTR in_text_end$[rbp]
	cmp	QWORD PTR in_text$[rbp], rax
	jae	SHORT $LN3@ImTextStrF
$LN4@ImTextStrF:
	mov	rax, QWORD PTR in_text$[rbp]
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN3@ImTextStrF
; Line 1678
	mov	r8, QWORD PTR in_text_end$[rbp]
	mov	rdx, QWORD PTR in_text$[rbp]
	lea	rcx, QWORD PTR c$4[rbp]
	call	?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z	; ImTextCharFromUtf8
	cdqe
	mov	rcx, QWORD PTR in_text$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR in_text$[rbp], rax
; Line 1679
	cmp	DWORD PTR c$4[rbp], 0
	jne	SHORT $LN5@ImTextStrF
; Line 1680
	jmp	SHORT $LN3@ImTextStrF
$LN5@ImTextStrF:
; Line 1681
	mov	rax, QWORD PTR buf_out$[rbp]
	movzx	ecx, WORD PTR c$4[rbp]
	mov	WORD PTR [rax], cx
	mov	rax, QWORD PTR buf_out$[rbp]
	add	rax, 2
	mov	QWORD PTR buf_out$[rbp], rax
; Line 1682
	jmp	$LN2@ImTextStrF
$LN3@ImTextStrF:
; Line 1683
	xor	eax, eax
	mov	rcx, QWORD PTR buf_out$[rbp]
	mov	WORD PTR [rcx], ax
; Line 1684
	cmp	QWORD PTR in_text_remaining$[rbp], 0
	je	SHORT $LN6@ImTextStrF
; Line 1685
	mov	rax, QWORD PTR in_text_remaining$[rbp]
	mov	rcx, QWORD PTR in_text$[rbp]
	mov	QWORD PTR [rax], rcx
$LN6@ImTextStrF:
; Line 1686
	mov	rax, QWORD PTR buf$[rbp]
	mov	rcx, QWORD PTR buf_out$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
; Line 1687
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?ImTextStrFromUtf8@@YAHPEAGHPEBD1PEAPEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?ImTextStrFromUtf8@@YAHPEAGHPEBD1PEAPEBD@Z ENDP		; ImTextStrFromUtf8
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z
_TEXT	SEGMENT
len$ = 4
wanted$ = 36
s$ = 68
e$ = 100
tv215 = 308
tv184 = 308
tv180 = 308
tv176 = 308
tv141 = 308
tv132 = 308
tv91 = 308
tv82 = 308
tv71 = 308
tv294 = 312
tv220 = 312
tv226 = 316
tv232 = 320
out_char$ = 368
in_text$ = 376
in_text_end$ = 384
?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z PROC		; ImTextCharFromUtf8, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1620
$LN29:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1626
	mov	rax, QWORD PTR in_text$[rbp]
	movzx	eax, BYTE PTR [rax]
	sar	eax, 3
	cdqe
	lea	rcx, OFFSET FLAT:?lengths@?1??ImTextCharFromUtf8@@YAHPEAIPEBD1@Z@4QBDB
	movsx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR len$[rbp], eax
; Line 1627
	cmp	DWORD PTR len$[rbp], 0
	jne	SHORT $LN5@ImTextChar
	mov	DWORD PTR tv71[rbp], 1
	jmp	SHORT $LN6@ImTextChar
$LN5@ImTextChar:
	mov	DWORD PTR tv71[rbp], 0
$LN6@ImTextChar:
	mov	eax, DWORD PTR tv71[rbp]
	mov	ecx, DWORD PTR len$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR wanted$[rbp], eax
; Line 1629
	cmp	QWORD PTR in_text_end$[rbp], 0
	jne	SHORT $LN2@ImTextChar
; Line 1630
	movsxd	rax, DWORD PTR wanted$[rbp]
	mov	rcx, QWORD PTR in_text$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR in_text_end$[rbp], rax
$LN2@ImTextChar:
; Line 1635
	mov	rax, QWORD PTR in_text_end$[rbp]
	cmp	QWORD PTR in_text$[rbp], rax
	jae	SHORT $LN7@ImTextChar
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR in_text$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR tv82[rbp], eax
	jmp	SHORT $LN8@ImTextChar
$LN7@ImTextChar:
	mov	DWORD PTR tv82[rbp], 0
$LN8@ImTextChar:
	mov	eax, 1
	imul	rax, rax, 0
	movzx	ecx, BYTE PTR tv82[rbp]
	mov	BYTE PTR s$[rbp+rax], cl
; Line 1636
	mov	rax, QWORD PTR in_text$[rbp]
	inc	rax
	cmp	rax, QWORD PTR in_text_end$[rbp]
	jae	SHORT $LN9@ImTextChar
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR in_text$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR tv91[rbp], eax
	jmp	SHORT $LN10@ImTextChar
$LN9@ImTextChar:
	mov	DWORD PTR tv91[rbp], 0
$LN10@ImTextChar:
	mov	eax, 1
	imul	rax, rax, 1
	movzx	ecx, BYTE PTR tv91[rbp]
	mov	BYTE PTR s$[rbp+rax], cl
; Line 1637
	mov	rax, QWORD PTR in_text$[rbp]
	add	rax, 2
	cmp	rax, QWORD PTR in_text_end$[rbp]
	jae	SHORT $LN11@ImTextChar
	mov	eax, 1
	imul	rax, rax, 2
	mov	rcx, QWORD PTR in_text$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR tv132[rbp], eax
	jmp	SHORT $LN12@ImTextChar
$LN11@ImTextChar:
	mov	DWORD PTR tv132[rbp], 0
$LN12@ImTextChar:
	mov	eax, 1
	imul	rax, rax, 2
	movzx	ecx, BYTE PTR tv132[rbp]
	mov	BYTE PTR s$[rbp+rax], cl
; Line 1638
	mov	rax, QWORD PTR in_text$[rbp]
	add	rax, 3
	cmp	rax, QWORD PTR in_text_end$[rbp]
	jae	SHORT $LN13@ImTextChar
	mov	eax, 1
	imul	rax, rax, 3
	mov	rcx, QWORD PTR in_text$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR tv141[rbp], eax
	jmp	SHORT $LN14@ImTextChar
$LN13@ImTextChar:
	mov	DWORD PTR tv141[rbp], 0
$LN14@ImTextChar:
	mov	eax, 1
	imul	rax, rax, 3
	movzx	ecx, BYTE PTR tv141[rbp]
	mov	BYTE PTR s$[rbp+rax], cl
; Line 1641
	mov	eax, 1
	imul	rax, rax, 0
	movzx	eax, BYTE PTR s$[rbp+rax]
	movsxd	rcx, DWORD PTR len$[rbp]
	lea	rdx, OFFSET FLAT:?masks@?1??ImTextCharFromUtf8@@YAHPEAIPEBD1@Z@4QBHB
	and	eax, DWORD PTR [rdx+rcx*4]
	shl	eax, 18
	mov	rcx, QWORD PTR out_char$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 1642
	mov	eax, 1
	imul	rax, rax, 1
	movzx	eax, BYTE PTR s$[rbp+rax]
	and	eax, 63					; 0000003fH
	shl	eax, 12
	mov	rcx, QWORD PTR out_char$[rbp]
	mov	ecx, DWORD PTR [rcx]
	or	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR out_char$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 1643
	mov	eax, 1
	imul	rax, rax, 2
	movzx	eax, BYTE PTR s$[rbp+rax]
	and	eax, 63					; 0000003fH
	shl	eax, 6
	mov	rcx, QWORD PTR out_char$[rbp]
	mov	ecx, DWORD PTR [rcx]
	or	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR out_char$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 1644
	mov	eax, 1
	imul	rax, rax, 3
	movzx	eax, BYTE PTR s$[rbp+rax]
	and	eax, 63					; 0000003fH
	mov	rcx, QWORD PTR out_char$[rbp]
	mov	ecx, DWORD PTR [rcx]
	or	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR out_char$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 1645
	movsxd	rax, DWORD PTR len$[rbp]
	lea	rcx, OFFSET FLAT:?shiftc@?1??ImTextCharFromUtf8@@YAHPEAIPEBD1@Z@4QBHB
	mov	eax, DWORD PTR [rcx+rax*4]
	mov	rcx, QWORD PTR out_char$[rbp]
	mov	QWORD PTR tv294[rbp], rcx
	movzx	ecx, al
	mov	rax, QWORD PTR tv294[rbp]
	mov	eax, DWORD PTR [rax]
	shr	eax, cl
	mov	rcx, QWORD PTR out_char$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 1648
	mov	DWORD PTR e$[rbp], 0
; Line 1649
	movsxd	rax, DWORD PTR len$[rbp]
	lea	rcx, OFFSET FLAT:?mins@?1??ImTextCharFromUtf8@@YAHPEAIPEBD1@Z@4QBIB
	mov	rdx, QWORD PTR out_char$[rbp]
	mov	eax, DWORD PTR [rcx+rax*4]
	cmp	DWORD PTR [rdx], eax
	jae	SHORT $LN15@ImTextChar
	mov	DWORD PTR tv176[rbp], 1
	jmp	SHORT $LN16@ImTextChar
$LN15@ImTextChar:
	mov	DWORD PTR tv176[rbp], 0
$LN16@ImTextChar:
	mov	eax, DWORD PTR tv176[rbp]
	shl	eax, 6
	mov	DWORD PTR e$[rbp], eax
; Line 1650
	mov	rax, QWORD PTR out_char$[rbp]
	mov	eax, DWORD PTR [rax]
	shr	eax, 11
	cmp	eax, 27
	jne	SHORT $LN17@ImTextChar
	mov	DWORD PTR tv180[rbp], 1
	jmp	SHORT $LN18@ImTextChar
$LN17@ImTextChar:
	mov	DWORD PTR tv180[rbp], 0
$LN18@ImTextChar:
	mov	eax, DWORD PTR tv180[rbp]
	shl	eax, 7
	mov	ecx, DWORD PTR e$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR e$[rbp], eax
; Line 1651
	mov	rax, QWORD PTR out_char$[rbp]
	cmp	DWORD PTR [rax], 65535			; 0000ffffH
	jbe	SHORT $LN19@ImTextChar
	mov	DWORD PTR tv184[rbp], 1
	jmp	SHORT $LN20@ImTextChar
$LN19@ImTextChar:
	mov	DWORD PTR tv184[rbp], 0
$LN20@ImTextChar:
	mov	eax, DWORD PTR tv184[rbp]
	shl	eax, 8
	mov	ecx, DWORD PTR e$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR e$[rbp], eax
; Line 1652
	mov	eax, 1
	imul	rax, rax, 1
	movzx	eax, BYTE PTR s$[rbp+rax]
	and	eax, 192				; 000000c0H
	sar	eax, 2
	mov	ecx, DWORD PTR e$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR e$[rbp], eax
; Line 1653
	mov	eax, 1
	imul	rax, rax, 2
	movzx	eax, BYTE PTR s$[rbp+rax]
	and	eax, 192				; 000000c0H
	sar	eax, 4
	mov	ecx, DWORD PTR e$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR e$[rbp], eax
; Line 1654
	mov	eax, 1
	imul	rax, rax, 3
	movzx	eax, BYTE PTR s$[rbp+rax]
	sar	eax, 6
	mov	ecx, DWORD PTR e$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR e$[rbp], eax
; Line 1655
	mov	eax, DWORD PTR e$[rbp]
	xor	eax, 42					; 0000002aH
	mov	DWORD PTR e$[rbp], eax
; Line 1656
	movsxd	rax, DWORD PTR len$[rbp]
	lea	rcx, OFFSET FLAT:?shifte@?1??ImTextCharFromUtf8@@YAHPEAIPEBD1@Z@4QBHB
	mov	eax, DWORD PTR [rcx+rax*4]
	movzx	ecx, al
	mov	eax, DWORD PTR e$[rbp]
	sar	eax, cl
	mov	DWORD PTR e$[rbp], eax
; Line 1658
	cmp	DWORD PTR e$[rbp], 0
	je	$LN3@ImTextChar
; Line 1664
	mov	eax, 1
	imul	rax, rax, 0
	movzx	eax, BYTE PTR s$[rbp+rax]
	test	eax, eax
	je	SHORT $LN21@ImTextChar
	mov	DWORD PTR tv215[rbp], 1
	jmp	SHORT $LN22@ImTextChar
$LN21@ImTextChar:
	mov	DWORD PTR tv215[rbp], 0
$LN22@ImTextChar:
	mov	eax, 1
	imul	rax, rax, 1
	movzx	eax, BYTE PTR s$[rbp+rax]
	test	eax, eax
	je	SHORT $LN23@ImTextChar
	mov	DWORD PTR tv220[rbp], 1
	jmp	SHORT $LN24@ImTextChar
$LN23@ImTextChar:
	mov	DWORD PTR tv220[rbp], 0
$LN24@ImTextChar:
	mov	eax, 1
	imul	rax, rax, 2
	movzx	eax, BYTE PTR s$[rbp+rax]
	test	eax, eax
	je	SHORT $LN25@ImTextChar
	mov	DWORD PTR tv226[rbp], 1
	jmp	SHORT $LN26@ImTextChar
$LN25@ImTextChar:
	mov	DWORD PTR tv226[rbp], 0
$LN26@ImTextChar:
	mov	eax, 1
	imul	rax, rax, 3
	movzx	eax, BYTE PTR s$[rbp+rax]
	test	eax, eax
	je	SHORT $LN27@ImTextChar
	mov	DWORD PTR tv232[rbp], 1
	jmp	SHORT $LN28@ImTextChar
$LN27@ImTextChar:
	mov	DWORD PTR tv232[rbp], 0
$LN28@ImTextChar:
	mov	eax, DWORD PTR tv220[rbp]
	mov	ecx, DWORD PTR tv215[rbp]
	add	ecx, eax
	mov	eax, ecx
	add	eax, DWORD PTR tv226[rbp]
	add	eax, DWORD PTR tv232[rbp]
	mov	edx, eax
	mov	ecx, DWORD PTR wanted$[rbp]
	call	??$ImMin@H@@YAHHH@Z			; ImMin<int>
	mov	DWORD PTR wanted$[rbp], eax
; Line 1665
	mov	rax, QWORD PTR out_char$[rbp]
	mov	DWORD PTR [rax], 65533			; 0000fffdH
$LN3@ImTextChar:
; Line 1668
	mov	eax, DWORD PTR wanted$[rbp]
; Line 1669
	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	lea	rsp, QWORD PTR [rbp+344]
	pop	rdi
	pop	rbp
	ret	0
?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z ENDP		; ImTextCharFromUtf8
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImTextStrToUtf8@@YAHPEADHPEBG1@Z
_TEXT	SEGMENT
buf_p$ = 8
buf_end$ = 40
c$1 = 68
tv75 = 276
out_buf$ = 320
out_buf_size$ = 328
in_text$ = 336
in_text_end$ = 344
?ImTextStrToUtf8@@YAHPEADHPEBG1@Z PROC			; ImTextStrToUtf8, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1763
$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1764
	mov	rax, QWORD PTR out_buf$[rbp]
	mov	QWORD PTR buf_p$[rbp], rax
; Line 1765
	movsxd	rax, DWORD PTR out_buf_size$[rbp]
	mov	rcx, QWORD PTR out_buf$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR buf_end$[rbp], rax
$LN2@ImTextStrT:
; Line 1766
	mov	rax, QWORD PTR buf_end$[rbp]
	dec	rax
	cmp	QWORD PTR buf_p$[rbp], rax
	jae	$LN3@ImTextStrT
	cmp	QWORD PTR in_text_end$[rbp], 0
	je	SHORT $LN4@ImTextStrT
	mov	rax, QWORD PTR in_text_end$[rbp]
	cmp	QWORD PTR in_text$[rbp], rax
	jae	$LN3@ImTextStrT
$LN4@ImTextStrT:
	mov	rax, QWORD PTR in_text$[rbp]
	movzx	eax, WORD PTR [rax]
	test	eax, eax
	je	$LN3@ImTextStrT
; Line 1768
	mov	rax, QWORD PTR in_text$[rbp]
	movzx	eax, WORD PTR [rax]
	mov	DWORD PTR tv75[rbp], eax
	mov	rax, QWORD PTR in_text$[rbp]
	add	rax, 2
	mov	QWORD PTR in_text$[rbp], rax
	mov	eax, DWORD PTR tv75[rbp]
	mov	DWORD PTR c$1[rbp], eax
; Line 1769
	cmp	DWORD PTR c$1[rbp], 128			; 00000080H
	jae	SHORT $LN5@ImTextStrT
; Line 1770
	mov	rax, QWORD PTR buf_p$[rbp]
	movzx	ecx, BYTE PTR c$1[rbp]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR buf_p$[rbp]
	inc	rax
	mov	QWORD PTR buf_p$[rbp], rax
	jmp	SHORT $LN6@ImTextStrT
$LN5@ImTextStrT:
; Line 1772
	mov	rax, QWORD PTR buf_p$[rbp]
	mov	rcx, QWORD PTR buf_end$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	dec	rax
	mov	r8d, DWORD PTR c$1[rbp]
	mov	edx, eax
	mov	rcx, QWORD PTR buf_p$[rbp]
	call	?ImTextCharToUtf8_inline@@YAHPEADHI@Z	; ImTextCharToUtf8_inline
	cdqe
	mov	rcx, QWORD PTR buf_p$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR buf_p$[rbp], rax
$LN6@ImTextStrT:
; Line 1773
	jmp	$LN2@ImTextStrT
$LN3@ImTextStrT:
; Line 1774
	mov	rax, QWORD PTR buf_p$[rbp]
	mov	BYTE PTR [rax], 0
; Line 1775
	mov	rax, QWORD PTR out_buf$[rbp]
	mov	rcx, QWORD PTR buf_p$[rbp]
	sub	rcx, rax
	mov	rax, rcx
; Line 1776
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?ImTextStrToUtf8@@YAHPEADHPEBG1@Z ENDP			; ImTextStrToUtf8
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImTextCharToUtf8@@YAPEBDQEADI@Z
_TEXT	SEGMENT
count$ = 4
out_buf$ = 256
c$ = 264
?ImTextCharToUtf8@@YAPEBDQEADI@Z PROC			; ImTextCharToUtf8, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1740
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1741
	mov	r8d, DWORD PTR c$[rbp]
	mov	edx, 5
	mov	rcx, QWORD PTR out_buf$[rbp]
	call	?ImTextCharToUtf8_inline@@YAHPEADHI@Z	; ImTextCharToUtf8_inline
	mov	DWORD PTR count$[rbp], eax
; Line 1742
	movsxd	rax, DWORD PTR count$[rbp]
	mov	rcx, QWORD PTR out_buf$[rbp]
	mov	BYTE PTR [rcx+rax], 0
; Line 1743
	mov	rax, QWORD PTR out_buf$[rbp]
; Line 1744
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?ImTextCharToUtf8@@YAPEBDQEADI@Z ENDP			; ImTextCharToUtf8
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImCharIsBlankA@@YA_ND@Z
_TEXT	SEGMENT
tv68 = 192
c$ = 240
?ImCharIsBlankA@@YA_ND@Z PROC				; ImCharIsBlankA, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 323
	mov	BYTE PTR [rsp+8], cl
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	movsx	eax, BYTE PTR c$[rbp]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN3@ImCharIsBl
	movsx	eax, BYTE PTR c$[rbp]
	cmp	eax, 9
	je	SHORT $LN3@ImCharIsBl
	mov	DWORD PTR tv68[rbp], 0
	jmp	SHORT $LN4@ImCharIsBl
$LN3@ImCharIsBl:
	mov	DWORD PTR tv68[rbp], 1
$LN4@ImCharIsBl:
	movzx	eax, BYTE PTR tv68[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?ImCharIsBlankA@@YA_ND@Z ENDP				; ImCharIsBlankA
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImFormatStringV@@YAHPEAD_KPEBD0@Z
_TEXT	SEGMENT
w$ = 4
buf$ = 256
buf_size$ = 264
fmt$ = 272
args$ = 280
?ImFormatStringV@@YAHPEAD_KPEBD0@Z PROC			; ImFormatStringV, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1454
$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1458
	mov	r9, QWORD PTR args$[rbp]
	mov	r8, QWORD PTR fmt$[rbp]
	mov	rdx, QWORD PTR buf_size$[rbp]
	mov	rcx, QWORD PTR buf$[rbp]
	call	_vsnprintf
	mov	DWORD PTR w$[rbp], eax
; Line 1460
	cmp	QWORD PTR buf$[rbp], 0
	jne	SHORT $LN2@ImFormatSt
; Line 1461
	mov	eax, DWORD PTR w$[rbp]
	jmp	SHORT $LN1@ImFormatSt
$LN2@ImFormatSt:
; Line 1462
	cmp	DWORD PTR w$[rbp], -1
	je	SHORT $LN4@ImFormatSt
	mov	eax, DWORD PTR buf_size$[rbp]
	cmp	DWORD PTR w$[rbp], eax
	jl	SHORT $LN3@ImFormatSt
$LN4@ImFormatSt:
; Line 1463
	mov	eax, DWORD PTR buf_size$[rbp]
	dec	eax
	mov	DWORD PTR w$[rbp], eax
$LN3@ImFormatSt:
; Line 1464
	movsxd	rax, DWORD PTR w$[rbp]
	mov	rcx, QWORD PTR buf$[rbp]
	mov	BYTE PTR [rcx+rax], 0
; Line 1465
	mov	eax, DWORD PTR w$[rbp]
$LN1@ImFormatSt:
; Line 1466
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?ImFormatStringV@@YAHPEAD_KPEBD0@Z ENDP			; ImFormatStringV
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImFormatString@@YAHPEAD_KPEBDZZ
_TEXT	SEGMENT
args$ = 8
w$ = 36
__$ArrayPad$ = 280
buf$ = 320
buf_size$ = 328
fmt$ = 336
?ImFormatString@@YAHPEAD_KPEBDZZ PROC			; ImFormatString, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1436
$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+32], r9
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1438
	lea	rax, QWORD PTR fmt$[rbp+8]
	mov	QWORD PTR args$[rbp], rax
; Line 1442
	mov	r9, QWORD PTR args$[rbp]
	mov	r8, QWORD PTR fmt$[rbp]
	mov	rdx, QWORD PTR buf_size$[rbp]
	mov	rcx, QWORD PTR buf$[rbp]
	call	_vsnprintf
	mov	DWORD PTR w$[rbp], eax
; Line 1444
	mov	QWORD PTR args$[rbp], 0
; Line 1445
	cmp	QWORD PTR buf$[rbp], 0
	jne	SHORT $LN2@ImFormatSt
; Line 1446
	mov	eax, DWORD PTR w$[rbp]
	jmp	SHORT $LN1@ImFormatSt
$LN2@ImFormatSt:
; Line 1447
	cmp	DWORD PTR w$[rbp], -1
	je	SHORT $LN4@ImFormatSt
	mov	eax, DWORD PTR buf_size$[rbp]
	cmp	DWORD PTR w$[rbp], eax
	jl	SHORT $LN3@ImFormatSt
$LN4@ImFormatSt:
; Line 1448
	mov	eax, DWORD PTR buf_size$[rbp]
	dec	eax
	mov	DWORD PTR w$[rbp], eax
$LN3@ImFormatSt:
; Line 1449
	movsxd	rax, DWORD PTR w$[rbp]
	mov	rcx, QWORD PTR buf$[rbp]
	mov	BYTE PTR [rcx+rax], 0
; Line 1450
	mov	eax, DWORD PTR w$[rbp]
$LN1@ImFormatSt:
; Line 1451
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?ImFormatString@@YAHPEAD_KPEBDZZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?ImFormatString@@YAHPEAD_KPEBDZZ ENDP			; ImFormatString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImStrSkipBlank@@YAPEBDPEBD@Z
_TEXT	SEGMENT
str$ = 224
?ImStrSkipBlank@@YAPEBDPEBD@Z PROC			; ImStrSkipBlank, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1411
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
$LN2@ImStrSkipB:
; Line 1412
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR str$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN4@ImStrSkipB
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR str$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 9
	jne	SHORT $LN3@ImStrSkipB
$LN4@ImStrSkipB:
; Line 1413
	mov	rax, QWORD PTR str$[rbp]
	inc	rax
	mov	QWORD PTR str$[rbp], rax
	jmp	SHORT $LN2@ImStrSkipB
$LN3@ImStrSkipB:
; Line 1414
	mov	rax, QWORD PTR str$[rbp]
; Line 1415
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?ImStrSkipBlank@@YAPEBDPEBD@Z ENDP			; ImStrSkipBlank
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImStrTrimBlanks@@YAXPEAD@Z
_TEXT	SEGMENT
p$ = 8
p_start$ = 40
buf$ = 288
?ImStrTrimBlanks@@YAXPEAD@Z PROC			; ImStrTrimBlanks, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1396
$LN12:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1397
	mov	rax, QWORD PTR buf$[rbp]
	mov	QWORD PTR p$[rbp], rax
$LN2@ImStrTrimB:
; Line 1398
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR p$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN8@ImStrTrimB
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR p$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 9
	jne	SHORT $LN3@ImStrTrimB
$LN8@ImStrTrimB:
; Line 1399
	mov	rax, QWORD PTR p$[rbp]
	inc	rax
	mov	QWORD PTR p$[rbp], rax
	jmp	SHORT $LN2@ImStrTrimB
$LN3@ImStrTrimB:
; Line 1400
	mov	rax, QWORD PTR p$[rbp]
	mov	QWORD PTR p_start$[rbp], rax
$LN4@ImStrTrimB:
; Line 1401
	mov	rax, QWORD PTR p$[rbp]
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN5@ImStrTrimB
; Line 1402
	mov	rax, QWORD PTR p$[rbp]
	inc	rax
	mov	QWORD PTR p$[rbp], rax
	jmp	SHORT $LN4@ImStrTrimB
$LN5@ImStrTrimB:
$LN6@ImStrTrimB:
; Line 1403
	mov	rax, QWORD PTR p_start$[rbp]
	cmp	QWORD PTR p$[rbp], rax
	jbe	SHORT $LN7@ImStrTrimB
	mov	eax, 1
	imul	rax, rax, -1
	mov	rcx, QWORD PTR p$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN9@ImStrTrimB
	mov	eax, 1
	imul	rax, rax, -1
	mov	rcx, QWORD PTR p$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 9
	jne	SHORT $LN7@ImStrTrimB
$LN9@ImStrTrimB:
; Line 1404
	mov	rax, QWORD PTR p$[rbp]
	dec	rax
	mov	QWORD PTR p$[rbp], rax
	jmp	SHORT $LN6@ImStrTrimB
$LN7@ImStrTrimB:
; Line 1405
	mov	rax, QWORD PTR buf$[rbp]
	cmp	QWORD PTR p_start$[rbp], rax
	je	SHORT $LN10@ImStrTrimB
; Line 1406
	mov	rax, QWORD PTR p_start$[rbp]
	mov	rcx, QWORD PTR p$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, rax
	mov	rdx, QWORD PTR p_start$[rbp]
	mov	rcx, QWORD PTR buf$[rbp]
	call	memmove
$LN10@ImStrTrimB:
; Line 1407
	mov	rax, QWORD PTR p_start$[rbp]
	mov	rcx, QWORD PTR p$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR buf$[rbp]
	mov	BYTE PTR [rcx+rax], 0
; Line 1408
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?ImStrTrimBlanks@@YAXPEAD@Z ENDP			; ImStrTrimBlanks
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImStristr@@YAPEBDPEBD000@Z
_TEXT	SEGMENT
un0$ = 4
b$1 = 40
a$2 = 72
tv87 = 276
tv138 = 280
tv139 = 288
haystack$ = 336
haystack_end$ = 344
needle$ = 352
needle_end$ = 360
?ImStristr@@YAPEBDPEBD000@Z PROC			; ImStristr, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1373
$LN15:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1374
	cmp	QWORD PTR needle_end$[rbp], 0
	jne	SHORT $LN7@ImStristr
; Line 1375
	mov	rax, QWORD PTR needle$[rbp]
	mov	QWORD PTR tv138[rbp], rax
	mov	QWORD PTR tv139[rbp], -1
$LL14@ImStristr:
	inc	QWORD PTR tv139[rbp]
	mov	rax, QWORD PTR tv138[rbp]
	mov	rcx, QWORD PTR tv139[rbp]
	cmp	BYTE PTR [rax+rcx], 0
	jne	SHORT $LL14@ImStristr
	mov	rax, QWORD PTR tv139[rbp]
	mov	rcx, QWORD PTR needle$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR needle_end$[rbp], rax
$LN7@ImStristr:
; Line 1377
	mov	rax, QWORD PTR needle$[rbp]
	movsx	eax, BYTE PTR [rax]
	mov	ecx, eax
	call	QWORD PTR __imp_toupper
	mov	BYTE PTR un0$[rbp], al
$LN2@ImStristr:
; Line 1378
	cmp	QWORD PTR haystack_end$[rbp], 0
	jne	SHORT $LN9@ImStristr
	mov	rax, QWORD PTR haystack$[rbp]
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	jne	SHORT $LN8@ImStristr
$LN9@ImStristr:
	cmp	QWORD PTR haystack_end$[rbp], 0
	je	$LN3@ImStristr
	mov	rax, QWORD PTR haystack_end$[rbp]
	cmp	QWORD PTR haystack$[rbp], rax
	jae	$LN3@ImStristr
$LN8@ImStristr:
; Line 1380
	mov	rax, QWORD PTR haystack$[rbp]
	movsx	eax, BYTE PTR [rax]
	mov	ecx, eax
	call	QWORD PTR __imp_toupper
	movsx	ecx, BYTE PTR un0$[rbp]
	cmp	eax, ecx
	jne	$LN10@ImStristr
; Line 1382
	mov	rax, QWORD PTR needle$[rbp]
	inc	rax
	mov	QWORD PTR b$1[rbp], rax
; Line 1383
	mov	rax, QWORD PTR haystack$[rbp]
	inc	rax
	mov	QWORD PTR a$2[rbp], rax
	jmp	SHORT $LN6@ImStristr
$LN4@ImStristr:
	mov	rax, QWORD PTR a$2[rbp]
	inc	rax
	mov	QWORD PTR a$2[rbp], rax
	mov	rax, QWORD PTR b$1[rbp]
	inc	rax
	mov	QWORD PTR b$1[rbp], rax
$LN6@ImStristr:
	mov	rax, QWORD PTR needle_end$[rbp]
	cmp	QWORD PTR b$1[rbp], rax
	jae	SHORT $LN5@ImStristr
; Line 1384
	mov	rax, QWORD PTR a$2[rbp]
	movsx	eax, BYTE PTR [rax]
	mov	ecx, eax
	call	QWORD PTR __imp_toupper
	mov	DWORD PTR tv87[rbp], eax
	mov	rcx, QWORD PTR b$1[rbp]
	movsx	ecx, BYTE PTR [rcx]
	call	QWORD PTR __imp_toupper
	mov	ecx, DWORD PTR tv87[rbp]
	cmp	ecx, eax
	je	SHORT $LN11@ImStristr
; Line 1385
	jmp	SHORT $LN5@ImStristr
$LN11@ImStristr:
	jmp	SHORT $LN4@ImStristr
$LN5@ImStristr:
; Line 1386
	mov	rax, QWORD PTR needle_end$[rbp]
	cmp	QWORD PTR b$1[rbp], rax
	jne	SHORT $LN12@ImStristr
; Line 1387
	mov	rax, QWORD PTR haystack$[rbp]
	jmp	SHORT $LN1@ImStristr
$LN12@ImStristr:
$LN10@ImStristr:
; Line 1389
	mov	rax, QWORD PTR haystack$[rbp]
	inc	rax
	mov	QWORD PTR haystack$[rbp], rax
; Line 1390
	jmp	$LN2@ImStristr
$LN3@ImStristr:
; Line 1391
	xor	eax, eax
$LN1@ImStristr:
; Line 1392
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
?ImStristr@@YAPEBDPEBD000@Z ENDP			; ImStristr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImStrbolW@@YAPEBGPEBG0@Z
_TEXT	SEGMENT
buf_mid_line$ = 224
buf_begin$ = 232
?ImStrbolW@@YAPEBGPEBG0@Z PROC				; ImStrbolW, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1366
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
$LN2@ImStrbolW:
; Line 1367
	mov	rax, QWORD PTR buf_begin$[rbp]
	cmp	QWORD PTR buf_mid_line$[rbp], rax
	jbe	SHORT $LN3@ImStrbolW
	mov	eax, 2
	imul	rax, rax, -1
	mov	rcx, QWORD PTR buf_mid_line$[rbp]
	movzx	eax, WORD PTR [rcx+rax]
	cmp	eax, 10
	je	SHORT $LN3@ImStrbolW
; Line 1368
	mov	rax, QWORD PTR buf_mid_line$[rbp]
	sub	rax, 2
	mov	QWORD PTR buf_mid_line$[rbp], rax
	jmp	SHORT $LN2@ImStrbolW
$LN3@ImStrbolW:
; Line 1369
	mov	rax, QWORD PTR buf_mid_line$[rbp]
; Line 1370
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?ImStrbolW@@YAPEBGPEBG0@Z ENDP				; ImStrbolW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImStreolRange@@YAPEBDPEBD0@Z
_TEXT	SEGMENT
p$ = 8
tv70 = 216
str$ = 256
str_end$ = 264
?ImStreolRange@@YAPEBDPEBD0@Z PROC			; ImStreolRange, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1360
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1361
	mov	rax, QWORD PTR str$[rbp]
	mov	rcx, QWORD PTR str_end$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, rax
	mov	edx, 10
	mov	rcx, QWORD PTR str$[rbp]
	call	memchr
	mov	QWORD PTR p$[rbp], rax
; Line 1362
	cmp	QWORD PTR p$[rbp], 0
	je	SHORT $LN3@ImStreolRa
	mov	rax, QWORD PTR p$[rbp]
	mov	QWORD PTR tv70[rbp], rax
	jmp	SHORT $LN4@ImStreolRa
$LN3@ImStreolRa:
	mov	rax, QWORD PTR str_end$[rbp]
	mov	QWORD PTR tv70[rbp], rax
$LN4@ImStreolRa:
	mov	rax, QWORD PTR tv70[rbp]
; Line 1363
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?ImStreolRange@@YAPEBDPEBD0@Z ENDP			; ImStreolRange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImStrlenW@@YAHPEBG@Z
_TEXT	SEGMENT
n$ = 4
tv65 = 212
str$ = 256
?ImStrlenW@@YAHPEBG@Z PROC				; ImStrlenW, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1351
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1353
	mov	DWORD PTR n$[rbp], 0
$LN2@ImStrlenW:
; Line 1354
	mov	rax, QWORD PTR str$[rbp]
	movzx	eax, WORD PTR [rax]
	mov	WORD PTR tv65[rbp], ax
	mov	rax, QWORD PTR str$[rbp]
	add	rax, 2
	mov	QWORD PTR str$[rbp], rax
	movzx	eax, WORD PTR tv65[rbp]
	test	eax, eax
	je	SHORT $LN3@ImStrlenW
	mov	eax, DWORD PTR n$[rbp]
	inc	eax
	mov	DWORD PTR n$[rbp], eax
	jmp	SHORT $LN2@ImStrlenW
$LN3@ImStrlenW:
; Line 1355
	mov	eax, DWORD PTR n$[rbp]
; Line 1356
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?ImStrlenW@@YAHPEBG@Z ENDP				; ImStrlenW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImStrchrRange@@YAPEBDPEBD0D@Z
_TEXT	SEGMENT
p$ = 8
str$ = 256
str_end$ = 264
c$ = 272
?ImStrchrRange@@YAPEBDPEBD0D@Z PROC			; ImStrchrRange, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1345
$LN3:
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1346
	mov	rax, QWORD PTR str$[rbp]
	mov	rcx, QWORD PTR str_end$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	movsx	ecx, BYTE PTR c$[rbp]
	mov	r8, rax
	mov	edx, ecx
	mov	rcx, QWORD PTR str$[rbp]
	call	memchr
	mov	QWORD PTR p$[rbp], rax
; Line 1347
	mov	rax, QWORD PTR p$[rbp]
; Line 1348
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?ImStrchrRange@@YAPEBDPEBD0D@Z ENDP			; ImStrchrRange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImStrdupcpy@@YAPEADPEADPEA_KPEBD@Z
_TEXT	SEGMENT
dst_buf_size$ = 8
src_size$ = 40
tv86 = 248
tv68 = 248
tv93 = 256
tv87 = 256
tv94 = 264
dst$ = 304
p_dst_size$ = 312
src$ = 320
?ImStrdupcpy@@YAPEADPEADPEA_KPEBD@Z PROC		; ImStrdupcpy, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1331
$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 304				; 00000130H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1332
	cmp	QWORD PTR p_dst_size$[rbp], 0
	je	SHORT $LN5@ImStrdupcp
	mov	rax, QWORD PTR p_dst_size$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv68[rbp], rax
	jmp	SHORT $LN6@ImStrdupcp
$LN5@ImStrdupcp:
	mov	rax, QWORD PTR dst$[rbp]
	mov	QWORD PTR tv93[rbp], rax
	mov	QWORD PTR tv94[rbp], -1
$LL8@ImStrdupcp:
	inc	QWORD PTR tv94[rbp]
	mov	rax, QWORD PTR tv93[rbp]
	mov	rcx, QWORD PTR tv94[rbp]
	cmp	BYTE PTR [rax+rcx], 0
	jne	SHORT $LL8@ImStrdupcp
	mov	rax, QWORD PTR tv94[rbp]
	inc	rax
	mov	QWORD PTR tv68[rbp], rax
$LN6@ImStrdupcp:
	mov	rax, QWORD PTR tv68[rbp]
	mov	QWORD PTR dst_buf_size$[rbp], rax
; Line 1333
	mov	rax, QWORD PTR src$[rbp]
	mov	QWORD PTR tv86[rbp], rax
	mov	QWORD PTR tv87[rbp], -1
$LL7@ImStrdupcp:
	inc	QWORD PTR tv87[rbp]
	mov	rax, QWORD PTR tv86[rbp]
	mov	rcx, QWORD PTR tv87[rbp]
	cmp	BYTE PTR [rax+rcx], 0
	jne	SHORT $LL7@ImStrdupcp
	mov	rax, QWORD PTR tv87[rbp]
	inc	rax
	mov	QWORD PTR src_size$[rbp], rax
; Line 1334
	mov	rax, QWORD PTR src_size$[rbp]
	cmp	QWORD PTR dst_buf_size$[rbp], rax
	jae	SHORT $LN2@ImStrdupcp
; Line 1336
	mov	rcx, QWORD PTR dst$[rbp]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
; Line 1337
	mov	rcx, QWORD PTR src_size$[rbp]
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR dst$[rbp], rax
; Line 1338
	cmp	QWORD PTR p_dst_size$[rbp], 0
	je	SHORT $LN3@ImStrdupcp
; Line 1339
	mov	rax, QWORD PTR p_dst_size$[rbp]
	mov	rcx, QWORD PTR src_size$[rbp]
	mov	QWORD PTR [rax], rcx
$LN3@ImStrdupcp:
$LN2@ImStrdupcp:
; Line 1341
	mov	rdi, QWORD PTR dst$[rbp]
	mov	rsi, QWORD PTR src$[rbp]
	mov	rcx, QWORD PTR src_size$[rbp]
	rep movsb
	mov	rax, QWORD PTR dst$[rbp]
; Line 1342
	lea	rsp, QWORD PTR [rbp+272]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?ImStrdupcpy@@YAPEADPEADPEA_KPEBD@Z ENDP		; ImStrdupcpy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImStrdup@@YAPEADPEBD@Z
_TEXT	SEGMENT
len$ = 8
buf$ = 40
tv79 = 248
tv80 = 256
str$ = 304
?ImStrdup@@YAPEADPEBD@Z PROC				; ImStrdup, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1324
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 304				; 00000130H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1325
	mov	rax, QWORD PTR str$[rbp]
	mov	QWORD PTR tv79[rbp], rax
	mov	QWORD PTR tv80[rbp], -1
$LL3@ImStrdup:
	inc	QWORD PTR tv80[rbp]
	mov	rax, QWORD PTR tv79[rbp]
	mov	rcx, QWORD PTR tv80[rbp]
	cmp	BYTE PTR [rax+rcx], 0
	jne	SHORT $LL3@ImStrdup
	mov	rax, QWORD PTR tv80[rbp]
	mov	QWORD PTR len$[rbp], rax
; Line 1326
	mov	rax, QWORD PTR len$[rbp]
	inc	rax
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR buf$[rbp], rax
; Line 1327
	mov	rax, QWORD PTR len$[rbp]
	inc	rax
	mov	rdi, QWORD PTR buf$[rbp]
	mov	rsi, QWORD PTR str$[rbp]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR buf$[rbp]
; Line 1328
	lea	rsp, QWORD PTR [rbp+272]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?ImStrdup@@YAPEADPEBD@Z ENDP				; ImStrdup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImStrncpy@@YAXPEADPEBD_K@Z
_TEXT	SEGMENT
dst$ = 224
src$ = 232
count$ = 240
?ImStrncpy@@YAXPEADPEBD_K@Z PROC			; ImStrncpy, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1315
$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1316
	cmp	QWORD PTR count$[rbp], 1
	jae	SHORT $LN2@ImStrncpy
; Line 1317
	jmp	SHORT $LN1@ImStrncpy
$LN2@ImStrncpy:
; Line 1318
	cmp	QWORD PTR count$[rbp], 1
	jbe	SHORT $LN3@ImStrncpy
; Line 1319
	mov	rax, QWORD PTR count$[rbp]
	dec	rax
	mov	r8, rax
	mov	rdx, QWORD PTR src$[rbp]
	mov	rcx, QWORD PTR dst$[rbp]
	call	QWORD PTR __imp_strncpy
$LN3@ImStrncpy:
; Line 1320
	mov	rax, QWORD PTR count$[rbp]
	mov	rcx, QWORD PTR dst$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	BYTE PTR [rax-1], 0
$LN1@ImStrncpy:
; Line 1321
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?ImStrncpy@@YAXPEADPEBD_K@Z ENDP			; ImStrncpy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImStrnicmp@@YAHPEBD0_K@Z
_TEXT	SEGMENT
d$ = 4
tv65 = 212
str1$ = 256
str2$ = 264
count$ = 272
?ImStrnicmp@@YAHPEBD0_K@Z PROC				; ImStrnicmp, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1308
$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1309
	mov	DWORD PTR d$[rbp], 0
$LN2@ImStrnicmp:
; Line 1310
	cmp	QWORD PTR count$[rbp], 0
	jbe	$LN3@ImStrnicmp
	mov	rax, QWORD PTR str2$[rbp]
	movsx	eax, BYTE PTR [rax]
	mov	ecx, eax
	call	QWORD PTR __imp_toupper
	mov	DWORD PTR tv65[rbp], eax
	mov	rcx, QWORD PTR str1$[rbp]
	movsx	ecx, BYTE PTR [rcx]
	call	QWORD PTR __imp_toupper
	mov	ecx, DWORD PTR tv65[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR d$[rbp], eax
	cmp	DWORD PTR d$[rbp], 0
	jne	SHORT $LN3@ImStrnicmp
	mov	rax, QWORD PTR str1$[rbp]
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN3@ImStrnicmp
	mov	rax, QWORD PTR str1$[rbp]
	inc	rax
	mov	QWORD PTR str1$[rbp], rax
	mov	rax, QWORD PTR str2$[rbp]
	inc	rax
	mov	QWORD PTR str2$[rbp], rax
	mov	rax, QWORD PTR count$[rbp]
	dec	rax
	mov	QWORD PTR count$[rbp], rax
	jmp	$LN2@ImStrnicmp
$LN3@ImStrnicmp:
; Line 1311
	mov	eax, DWORD PTR d$[rbp]
; Line 1312
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?ImStrnicmp@@YAHPEBD0_K@Z ENDP				; ImStrnicmp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImStricmp@@YAHPEBD0@Z
_TEXT	SEGMENT
d$ = 4
tv64 = 212
str1$ = 256
str2$ = 264
?ImStricmp@@YAHPEBD0@Z PROC				; ImStricmp, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1301
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
$LN2@ImStricmp:
; Line 1303
	mov	rax, QWORD PTR str2$[rbp]
	movsx	eax, BYTE PTR [rax]
	mov	ecx, eax
	call	QWORD PTR __imp_toupper
	mov	DWORD PTR tv64[rbp], eax
	mov	rcx, QWORD PTR str1$[rbp]
	movsx	ecx, BYTE PTR [rcx]
	call	QWORD PTR __imp_toupper
	mov	ecx, DWORD PTR tv64[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR d$[rbp], eax
	cmp	DWORD PTR d$[rbp], 0
	jne	SHORT $LN3@ImStricmp
	mov	rax, QWORD PTR str1$[rbp]
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN3@ImStricmp
	mov	rax, QWORD PTR str1$[rbp]
	inc	rax
	mov	QWORD PTR str1$[rbp], rax
	mov	rax, QWORD PTR str2$[rbp]
	inc	rax
	mov	QWORD PTR str2$[rbp], rax
	jmp	SHORT $LN2@ImStricmp
$LN3@ImStricmp:
; Line 1304
	mov	eax, DWORD PTR d$[rbp]
; Line 1305
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?ImStricmp@@YAHPEBD0@Z ENDP				; ImStricmp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImIsPowerOfTwo@@YA_NH@Z
_TEXT	SEGMENT
tv68 = 192
v$ = 240
?ImIsPowerOfTwo@@YA_NH@Z PROC				; ImIsPowerOfTwo, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_internal.h
; Line 300
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D68E48C9_imgui_internal@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR v$[rbp], 0
	je	SHORT $LN3@ImIsPowerO
	mov	eax, DWORD PTR v$[rbp]
	dec	eax
	mov	ecx, DWORD PTR v$[rbp]
	and	ecx, eax
	mov	eax, ecx
	test	eax, eax
	jne	SHORT $LN3@ImIsPowerO
	mov	DWORD PTR tv68[rbp], 1
	jmp	SHORT $LN4@ImIsPowerO
$LN3@ImIsPowerO:
	mov	DWORD PTR tv68[rbp], 0
$LN4@ImIsPowerO:
	movzx	eax, BYTE PTR tv68[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?ImIsPowerOfTwo@@YA_NH@Z ENDP				; ImIsPowerOfTwo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImAlphaBlendColors@@YAIII@Z
_TEXT	SEGMENT
t$ = 4
r$ = 36
g$ = 68
b$ = 100
col_a$ = 352
col_b$ = 360
?ImAlphaBlendColors@@YAIII@Z PROC			; ImAlphaBlendColors, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1798
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1799
	mov	eax, DWORD PTR col_b$[rbp]
	shr	eax, 24
	and	eax, 255				; 000000ffH
	mov	eax, eax
	cvtsi2ss xmm0, rax
	divss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR t$[rbp], xmm0
; Line 1800
	mov	eax, DWORD PTR col_b$[rbp]
	and	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR col_a$[rbp]
	and	ecx, 255				; 000000ffH
	movss	xmm2, DWORD PTR t$[rbp]
	mov	edx, eax
	call	??$ImLerp@H@@YAHHHM@Z			; ImLerp<int>
	mov	DWORD PTR r$[rbp], eax
; Line 1801
	mov	eax, DWORD PTR col_b$[rbp]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR col_a$[rbp]
	shr	ecx, 8
	and	ecx, 255				; 000000ffH
	movss	xmm2, DWORD PTR t$[rbp]
	mov	edx, eax
	call	??$ImLerp@H@@YAHHHM@Z			; ImLerp<int>
	mov	DWORD PTR g$[rbp], eax
; Line 1802
	mov	eax, DWORD PTR col_b$[rbp]
	shr	eax, 16
	and	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR col_a$[rbp]
	shr	ecx, 16
	and	ecx, 255				; 000000ffH
	movss	xmm2, DWORD PTR t$[rbp]
	mov	edx, eax
	call	??$ImLerp@H@@YAHHHM@Z			; ImLerp<int>
	mov	DWORD PTR b$[rbp], eax
; Line 1803
	mov	eax, DWORD PTR b$[rbp]
	shl	eax, 16
	or	eax, -16777216				; ff000000H
	mov	ecx, DWORD PTR g$[rbp]
	shl	ecx, 8
	or	eax, ecx
	or	eax, DWORD PTR r$[rbp]
; Line 1804
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?ImAlphaBlendColors@@YAIII@Z ENDP			; ImAlphaBlendColors
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImHashStr@@YAIPEBD_KI@Z
_TEXT	SEGMENT
crc$ = 4
data$ = 40
crc32_lut$ = 72
c$1 = 100
c$2 = 132
tv95 = 340
tv73 = 340
tv68 = 344
tv69 = 352
data_p$ = 400
data_size$ = 408
seed$ = 416
?ImHashStr@@YAIPEBD_KI@Z PROC				; ImHashStr, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1512
$LN13:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 408				; 00000198H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1513
	mov	eax, DWORD PTR seed$[rbp]
	not	eax
	mov	DWORD PTR seed$[rbp], eax
; Line 1514
	mov	eax, DWORD PTR seed$[rbp]
	mov	DWORD PTR crc$[rbp], eax
; Line 1515
	mov	rax, QWORD PTR data_p$[rbp]
	mov	QWORD PTR data$[rbp], rax
; Line 1516
	lea	rax, OFFSET FLAT:?GCrc32LookupTable@@3QBIB
	mov	QWORD PTR crc32_lut$[rbp], rax
; Line 1517
	cmp	QWORD PTR data_size$[rbp], 0
	je	$LN6@ImHashStr
$LN2@ImHashStr:
; Line 1519
	mov	rax, QWORD PTR data_size$[rbp]
	mov	QWORD PTR tv68[rbp], rax
	mov	rax, QWORD PTR data_size$[rbp]
	dec	rax
	mov	QWORD PTR data_size$[rbp], rax
	cmp	QWORD PTR tv68[rbp], 0
	je	SHORT $LN11@ImHashStr
	mov	DWORD PTR tv69[rbp], 1
	jmp	SHORT $LN12@ImHashStr
$LN11@ImHashStr:
	mov	DWORD PTR tv69[rbp], 0
$LN12@ImHashStr:
	cmp	DWORD PTR tv69[rbp], 0
	je	$LN3@ImHashStr
; Line 1521
	mov	rax, QWORD PTR data$[rbp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR tv73[rbp], al
	mov	rax, QWORD PTR data$[rbp]
	inc	rax
	mov	QWORD PTR data$[rbp], rax
	movzx	eax, BYTE PTR tv73[rbp]
	mov	BYTE PTR c$1[rbp], al
; Line 1522
	movzx	eax, BYTE PTR c$1[rbp]
	cmp	eax, 35					; 00000023H
	jne	SHORT $LN8@ImHashStr
	cmp	QWORD PTR data_size$[rbp], 2
	jb	SHORT $LN8@ImHashStr
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR data$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 35					; 00000023H
	jne	SHORT $LN8@ImHashStr
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR data$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 35					; 00000023H
	jne	SHORT $LN8@ImHashStr
; Line 1523
	mov	eax, DWORD PTR seed$[rbp]
	mov	DWORD PTR crc$[rbp], eax
$LN8@ImHashStr:
; Line 1524
	mov	eax, DWORD PTR crc$[rbp]
	shr	eax, 8
	mov	ecx, DWORD PTR crc$[rbp]
	and	ecx, 255				; 000000ffH
	movzx	edx, BYTE PTR c$1[rbp]
	xor	ecx, edx
	mov	ecx, ecx
	mov	rdx, QWORD PTR crc32_lut$[rbp]
	xor	eax, DWORD PTR [rdx+rcx*4]
	mov	DWORD PTR crc$[rbp], eax
; Line 1525
	jmp	$LN2@ImHashStr
$LN3@ImHashStr:
; Line 1526
	jmp	$LN7@ImHashStr
$LN6@ImHashStr:
$LN4@ImHashStr:
; Line 1529
	mov	rax, QWORD PTR data$[rbp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR tv95[rbp], al
	mov	rax, QWORD PTR data$[rbp]
	inc	rax
	mov	QWORD PTR data$[rbp], rax
	movzx	eax, BYTE PTR tv95[rbp]
	mov	BYTE PTR c$2[rbp], al
	movzx	eax, BYTE PTR c$2[rbp]
	test	eax, eax
	je	SHORT $LN5@ImHashStr
; Line 1531
	movzx	eax, BYTE PTR c$2[rbp]
	cmp	eax, 35					; 00000023H
	jne	SHORT $LN9@ImHashStr
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR data$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 35					; 00000023H
	jne	SHORT $LN9@ImHashStr
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR data$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 35					; 00000023H
	jne	SHORT $LN9@ImHashStr
; Line 1532
	mov	eax, DWORD PTR seed$[rbp]
	mov	DWORD PTR crc$[rbp], eax
$LN9@ImHashStr:
; Line 1533
	mov	eax, DWORD PTR crc$[rbp]
	shr	eax, 8
	mov	ecx, DWORD PTR crc$[rbp]
	and	ecx, 255				; 000000ffH
	movzx	edx, BYTE PTR c$2[rbp]
	xor	ecx, edx
	mov	ecx, ecx
	mov	rdx, QWORD PTR crc32_lut$[rbp]
	xor	eax, DWORD PTR [rdx+rcx*4]
	mov	DWORD PTR crc$[rbp], eax
; Line 1534
	jmp	$LN4@ImHashStr
$LN5@ImHashStr:
$LN7@ImHashStr:
; Line 1536
	mov	eax, DWORD PTR crc$[rbp]
	not	eax
; Line 1537
	lea	rsp, QWORD PTR [rbp+376]
	pop	rdi
	pop	rbp
	ret	0
?ImHashStr@@YAIPEBD_KI@Z ENDP				; ImHashStr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImHashData@@YAIPEBX_KI@Z
_TEXT	SEGMENT
crc$ = 4
data$ = 40
crc32_lut$ = 72
tv80 = 276
tv67 = 280
tv68 = 288
data_p$ = 336
data_size$ = 344
seed$ = 352
?ImHashData@@YAIPEBX_KI@Z PROC				; ImHashData, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1496
$LN7:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1497
	mov	eax, DWORD PTR seed$[rbp]
	not	eax
	mov	DWORD PTR crc$[rbp], eax
; Line 1498
	mov	rax, QWORD PTR data_p$[rbp]
	mov	QWORD PTR data$[rbp], rax
; Line 1499
	lea	rax, OFFSET FLAT:?GCrc32LookupTable@@3QBIB
	mov	QWORD PTR crc32_lut$[rbp], rax
$LN2@ImHashData:
; Line 1500
	mov	rax, QWORD PTR data_size$[rbp]
	mov	QWORD PTR tv67[rbp], rax
	mov	rax, QWORD PTR data_size$[rbp]
	dec	rax
	mov	QWORD PTR data_size$[rbp], rax
	cmp	QWORD PTR tv67[rbp], 0
	je	SHORT $LN5@ImHashData
	mov	DWORD PTR tv68[rbp], 1
	jmp	SHORT $LN6@ImHashData
$LN5@ImHashData:
	mov	DWORD PTR tv68[rbp], 0
$LN6@ImHashData:
	cmp	DWORD PTR tv68[rbp], 0
	je	SHORT $LN3@ImHashData
; Line 1501
	mov	eax, DWORD PTR crc$[rbp]
	shr	eax, 8
	mov	ecx, DWORD PTR crc$[rbp]
	and	ecx, 255				; 000000ffH
	mov	rdx, QWORD PTR data$[rbp]
	movzx	edx, BYTE PTR [rdx]
	xor	ecx, edx
	mov	ecx, ecx
	mov	rdx, QWORD PTR crc32_lut$[rbp]
	xor	eax, DWORD PTR [rdx+rcx*4]
	mov	DWORD PTR tv80[rbp], eax
	mov	rax, QWORD PTR data$[rbp]
	inc	rax
	mov	QWORD PTR data$[rbp], rax
	mov	eax, DWORD PTR tv80[rbp]
	mov	DWORD PTR crc$[rbp], eax
	jmp	$LN2@ImHashData
$LN3@ImHashData:
; Line 1502
	mov	eax, DWORD PTR crc$[rbp]
	not	eax
; Line 1503
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
?ImHashData@@YAIPEBX_KI@Z ENDP				; ImHashData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT fabsf
_TEXT	SEGMENT
_X$ = 224
fabsf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; Line 679
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__BB16330F_corecrt_math@h
	call	__CheckForDebuggerJustMyCode
; Line 680
	cvtss2sd xmm0, DWORD PTR _X$[rbp]
	andps	xmm0, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
	cvtsd2ss xmm0, xmm0
; Line 681
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT sscanf
_TEXT	SEGMENT
_Result$ = 4
_ArgList$ = 40
__$ArrayPad$ = 280
_Buffer$ = 320
_Format$ = 328
sscanf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h
; Line 2247
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__C1EC35D3_stdio@h
	call	__CheckForDebuggerJustMyCode
; Line 2250
	lea	rax, QWORD PTR _Format$[rbp+8]
	mov	QWORD PTR _ArgList$[rbp], rax
; Line 2251
	mov	r9, QWORD PTR _ArgList$[rbp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR _Format$[rbp]
	mov	rcx, QWORD PTR _Buffer$[rbp]
	call	_vsscanf_l
	mov	DWORD PTR _Result$[rbp], eax
; Line 2252
	mov	QWORD PTR _ArgList$[rbp], 0
; Line 2253
	mov	eax, DWORD PTR _Result$[rbp]
; Line 2254
	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:sscanf$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
sscanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _vsscanf_l
_TEXT	SEGMENT
_Buffer$ = 224
_Format$ = 232
_Locale$ = 240
_ArgList$ = 248
_vsscanf_l PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h
; Line 2152
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__C1EC35D3_stdio@h
	call	__CheckForDebuggerJustMyCode
; Line 2153
	call	__local_stdio_scanf_options
	mov	rcx, QWORD PTR _ArgList$[rbp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR _Locale$[rbp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR _Format$[rbp]
	mov	r8, -1
	mov	rdx, QWORD PTR _Buffer$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vsscanf
; Line 2156
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
_vsscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _vsnprintf
_TEXT	SEGMENT
_Buffer$ = 224
_BufferCount$ = 232
_Format$ = 240
_ArgList$ = 248
_vsnprintf PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h
; Line 1411
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__C1EC35D3_stdio@h
	call	__CheckForDebuggerJustMyCode
; Line 1412
	mov	rax, QWORD PTR _ArgList$[rbp]
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8, QWORD PTR _Format$[rbp]
	mov	rdx, QWORD PTR _BufferCount$[rbp]
	mov	rcx, QWORD PTR _Buffer$[rbp]
	call	_vsnprintf_l
; Line 1413
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
_vsnprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _vsnprintf_l
_TEXT	SEGMENT
_Result$ = 4
tv74 = 212
_Buffer$ = 256
_BufferCount$ = 264
_Format$ = 272
_Locale$ = 280
_ArgList$ = 288
_vsnprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h
; Line 1391
$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__C1EC35D3_stdio@h
	call	__CheckForDebuggerJustMyCode
; Line 1392
	call	__local_stdio_printf_options
	mov	rax, QWORD PTR [rax]
	or	rax, 1
	mov	rcx, QWORD PTR _ArgList$[rbp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR _Locale$[rbp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR _Format$[rbp]
	mov	r8, QWORD PTR _BufferCount$[rbp]
	mov	rdx, QWORD PTR _Buffer$[rbp]
	mov	rcx, rax
	call	QWORD PTR __imp___stdio_common_vsprintf
	mov	DWORD PTR _Result$[rbp], eax
; Line 1396
	cmp	DWORD PTR _Result$[rbp], 0
	jge	SHORT $LN3@vsnprintf_
	mov	DWORD PTR tv74[rbp], -1
	jmp	SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
	mov	eax, DWORD PTR _Result$[rbp]
	mov	DWORD PTR tv74[rbp], eax
$LN4@vsnprintf_:
	mov	eax, DWORD PTR tv74[rbp]
; Line 1397
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
_vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __local_stdio_scanf_options
_TEXT	SEGMENT
__local_stdio_scanf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_stdio_config.h
; Line 100
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__44420885_corecrt_stdio_config@h
	call	__CheckForDebuggerJustMyCode
; Line 102
	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
; Line 103
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
__local_stdio_scanf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_stdio_config.h
; Line 90
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__44420885_corecrt_stdio_config@h
	call	__CheckForDebuggerJustMyCode
; Line 92
	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 93
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetCenter@ImGuiViewport@@QEBA?AUImVec2@@XZ
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
?GetCenter@ImGuiViewport@@QEBA?AUImVec2@@XZ PROC	; ImGuiViewport::GetCenter, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2791
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	mulss	xmm0, DWORD PTR __real@3f000000
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+8]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+12]
	mulss	xmm1, DWORD PTR __real@3f000000
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm2, DWORD PTR [rax+4]
	addss	xmm2, xmm1
	movaps	xmm1, xmm2
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetCenter@ImGuiViewport@@QEBA?AUImVec2@@XZ ENDP	; ImGuiViewport::GetCenter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiViewport@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiViewport@@QEAA@XZ PROC				; ImGuiViewport::ImGuiViewport, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2788
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 4
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 12
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 20
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 28
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	ecx, 36					; 00000024H
	rep stosb
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiViewport@@QEAA@XZ ENDP				; ImGuiViewport::ImGuiViewport
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsLoaded@ImFont@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 192
this$ = 240
?IsLoaded@ImFont@@QEBA_NXZ PROC				; ImFont::IsLoaded, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2740
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+64], 0
	je	SHORT $LN3@IsLoaded
	mov	DWORD PTR tv66[rbp], 1
	jmp	SHORT $LN4@IsLoaded
$LN3@IsLoaded:
	mov	DWORD PTR tv66[rbp], 0
$LN4@IsLoaded:
	movzx	eax, BYTE PTR tv66[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?IsLoaded@ImFont@@QEBA_NXZ ENDP				; ImFont::IsLoaded
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pop_back@?$ImVector@M@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?pop_back@?$ImVector@M@@QEAAXXZ PROC			; ImVector<float>::pop_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1715
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@pop_back
	mov	r8d, 1715				; 000006b3H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@pop_back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?pop_back@?$ImVector@M@@QEAAXXZ ENDP			; ImVector<float>::pop_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$ImVector@M@@QEAAXAEBM@Z
_TEXT	SEGMENT
this$ = 224
v$ = 232
?push_back@?$ImVector@M@@QEAAXAEBM@Z PROC		; ImVector<float>::push_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1714
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN2@push_back
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@M@@QEBAHH@Z	; ImVector<float>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@M@@QEAAXH@Z		; ImVector<float>::reserve
$LN2@push_back:
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rdx, QWORD PTR v$[rbp]
	mov	edx, DWORD PTR [rdx]
	mov	DWORD PTR [rcx+rax*4], edx
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?push_back@?$ImVector@M@@QEAAXAEBM@Z ENDP		; ImVector<float>::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@M@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@M@@QEAAXH@Z PROC			; ImVector<float>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	shl	rax, 2
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	shl	rax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@M@@QEAAXH@Z ENDP			; ImVector<float>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$ImVector@M@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 224
new_size$ = 232
?resize@?$ImVector@M@@QEAAXH@Z PROC			; ImVector<float>::resize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1708
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_size$[rbp], eax
	jle	SHORT $LN2@resize
	mov	edx, DWORD PTR new_size$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@M@@QEBAHH@Z	; ImVector<float>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@M@@QEAAXH@Z		; ImVector<float>::reserve
$LN2@resize:
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_size$[rbp]
	mov	DWORD PTR [rax], ecx
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?resize@?$ImVector@M@@QEAAXH@Z ENDP			; ImVector<float>::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_grow_capacity@?$ImVector@M@@QEBAHH@Z
_TEXT	SEGMENT
new_capacity$ = 4
tv72 = 212
tv70 = 212
this$ = 256
sz$ = 264
?_grow_capacity@?$ImVector@M@@QEBAHH@Z PROC		; ImVector<float>::_grow_capacity, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1707
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+4], 0
	je	SHORT $LN3@grow_capac
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@grow_capac
$LN3@grow_capac:
	mov	DWORD PTR tv70[rbp], 8
$LN4@grow_capac:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR new_capacity$[rbp], eax
	mov	eax, DWORD PTR sz$[rbp]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jle	SHORT $LN5@grow_capac
	mov	eax, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	jmp	SHORT $LN6@grow_capac
$LN5@grow_capac:
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tv72[rbp], eax
$LN6@grow_capac:
	mov	eax, DWORD PTR tv72[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_grow_capacity@?$ImVector@M@@QEBAHH@Z ENDP		; ImVector<float>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?back@?$ImVector@M@@QEAAAEAMXZ
_TEXT	SEGMENT
this$ = 224
?back@?$ImVector@M@@QEAAAEAMXZ PROC			; ImVector<float>::back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1703
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@back
	mov	r8d, 1703				; 000006a7H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cdqe
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	lea	rax, QWORD PTR [rcx+rax*4]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?back@?$ImVector@M@@QEAAAEAMXZ ENDP			; ImVector<float>::back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@M@@QEAAAEAMH@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@M@@QEAAAEAMH@Z PROC			; ImVector<float>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1694
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1694				; 0000069eH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	lea	rax, QWORD PTR [rcx+rax*4]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@M@@QEAAAEAMH@Z ENDP			; ImVector<float>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@M@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@M@@QEAAXXZ PROC			; ImVector<float>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@M@@QEAAXXZ ENDP			; ImVector<float>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@M@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@M@@QEAA@XZ PROC				; ImVector<float>::~ImVector<float>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@M@@QEAA@XZ ENDP				; ImVector<float>::~ImVector<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@M@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@M@@QEAA@XZ PROC				; ImVector<float>::ImVector<float>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@M@@QEAA@XZ ENDP				; ImVector<float>::ImVector<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GImFontAtlas@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GImFontAtlas@@QEAAPEAXI@Z PROC			; ImFontAtlas::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ImFontAtlas@@QEAA@XZ			; ImFontAtlas::~ImFontAtlas
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 1168				; 00000490H
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_GImFontAtlas@@QEAAPEAXI@Z ENDP			; ImFontAtlas::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pop_back@?$ImVector@PEAUImFont@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?pop_back@?$ImVector@PEAUImFont@@@@QEAAXXZ PROC		; ImVector<ImFont *>::pop_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1715
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@pop_back
	mov	r8d, 1715				; 000006b3H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@pop_back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?pop_back@?$ImVector@PEAUImFont@@@@QEAAXXZ ENDP		; ImVector<ImFont *>::pop_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z
_TEXT	SEGMENT
this$ = 224
v$ = 232
?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z PROC ; ImVector<ImFont *>::push_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1714
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN2@push_back
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@PEAUImFont@@@@QEBAHH@Z ; ImVector<ImFont *>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z ; ImVector<ImFont *>::reserve
$LN2@push_back:
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rdx, QWORD PTR v$[rbp]
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR [rcx+rax*8], rdx
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z ENDP ; ImVector<ImFont *>::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z PROC		; ImVector<ImFont *>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	shl	rax, 3
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	shl	rax, 3
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@PEAUImFont@@@@QEAAXH@Z ENDP		; ImVector<ImFont *>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_grow_capacity@?$ImVector@PEAUImFont@@@@QEBAHH@Z
_TEXT	SEGMENT
new_capacity$ = 4
tv72 = 212
tv70 = 212
this$ = 256
sz$ = 264
?_grow_capacity@?$ImVector@PEAUImFont@@@@QEBAHH@Z PROC	; ImVector<ImFont *>::_grow_capacity, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1707
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+4], 0
	je	SHORT $LN3@grow_capac
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@grow_capac
$LN3@grow_capac:
	mov	DWORD PTR tv70[rbp], 8
$LN4@grow_capac:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR new_capacity$[rbp], eax
	mov	eax, DWORD PTR sz$[rbp]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jle	SHORT $LN5@grow_capac
	mov	eax, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	jmp	SHORT $LN6@grow_capac
$LN5@grow_capac:
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tv72[rbp], eax
$LN6@grow_capac:
	mov	eax, DWORD PTR tv72[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_grow_capacity@?$ImVector@PEAUImFont@@@@QEBAHH@Z ENDP	; ImVector<ImFont *>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?back@?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@XZ
_TEXT	SEGMENT
this$ = 224
?back@?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@XZ PROC ; ImVector<ImFont *>::back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1703
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@back
	mov	r8d, 1703				; 000006a7H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cdqe
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	lea	rax, QWORD PTR [rcx+rax*8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?back@?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@XZ ENDP ; ImVector<ImFont *>::back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@H@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@H@Z PROC	; ImVector<ImFont *>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1694
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1694				; 0000069eH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	lea	rax, QWORD PTR [rcx+rax*8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@H@Z ENDP	; ImVector<ImFont *>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@?$ImVector@PEAUImFont@@@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 192
this$ = 240
?empty@?$ImVector@PEAUImFont@@@@QEBA_NXZ PROC		; ImVector<ImFont *>::empty, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1689
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv66[rbp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv66[rbp], 0
$LN4@empty:
	movzx	eax, BYTE PTR tv66[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?empty@?$ImVector@PEAUImFont@@@@QEBA_NXZ ENDP		; ImVector<ImFont *>::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@PEAUImFont@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@PEAUImFont@@@@QEAAXXZ PROC		; ImVector<ImFont *>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@PEAUImFont@@@@QEAAXXZ ENDP		; ImVector<ImFont *>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@PEAUImFont@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@PEAUImFont@@@@QEAA@XZ PROC		; ImVector<ImFont *>::~ImVector<ImFont *>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@PEAUImFont@@@@QEAA@XZ ENDP		; ImVector<ImFont *>::~ImVector<ImFont *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@PEAUImFont@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@PEAUImFont@@@@QEAA@XZ PROC		; ImVector<ImFont *>::ImVector<ImFont *>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@PEAUImFont@@@@QEAA@XZ ENDP		; ImVector<ImFont *>::ImVector<ImFont *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsBuilt@ImFontAtlas@@QEBA_NXZ
_TEXT	SEGMENT
tv70 = 192
this$ = 240
?IsBuilt@ImFontAtlas@@QEBA_NXZ PROC			; ImFontAtlas::IsBuilt, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2630
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+72], 0
	jle	SHORT $LN3@IsBuilt
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+25]
	test	eax, eax
	je	SHORT $LN3@IsBuilt
	mov	DWORD PTR tv70[rbp], 1
	jmp	SHORT $LN4@IsBuilt
$LN3@IsBuilt:
	mov	DWORD PTR tv70[rbp], 0
$LN4@IsBuilt:
	movzx	eax, BYTE PTR tv70[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?IsBuilt@ImFontAtlas@@QEBA_NXZ ENDP			; ImFontAtlas::IsBuilt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pop_back@?$ImVector@I@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?pop_back@?$ImVector@I@@QEAAXXZ PROC			; ImVector<unsigned int>::pop_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1715
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@pop_back
	mov	r8d, 1715				; 000006b3H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@pop_back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?pop_back@?$ImVector@I@@QEAAXXZ ENDP			; ImVector<unsigned int>::pop_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$ImVector@I@@QEAAXAEBI@Z
_TEXT	SEGMENT
this$ = 224
v$ = 232
?push_back@?$ImVector@I@@QEAAXAEBI@Z PROC		; ImVector<unsigned int>::push_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1714
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN2@push_back
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@I@@QEBAHH@Z	; ImVector<unsigned int>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@I@@QEAAXH@Z		; ImVector<unsigned int>::reserve
$LN2@push_back:
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rdx, QWORD PTR v$[rbp]
	mov	edx, DWORD PTR [rdx]
	mov	DWORD PTR [rcx+rax*4], edx
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?push_back@?$ImVector@I@@QEAAXAEBI@Z ENDP		; ImVector<unsigned int>::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@I@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@I@@QEAAXH@Z PROC			; ImVector<unsigned int>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	shl	rax, 2
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	shl	rax, 2
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@I@@QEAAXH@Z ENDP			; ImVector<unsigned int>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$ImVector@I@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 224
new_size$ = 232
?resize@?$ImVector@I@@QEAAXH@Z PROC			; ImVector<unsigned int>::resize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1708
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_size$[rbp], eax
	jle	SHORT $LN2@resize
	mov	edx, DWORD PTR new_size$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@I@@QEBAHH@Z	; ImVector<unsigned int>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@I@@QEAAXH@Z		; ImVector<unsigned int>::reserve
$LN2@resize:
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_size$[rbp]
	mov	DWORD PTR [rax], ecx
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?resize@?$ImVector@I@@QEAAXH@Z ENDP			; ImVector<unsigned int>::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_grow_capacity@?$ImVector@I@@QEBAHH@Z
_TEXT	SEGMENT
new_capacity$ = 4
tv72 = 212
tv70 = 212
this$ = 256
sz$ = 264
?_grow_capacity@?$ImVector@I@@QEBAHH@Z PROC		; ImVector<unsigned int>::_grow_capacity, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1707
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+4], 0
	je	SHORT $LN3@grow_capac
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@grow_capac
$LN3@grow_capac:
	mov	DWORD PTR tv70[rbp], 8
$LN4@grow_capac:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR new_capacity$[rbp], eax
	mov	eax, DWORD PTR sz$[rbp]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jle	SHORT $LN5@grow_capac
	mov	eax, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	jmp	SHORT $LN6@grow_capac
$LN5@grow_capac:
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tv72[rbp], eax
$LN6@grow_capac:
	mov	eax, DWORD PTR tv72[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_grow_capacity@?$ImVector@I@@QEBAHH@Z ENDP		; ImVector<unsigned int>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?back@?$ImVector@I@@QEAAAEAIXZ
_TEXT	SEGMENT
this$ = 224
?back@?$ImVector@I@@QEAAAEAIXZ PROC			; ImVector<unsigned int>::back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1703
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@back
	mov	r8d, 1703				; 000006a7H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cdqe
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	lea	rax, QWORD PTR [rcx+rax*4]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?back@?$ImVector@I@@QEAAAEAIXZ ENDP			; ImVector<unsigned int>::back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@I@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@I@@QEAAXXZ PROC			; ImVector<unsigned int>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@I@@QEAAXXZ ENDP			; ImVector<unsigned int>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@I@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@I@@QEAA@XZ PROC				; ImVector<unsigned int>::~ImVector<unsigned int>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@I@@QEAA@XZ ENDP				; ImVector<unsigned int>::~ImVector<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@I@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@I@@QEAA@XZ PROC				; ImVector<unsigned int>::ImVector<unsigned int>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@I@@QEAA@XZ ENDP				; ImVector<unsigned int>::ImVector<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Clear@ImDrawData@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?Clear@ImDrawData@@QEAAXXZ PROC				; ImDrawData::Clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2504
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	ecx, 48					; 00000030H
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?Clear@ImDrawData@@QEAAXXZ ENDP				; ImDrawData::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImDrawData@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImDrawData@@QEAA@XZ PROC				; ImDrawData::ImDrawData, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2503
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 24
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 40					; 00000028H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rcx, QWORD PTR this$[rbp]
	call	?Clear@ImDrawData@@QEAAXXZ		; ImDrawData::Clear
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImDrawData@@QEAA@XZ ENDP				; ImDrawData::ImDrawData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GImDrawList@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GImDrawList@@QEAAPEAXI@Z PROC			; ImDrawList::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ImDrawList@@QEAA@XZ			; ImDrawList::~ImDrawList
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 200				; 000000c8H
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_GImDrawList@@QEAAPEAXI@Z ENDP			; ImDrawList::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PathStroke@ImDrawList@@QEAAXIHM@Z
_TEXT	SEGMENT
this$ = 224
col$ = 232
flags$ = 240
thickness$ = 248
?PathStroke@ImDrawList@@QEAAXIHM@Z PROC			; ImDrawList::PathStroke, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2436
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	movss	xmm0, DWORD PTR thickness$[rbp]
	movss	DWORD PTR [rsp+40], xmm0
	mov	eax, DWORD PTR flags$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR col$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mov	r8d, DWORD PTR [rax+120]
	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rax+128]
	mov	rcx, QWORD PTR this$[rbp]
	call	?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HIHM@Z ; ImDrawList::AddPolyline
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+120], 0
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?PathStroke@ImDrawList@@QEAAXIHM@Z ENDP			; ImDrawList::PathStroke
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PathFillConvex@ImDrawList@@QEAAXI@Z
_TEXT	SEGMENT
this$ = 224
col$ = 232
?PathFillConvex@ImDrawList@@QEAAXI@Z PROC		; ImDrawList::PathFillConvex, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2435
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	r9d, DWORD PTR col$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mov	r8d, DWORD PTR [rax+120]
	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rax+128]
	mov	rcx, QWORD PTR this$[rbp]
	call	?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z ; ImDrawList::AddConvexPolyFilled
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+120], 0
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?PathFillConvex@ImDrawList@@QEAAXI@Z ENDP		; ImDrawList::PathFillConvex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z
_TEXT	SEGMENT
tv68 = 192
this$ = 240
pos$ = 248
?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z PROC	; ImDrawList::PathLineTo, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2433
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 120				; 00000078H
	mov	QWORD PTR tv68[rbp], rax
	mov	rdx, QWORD PTR pos$[rbp]
	mov	rcx, QWORD PTR tv68[rbp]
	call	?push_back@?$ImVector@UImVec2@@@@QEAAXAEBUImVec2@@@Z ; ImVector<ImVec2>::push_back
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?PathLineTo@ImDrawList@@QEAAXAEBUImVec2@@@Z ENDP	; ImDrawList::PathLineTo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ImDrawList@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1ImDrawList@@QEAA@XZ PROC				; ImDrawList::~ImDrawList, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2389
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	?_ClearFreeMemory@ImDrawList@@QEAAXXZ	; ImDrawList::_ClearFreeMemory
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 168				; 000000a8H
	mov	rcx, rax
	call	??1ImDrawListSplitter@@QEAA@XZ		; ImDrawListSplitter::~ImDrawListSplitter
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 120				; 00000078H
	mov	rcx, rax
	call	??1?$ImVector@UImVec2@@@@QEAA@XZ	; ImVector<ImVec2>::~ImVector<ImVec2>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 104				; 00000068H
	mov	rcx, rax
	call	??1?$ImVector@PEAX@@QEAA@XZ		; ImVector<void *>::~ImVector<void *>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 88					; 00000058H
	mov	rcx, rax
	call	??1?$ImVector@UImVec4@@@@QEAA@XZ	; ImVector<ImVec4>::~ImVector<ImVec4>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	rcx, rax
	call	??1?$ImVector@UImDrawVert@@@@QEAA@XZ	; ImVector<ImDrawVert>::~ImVector<ImDrawVert>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rcx, rax
	call	??1?$ImVector@G@@QEAA@XZ		; ImVector<unsigned short>::~ImVector<unsigned short>
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??1?$ImVector@UImDrawCmd@@@@QEAA@XZ	; ImVector<ImDrawCmd>::~ImVector<ImDrawCmd>
	npad	1
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1ImDrawList@@QEAA@XZ ENDP				; ImDrawList::~ImDrawList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z
_TEXT	SEGMENT
this$ = 224
shared_data$ = 232
??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z PROC	; ImDrawList::ImDrawList, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2387
$LN10:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$ImVector@UImDrawCmd@@@@QEAA@XZ	; ImVector<ImDrawCmd>::ImVector<ImDrawCmd>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rcx, rax
	call	??0?$ImVector@G@@QEAA@XZ		; ImVector<unsigned short>::ImVector<unsigned short>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	rcx, rax
	call	??0?$ImVector@UImDrawVert@@@@QEAA@XZ	; ImVector<ImDrawVert>::ImVector<ImDrawVert>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 88					; 00000058H
	mov	rcx, rax
	call	??0?$ImVector@UImVec4@@@@QEAA@XZ	; ImVector<ImVec4>::ImVector<ImVec4>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 104				; 00000068H
	mov	rcx, rax
	call	??0?$ImVector@PEAX@@QEAA@XZ		; ImVector<void *>::ImVector<void *>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 120				; 00000078H
	mov	rcx, rax
	call	??0?$ImVector@UImVec2@@@@QEAA@XZ	; ImVector<ImVec2>::ImVector<ImVec2>
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 136				; 00000088H
	mov	rcx, rax
	call	??0ImDrawCmdHeader@@QEAA@XZ
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 168				; 000000a8H
	mov	rcx, rax
	call	??0ImDrawListSplitter@@QEAA@XZ		; ImDrawListSplitter::ImDrawListSplitter
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	ecx, 200				; 000000c8H
	rep stosb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR shared_data$[rbp]
	mov	QWORD PTR [rax+56], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z ENDP	; ImDrawList::ImDrawList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
shared_data$ = 232
?dtor$0@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$ImVector@UImDrawCmd@@@@QEAA@XZ	; ImVector<ImDrawCmd>::~ImVector<ImDrawCmd>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
shared_data$ = 232
?dtor$1@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 16
	call	??1?$ImVector@G@@QEAA@XZ		; ImVector<unsigned short>::~ImVector<unsigned short>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
shared_data$ = 232
?dtor$2@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$2
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 32					; 00000020H
	call	??1?$ImVector@UImDrawVert@@@@QEAA@XZ	; ImVector<ImDrawVert>::~ImVector<ImDrawVert>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$2@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
shared_data$ = 232
?dtor$3@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 88					; 00000058H
	call	??1?$ImVector@UImVec4@@@@QEAA@XZ	; ImVector<ImVec4>::~ImVector<ImVec4>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
shared_data$ = 232
?dtor$4@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$4
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 104				; 00000068H
	call	??1?$ImVector@PEAX@@QEAA@XZ		; ImVector<void *>::~ImVector<void *>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$4@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
shared_data$ = 232
?dtor$5@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA PROC ; `ImDrawList::ImDrawList'::`1'::dtor$5
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 120				; 00000078H
	call	??1?$ImVector@UImVec2@@@@QEAA@XZ	; ImVector<ImVec2>::~ImVector<ImVec2>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$5@?0???0ImDrawList@@QEAA@PEBUImDrawListSharedData@@@Z@4HA ENDP ; `ImDrawList::ImDrawList'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$ImVector@UImVec2@@@@QEAAXAEBUImVec2@@@Z
_TEXT	SEGMENT
this$ = 224
v$ = 232
?push_back@?$ImVector@UImVec2@@@@QEAAXAEBUImVec2@@@Z PROC ; ImVector<ImVec2>::push_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1714
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN2@push_back
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@UImVec2@@@@QEBAHH@Z ; ImVector<ImVec2>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z	; ImVector<ImVec2>::reserve
$LN2@push_back:
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rdx, QWORD PTR v$[rbp]
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR [rcx+rax*8], rdx
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?push_back@?$ImVector@UImVec2@@@@QEAAXAEBUImVec2@@@Z ENDP ; ImVector<ImVec2>::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z PROC		; ImVector<ImVec2>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	shl	rax, 3
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	shl	rax, 3
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@UImVec2@@@@QEAAXH@Z ENDP		; ImVector<ImVec2>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_grow_capacity@?$ImVector@UImVec2@@@@QEBAHH@Z
_TEXT	SEGMENT
new_capacity$ = 4
tv72 = 212
tv70 = 212
this$ = 256
sz$ = 264
?_grow_capacity@?$ImVector@UImVec2@@@@QEBAHH@Z PROC	; ImVector<ImVec2>::_grow_capacity, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1707
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+4], 0
	je	SHORT $LN3@grow_capac
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@grow_capac
$LN3@grow_capac:
	mov	DWORD PTR tv70[rbp], 8
$LN4@grow_capac:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR new_capacity$[rbp], eax
	mov	eax, DWORD PTR sz$[rbp]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jle	SHORT $LN5@grow_capac
	mov	eax, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	jmp	SHORT $LN6@grow_capac
$LN5@grow_capac:
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tv72[rbp], eax
$LN6@grow_capac:
	mov	eax, DWORD PTR tv72[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_grow_capacity@?$ImVector@UImVec2@@@@QEBAHH@Z ENDP	; ImVector<ImVec2>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImVec2@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImVec2@@@@QEAA@XZ PROC			; ImVector<ImVec2>::~ImVector<ImVec2>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImVec2@@@@QEAA@XZ ENDP			; ImVector<ImVec2>::~ImVector<ImVec2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@UImVec2@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@UImVec2@@@@QEAA@XZ PROC			; ImVector<ImVec2>::ImVector<ImVec2>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@UImVec2@@@@QEAA@XZ ENDP			; ImVector<ImVec2>::ImVector<ImVec2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@PEAX@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@PEAX@@QEAA@XZ PROC			; ImVector<void *>::~ImVector<void *>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@PEAX@@QEAA@XZ ENDP			; ImVector<void *>::~ImVector<void *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@PEAX@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@PEAX@@QEAA@XZ PROC			; ImVector<void *>::ImVector<void *>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@PEAX@@QEAA@XZ ENDP			; ImVector<void *>::ImVector<void *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?back@?$ImVector@UImVec4@@@@QEAAAEAUImVec4@@XZ
_TEXT	SEGMENT
this$ = 224
?back@?$ImVector@UImVec4@@@@QEAAAEAUImVec4@@XZ PROC	; ImVector<ImVec4>::back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1703
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@back
	mov	r8d, 1703				; 000006a7H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cdqe
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?back@?$ImVector@UImVec4@@@@QEAAAEAUImVec4@@XZ ENDP	; ImVector<ImVec4>::back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImVec4@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImVec4@@@@QEAA@XZ PROC			; ImVector<ImVec4>::~ImVector<ImVec4>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImVec4@@@@QEAA@XZ ENDP			; ImVector<ImVec4>::~ImVector<ImVec4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@UImVec4@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@UImVec4@@@@QEAA@XZ PROC			; ImVector<ImVec4>::ImVector<ImVec4>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@UImVec4@@@@QEAA@XZ ENDP			; ImVector<ImVec4>::ImVector<ImVec4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z PROC	; ImVector<ImDrawVert>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	imul	rax, rax, 20
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 20
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@UImDrawVert@@@@QEAAXH@Z ENDP	; ImVector<ImDrawVert>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImDrawVert@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImDrawVert@@@@QEAA@XZ PROC		; ImVector<ImDrawVert>::~ImVector<ImDrawVert>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImDrawVert@@@@QEAA@XZ ENDP		; ImVector<ImDrawVert>::~ImVector<ImDrawVert>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@UImDrawVert@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@UImDrawVert@@@@QEAA@XZ PROC		; ImVector<ImDrawVert>::ImVector<ImDrawVert>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@UImDrawVert@@@@QEAA@XZ ENDP		; ImVector<ImDrawVert>::ImVector<ImDrawVert>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ImDrawListSplitter@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1ImDrawListSplitter@@QEAA@XZ PROC			; ImDrawListSplitter::~ImDrawListSplitter, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2317
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	?ClearFreeMemory@ImDrawListSplitter@@QEAAXXZ ; ImDrawListSplitter::ClearFreeMemory
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??1?$ImVector@UImDrawChannel@@@@QEAA@XZ	; ImVector<ImDrawChannel>::~ImVector<ImDrawChannel>
	npad	1
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1ImDrawListSplitter@@QEAA@XZ ENDP			; ImDrawListSplitter::~ImDrawListSplitter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImDrawListSplitter@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImDrawListSplitter@@QEAA@XZ PROC			; ImDrawListSplitter::ImDrawListSplitter, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2316
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??0?$ImVector@UImDrawChannel@@@@QEAA@XZ	; ImVector<ImDrawChannel>::ImVector<ImDrawChannel>
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	ecx, 24
	rep stosb
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImDrawListSplitter@@QEAA@XZ ENDP			; ImDrawListSplitter::ImDrawListSplitter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@UImDrawChannel@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@UImDrawChannel@@@@QEAAXXZ PROC	; ImVector<ImDrawChannel>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@UImDrawChannel@@@@QEAAXXZ ENDP	; ImVector<ImDrawChannel>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImDrawChannel@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImDrawChannel@@@@QEAA@XZ PROC		; ImVector<ImDrawChannel>::~ImVector<ImDrawChannel>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImDrawChannel@@@@QEAA@XZ ENDP		; ImVector<ImDrawChannel>::~ImVector<ImDrawChannel>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@UImDrawChannel@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@UImDrawChannel@@@@QEAA@XZ PROC		; ImVector<ImDrawChannel>::ImVector<ImDrawChannel>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@UImDrawChannel@@@@QEAA@XZ ENDP		; ImVector<ImDrawChannel>::ImVector<ImDrawChannel>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?back@?$ImVector@UImDrawCmd@@@@QEBAAEBUImDrawCmd@@XZ
_TEXT	SEGMENT
this$ = 224
?back@?$ImVector@UImDrawCmd@@@@QEBAAEBUImDrawCmd@@XZ PROC ; ImVector<ImDrawCmd>::back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1704
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@back
	mov	r8d, 1704				; 000006a8H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cdqe
	imul	rax, rax, 56				; 00000038H
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?back@?$ImVector@UImDrawCmd@@@@QEBAAEBUImDrawCmd@@XZ ENDP ; ImVector<ImDrawCmd>::back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?back@?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@XZ
_TEXT	SEGMENT
this$ = 224
?back@?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@XZ PROC ; ImVector<ImDrawCmd>::back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1703
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@back
	mov	r8d, 1703				; 000006a7H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@back:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	cdqe
	imul	rax, rax, 56				; 00000038H
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?back@?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@XZ ENDP ; ImVector<ImDrawCmd>::back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?begin@?$ImVector@UImDrawCmd@@@@QEBAPEBUImDrawCmd@@XZ
_TEXT	SEGMENT
this$ = 224
?begin@?$ImVector@UImDrawCmd@@@@QEBAPEBUImDrawCmd@@XZ PROC ; ImVector<ImDrawCmd>::begin, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1698
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?begin@?$ImVector@UImDrawCmd@@@@QEBAPEBUImDrawCmd@@XZ ENDP ; ImVector<ImDrawCmd>::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@H@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@H@Z PROC	; ImVector<ImDrawCmd>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1694
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1694				; 0000069eH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 56				; 00000038H
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@H@Z ENDP	; ImVector<ImDrawCmd>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImDrawCmd@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImDrawCmd@@@@QEAA@XZ PROC		; ImVector<ImDrawCmd>::~ImVector<ImDrawCmd>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImDrawCmd@@@@QEAA@XZ ENDP		; ImVector<ImDrawCmd>::~ImVector<ImDrawCmd>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@UImDrawCmd@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@UImDrawCmd@@@@QEAA@XZ PROC		; ImVector<ImDrawCmd>::ImVector<ImDrawCmd>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@UImDrawCmd@@@@QEAA@XZ ENDP		; ImVector<ImDrawCmd>::ImVector<ImDrawCmd>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImDrawCmdHeader@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImDrawCmdHeader@@QEAA@XZ PROC			; ImDrawCmdHeader::ImDrawCmdHeader, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0ImVec4@@QEAA@XZ			; ImVec4::ImVec4
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImDrawCmdHeader@@QEAA@XZ ENDP			; ImDrawCmdHeader::ImDrawCmdHeader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Step@ImGuiListClipper@@QEAA_NXZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
table$ = 72
pos_y1$1 = 100
pos_y2$2 = 132
already_submitted$3 = 164
this$ = 416
?Step@ImGuiListClipper@@QEAA_NXZ PROC			; ImGuiListClipper::Step, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2324
$LN22:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2325
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 2326
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 2328
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+8176]
	mov	QWORD PTR table$[rbp], rax
; Line 2329
	cmp	QWORD PTR table$[rbp], 0
	je	SHORT $LN2@Step
	mov	rax, QWORD PTR table$[rbp]
	movzx	eax, BYTE PTR [rax+506]
	test	eax, eax
	je	SHORT $LN2@Step
; Line 2330
	mov	rcx, QWORD PTR table$[rbp]
	call	?TableEndRow@ImGui@@YAXPEAUImGuiTable@@@Z ; ImGui::TableEndRow
$LN2@Step:
; Line 2333
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+8], 0
	je	SHORT $LN4@Step
	call	?GetSkipItemForListClipping@@YA_NXZ	; GetSkipItemForListClipping
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Step
$LN4@Step:
; Line 2335
	mov	rcx, QWORD PTR this$[rbp]
	call	?End@ImGuiListClipper@@QEAAXXZ		; ImGuiListClipper::End
; Line 2336
	xor	al, al
	jmp	$LN1@Step
$LN3@Step:
; Line 2340
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+12], 0
	jne	$LN5@Step
; Line 2344
	cmp	QWORD PTR table$[rbp], 0
	je	SHORT $LN6@Step
	mov	rax, QWORD PTR table$[rbp]
	movzx	eax, BYTE PTR [rax+516]
	test	eax, eax
	jne	SHORT $LN6@Step
; Line 2346
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+16]
	mov	DWORD PTR [rax], ecx
; Line 2347
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+16]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+4], eax
; Line 2348
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+16]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+16], eax
; Line 2349
	mov	al, 1
	jmp	$LN1@Step
$LN6@Step:
; Line 2352
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rcx+220]
	movss	DWORD PTR [rax+24], xmm0
; Line 2353
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rax+20]
	jb	SHORT $LN7@Step
; Line 2356
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+16]
	mov	DWORD PTR [rax], ecx
; Line 2357
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+16]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+4], eax
; Line 2358
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+12], 1
; Line 2359
	mov	al, 1
	jmp	$LN1@Step
$LN7@Step:
; Line 2363
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	mov	DWORD PTR [rax], ecx
; Line 2364
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+12], 2
$LN5@Step:
; Line 2368
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+12], 1
	jne	$LN8@Step
; Line 2370
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rax+20]
	jae	SHORT $LN17@Step
	mov	eax, DWORD PTR ?__LINE__Var@?0??Step@ImGuiListClipper@@QEAA_NXZ@4JA
	add	eax, 46					; 0000002eH
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CI@EMDFCODN@?$AAI?$AAt?$AAe?$AAm?$AAs?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN17@Step:
; Line 2371
	cmp	QWORD PTR table$[rbp], 0
	je	SHORT $LN9@Step
; Line 2373
	mov	rax, QWORD PTR table$[rbp]
	movss	xmm0, DWORD PTR [rax+132]
	movss	DWORD PTR pos_y1$1[rbp], xmm0
; Line 2374
	mov	rax, QWORD PTR table$[rbp]
	movss	xmm0, DWORD PTR [rax+136]
	movss	DWORD PTR pos_y2$2[rbp], xmm0
; Line 2375
	movss	xmm0, DWORD PTR pos_y2$2[rbp]
	subss	xmm0, DWORD PTR pos_y1$1[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+20], xmm0
; Line 2376
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR pos_y2$2[rbp]
	movss	DWORD PTR [rax+220], xmm0
; Line 2377
	jmp	SHORT $LN10@Step
$LN9@Step:
; Line 2380
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+220]
	subss	xmm0, DWORD PTR [rcx+24]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+20], xmm0
$LN10@Step:
; Line 2382
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+20]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN18@Step
	lea	rax, OFFSET FLAT:??_C@_0FA@HACOCONG@Unable?5to?5calculate?5item?5height@
	test	rax, rax
	jne	SHORT $LN19@Step
$LN18@Step:
	mov	eax, DWORD PTR ?__LINE__Var@?0??Step@ImGuiListClipper@@QEAA_NXZ@4JA
	add	eax, 58					; 0000003aH
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1NA@DHHMFPNJ@?$AAI?$AAt?$AAe?$AAm?$AAs?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN19@Step:
; Line 2383
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+12], 2
$LN8@Step:
; Line 2387
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+8]
	cmp	DWORD PTR [rax+4], ecx
	jl	SHORT $LN11@Step
; Line 2389
	mov	rcx, QWORD PTR this$[rbp]
	call	?End@ImGuiListClipper@@QEAAXXZ		; ImGuiListClipper::End
; Line 2390
	xor	al, al
	jmp	$LN1@Step
$LN11@Step:
; Line 2394
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+12], 2
	jne	$LN12@Step
; Line 2396
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+20]
	comiss	xmm0, DWORD PTR __real@00000000
	ja	SHORT $LN20@Step
	mov	eax, DWORD PTR ?__LINE__Var@?0??Step@ImGuiListClipper@@QEAA_NXZ@4JA
	add	eax, 72					; 00000048H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@FEFCFAEB@?$AAI?$AAt?$AAe?$AAm?$AAs?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN20@Step:
; Line 2398
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	mov	DWORD PTR already_submitted$3[rbp], eax
; Line 2399
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 4
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR this$[rbp]
	mov	r8d, DWORD PTR already_submitted$3[rbp]
	mov	edx, DWORD PTR [rdx+8]
	sub	edx, r8d
	mov	r9, rax
	mov	r8, rcx
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+20]
	mov	ecx, edx
	call	?CalcListClipping@ImGui@@YAXHMPEAH0@Z	; ImGui::CalcListClipping
; Line 2400
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	add	eax, DWORD PTR already_submitted$3[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 2401
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	add	eax, DWORD PTR already_submitted$3[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+4], eax
; Line 2404
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR already_submitted$3[rbp]
	cmp	DWORD PTR [rax], ecx
	jle	SHORT $LN13@Step
; Line 2405
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+16]
	mov	eax, DWORD PTR [rax]
	sub	eax, ecx
	cvtsi2ss xmm0, eax
	mov	rax, QWORD PTR this$[rbp]
	mulss	xmm0, DWORD PTR [rax+20]
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+24]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+20]
	call	?SetCursorPosYAndSetupForPrevLine@@YAXMM@Z ; SetCursorPosYAndSetupForPrevLine
$LN13@Step:
; Line 2407
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+12], 3
; Line 2408
	mov	al, 1
	jmp	$LN1@Step
$LN12@Step:
; Line 2413
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+12], 3
	jne	SHORT $LN14@Step
; Line 2416
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+8], 2147483647		; 7fffffffH
	jge	SHORT $LN15@Step
; Line 2417
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+16]
	mov	eax, DWORD PTR [rax+8]
	sub	eax, ecx
	cvtsi2ss xmm0, eax
	mov	rax, QWORD PTR this$[rbp]
	mulss	xmm0, DWORD PTR [rax+20]
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+24]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+20]
	call	?SetCursorPosYAndSetupForPrevLine@@YAXMM@Z ; SetCursorPosYAndSetupForPrevLine
$LN15@Step:
; Line 2418
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+8], -1
; Line 2419
	xor	al, al
	jmp	SHORT $LN1@Step
$LN14@Step:
; Line 2422
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN21@Step
	mov	eax, DWORD PTR ?__LINE__Var@?0??Step@ImGuiListClipper@@QEAA_NXZ@4JA
	add	eax, 98					; 00000062H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN21@Step:
; Line 2423
	xor	al, al
$LN1@Step:
; Line 2424
	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
?Step@ImGuiListClipper@@QEAA_NXZ ENDP			; ImGuiListClipper::Step
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?End@ImGuiListClipper@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?End@ImGuiListClipper@@QEAAXXZ PROC			; ImGuiListClipper::End, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2312
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2313
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+8], 0
	jge	SHORT $LN2@End
; Line 2314
	jmp	$LN1@End
$LN2@End:
; Line 2317
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+8], 2147483647		; 7fffffffH
	jge	SHORT $LN3@End
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jl	SHORT $LN3@End
; Line 2318
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+16]
	mov	eax, DWORD PTR [rax+8]
	sub	eax, ecx
	cvtsi2ss xmm0, eax
	mov	rax, QWORD PTR this$[rbp]
	mulss	xmm0, DWORD PTR [rax+20]
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+24]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+20]
	call	?SetCursorPosYAndSetupForPrevLine@@YAXMM@Z ; SetCursorPosYAndSetupForPrevLine
$LN3@End:
; Line 2319
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+8], -1
; Line 2320
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+12], 3
$LN1@End:
; Line 2321
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?End@ImGuiListClipper@@QEAAXXZ ENDP			; ImGuiListClipper::End
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Begin@ImGuiListClipper@@QEAAXHM@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
table$1 = 72
this$ = 320
items_count$ = 328
items_height$ = 336
?Begin@ImGuiListClipper@@QEAAXHM@Z PROC			; ImGuiListClipper::Begin, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2294
$LN5:
	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2295
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 2296
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 2298
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+8176]
	mov	QWORD PTR table$1[rbp], rax
	cmp	QWORD PTR table$1[rbp], 0
	je	SHORT $LN2@Begin
; Line 2299
	mov	rax, QWORD PTR table$1[rbp]
	movzx	eax, BYTE PTR [rax+506]
	test	eax, eax
	je	SHORT $LN3@Begin
; Line 2300
	mov	rcx, QWORD PTR table$1[rbp]
	call	?TableEndRow@ImGui@@YAXPEAUImGuiTable@@@Z ; ImGui::TableEndRow
$LN3@Begin:
$LN2@Begin:
; Line 2302
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rcx+220]
	movss	DWORD PTR [rax+24], xmm0
; Line 2303
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR items_height$[rbp]
	movss	DWORD PTR [rax+20], xmm0
; Line 2304
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR items_count$[rbp]
	mov	DWORD PTR [rax+8], ecx
; Line 2305
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+16], 0
; Line 2306
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+12], 0
; Line 2307
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], -1
; Line 2308
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
; Line 2309
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?Begin@ImGuiListClipper@@QEAAXHM@Z ENDP			; ImGuiListClipper::Begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ImGuiListClipper@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1ImGuiListClipper@@QEAA@XZ PROC			; ImGuiListClipper::~ImGuiListClipper, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2286
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2287
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+8], -1
	jne	SHORT $LN3@ImGuiListC
	lea	rax, OFFSET FLAT:??_C@_0DA@BHONNBHO@Forgot?5to?5call?5End?$CI?$CJ?0?5or?5to?5Ste@
	test	rax, rax
	jne	SHORT $LN4@ImGuiListC
$LN3@ImGuiListC:
	mov	eax, DWORD PTR ?__LINE__Var@?0???1ImGuiListClipper@@QEAA@XZ@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1IM@IGMMBPBP@?$AAI?$AAt?$AAe?$AAm?$AAs?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?9@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@ImGuiListC:
; Line 2288
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1ImGuiListClipper@@QEAA@XZ ENDP			; ImGuiListClipper::~ImGuiListClipper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiListClipper@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiListClipper@@QEAA@XZ PROC			; ImGuiListClipper::ImGuiListClipper, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2280
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2281
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	ecx, 28
	rep stosb
; Line 2282
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+8], -1
; Line 2283
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiListClipper@@QEAA@XZ ENDP			; ImGuiListClipper::ImGuiListClipper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ImGuiStorage@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1ImGuiStorage@@QEAA@XZ PROC				; ImGuiStorage::~ImGuiStorage, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??1?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ ; ImVector<ImGuiStorage::ImGuiStoragePair>::~ImVector<ImGuiStorage::ImGuiStoragePair>
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1ImGuiStorage@@QEAA@XZ ENDP				; ImGuiStorage::~ImGuiStorage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiStorage@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiStorage@@QEAA@XZ PROC				; ImGuiStorage::ImGuiStorage, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ ; ImVector<ImGuiStorage::ImGuiStoragePair>::ImVector<ImGuiStorage::ImGuiStoragePair>
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiStorage@@QEAA@XZ ENDP				; ImGuiStorage::ImGuiStorage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BuildSortByKey@ImGuiStorage@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?BuildSortByKey@ImGuiStorage@@QEAAXXZ PROC		; ImGuiStorage::BuildSortByKey, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1907
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1918
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 1
	jle	SHORT $LN2@BuildSortB
; Line 1919
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	lea	r9, OFFSET FLAT:?PairCompareByID@StaticFunc@?1??BuildSortByKey@ImGuiStorage@@QEAAXXZ@SAHPEBX0@Z ; `ImGuiStorage::BuildSortByKey'::`2'::StaticFunc::PairCompareByID
	mov	r8d, 16
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_qsort
$LN2@BuildSortB:
; Line 1920
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?BuildSortByKey@ImGuiStorage@@QEAAXXZ ENDP		; ImGuiStorage::BuildSortByKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetAllInt@ImGuiStorage@@QEAAXH@Z
_TEXT	SEGMENT
i$1 = 4
tv73 = 216
this$ = 256
v$ = 264
?SetAllInt@ImGuiStorage@@QEAAXH@Z PROC			; ImGuiStorage::SetAllInt, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2021
$LN6:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2022
	mov	DWORD PTR i$1[rbp], 0
	jmp	SHORT $LN4@SetAllInt
$LN2@SetAllInt:
	mov	eax, DWORD PTR i$1[rbp]
	inc	eax
	mov	DWORD PTR i$1[rbp], eax
$LN4@SetAllInt:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$1[rbp], eax
	jge	SHORT $LN3@SetAllInt
; Line 2023
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv73[rbp], rax
	mov	edx, DWORD PTR i$1[rbp]
	mov	rcx, QWORD PTR tv73[rbp]
	call	??A?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAAEAUImGuiStoragePair@ImGuiStorage@@H@Z ; ImVector<ImGuiStorage::ImGuiStoragePair>::operator[]
	mov	ecx, DWORD PTR v$[rbp]
	mov	DWORD PTR [rax+8], ecx
	jmp	SHORT $LN2@SetAllInt
$LN3@SetAllInt:
; Line 2024
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetAllInt@ImGuiStorage@@QEAAXH@Z ENDP			; ImGuiStorage::SetAllInt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetVoidPtrRef@ImGuiStorage@@QEAAPEAPEAXIPEAX@Z
_TEXT	SEGMENT
it$ = 8
$T1 = 232
tv84 = 264
this$ = 304
key$ = 312
default_val$ = 320
?GetVoidPtrRef@ImGuiStorage@@QEAAPEAPEAXIPEAX@Z PROC	; ImGuiStorage::GetVoidPtrRef, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1974
$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1975
	mov	rax, QWORD PTR this$[rbp]
	mov	edx, DWORD PTR key$[rbp]
	mov	rcx, rax
	call	?LowerBound@@YAPEAUImGuiStoragePair@ImGuiStorage@@AEAU?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@I@Z ; LowerBound
	mov	QWORD PTR it$[rbp], rax
; Line 1976
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@XZ ; ImVector<ImGuiStorage::ImGuiStoragePair>::end
	cmp	QWORD PTR it$[rbp], rax
	je	SHORT $LN3@GetVoidPtr
	mov	rax, QWORD PTR it$[rbp]
	mov	ecx, DWORD PTR key$[rbp]
	cmp	DWORD PTR [rax], ecx
	je	SHORT $LN2@GetVoidPtr
$LN3@GetVoidPtr:
; Line 1977
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv84[rbp], rax
	mov	r8, QWORD PTR default_val$[rbp]
	mov	edx, DWORD PTR key$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImGuiStoragePair@ImGuiStorage@@QEAA@IPEAX@Z ; ImGuiStorage::ImGuiStoragePair::ImGuiStoragePair
	mov	r8, rax
	mov	rdx, QWORD PTR it$[rbp]
	mov	rcx, QWORD PTR tv84[rbp]
	call	?insert@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@PEBU23@AEBU23@@Z ; ImVector<ImGuiStorage::ImGuiStoragePair>::insert
	mov	QWORD PTR it$[rbp], rax
$LN2@GetVoidPtr:
; Line 1978
	mov	rax, QWORD PTR it$[rbp]
	add	rax, 8
; Line 1979
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
?GetVoidPtrRef@ImGuiStorage@@QEAAPEAPEAXIPEAX@Z ENDP	; ImGuiStorage::GetVoidPtrRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetFloatRef@ImGuiStorage@@QEAAPEAMIM@Z
_TEXT	SEGMENT
it$ = 8
$T1 = 232
tv84 = 264
this$ = 304
key$ = 312
default_val$ = 320
?GetFloatRef@ImGuiStorage@@QEAAPEAMIM@Z PROC		; ImGuiStorage::GetFloatRef, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1966
$LN5:
	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1967
	mov	rax, QWORD PTR this$[rbp]
	mov	edx, DWORD PTR key$[rbp]
	mov	rcx, rax
	call	?LowerBound@@YAPEAUImGuiStoragePair@ImGuiStorage@@AEAU?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@I@Z ; LowerBound
	mov	QWORD PTR it$[rbp], rax
; Line 1968
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@XZ ; ImVector<ImGuiStorage::ImGuiStoragePair>::end
	cmp	QWORD PTR it$[rbp], rax
	je	SHORT $LN3@GetFloatRe
	mov	rax, QWORD PTR it$[rbp]
	mov	ecx, DWORD PTR key$[rbp]
	cmp	DWORD PTR [rax], ecx
	je	SHORT $LN2@GetFloatRe
$LN3@GetFloatRe:
; Line 1969
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv84[rbp], rax
	movss	xmm2, DWORD PTR default_val$[rbp]
	mov	edx, DWORD PTR key$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImGuiStoragePair@ImGuiStorage@@QEAA@IM@Z ; ImGuiStorage::ImGuiStoragePair::ImGuiStoragePair
	mov	r8, rax
	mov	rdx, QWORD PTR it$[rbp]
	mov	rcx, QWORD PTR tv84[rbp]
	call	?insert@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@PEBU23@AEBU23@@Z ; ImVector<ImGuiStorage::ImGuiStoragePair>::insert
	mov	QWORD PTR it$[rbp], rax
$LN2@GetFloatRe:
; Line 1970
	mov	rax, QWORD PTR it$[rbp]
	add	rax, 8
; Line 1971
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
?GetFloatRef@ImGuiStorage@@QEAAPEAMIM@Z ENDP		; ImGuiStorage::GetFloatRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetBoolRef@ImGuiStorage@@QEAAPEA_NI_N@Z
_TEXT	SEGMENT
tv68 = 192
this$ = 240
key$ = 248
default_val$ = 256
?GetBoolRef@ImGuiStorage@@QEAAPEA_NI_N@Z PROC		; ImGuiStorage::GetBoolRef, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1961
$LN5:
	mov	BYTE PTR [rsp+24], r8b
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1962
	movzx	eax, BYTE PTR default_val$[rbp]
	test	eax, eax
	je	SHORT $LN3@GetBoolRef
	mov	DWORD PTR tv68[rbp], 1
	jmp	SHORT $LN4@GetBoolRef
$LN3@GetBoolRef:
	mov	DWORD PTR tv68[rbp], 0
$LN4@GetBoolRef:
	mov	r8d, DWORD PTR tv68[rbp]
	mov	edx, DWORD PTR key$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?GetIntRef@ImGuiStorage@@QEAAPEAHIH@Z	; ImGuiStorage::GetIntRef
; Line 1963
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?GetBoolRef@ImGuiStorage@@QEAAPEA_NI_N@Z ENDP		; ImGuiStorage::GetBoolRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetIntRef@ImGuiStorage@@QEAAPEAHIH@Z
_TEXT	SEGMENT
it$ = 8
$T1 = 232
tv84 = 264
this$ = 304
key$ = 312
default_val$ = 320
?GetIntRef@ImGuiStorage@@QEAAPEAHIH@Z PROC		; ImGuiStorage::GetIntRef, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1953
$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1954
	mov	rax, QWORD PTR this$[rbp]
	mov	edx, DWORD PTR key$[rbp]
	mov	rcx, rax
	call	?LowerBound@@YAPEAUImGuiStoragePair@ImGuiStorage@@AEAU?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@I@Z ; LowerBound
	mov	QWORD PTR it$[rbp], rax
; Line 1955
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@XZ ; ImVector<ImGuiStorage::ImGuiStoragePair>::end
	cmp	QWORD PTR it$[rbp], rax
	je	SHORT $LN3@GetIntRef
	mov	rax, QWORD PTR it$[rbp]
	mov	ecx, DWORD PTR key$[rbp]
	cmp	DWORD PTR [rax], ecx
	je	SHORT $LN2@GetIntRef
$LN3@GetIntRef:
; Line 1956
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv84[rbp], rax
	mov	r8d, DWORD PTR default_val$[rbp]
	mov	edx, DWORD PTR key$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImGuiStoragePair@ImGuiStorage@@QEAA@IH@Z ; ImGuiStorage::ImGuiStoragePair::ImGuiStoragePair
	mov	r8, rax
	mov	rdx, QWORD PTR it$[rbp]
	mov	rcx, QWORD PTR tv84[rbp]
	call	?insert@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@PEBU23@AEBU23@@Z ; ImVector<ImGuiStorage::ImGuiStoragePair>::insert
	mov	QWORD PTR it$[rbp], rax
$LN2@GetIntRef:
; Line 1957
	mov	rax, QWORD PTR it$[rbp]
	add	rax, 8
; Line 1958
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
?GetIntRef@ImGuiStorage@@QEAAPEAHIH@Z ENDP		; ImGuiStorage::GetIntRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetVoidPtr@ImGuiStorage@@QEAAXIPEAX@Z
_TEXT	SEGMENT
it$ = 8
$T1 = 232
tv84 = 264
this$ = 304
key$ = 312
val$ = 320
?SetVoidPtr@ImGuiStorage@@QEAAXIPEAX@Z PROC		; ImGuiStorage::SetVoidPtr, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2010
$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2011
	mov	rax, QWORD PTR this$[rbp]
	mov	edx, DWORD PTR key$[rbp]
	mov	rcx, rax
	call	?LowerBound@@YAPEAUImGuiStoragePair@ImGuiStorage@@AEAU?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@I@Z ; LowerBound
	mov	QWORD PTR it$[rbp], rax
; Line 2012
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@XZ ; ImVector<ImGuiStorage::ImGuiStoragePair>::end
	cmp	QWORD PTR it$[rbp], rax
	je	SHORT $LN3@SetVoidPtr
	mov	rax, QWORD PTR it$[rbp]
	mov	ecx, DWORD PTR key$[rbp]
	cmp	DWORD PTR [rax], ecx
	je	SHORT $LN2@SetVoidPtr
$LN3@SetVoidPtr:
; Line 2014
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv84[rbp], rax
	mov	r8, QWORD PTR val$[rbp]
	mov	edx, DWORD PTR key$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImGuiStoragePair@ImGuiStorage@@QEAA@IPEAX@Z ; ImGuiStorage::ImGuiStoragePair::ImGuiStoragePair
	mov	r8, rax
	mov	rdx, QWORD PTR it$[rbp]
	mov	rcx, QWORD PTR tv84[rbp]
	call	?insert@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@PEBU23@AEBU23@@Z ; ImVector<ImGuiStorage::ImGuiStoragePair>::insert
; Line 2015
	jmp	SHORT $LN1@SetVoidPtr
$LN2@SetVoidPtr:
; Line 2017
	mov	rax, QWORD PTR it$[rbp]
	mov	rcx, QWORD PTR val$[rbp]
	mov	QWORD PTR [rax+8], rcx
$LN1@SetVoidPtr:
; Line 2018
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
?SetVoidPtr@ImGuiStorage@@QEAAXIPEAX@Z ENDP		; ImGuiStorage::SetVoidPtr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetVoidPtr@ImGuiStorage@@QEBAPEAXI@Z
_TEXT	SEGMENT
it$ = 8
this$ = 256
key$ = 264
?GetVoidPtr@ImGuiStorage@@QEBAPEAXI@Z PROC		; ImGuiStorage::GetVoidPtr, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1944
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1945
	mov	rax, QWORD PTR this$[rbp]
	mov	edx, DWORD PTR key$[rbp]
	mov	rcx, rax
	call	?LowerBound@@YAPEAUImGuiStoragePair@ImGuiStorage@@AEAU?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@I@Z ; LowerBound
	mov	QWORD PTR it$[rbp], rax
; Line 1946
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAPEBUImGuiStoragePair@ImGuiStorage@@XZ ; ImVector<ImGuiStorage::ImGuiStoragePair>::end
	cmp	QWORD PTR it$[rbp], rax
	je	SHORT $LN3@GetVoidPtr
	mov	rax, QWORD PTR it$[rbp]
	mov	ecx, DWORD PTR key$[rbp]
	cmp	DWORD PTR [rax], ecx
	je	SHORT $LN2@GetVoidPtr
$LN3@GetVoidPtr:
; Line 1947
	xor	eax, eax
	jmp	SHORT $LN1@GetVoidPtr
$LN2@GetVoidPtr:
; Line 1948
	mov	rax, QWORD PTR it$[rbp]
	mov	rax, QWORD PTR [rax+8]
$LN1@GetVoidPtr:
; Line 1949
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetVoidPtr@ImGuiStorage@@QEBAPEAXI@Z ENDP		; ImGuiStorage::GetVoidPtr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetFloat@ImGuiStorage@@QEAAXIM@Z
_TEXT	SEGMENT
it$ = 8
$T1 = 232
tv84 = 264
this$ = 304
key$ = 312
val$ = 320
?SetFloat@ImGuiStorage@@QEAAXIM@Z PROC			; ImGuiStorage::SetFloat, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1999
$LN5:
	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2000
	mov	rax, QWORD PTR this$[rbp]
	mov	edx, DWORD PTR key$[rbp]
	mov	rcx, rax
	call	?LowerBound@@YAPEAUImGuiStoragePair@ImGuiStorage@@AEAU?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@I@Z ; LowerBound
	mov	QWORD PTR it$[rbp], rax
; Line 2001
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@XZ ; ImVector<ImGuiStorage::ImGuiStoragePair>::end
	cmp	QWORD PTR it$[rbp], rax
	je	SHORT $LN3@SetFloat
	mov	rax, QWORD PTR it$[rbp]
	mov	ecx, DWORD PTR key$[rbp]
	cmp	DWORD PTR [rax], ecx
	je	SHORT $LN2@SetFloat
$LN3@SetFloat:
; Line 2003
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv84[rbp], rax
	movss	xmm2, DWORD PTR val$[rbp]
	mov	edx, DWORD PTR key$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImGuiStoragePair@ImGuiStorage@@QEAA@IM@Z ; ImGuiStorage::ImGuiStoragePair::ImGuiStoragePair
	mov	r8, rax
	mov	rdx, QWORD PTR it$[rbp]
	mov	rcx, QWORD PTR tv84[rbp]
	call	?insert@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@PEBU23@AEBU23@@Z ; ImVector<ImGuiStorage::ImGuiStoragePair>::insert
; Line 2004
	jmp	SHORT $LN1@SetFloat
$LN2@SetFloat:
; Line 2006
	mov	rax, QWORD PTR it$[rbp]
	movss	xmm0, DWORD PTR val$[rbp]
	movss	DWORD PTR [rax+8], xmm0
$LN1@SetFloat:
; Line 2007
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
?SetFloat@ImGuiStorage@@QEAAXIM@Z ENDP			; ImGuiStorage::SetFloat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetFloat@ImGuiStorage@@QEBAMIM@Z
_TEXT	SEGMENT
it$ = 8
this$ = 256
key$ = 264
default_val$ = 272
?GetFloat@ImGuiStorage@@QEBAMIM@Z PROC			; ImGuiStorage::GetFloat, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1936
$LN5:
	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1937
	mov	rax, QWORD PTR this$[rbp]
	mov	edx, DWORD PTR key$[rbp]
	mov	rcx, rax
	call	?LowerBound@@YAPEAUImGuiStoragePair@ImGuiStorage@@AEAU?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@I@Z ; LowerBound
	mov	QWORD PTR it$[rbp], rax
; Line 1938
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAPEBUImGuiStoragePair@ImGuiStorage@@XZ ; ImVector<ImGuiStorage::ImGuiStoragePair>::end
	cmp	QWORD PTR it$[rbp], rax
	je	SHORT $LN3@GetFloat
	mov	rax, QWORD PTR it$[rbp]
	mov	ecx, DWORD PTR key$[rbp]
	cmp	DWORD PTR [rax], ecx
	je	SHORT $LN2@GetFloat
$LN3@GetFloat:
; Line 1939
	movss	xmm0, DWORD PTR default_val$[rbp]
	jmp	SHORT $LN1@GetFloat
$LN2@GetFloat:
; Line 1940
	mov	rax, QWORD PTR it$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
$LN1@GetFloat:
; Line 1941
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetFloat@ImGuiStorage@@QEBAMIM@Z ENDP			; ImGuiStorage::GetFloat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetBool@ImGuiStorage@@QEAAXI_N@Z
_TEXT	SEGMENT
tv67 = 192
this$ = 240
key$ = 248
val$ = 256
?SetBool@ImGuiStorage@@QEAAXI_N@Z PROC			; ImGuiStorage::SetBool, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1994
$LN5:
	mov	BYTE PTR [rsp+24], r8b
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1995
	movzx	eax, BYTE PTR val$[rbp]
	test	eax, eax
	je	SHORT $LN3@SetBool
	mov	DWORD PTR tv67[rbp], 1
	jmp	SHORT $LN4@SetBool
$LN3@SetBool:
	mov	DWORD PTR tv67[rbp], 0
$LN4@SetBool:
	mov	r8d, DWORD PTR tv67[rbp]
	mov	edx, DWORD PTR key$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?SetInt@ImGuiStorage@@QEAAXIH@Z		; ImGuiStorage::SetInt
; Line 1996
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?SetBool@ImGuiStorage@@QEAAXI_N@Z ENDP			; ImGuiStorage::SetBool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetBool@ImGuiStorage@@QEBA_NI_N@Z
_TEXT	SEGMENT
tv68 = 192
tv72 = 196
this$ = 240
key$ = 248
default_val$ = 256
?GetBool@ImGuiStorage@@QEBA_NI_N@Z PROC			; ImGuiStorage::GetBool, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1931
$LN7:
	mov	BYTE PTR [rsp+24], r8b
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1932
	movzx	eax, BYTE PTR default_val$[rbp]
	test	eax, eax
	je	SHORT $LN3@GetBool
	mov	DWORD PTR tv68[rbp], 1
	jmp	SHORT $LN4@GetBool
$LN3@GetBool:
	mov	DWORD PTR tv68[rbp], 0
$LN4@GetBool:
	mov	r8d, DWORD PTR tv68[rbp]
	mov	edx, DWORD PTR key$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?GetInt@ImGuiStorage@@QEBAHIH@Z		; ImGuiStorage::GetInt
	test	eax, eax
	je	SHORT $LN5@GetBool
	mov	DWORD PTR tv72[rbp], 1
	jmp	SHORT $LN6@GetBool
$LN5@GetBool:
	mov	DWORD PTR tv72[rbp], 0
$LN6@GetBool:
	movzx	eax, BYTE PTR tv72[rbp]
; Line 1933
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?GetBool@ImGuiStorage@@QEBA_NI_N@Z ENDP			; ImGuiStorage::GetBool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetInt@ImGuiStorage@@QEAAXIH@Z
_TEXT	SEGMENT
it$ = 8
$T1 = 232
tv84 = 264
this$ = 304
key$ = 312
val$ = 320
?SetInt@ImGuiStorage@@QEAAXIH@Z PROC			; ImGuiStorage::SetInt, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1983
$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1984
	mov	rax, QWORD PTR this$[rbp]
	mov	edx, DWORD PTR key$[rbp]
	mov	rcx, rax
	call	?LowerBound@@YAPEAUImGuiStoragePair@ImGuiStorage@@AEAU?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@I@Z ; LowerBound
	mov	QWORD PTR it$[rbp], rax
; Line 1985
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@XZ ; ImVector<ImGuiStorage::ImGuiStoragePair>::end
	cmp	QWORD PTR it$[rbp], rax
	je	SHORT $LN3@SetInt
	mov	rax, QWORD PTR it$[rbp]
	mov	ecx, DWORD PTR key$[rbp]
	cmp	DWORD PTR [rax], ecx
	je	SHORT $LN2@SetInt
$LN3@SetInt:
; Line 1987
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv84[rbp], rax
	mov	r8d, DWORD PTR val$[rbp]
	mov	edx, DWORD PTR key$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImGuiStoragePair@ImGuiStorage@@QEAA@IH@Z ; ImGuiStorage::ImGuiStoragePair::ImGuiStoragePair
	mov	r8, rax
	mov	rdx, QWORD PTR it$[rbp]
	mov	rcx, QWORD PTR tv84[rbp]
	call	?insert@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@PEBU23@AEBU23@@Z ; ImVector<ImGuiStorage::ImGuiStoragePair>::insert
; Line 1988
	jmp	SHORT $LN1@SetInt
$LN2@SetInt:
; Line 1990
	mov	rax, QWORD PTR it$[rbp]
	mov	ecx, DWORD PTR val$[rbp]
	mov	DWORD PTR [rax+8], ecx
$LN1@SetInt:
; Line 1991
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
?SetInt@ImGuiStorage@@QEAAXIH@Z ENDP			; ImGuiStorage::SetInt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetInt@ImGuiStorage@@QEBAHIH@Z
_TEXT	SEGMENT
it$ = 8
this$ = 256
key$ = 264
default_val$ = 272
?GetInt@ImGuiStorage@@QEBAHIH@Z PROC			; ImGuiStorage::GetInt, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1923
$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1924
	mov	rax, QWORD PTR this$[rbp]
	mov	edx, DWORD PTR key$[rbp]
	mov	rcx, rax
	call	?LowerBound@@YAPEAUImGuiStoragePair@ImGuiStorage@@AEAU?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@I@Z ; LowerBound
	mov	QWORD PTR it$[rbp], rax
; Line 1925
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAPEBUImGuiStoragePair@ImGuiStorage@@XZ ; ImVector<ImGuiStorage::ImGuiStoragePair>::end
	cmp	QWORD PTR it$[rbp], rax
	je	SHORT $LN3@GetInt
	mov	rax, QWORD PTR it$[rbp]
	mov	ecx, DWORD PTR key$[rbp]
	cmp	DWORD PTR [rax], ecx
	je	SHORT $LN2@GetInt
$LN3@GetInt:
; Line 1926
	mov	eax, DWORD PTR default_val$[rbp]
	jmp	SHORT $LN1@GetInt
$LN2@GetInt:
; Line 1927
	mov	rax, QWORD PTR it$[rbp]
	mov	eax, DWORD PTR [rax+8]
$LN1@GetInt:
; Line 1928
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetInt@ImGuiStorage@@QEBAHIH@Z ENDP			; ImGuiStorage::GetInt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Clear@ImGuiStorage@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?Clear@ImGuiStorage@@QEAAXXZ PROC			; ImGuiStorage::Clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2112
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?clear@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAXXZ ; ImVector<ImGuiStorage::ImGuiStoragePair>::clear
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?Clear@ImGuiStorage@@QEAAXXZ ENDP			; ImGuiStorage::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@PEBU23@AEBU23@@Z
_TEXT	SEGMENT
off$ = 8
tv139 = 216
this$ = 256
it$ = 264
v$ = 272
?insert@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@PEBU23@AEBU23@@Z PROC ; ImVector<ImGuiStorage::ImGuiStoragePair>::insert, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1720
$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	cmp	QWORD PTR it$[rbp], rax
	jb	SHORT $LN5@insert
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	cmp	QWORD PTR it$[rbp], rax
	jbe	SHORT $LN6@insert
$LN5@insert:
	mov	r8d, 1720				; 000006b8H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EA@INDCAEFK@?$AAi?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@insert:
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR it$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 4
	mov	QWORD PTR off$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN2@insert
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAHH@Z ; ImVector<ImGuiStorage::ImGuiStoragePair>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAXH@Z ; ImVector<ImGuiStorage::ImGuiStoragePair>::reserve
$LN2@insert:
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	cmp	QWORD PTR off$[rbp], rax
	jge	SHORT $LN3@insert
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	sub	rax, QWORD PTR off$[rbp]
	imul	rax, rax, 16
	imul	rcx, QWORD PTR off$[rbp], 16
	mov	rdx, QWORD PTR this$[rbp]
	add	rcx, QWORD PTR [rdx+8]
	imul	rdx, QWORD PTR off$[rbp], 16
	mov	r8, QWORD PTR this$[rbp]
	mov	r8, QWORD PTR [r8+8]
	lea	rdx, QWORD PTR [r8+rdx+16]
	mov	QWORD PTR tv139[rbp], rdx
	mov	r8, rax
	mov	rdx, rcx
	mov	rax, QWORD PTR tv139[rbp]
	mov	rcx, rax
	call	memmove
$LN3@insert:
	imul	rax, QWORD PTR off$[rbp], 16
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v$[rbp]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	imul	rax, QWORD PTR off$[rbp], 16
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?insert@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@PEBU23@AEBU23@@Z ENDP ; ImVector<ImGuiStorage::ImGuiStoragePair>::insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAXH@Z PROC ; ImVector<ImGuiStorage::ImGuiStoragePair>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	imul	rax, rax, 16
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAXH@Z ENDP ; ImVector<ImGuiStorage::ImGuiStoragePair>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_grow_capacity@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAHH@Z
_TEXT	SEGMENT
new_capacity$ = 4
tv72 = 212
tv70 = 212
this$ = 256
sz$ = 264
?_grow_capacity@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAHH@Z PROC ; ImVector<ImGuiStorage::ImGuiStoragePair>::_grow_capacity, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1707
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+4], 0
	je	SHORT $LN3@grow_capac
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@grow_capac
$LN3@grow_capac:
	mov	DWORD PTR tv70[rbp], 8
$LN4@grow_capac:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR new_capacity$[rbp], eax
	mov	eax, DWORD PTR sz$[rbp]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jle	SHORT $LN5@grow_capac
	mov	eax, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	jmp	SHORT $LN6@grow_capac
$LN5@grow_capac:
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tv72[rbp], eax
$LN6@grow_capac:
	mov	eax, DWORD PTR tv72[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_grow_capacity@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAHH@Z ENDP ; ImVector<ImGuiStorage::ImGuiStoragePair>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAPEBUImGuiStoragePair@ImGuiStorage@@XZ
_TEXT	SEGMENT
this$ = 224
?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAPEBUImGuiStoragePair@ImGuiStorage@@XZ PROC ; ImVector<ImGuiStorage::ImGuiStoragePair>::end, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1700
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAPEBUImGuiStoragePair@ImGuiStorage@@XZ ENDP ; ImVector<ImGuiStorage::ImGuiStoragePair>::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@XZ
_TEXT	SEGMENT
this$ = 224
?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@XZ PROC ; ImVector<ImGuiStorage::ImGuiStoragePair>::end, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1699
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?end@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAPEAUImGuiStoragePair@ImGuiStorage@@XZ ENDP ; ImVector<ImGuiStorage::ImGuiStoragePair>::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAAEAUImGuiStoragePair@ImGuiStorage@@H@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAAEAUImGuiStoragePair@ImGuiStorage@@H@Z PROC ; ImVector<ImGuiStorage::ImGuiStoragePair>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1694
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1694				; 0000069eH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAAEAUImGuiStoragePair@ImGuiStorage@@H@Z ENDP ; ImVector<ImGuiStorage::ImGuiStoragePair>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size_in_bytes@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAHXZ
_TEXT	SEGMENT
this$ = 224
?size_in_bytes@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAHXZ PROC ; ImVector<ImGuiStorage::ImGuiStoragePair>::size_in_bytes, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1691
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	imul	eax, DWORD PTR [rax], 16
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?size_in_bytes@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEBAHXZ ENDP ; ImVector<ImGuiStorage::ImGuiStoragePair>::size_in_bytes
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAXXZ PROC ; ImVector<ImGuiStorage::ImGuiStoragePair>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAAXXZ ENDP ; ImVector<ImGuiStorage::ImGuiStoragePair>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ PROC ; ImVector<ImGuiStorage::ImGuiStoragePair>::~ImVector<ImGuiStorage::ImGuiStoragePair>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ ENDP ; ImVector<ImGuiStorage::ImGuiStoragePair>::~ImVector<ImGuiStorage::ImGuiStoragePair>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ PROC ; ImVector<ImGuiStorage::ImGuiStoragePair>::ImVector<ImGuiStorage::ImGuiStoragePair>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@UImGuiStoragePair@ImGuiStorage@@@@QEAA@XZ ENDP ; ImVector<ImGuiStorage::ImGuiStoragePair>::ImVector<ImGuiStorage::ImGuiStoragePair>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiStoragePair@ImGuiStorage@@QEAA@IPEAX@Z
_TEXT	SEGMENT
this$ = 224
_key$ = 232
_val_p$ = 240
??0ImGuiStoragePair@ImGuiStorage@@QEAA@IPEAX@Z PROC	; ImGuiStorage::ImGuiStoragePair::ImGuiStoragePair, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2104
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR _key$[rbp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _val_p$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiStoragePair@ImGuiStorage@@QEAA@IPEAX@Z ENDP	; ImGuiStorage::ImGuiStoragePair::ImGuiStoragePair
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiStoragePair@ImGuiStorage@@QEAA@IM@Z
_TEXT	SEGMENT
this$ = 224
_key$ = 232
_val_f$ = 240
??0ImGuiStoragePair@ImGuiStorage@@QEAA@IM@Z PROC	; ImGuiStorage::ImGuiStoragePair::ImGuiStoragePair, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2103
$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR _key$[rbp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR _val_f$[rbp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiStoragePair@ImGuiStorage@@QEAA@IM@Z ENDP	; ImGuiStorage::ImGuiStoragePair::ImGuiStoragePair
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiStoragePair@ImGuiStorage@@QEAA@IH@Z
_TEXT	SEGMENT
this$ = 224
_key$ = 232
_val_i$ = 240
??0ImGuiStoragePair@ImGuiStorage@@QEAA@IH@Z PROC	; ImGuiStorage::ImGuiStoragePair::ImGuiStoragePair, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2102
$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR _key$[rbp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR _val_i$[rbp]
	mov	DWORD PTR [rax+8], ecx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiStoragePair@ImGuiStorage@@QEAA@IH@Z ENDP	; ImGuiStorage::ImGuiStoragePair::ImGuiStoragePair
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ImGuiTextBuffer@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1ImGuiTextBuffer@@QEAA@XZ PROC			; ImGuiTextBuffer::~ImGuiTextBuffer, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??1?$ImVector@D@@QEAA@XZ		; ImVector<char>::~ImVector<char>
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1ImGuiTextBuffer@@QEAA@XZ ENDP			; ImGuiTextBuffer::~ImGuiTextBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?appendfv@ImGuiTextBuffer@@QEAAXPEBDPEAD@Z
_TEXT	SEGMENT
args_copy$ = 8
len$ = 36
write_off$ = 68
needed_sz$ = 100
new_capacity$1 = 132
tv75 = 340
tv140 = 344
tv95 = 344
tv90 = 344
tv132 = 352
tv87 = 352
this$ = 400
fmt$ = 408
args$ = 416
?appendfv@ImGuiTextBuffer@@QEAAXPEBDPEAD@Z PROC		; ImGuiTextBuffer::appendfv, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2172
$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 408				; 00000198H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2174
	mov	rax, QWORD PTR args$[rbp]
	mov	QWORD PTR args_copy$[rbp], rax
; Line 2176
	mov	r9, QWORD PTR args$[rbp]
	mov	r8, QWORD PTR fmt$[rbp]
	xor	edx, edx
	xor	ecx, ecx
	call	?ImFormatStringV@@YAHPEAD_KPEBD0@Z	; ImFormatStringV
	mov	DWORD PTR len$[rbp], eax
; Line 2177
	cmp	DWORD PTR len$[rbp], 0
	jg	SHORT $LN2@appendfv
; Line 2179
	mov	QWORD PTR args_copy$[rbp], 0
; Line 2180
	jmp	$LN1@appendfv
$LN2@appendfv:
; Line 2184
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	je	SHORT $LN5@appendfv
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv75[rbp], eax
	jmp	SHORT $LN6@appendfv
$LN5@appendfv:
	mov	DWORD PTR tv75[rbp], 1
$LN6@appendfv:
	mov	eax, DWORD PTR tv75[rbp]
	mov	DWORD PTR write_off$[rbp], eax
; Line 2185
	mov	eax, DWORD PTR len$[rbp]
	mov	ecx, DWORD PTR write_off$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR needed_sz$[rbp], eax
; Line 2186
	mov	eax, DWORD PTR len$[rbp]
	mov	ecx, DWORD PTR write_off$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR this$[rbp]
	cmp	eax, DWORD PTR [rcx+4]
	jl	SHORT $LN3@appendfv
; Line 2188
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	shl	eax, 1
	mov	DWORD PTR new_capacity$1[rbp], eax
; Line 2189
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv90[rbp], rax
	mov	eax, DWORD PTR new_capacity$1[rbp]
	cmp	DWORD PTR needed_sz$[rbp], eax
	jle	SHORT $LN7@appendfv
	mov	eax, DWORD PTR needed_sz$[rbp]
	mov	DWORD PTR tv87[rbp], eax
	jmp	SHORT $LN8@appendfv
$LN7@appendfv:
	mov	eax, DWORD PTR new_capacity$1[rbp]
	mov	DWORD PTR tv87[rbp], eax
$LN8@appendfv:
	mov	edx, DWORD PTR tv87[rbp]
	mov	rcx, QWORD PTR tv90[rbp]
	call	?reserve@?$ImVector@D@@QEAAXH@Z		; ImVector<char>::reserve
$LN3@appendfv:
; Line 2192
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv95[rbp], rax
	mov	edx, DWORD PTR needed_sz$[rbp]
	mov	rcx, QWORD PTR tv95[rbp]
	call	?resize@?$ImVector@D@@QEAAXH@Z		; ImVector<char>::resize
; Line 2193
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv140[rbp], rax
	movsxd	rax, DWORD PTR len$[rbp]
	inc	rax
	mov	QWORD PTR tv132[rbp], rax
	mov	ecx, DWORD PTR write_off$[rbp]
	dec	ecx
	mov	edx, ecx
	mov	rcx, QWORD PTR tv140[rbp]
	call	??A?$ImVector@D@@QEAAAEADH@Z		; ImVector<char>::operator[]
	mov	r9, QWORD PTR args_copy$[rbp]
	mov	r8, QWORD PTR fmt$[rbp]
	mov	rcx, QWORD PTR tv132[rbp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?ImFormatStringV@@YAHPEAD_KPEBD0@Z	; ImFormatStringV
; Line 2194
	mov	QWORD PTR args_copy$[rbp], 0
$LN1@appendfv:
; Line 2195
	lea	rsp, QWORD PTR [rbp+376]
	pop	rdi
	pop	rbp
	ret	0
?appendfv@ImGuiTextBuffer@@QEAAXPEBDPEAD@Z ENDP		; ImGuiTextBuffer::appendfv
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?appendf@ImGuiTextBuffer@@QEAAXPEBDZZ
_TEXT	SEGMENT
args$ = 8
__$ArrayPad$ = 248
this$ = 288
fmt$ = 296
?appendf@ImGuiTextBuffer@@QEAAXPEBDZZ PROC		; ImGuiTextBuffer::appendf, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2163
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 18
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2165
	lea	rax, QWORD PTR fmt$[rbp+8]
	mov	QWORD PTR args$[rbp], rax
; Line 2166
	mov	r8, QWORD PTR args$[rbp]
	mov	rdx, QWORD PTR fmt$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?appendfv@ImGuiTextBuffer@@QEAAXPEBDPEAD@Z ; ImGuiTextBuffer::appendfv
; Line 2167
	mov	QWORD PTR args$[rbp], 0
; Line 2168
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?appendf@ImGuiTextBuffer@@QEAAXPEBDZZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?appendf@ImGuiTextBuffer@@QEAAXPEBDZZ ENDP		; ImGuiTextBuffer::appendf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@ImGuiTextBuffer@@QEAAXPEBD0@Z
_TEXT	SEGMENT
len$ = 4
write_off$ = 36
needed_sz$ = 68
new_capacity$1 = 100
tv76 = 308
tv70 = 308
tv155 = 312
tv149 = 312
tv141 = 312
tv128 = 312
tv91 = 312
tv156 = 320
tv132 = 320
tv88 = 320
this$ = 368
str$ = 376
str_end$ = 384
?append@ImGuiTextBuffer@@QEAAXPEBD0@Z PROC		; ImGuiTextBuffer::append, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2145
$LN11:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 368				; 00000170H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2146
	cmp	QWORD PTR str_end$[rbp], 0
	je	SHORT $LN4@append
	mov	rax, QWORD PTR str$[rbp]
	mov	rcx, QWORD PTR str_end$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN5@append
$LN4@append:
	mov	rax, QWORD PTR str$[rbp]
	mov	QWORD PTR tv155[rbp], rax
	mov	QWORD PTR tv156[rbp], -1
$LL10@append:
	inc	QWORD PTR tv156[rbp]
	mov	rax, QWORD PTR tv155[rbp]
	mov	rcx, QWORD PTR tv156[rbp]
	cmp	BYTE PTR [rax+rcx], 0
	jne	SHORT $LL10@append
	mov	rax, QWORD PTR tv156[rbp]
	mov	DWORD PTR tv70[rbp], eax
$LN5@append:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR len$[rbp], eax
; Line 2149
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	je	SHORT $LN6@append
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv76[rbp], eax
	jmp	SHORT $LN7@append
$LN6@append:
	mov	DWORD PTR tv76[rbp], 1
$LN7@append:
	mov	eax, DWORD PTR tv76[rbp]
	mov	DWORD PTR write_off$[rbp], eax
; Line 2150
	mov	eax, DWORD PTR len$[rbp]
	mov	ecx, DWORD PTR write_off$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR needed_sz$[rbp], eax
; Line 2151
	mov	eax, DWORD PTR len$[rbp]
	mov	ecx, DWORD PTR write_off$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR this$[rbp]
	cmp	eax, DWORD PTR [rcx+4]
	jl	SHORT $LN2@append
; Line 2153
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	shl	eax, 1
	mov	DWORD PTR new_capacity$1[rbp], eax
; Line 2154
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv91[rbp], rax
	mov	eax, DWORD PTR new_capacity$1[rbp]
	cmp	DWORD PTR needed_sz$[rbp], eax
	jle	SHORT $LN8@append
	mov	eax, DWORD PTR needed_sz$[rbp]
	mov	DWORD PTR tv88[rbp], eax
	jmp	SHORT $LN9@append
$LN8@append:
	mov	eax, DWORD PTR new_capacity$1[rbp]
	mov	DWORD PTR tv88[rbp], eax
$LN9@append:
	mov	edx, DWORD PTR tv88[rbp]
	mov	rcx, QWORD PTR tv91[rbp]
	call	?reserve@?$ImVector@D@@QEAAXH@Z		; ImVector<char>::reserve
$LN2@append:
; Line 2157
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv128[rbp], rax
	mov	edx, DWORD PTR needed_sz$[rbp]
	mov	rcx, QWORD PTR tv128[rbp]
	call	?resize@?$ImVector@D@@QEAAXH@Z		; ImVector<char>::resize
; Line 2158
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv141[rbp], rax
	movsxd	rax, DWORD PTR len$[rbp]
	mov	QWORD PTR tv132[rbp], rax
	mov	ecx, DWORD PTR write_off$[rbp]
	dec	ecx
	mov	edx, ecx
	mov	rcx, QWORD PTR tv141[rbp]
	call	??A?$ImVector@D@@QEAAAEADH@Z		; ImVector<char>::operator[]
	mov	rdi, rax
	mov	rsi, QWORD PTR str$[rbp]
	mov	rax, QWORD PTR tv132[rbp]
	mov	rcx, rax
	rep movsb
; Line 2159
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv149[rbp], rax
	mov	eax, DWORD PTR write_off$[rbp]
	mov	ecx, DWORD PTR len$[rbp]
	lea	eax, DWORD PTR [rax+rcx-1]
	mov	edx, eax
	mov	rcx, QWORD PTR tv149[rbp]
	call	??A?$ImVector@D@@QEAAAEADH@Z		; ImVector<char>::operator[]
	mov	BYTE PTR [rax], 0
; Line 2160
	lea	rsp, QWORD PTR [rbp+336]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?append@ImGuiTextBuffer@@QEAAXPEBD0@Z ENDP		; ImGuiTextBuffer::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?c_str@ImGuiTextBuffer@@QEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 192
this$ = 240
?c_str@ImGuiTextBuffer@@QEBAPEBDXZ PROC			; ImGuiTextBuffer::c_str, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2081
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@c_str
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv69[rbp], rax
	jmp	SHORT $LN4@c_str
$LN3@c_str:
	lea	rax, OFFSET FLAT:?EmptyString@ImGuiTextBuffer@@2PADA ; ImGuiTextBuffer::EmptyString
	mov	QWORD PTR tv69[rbp], rax
$LN4@c_str:
	mov	rax, QWORD PTR tv69[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?c_str@ImGuiTextBuffer@@QEBAPEBDXZ ENDP			; ImGuiTextBuffer::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@ImGuiTextBuffer@@QEAAXH@Z
_TEXT	SEGMENT
tv68 = 192
this$ = 240
capacity$ = 248
?reserve@ImGuiTextBuffer@@QEAAXH@Z PROC			; ImGuiTextBuffer::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2080
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv68[rbp], rax
	mov	edx, DWORD PTR capacity$[rbp]
	mov	rcx, QWORD PTR tv68[rbp]
	call	?reserve@?$ImVector@D@@QEAAXH@Z		; ImVector<char>::reserve
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?reserve@ImGuiTextBuffer@@QEAAXH@Z ENDP			; ImGuiTextBuffer::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@ImGuiTextBuffer@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@ImGuiTextBuffer@@QEAAXXZ PROC			; ImGuiTextBuffer::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2079
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?clear@?$ImVector@D@@QEAAXXZ		; ImVector<char>::clear
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@ImGuiTextBuffer@@QEAAXXZ ENDP			; ImGuiTextBuffer::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@ImGuiTextBuffer@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 192
this$ = 240
?empty@ImGuiTextBuffer@@QEBA_NXZ PROC			; ImGuiTextBuffer::empty, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2078
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 1
	jg	SHORT $LN3@empty
	mov	DWORD PTR tv67[rbp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv67[rbp], 0
$LN4@empty:
	movzx	eax, BYTE PTR tv67[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?empty@ImGuiTextBuffer@@QEBA_NXZ ENDP			; ImGuiTextBuffer::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@ImGuiTextBuffer@@QEBAHXZ
_TEXT	SEGMENT
tv70 = 192
this$ = 240
?size@ImGuiTextBuffer@@QEBAHXZ PROC			; ImGuiTextBuffer::size, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2077
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	je	SHORT $LN3@size
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@size
$LN3@size:
	mov	DWORD PTR tv70[rbp], 0
$LN4@size:
	mov	eax, DWORD PTR tv70[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?size@ImGuiTextBuffer@@QEBAHXZ ENDP			; ImGuiTextBuffer::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?begin@ImGuiTextBuffer@@QEBAPEBDXZ
_TEXT	SEGMENT
tv70 = 192
this$ = 240
?begin@ImGuiTextBuffer@@QEBAPEBDXZ PROC			; ImGuiTextBuffer::begin, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2075
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@begin
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?front@?$ImVector@D@@QEBAAEBDXZ		; ImVector<char>::front
	mov	QWORD PTR tv70[rbp], rax
	jmp	SHORT $LN4@begin
$LN3@begin:
	lea	rax, OFFSET FLAT:?EmptyString@ImGuiTextBuffer@@2PADA ; ImGuiTextBuffer::EmptyString
	mov	QWORD PTR tv70[rbp], rax
$LN4@begin:
	mov	rax, QWORD PTR tv70[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?begin@ImGuiTextBuffer@@QEBAPEBDXZ ENDP			; ImGuiTextBuffer::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiTextBuffer@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiTextBuffer@@QEAA@XZ PROC			; ImGuiTextBuffer::ImGuiTextBuffer, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2073
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$ImVector@D@@QEAA@XZ		; ImVector<char>::ImVector<char>
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiTextBuffer@@QEAA@XZ ENDP			; ImGuiTextBuffer::ImGuiTextBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$ImVector@D@@QEAAXAEBD@Z
_TEXT	SEGMENT
this$ = 224
v$ = 232
?push_back@?$ImVector@D@@QEAAXAEBD@Z PROC		; ImVector<char>::push_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1714
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN2@push_back
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@D@@QEBAHH@Z	; ImVector<char>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@D@@QEAAXH@Z		; ImVector<char>::reserve
$LN2@push_back:
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rdx, QWORD PTR v$[rbp]
	movzx	edx, BYTE PTR [rdx]
	mov	BYTE PTR [rcx+rax], dl
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?push_back@?$ImVector@D@@QEAAXAEBD@Z ENDP		; ImVector<char>::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@D@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@D@@QEAAXH@Z PROC			; ImVector<char>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@D@@QEAAXH@Z ENDP			; ImVector<char>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$ImVector@D@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 224
new_size$ = 232
?resize@?$ImVector@D@@QEAAXH@Z PROC			; ImVector<char>::resize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1708
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_size$[rbp], eax
	jle	SHORT $LN2@resize
	mov	edx, DWORD PTR new_size$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@D@@QEBAHH@Z	; ImVector<char>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@D@@QEAAXH@Z		; ImVector<char>::reserve
$LN2@resize:
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_size$[rbp]
	mov	DWORD PTR [rax], ecx
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?resize@?$ImVector@D@@QEAAXH@Z ENDP			; ImVector<char>::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_grow_capacity@?$ImVector@D@@QEBAHH@Z
_TEXT	SEGMENT
new_capacity$ = 4
tv72 = 212
tv70 = 212
this$ = 256
sz$ = 264
?_grow_capacity@?$ImVector@D@@QEBAHH@Z PROC		; ImVector<char>::_grow_capacity, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1707
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+4], 0
	je	SHORT $LN3@grow_capac
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@grow_capac
$LN3@grow_capac:
	mov	DWORD PTR tv70[rbp], 8
$LN4@grow_capac:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR new_capacity$[rbp], eax
	mov	eax, DWORD PTR sz$[rbp]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jle	SHORT $LN5@grow_capac
	mov	eax, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	jmp	SHORT $LN6@grow_capac
$LN5@grow_capac:
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tv72[rbp], eax
$LN6@grow_capac:
	mov	eax, DWORD PTR tv72[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_grow_capacity@?$ImVector@D@@QEBAHH@Z ENDP		; ImVector<char>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?front@?$ImVector@D@@QEBAAEBDXZ
_TEXT	SEGMENT
this$ = 224
?front@?$ImVector@D@@QEBAAEBDXZ PROC			; ImVector<char>::front, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1702
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN3@front
	mov	r8d, 1702				; 000006a6H
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@KCECIPDP@?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@front:
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?front@?$ImVector@D@@QEBAAEBDXZ ENDP			; ImVector<char>::front
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@D@@QEAAAEADH@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@D@@QEAAAEADH@Z PROC			; ImVector<char>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1694
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1694				; 0000069eH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	add	rcx, rax
	mov	rax, rcx
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@D@@QEAAAEADH@Z ENDP			; ImVector<char>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@D@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@D@@QEAAXXZ PROC			; ImVector<char>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@D@@QEAAXXZ ENDP			; ImVector<char>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@D@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@D@@QEAA@XZ PROC				; ImVector<char>::~ImVector<char>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@D@@QEAA@XZ ENDP				; ImVector<char>::~ImVector<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@D@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@D@@QEAA@XZ PROC				; ImVector<char>::ImVector<char>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@D@@QEAA@XZ ENDP				; ImVector<char>::ImVector<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXAEBUImGuiTextRange@ImGuiTextFilter@@@Z
_TEXT	SEGMENT
this$ = 224
v$ = 232
?push_back@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXAEBUImGuiTextRange@ImGuiTextFilter@@@Z PROC ; ImVector<ImGuiTextFilter::ImGuiTextRange>::push_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1714
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 224				; 000000e0H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN2@push_back
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBAHH@Z ; ImVector<ImGuiTextFilter::ImGuiTextRange>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXH@Z ; ImVector<ImGuiTextFilter::ImGuiTextRange>::reserve
$LN2@push_back:
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	lea	rdi, QWORD PTR [rcx+rax]
	mov	rsi, QWORD PTR v$[rbp]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+192]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?push_back@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXAEBUImGuiTextRange@ImGuiTextFilter@@@Z ENDP ; ImVector<ImGuiTextFilter::ImGuiTextRange>::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXH@Z PROC ; ImVector<ImGuiTextFilter::ImGuiTextRange>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	imul	rax, rax, 16
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXH@Z ENDP ; ImVector<ImGuiTextFilter::ImGuiTextRange>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 224
new_size$ = 232
?resize@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXH@Z PROC ; ImVector<ImGuiTextFilter::ImGuiTextRange>::resize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1708
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_size$[rbp], eax
	jle	SHORT $LN2@resize
	mov	edx, DWORD PTR new_size$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBAHH@Z ; ImVector<ImGuiTextFilter::ImGuiTextRange>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXH@Z ; ImVector<ImGuiTextFilter::ImGuiTextRange>::reserve
$LN2@resize:
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_size$[rbp]
	mov	DWORD PTR [rax], ecx
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?resize@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXH@Z ENDP ; ImVector<ImGuiTextFilter::ImGuiTextRange>::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_grow_capacity@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBAHH@Z
_TEXT	SEGMENT
new_capacity$ = 4
tv72 = 212
tv70 = 212
this$ = 256
sz$ = 264
?_grow_capacity@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBAHH@Z PROC ; ImVector<ImGuiTextFilter::ImGuiTextRange>::_grow_capacity, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1707
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+4], 0
	je	SHORT $LN3@grow_capac
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@grow_capac
$LN3@grow_capac:
	mov	DWORD PTR tv70[rbp], 8
$LN4@grow_capac:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR new_capacity$[rbp], eax
	mov	eax, DWORD PTR sz$[rbp]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jle	SHORT $LN5@grow_capac
	mov	eax, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	jmp	SHORT $LN6@grow_capac
$LN5@grow_capac:
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tv72[rbp], eax
$LN6@grow_capac:
	mov	eax, DWORD PTR tv72[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_grow_capacity@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBAHH@Z ENDP ; ImVector<ImGuiTextFilter::ImGuiTextRange>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBAAEBUImGuiTextRange@ImGuiTextFilter@@H@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBAAEBUImGuiTextRange@ImGuiTextFilter@@H@Z PROC ; ImVector<ImGuiTextFilter::ImGuiTextRange>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1695
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1695				; 0000069fH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBAAEBUImGuiTextRange@ImGuiTextFilter@@H@Z ENDP ; ImVector<ImGuiTextFilter::ImGuiTextRange>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAAEAUImGuiTextRange@ImGuiTextFilter@@H@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAAEAUImGuiTextRange@ImGuiTextFilter@@H@Z PROC ; ImVector<ImGuiTextFilter::ImGuiTextRange>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1694
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1694				; 0000069eH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rbp]
	add	rax, QWORD PTR [rcx+8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAAEAUImGuiTextRange@ImGuiTextFilter@@H@Z ENDP ; ImVector<ImGuiTextFilter::ImGuiTextRange>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 192
this$ = 240
?empty@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBA_NXZ PROC ; ImVector<ImGuiTextFilter::ImGuiTextRange>::empty, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1689
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 0
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv66[rbp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv66[rbp], 0
$LN4@empty:
	movzx	eax, BYTE PTR tv66[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?empty@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBA_NXZ ENDP ; ImVector<ImGuiTextFilter::ImGuiTextRange>::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ PROC ; ImVector<ImGuiTextFilter::ImGuiTextRange>::~ImVector<ImGuiTextFilter::ImGuiTextRange>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ ENDP ; ImVector<ImGuiTextFilter::ImGuiTextRange>::~ImVector<ImGuiTextFilter::ImGuiTextRange>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ PROC ; ImVector<ImGuiTextFilter::ImGuiTextRange>::ImVector<ImGuiTextFilter::ImGuiTextRange>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ ENDP ; ImVector<ImGuiTextFilter::ImGuiTextRange>::ImVector<ImGuiTextFilter::ImGuiTextRange>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?split@ImGuiTextRange@ImGuiTextFilter@@QEBAXDPEAU?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@@Z
_TEXT	SEGMENT
wb$ = 8
we$ = 40
$T1 = 264
$T2 = 312
this$ = 384
separator$ = 392
out$ = 400
?split@ImGuiTextRange@ImGuiTextFilter@@QEBAXDPEAU?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@@Z PROC ; ImGuiTextFilter::ImGuiTextRange::split, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2056
$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2057
	xor	edx, edx
	mov	rcx, QWORD PTR out$[rbp]
	call	?resize@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXH@Z ; ImVector<ImGuiTextFilter::ImGuiTextRange>::resize
; Line 2058
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR wb$[rbp], rax
; Line 2059
	mov	rax, QWORD PTR wb$[rbp]
	mov	QWORD PTR we$[rbp], rax
$LN2@split:
; Line 2060
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	cmp	QWORD PTR we$[rbp], rax
	jae	SHORT $LN3@split
; Line 2062
	mov	rax, QWORD PTR we$[rbp]
	movsx	eax, BYTE PTR [rax]
	movsx	ecx, BYTE PTR separator$[rbp]
	cmp	eax, ecx
	jne	SHORT $LN4@split
; Line 2064
	mov	r8, QWORD PTR we$[rbp]
	mov	rdx, QWORD PTR wb$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImGuiTextRange@ImGuiTextFilter@@QEAA@PEBD0@Z ; ImGuiTextFilter::ImGuiTextRange::ImGuiTextRange
	mov	rdx, rax
	mov	rcx, QWORD PTR out$[rbp]
	call	?push_back@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXAEBUImGuiTextRange@ImGuiTextFilter@@@Z ; ImVector<ImGuiTextFilter::ImGuiTextRange>::push_back
; Line 2065
	mov	rax, QWORD PTR we$[rbp]
	inc	rax
	mov	QWORD PTR wb$[rbp], rax
$LN4@split:
; Line 2067
	mov	rax, QWORD PTR we$[rbp]
	inc	rax
	mov	QWORD PTR we$[rbp], rax
; Line 2068
	jmp	SHORT $LN2@split
$LN3@split:
; Line 2069
	mov	rax, QWORD PTR we$[rbp]
	cmp	QWORD PTR wb$[rbp], rax
	je	SHORT $LN5@split
; Line 2070
	mov	r8, QWORD PTR we$[rbp]
	mov	rdx, QWORD PTR wb$[rbp]
	lea	rcx, QWORD PTR $T2[rbp]
	call	??0ImGuiTextRange@ImGuiTextFilter@@QEAA@PEBD0@Z ; ImGuiTextFilter::ImGuiTextRange::ImGuiTextRange
	mov	rdx, rax
	mov	rcx, QWORD PTR out$[rbp]
	call	?push_back@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXAEBUImGuiTextRange@ImGuiTextFilter@@@Z ; ImVector<ImGuiTextFilter::ImGuiTextRange>::push_back
$LN5@split:
; Line 2071
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?split@ImGuiTextRange@ImGuiTextFilter@@QEBAXDPEAU?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@@Z ENDP ; ImGuiTextFilter::ImGuiTextRange::split
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?empty@ImGuiTextRange@ImGuiTextFilter@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 192
this$ = 240
?empty@ImGuiTextRange@ImGuiTextFilter@@QEBA_NXZ PROC	; ImGuiTextFilter::ImGuiTextRange::empty, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2058
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	cmp	QWORD PTR [rax], rcx
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv67[rbp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv67[rbp], 0
$LN4@empty:
	movzx	eax, BYTE PTR tv67[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?empty@ImGuiTextRange@ImGuiTextFilter@@QEBA_NXZ ENDP	; ImGuiTextFilter::ImGuiTextRange::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiTextRange@ImGuiTextFilter@@QEAA@PEBD0@Z
_TEXT	SEGMENT
this$ = 224
_b$ = 232
_e$ = 240
??0ImGuiTextRange@ImGuiTextFilter@@QEAA@PEBD0@Z PROC	; ImGuiTextFilter::ImGuiTextRange::ImGuiTextRange, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 2057
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _b$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _e$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiTextRange@ImGuiTextFilter@@QEAA@PEBD0@Z ENDP	; ImGuiTextFilter::ImGuiTextRange::ImGuiTextRange
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Build@ImGuiTextFilter@@QEAAXXZ
_TEXT	SEGMENT
input_range$ = 8
i$4 = 52
f$5 = 88
tv187 = 296
tv162 = 296
tv92 = 296
tv68 = 296
tv188 = 304
__$ArrayPad$ = 312
this$ = 352
?Build@ImGuiTextFilter@@QEAAXXZ PROC			; ImGuiTextFilter::Build, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2074
$LN13:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2075
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 256				; 00000100H
	mov	QWORD PTR tv68[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv68[rbp]
	call	?resize@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAXH@Z ; ImVector<ImGuiTextFilter::ImGuiTextRange>::resize
; Line 2076
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv187[rbp], rax
	mov	QWORD PTR tv188[rbp], -1
$LL12@Build:
	inc	QWORD PTR tv188[rbp]
	mov	rax, QWORD PTR tv187[rbp]
	mov	rcx, QWORD PTR tv188[rbp]
	cmp	BYTE PTR [rax+rcx], 0
	jne	SHORT $LL12@Build
	mov	rax, QWORD PTR tv188[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR this$[rbp]
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR input_range$[rbp]
	call	??0ImGuiTextRange@ImGuiTextFilter@@QEAA@PEBD0@Z ; ImGuiTextFilter::ImGuiTextRange::ImGuiTextRange
; Line 2077
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 256				; 00000100H
	mov	r8, rax
	mov	dl, 44					; 0000002cH
	lea	rcx, QWORD PTR input_range$[rbp]
	call	?split@ImGuiTextRange@ImGuiTextFilter@@QEBAXDPEAU?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@@Z ; ImGuiTextFilter::ImGuiTextRange::split
; Line 2079
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+272], 0
; Line 2080
	mov	DWORD PTR i$4[rbp], 0
	jmp	SHORT $LN4@Build
$LN2@Build:
	mov	eax, DWORD PTR i$4[rbp]
	inc	eax
	mov	DWORD PTR i$4[rbp], eax
$LN4@Build:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+256]
	cmp	DWORD PTR i$4[rbp], eax
	je	$LN3@Build
; Line 2082
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 256				; 00000100H
	mov	QWORD PTR tv92[rbp], rax
	mov	edx, DWORD PTR i$4[rbp]
	mov	rcx, QWORD PTR tv92[rbp]
	call	??A?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAAEAUImGuiTextRange@ImGuiTextFilter@@H@Z ; ImVector<ImGuiTextFilter::ImGuiTextRange>::operator[]
	mov	QWORD PTR f$5[rbp], rax
$LN5@Build:
; Line 2083
	mov	rax, QWORD PTR f$5[rbp]
	mov	rcx, QWORD PTR f$5[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN6@Build
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR f$5[rbp]
	mov	rcx, QWORD PTR [rcx]
	movzx	ecx, BYTE PTR [rcx+rax]
	call	?ImCharIsBlankA@@YA_ND@Z		; ImCharIsBlankA
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@Build
; Line 2084
	mov	rax, QWORD PTR f$5[rbp]
	mov	rax, QWORD PTR [rax]
	inc	rax
	mov	rcx, QWORD PTR f$5[rbp]
	mov	QWORD PTR [rcx], rax
	jmp	SHORT $LN5@Build
$LN6@Build:
$LN7@Build:
; Line 2085
	mov	rax, QWORD PTR f$5[rbp]
	mov	rcx, QWORD PTR f$5[rbp]
	mov	rcx, QWORD PTR [rcx]
	cmp	QWORD PTR [rax+8], rcx
	jbe	SHORT $LN8@Build
	mov	eax, 1
	imul	rax, rax, -1
	mov	rcx, QWORD PTR f$5[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	movzx	ecx, BYTE PTR [rcx+rax]
	call	?ImCharIsBlankA@@YA_ND@Z		; ImCharIsBlankA
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@Build
; Line 2086
	mov	rax, QWORD PTR f$5[rbp]
	mov	rax, QWORD PTR [rax+8]
	dec	rax
	mov	rcx, QWORD PTR f$5[rbp]
	mov	QWORD PTR [rcx+8], rax
	jmp	SHORT $LN7@Build
$LN8@Build:
; Line 2087
	mov	rcx, QWORD PTR f$5[rbp]
	call	?empty@ImGuiTextRange@ImGuiTextFilter@@QEBA_NXZ ; ImGuiTextFilter::ImGuiTextRange::empty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@Build
; Line 2088
	jmp	$LN2@Build
$LN9@Build:
; Line 2089
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 256				; 00000100H
	mov	QWORD PTR tv162[rbp], rax
	mov	edx, DWORD PTR i$4[rbp]
	mov	rcx, QWORD PTR tv162[rbp]
	call	??A?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAAAEAUImGuiTextRange@ImGuiTextFilter@@H@Z ; ImVector<ImGuiTextFilter::ImGuiTextRange>::operator[]
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rax, QWORD PTR [rax]
	movsx	eax, BYTE PTR [rax+rcx]
	cmp	eax, 45					; 0000002dH
	je	SHORT $LN10@Build
; Line 2090
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+272]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+272], eax
$LN10@Build:
; Line 2091
	jmp	$LN2@Build
$LN3@Build:
; Line 2092
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?Build@ImGuiTextFilter@@QEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?Build@ImGuiTextFilter@@QEAAXXZ ENDP			; ImGuiTextFilter::Build
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PassFilter@ImGuiTextFilter@@QEBA_NPEBD0@Z
_TEXT	SEGMENT
i$1 = 4
f$2 = 40
tv79 = 248
this$ = 288
text$ = 296
text_end$ = 304
?PassFilter@ImGuiTextFilter@@QEBA_NPEBD0@Z PROC		; ImGuiTextFilter::PassFilter, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2095
$LN14:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2096
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 256				; 00000100H
	mov	rcx, rax
	call	?empty@?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBA_NXZ ; ImVector<ImGuiTextFilter::ImGuiTextRange>::empty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@PassFilter
; Line 2097
	mov	al, 1
	jmp	$LN1@PassFilter
$LN5@PassFilter:
; Line 2099
	cmp	QWORD PTR text$[rbp], 0
	jne	SHORT $LN6@PassFilter
; Line 2100
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR text$[rbp], rax
$LN6@PassFilter:
; Line 2102
	mov	DWORD PTR i$1[rbp], 0
	jmp	SHORT $LN4@PassFilter
$LN2@PassFilter:
	mov	eax, DWORD PTR i$1[rbp]
	inc	eax
	mov	DWORD PTR i$1[rbp], eax
$LN4@PassFilter:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+256]
	cmp	DWORD PTR i$1[rbp], eax
	je	$LN3@PassFilter
; Line 2104
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 256				; 00000100H
	mov	QWORD PTR tv79[rbp], rax
	mov	edx, DWORD PTR i$1[rbp]
	mov	rcx, QWORD PTR tv79[rbp]
	call	??A?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEBAAEBUImGuiTextRange@ImGuiTextFilter@@H@Z ; ImVector<ImGuiTextFilter::ImGuiTextRange>::operator[]
	mov	QWORD PTR f$2[rbp], rax
; Line 2105
	mov	rcx, QWORD PTR f$2[rbp]
	call	?empty@ImGuiTextRange@ImGuiTextFilter@@QEBA_NXZ ; ImGuiTextFilter::ImGuiTextRange::empty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@PassFilter
; Line 2106
	jmp	SHORT $LN2@PassFilter
$LN7@PassFilter:
; Line 2107
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR f$2[rbp]
	mov	rcx, QWORD PTR [rcx]
	movsx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 45					; 0000002dH
	jne	SHORT $LN8@PassFilter
; Line 2110
	mov	rax, QWORD PTR f$2[rbp]
	mov	rax, QWORD PTR [rax]
	inc	rax
	mov	rcx, QWORD PTR f$2[rbp]
	mov	r9, QWORD PTR [rcx+8]
	mov	r8, rax
	mov	rdx, QWORD PTR text_end$[rbp]
	mov	rcx, QWORD PTR text$[rbp]
	call	?ImStristr@@YAPEBDPEBD000@Z		; ImStristr
	test	rax, rax
	je	SHORT $LN10@PassFilter
; Line 2111
	xor	al, al
	jmp	SHORT $LN1@PassFilter
$LN10@PassFilter:
; Line 2112
	jmp	SHORT $LN9@PassFilter
$LN8@PassFilter:
; Line 2116
	mov	rax, QWORD PTR f$2[rbp]
	mov	r9, QWORD PTR [rax+8]
	mov	rax, QWORD PTR f$2[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rdx, QWORD PTR text_end$[rbp]
	mov	rcx, QWORD PTR text$[rbp]
	call	?ImStristr@@YAPEBDPEBD000@Z		; ImStristr
	test	rax, rax
	je	SHORT $LN11@PassFilter
; Line 2117
	mov	al, 1
	jmp	SHORT $LN1@PassFilter
$LN11@PassFilter:
$LN9@PassFilter:
; Line 2119
	jmp	$LN2@PassFilter
$LN3@PassFilter:
; Line 2122
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+272], 0
	jne	SHORT $LN12@PassFilter
; Line 2123
	mov	al, 1
	jmp	SHORT $LN1@PassFilter
$LN12@PassFilter:
; Line 2125
	xor	al, al
$LN1@PassFilter:
; Line 2126
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?PassFilter@ImGuiTextFilter@@QEBA_NPEBD0@Z ENDP		; ImGuiTextFilter::PassFilter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Draw@ImGuiTextFilter@@QEAA_NPEBDM@Z
_TEXT	SEGMENT
value_changed$ = 4
this$ = 256
label$ = 264
width$ = 272
?Draw@ImGuiTextFilter@@QEAA_NPEBDM@Z PROC		; ImGuiTextFilter::Draw, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2046
$LN6:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2047
	movss	xmm0, DWORD PTR width$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN5@Draw
	je	SHORT $LN2@Draw
$LN5@Draw:
; Line 2048
	movss	xmm0, DWORD PTR width$[rbp]
	call	?SetNextItemWidth@ImGui@@YAXM@Z		; ImGui::SetNextItemWidth
$LN2@Draw:
; Line 2049
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, 256				; 00000100H
	mov	rdx, rax
	mov	rcx, QWORD PTR label$[rbp]
	call	?InputText@ImGui@@YA_NPEBDPEAD_KHP6AHPEAUImGuiInputTextCallbackData@@@ZPEAX@Z ; ImGui::InputText
	mov	BYTE PTR value_changed$[rbp], al
; Line 2050
	movzx	eax, BYTE PTR value_changed$[rbp]
	test	eax, eax
	je	SHORT $LN3@Draw
; Line 2051
	mov	rcx, QWORD PTR this$[rbp]
	call	?Build@ImGuiTextFilter@@QEAAXXZ		; ImGuiTextFilter::Build
$LN3@Draw:
; Line 2052
	movzx	eax, BYTE PTR value_changed$[rbp]
; Line 2053
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?Draw@ImGuiTextFilter@@QEAA_NPEBDM@Z ENDP		; ImGuiTextFilter::Draw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiTextFilter@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 224
default_filter$ = 232
??0ImGuiTextFilter@@QEAA@PEBD@Z PROC			; ImGuiTextFilter::ImGuiTextFilter, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2032
$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 256				; 00000100H
	mov	rcx, rax
	call	??0?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ ; ImVector<ImGuiTextFilter::ImGuiTextRange>::ImVector<ImGuiTextFilter::ImGuiTextRange>
	npad	1
; Line 2033
	cmp	QWORD PTR default_filter$[rbp], 0
	je	SHORT $LN2@ImGuiTextF
; Line 2035
	mov	rax, QWORD PTR this$[rbp]
	mov	r8d, 256				; 00000100H
	mov	rdx, QWORD PTR default_filter$[rbp]
	mov	rcx, rax
	call	?ImStrncpy@@YAXPEADPEBD_K@Z		; ImStrncpy
; Line 2036
	mov	rcx, QWORD PTR this$[rbp]
	call	?Build@ImGuiTextFilter@@QEAAXXZ		; ImGuiTextFilter::Build
; Line 2037
	jmp	SHORT $LN3@ImGuiTextF
$LN2@ImGuiTextF:
; Line 2040
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+rax], 0
; Line 2041
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+272], 0
$LN3@ImGuiTextF:
; Line 2043
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiTextFilter@@QEAA@PEBD@Z ENDP			; ImGuiTextFilter::ImGuiTextFilter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
default_filter$ = 232
?dtor$0@?0???0ImGuiTextFilter@@QEAA@PEBD@Z@4HA PROC	; `ImGuiTextFilter::ImGuiTextFilter'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 256				; 00000100H
	call	??1?$ImVector@UImGuiTextRange@ImGuiTextFilter@@@@QEAA@XZ ; ImVector<ImGuiTextFilter::ImGuiTextRange>::~ImVector<ImGuiTextFilter::ImGuiTextRange>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0ImGuiTextFilter@@QEAA@PEBD@Z@4HA ENDP	; `ImGuiTextFilter::ImGuiTextFilter'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsDataType@ImGuiPayload@@QEBA_NPEBD@Z
_TEXT	SEGMENT
tv71 = 192
this$ = 240
type$ = 248
?IsDataType@ImGuiPayload@@QEBA_NPEBD@Z PROC		; ImGuiPayload::IsDataType, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1990
$LN8:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+20], -1
	je	SHORT $LN3@IsDataType
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 24
	mov	rcx, QWORD PTR type$[rbp]
	sub	rax, rcx
$LL5@IsDataType:
	movzx	edx, BYTE PTR [rcx]
	cmp	dl, BYTE PTR [rcx+rax]
	jne	SHORT $LN7@IsDataType
	inc	rcx
	test	dl, dl
	jne	SHORT $LL5@IsDataType
	xor	eax, eax
	jmp	SHORT $LN6@IsDataType
$LN7@IsDataType:
	sbb	eax, eax
	or	eax, 1
$LN6@IsDataType:
	test	eax, eax
	jne	SHORT $LN3@IsDataType
	mov	DWORD PTR tv71[rbp], 1
	jmp	SHORT $LN4@IsDataType
$LN3@IsDataType:
	mov	DWORD PTR tv71[rbp], 0
$LN4@IsDataType:
	movzx	eax, BYTE PTR tv71[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?IsDataType@ImGuiPayload@@QEBA_NPEBD@Z ENDP		; ImGuiPayload::IsDataType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Clear@ImGuiPayload@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?Clear@ImGuiPayload@@QEAAXXZ PROC			; ImGuiPayload::Clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1989
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+12], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 24
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 33					; 00000021H
	rep stosb
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+20], -1
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+58], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+57], 0
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?Clear@ImGuiPayload@@QEAAXXZ ENDP			; ImGuiPayload::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiPayload@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiPayload@@QEAA@XZ PROC				; ImGuiPayload::ImGuiPayload, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1988
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	?Clear@ImGuiPayload@@QEAAXXZ		; ImGuiPayload::Clear
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiPayload@@QEAA@XZ ENDP				; ImGuiPayload::ImGuiPayload
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiSizeCallbackData@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGuiSizeCallbackData@@QEAA@XZ PROC			; ImGuiSizeCallbackData::ImGuiSizeCallbackData, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 24
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiSizeCallbackData@@QEAA@XZ ENDP			; ImGuiSizeCallbackData::ImGuiSizeCallbackData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ImGuiIO@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1ImGuiIO@@QEAA@XZ PROC				; ImGuiIO::~ImGuiIO, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 5448				; 00001548H
	mov	rcx, rax
	call	??1?$ImVector@G@@QEAA@XZ		; ImVector<unsigned short>::~ImVector<unsigned short>
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1ImGuiIO@@QEAA@XZ ENDP				; ImGuiIO::~ImGuiIO
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiIO@@QEAA@XZ
_TEXT	SEGMENT
i$1 = 4
i$2 = 36
i$3 = 68
i$4 = 100
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 420
this$ = 480
??0ImGuiIO@@QEAA@XZ PROC				; ImGuiIO::ImGuiIO, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1057
$LN16:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 488				; 000001e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 184				; 000000b8H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 288				; 00000120H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 944				; 000003b0H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 956				; 000003bcH
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 964				; 000003c4H
	lea	r9, OFFSET FLAT:??0ImVec2@@QEAA@XZ	; ImVec2::ImVec2
	mov	r8d, 5
	mov	edx, 8
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 1116				; 0000045cH
	lea	r9, OFFSET FLAT:??0ImVec2@@QEAA@XZ	; ImVec2::ImVec2
	mov	r8d, 5
	mov	edx, 8
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 5448				; 00001548H
	mov	rcx, rax
	call	??0?$ImVector@G@@QEAA@XZ		; ImVector<unsigned short>::ImVector<unsigned short>
	npad	1
; Line 1059
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	ecx, 5464				; 00001558H
	rep stosb
; Line 1063
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
; Line 1064
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
; Line 1065
	movss	xmm2, DWORD PTR __real@bf800000
	movss	xmm1, DWORD PTR __real@bf800000
	lea	rcx, QWORD PTR $T5[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+8], rax
; Line 1066
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@3c888889
	movss	DWORD PTR [rax+16], xmm0
; Line 1067
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [rax+20], xmm0
; Line 1068
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_09BJIHMJFE@imgui?4ini@
	mov	QWORD PTR [rax+24], rcx
; Line 1069
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0O@HCOAADPE@imgui_log?4txt@
	mov	QWORD PTR [rax+32], rcx
; Line 1070
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@3e99999a
	movss	DWORD PTR [rax+40], xmm0
; Line 1071
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@40c00000
	movss	DWORD PTR [rax+44], xmm0
; Line 1072
	mov	DWORD PTR i$1[rbp], 0
	jmp	SHORT $LN4@ImGuiIO
$LN2@ImGuiIO:
	mov	eax, DWORD PTR i$1[rbp]
	inc	eax
	mov	DWORD PTR i$1[rbp], eax
$LN4@ImGuiIO:
	cmp	DWORD PTR i$1[rbp], 22
	jge	SHORT $LN3@ImGuiIO
; Line 1073
	movsxd	rax, DWORD PTR i$1[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+rax*4+52], -1
	jmp	SHORT $LN2@ImGuiIO
$LN3@ImGuiIO:
; Line 1074
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@3e8ccccd
	movss	DWORD PTR [rax+140], xmm0
; Line 1075
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@3d4ccccd
	movss	DWORD PTR [rax+144], xmm0
; Line 1076
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+152], 0
; Line 1078
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+160], 0
; Line 1079
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rax+168], xmm0
; Line 1080
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+176], 0
; Line 1081
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+172], 0
; Line 1082
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T6[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+184], rax
; Line 1085
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+192], 0
; Line 1089
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+193], 0
; Line 1091
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+194], 1
; Line 1092
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+196], 1
; Line 1093
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+197], 0
; Line 1094
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@42700000
	movss	DWORD PTR [rax+200], xmm0
; Line 1097
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+216], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+208], 0
; Line 1098
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+240], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+232], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+224], 0
; Line 1099
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:?GetClipboardTextFn_DefaultImpl@@YAPEBDPEAX@Z ; GetClipboardTextFn_DefaultImpl
	mov	QWORD PTR [rax+248], rcx
; Line 1100
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:?SetClipboardTextFn_DefaultImpl@@YAXPEAXPEBD@Z ; SetClipboardTextFn_DefaultImpl
	mov	QWORD PTR [rax+256], rcx
; Line 1101
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+264], 0
; Line 1102
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:?ImeSetInputScreenPosFn_DefaultImpl@@YAXHH@Z ; ImeSetInputScreenPosFn_DefaultImpl
	mov	QWORD PTR [rax+272], rcx
; Line 1103
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+280], 0
; Line 1106
	movss	xmm2, DWORD PTR __real@ff7fffff
	movss	xmm1, DWORD PTR __real@ff7fffff
	lea	rcx, QWORD PTR $T7[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+288], rax
; Line 1107
	movss	xmm2, DWORD PTR __real@ff7fffff
	movss	xmm1, DWORD PTR __real@ff7fffff
	lea	rcx, QWORD PTR $T8[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+956], rax
; Line 1108
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@40c00000
	movss	DWORD PTR [rax+48], xmm0
; Line 1109
	mov	DWORD PTR i$2[rbp], 0
	jmp	SHORT $LN7@ImGuiIO
$LN5@ImGuiIO:
	mov	eax, DWORD PTR i$2[rbp]
	inc	eax
	mov	DWORD PTR i$2[rbp], eax
$LN7@ImGuiIO:
	cmp	DWORD PTR i$2[rbp], 5
	jge	SHORT $LN6@ImGuiIO
	movsxd	rax, DWORD PTR i$2[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [rcx+rax*4+1096], xmm0
	movsxd	rax, DWORD PTR i$2[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [rcx+rax*4+1076], xmm0
	jmp	SHORT $LN5@ImGuiIO
$LN6@ImGuiIO:
; Line 1110
	mov	DWORD PTR i$3[rbp], 0
	jmp	SHORT $LN10@ImGuiIO
$LN8@ImGuiIO:
	mov	eax, DWORD PTR i$3[rbp]
	inc	eax
	mov	DWORD PTR i$3[rbp], eax
$LN10@ImGuiIO:
	cmp	DWORD PTR i$3[rbp], 512			; 00000200H
	jge	SHORT $LN9@ImGuiIO
	movsxd	rax, DWORD PTR i$3[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [rcx+rax*4+3224], xmm0
	movsxd	rax, DWORD PTR i$3[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [rcx+rax*4+1176], xmm0
	jmp	SHORT $LN8@ImGuiIO
$LN9@ImGuiIO:
; Line 1111
	mov	DWORD PTR i$4[rbp], 0
	jmp	SHORT $LN13@ImGuiIO
$LN11@ImGuiIO:
	mov	eax, DWORD PTR i$4[rbp]
	inc	eax
	mov	DWORD PTR i$4[rbp], eax
$LN13@ImGuiIO:
	cmp	DWORD PTR i$4[rbp], 21
	jge	SHORT $LN12@ImGuiIO
	movsxd	rax, DWORD PTR i$4[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [rcx+rax*4+5272], xmm0
	jmp	SHORT $LN11@ImGuiIO
$LN12@ImGuiIO:
; Line 1112
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiIO@@QEAA@XZ ENDP				; ImGuiIO::ImGuiIO
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
i$1 = 4
i$2 = 36
i$3 = 68
i$4 = 100
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 420
this$ = 480
?dtor$0@?0???0ImGuiIO@@QEAA@XZ@4HA PROC			; `ImGuiIO::ImGuiIO'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 5448				; 00001548H
	call	??1?$ImVector@G@@QEAA@XZ		; ImVector<unsigned short>::~ImVector<unsigned short>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0ImGuiIO@@QEAA@XZ@4HA ENDP			; `ImGuiIO::ImGuiIO'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$ImVector@G@@QEAAXAEBG@Z
_TEXT	SEGMENT
this$ = 224
v$ = 232
?push_back@?$ImVector@G@@QEAAXAEBG@Z PROC		; ImVector<unsigned short>::push_back, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1714
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN2@push_back
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@G@@QEBAHH@Z	; ImVector<unsigned short>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@G@@QEAAXH@Z		; ImVector<unsigned short>::reserve
$LN2@push_back:
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rdx, QWORD PTR v$[rbp]
	movzx	edx, WORD PTR [rdx]
	mov	WORD PTR [rcx+rax*2], dx
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?push_back@?$ImVector@G@@QEAAXAEBG@Z ENDP		; ImVector<unsigned short>::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reserve@?$ImVector@G@@QEAAXH@Z
_TEXT	SEGMENT
new_data$ = 8
this$ = 256
new_capacity$ = 264
?reserve@?$ImVector@G@@QEAAXH@Z PROC			; ImVector<unsigned short>::reserve, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1711
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jg	SHORT $LN2@reserve
	jmp	SHORT $LN1@reserve
$LN2@reserve:
	movsxd	rax, DWORD PTR new_capacity$[rbp]
	shl	rax, 1
	mov	rcx, rax
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR new_data$[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@reserve
	mov	rax, QWORD PTR this$[rbp]
	movsxd	rax, DWORD PTR [rax]
	shl	rax, 1
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdi, QWORD PTR new_data$[rbp]
	mov	rsi, QWORD PTR [rcx+8]
	mov	rcx, rax
	rep movsb
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN3@reserve:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR new_data$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR [rax+4], ecx
$LN1@reserve:
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?reserve@?$ImVector@G@@QEAAXH@Z ENDP			; ImVector<unsigned short>::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resize@?$ImVector@G@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 224
new_size$ = 232
?resize@?$ImVector@G@@QEAAXH@Z PROC			; ImVector<unsigned short>::resize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1708
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR new_size$[rbp], eax
	jle	SHORT $LN2@resize
	mov	edx, DWORD PTR new_size$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_grow_capacity@?$ImVector@G@@QEBAHH@Z	; ImVector<unsigned short>::_grow_capacity
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reserve@?$ImVector@G@@QEAAXH@Z		; ImVector<unsigned short>::reserve
$LN2@resize:
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_size$[rbp]
	mov	DWORD PTR [rax], ecx
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?resize@?$ImVector@G@@QEAAXH@Z ENDP			; ImVector<unsigned short>::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_grow_capacity@?$ImVector@G@@QEBAHH@Z
_TEXT	SEGMENT
new_capacity$ = 4
tv72 = 212
tv70 = 212
this$ = 256
sz$ = 264
?_grow_capacity@?$ImVector@G@@QEBAHH@Z PROC		; ImVector<unsigned short>::_grow_capacity, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1707
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+4], 0
	je	SHORT $LN3@grow_capac
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv70[rbp], eax
	jmp	SHORT $LN4@grow_capac
$LN3@grow_capac:
	mov	DWORD PTR tv70[rbp], 8
$LN4@grow_capac:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR new_capacity$[rbp], eax
	mov	eax, DWORD PTR sz$[rbp]
	cmp	DWORD PTR new_capacity$[rbp], eax
	jle	SHORT $LN5@grow_capac
	mov	eax, DWORD PTR new_capacity$[rbp]
	mov	DWORD PTR tv72[rbp], eax
	jmp	SHORT $LN6@grow_capac
$LN5@grow_capac:
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tv72[rbp], eax
$LN6@grow_capac:
	mov	eax, DWORD PTR tv72[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_grow_capacity@?$ImVector@G@@QEBAHH@Z ENDP		; ImVector<unsigned short>::_grow_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$ImVector@G@@QEAAAEAGH@Z
_TEXT	SEGMENT
this$ = 224
i$ = 232
??A?$ImVector@G@@QEAAAEAGH@Z PROC			; ImVector<unsigned short>::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1694
$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jl	SHORT $LN4@operator
$LN3@operator:
	mov	r8d, 1694				; 0000069eH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@GPMNJCJ@?$AAi?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAi?$AA?5?$AA?$DM?$AA?5?$AAS@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@operator:
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	lea	rax, QWORD PTR [rcx+rax*2]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$ImVector@G@@QEAAAEAGH@Z ENDP			; ImVector<unsigned short>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$ImVector@G@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?clear@?$ImVector@G@@QEAAXXZ PROC			; ImVector<unsigned short>::clear, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1685
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@clear
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
$LN2@clear:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?clear@?$ImVector@G@@QEAAXXZ ENDP			; ImVector<unsigned short>::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ImVector@G@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ImVector@G@@QEAA@XZ PROC				; ImVector<unsigned short>::~ImVector<unsigned short>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1683
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@ImVector
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
	npad	1
$LN2@ImVector:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$ImVector@G@@QEAA@XZ ENDP				; ImVector<unsigned short>::~ImVector<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ImVector@G@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$ImVector@G@@QEAA@XZ PROC				; ImVector<unsigned short>::ImVector<unsigned short>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1680
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+4], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$ImVector@G@@QEAA@XZ ENDP				; ImVector<unsigned short>::ImVector<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ClearInputCharacters@ImGuiIO@@QEAAXXZ
_TEXT	SEGMENT
tv68 = 192
this$ = 240
?ClearInputCharacters@ImGuiIO@@QEAAXXZ PROC		; ImGuiIO::ClearInputCharacters, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1171
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1172
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 5448				; 00001548H
	mov	QWORD PTR tv68[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv68[rbp]
	call	?resize@?$ImVector@G@@QEAAXH@Z		; ImVector<unsigned short>::resize
; Line 1173
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?ClearInputCharacters@ImGuiIO@@QEAAXXZ ENDP		; ImGuiIO::ClearInputCharacters
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?AddInputCharactersUTF8@ImGuiIO@@QEAAXPEBD@Z
_TEXT	SEGMENT
c$4 = 4
$T5 = 228
tv77 = 248
__$ArrayPad$ = 256
this$ = 304
utf8_chars$ = 312
?AddInputCharactersUTF8@ImGuiIO@@QEAAXPEBD@Z PROC	; ImGuiIO::AddInputCharactersUTF8, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1160
$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 22
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+344]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
$LN2@AddInputCh:
; Line 1161
	mov	rax, QWORD PTR utf8_chars$[rbp]
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN3@AddInputCh
; Line 1163
	mov	DWORD PTR c$4[rbp], 0
; Line 1164
	xor	r8d, r8d
	mov	rdx, QWORD PTR utf8_chars$[rbp]
	lea	rcx, QWORD PTR c$4[rbp]
	call	?ImTextCharFromUtf8@@YAHPEAIPEBD1@Z	; ImTextCharFromUtf8
	cdqe
	mov	rcx, QWORD PTR utf8_chars$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR utf8_chars$[rbp], rax
; Line 1165
	cmp	DWORD PTR c$4[rbp], 0
	je	SHORT $LN4@AddInputCh
; Line 1166
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 5448				; 00001548H
	mov	QWORD PTR tv77[rbp], rax
	movzx	eax, WORD PTR c$4[rbp]
	mov	WORD PTR $T5[rbp], ax
	lea	rdx, QWORD PTR $T5[rbp]
	mov	rcx, QWORD PTR tv77[rbp]
	call	?push_back@?$ImVector@G@@QEAAXAEBG@Z	; ImVector<unsigned short>::push_back
$LN4@AddInputCh:
; Line 1167
	jmp	SHORT $LN2@AddInputCh
$LN3@AddInputCh:
; Line 1168
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?AddInputCharactersUTF8@ImGuiIO@@QEAAXPEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
?AddInputCharactersUTF8@ImGuiIO@@QEAAXPEBD@Z ENDP	; ImGuiIO::AddInputCharactersUTF8
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?AddInputCharacterUTF16@ImGuiIO@@QEAAXG@Z
_TEXT	SEGMENT
cp$ = 4
$T4 = 228
$T5 = 260
tv129 = 280
tv91 = 280
tv79 = 280
__$ArrayPad$ = 288
this$ = 336
c$ = 344
?AddInputCharacterUTF16@ImGuiIO@@QEAAXG@Z PROC		; ImGuiIO::AddInputCharacterUTF16, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1126
$LN9:
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+376]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1127
	movzx	eax, WORD PTR c$[rbp]
	test	eax, eax
	jne	SHORT $LN2@AddInputCh
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+5444]
	test	eax, eax
	jne	SHORT $LN2@AddInputCh
; Line 1128
	jmp	$LN1@AddInputCh
$LN2@AddInputCh:
; Line 1130
	movzx	eax, WORD PTR c$[rbp]
	and	eax, 64512				; 0000fc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN3@AddInputCh
; Line 1132
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+5444]
	test	eax, eax
	je	SHORT $LN4@AddInputCh
; Line 1133
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 5448				; 00001548H
	mov	QWORD PTR tv79[rbp], rax
	mov	eax, 65533				; 0000fffdH
	mov	WORD PTR $T4[rbp], ax
	lea	rdx, QWORD PTR $T4[rbp]
	mov	rcx, QWORD PTR tv79[rbp]
	call	?push_back@?$ImVector@G@@QEAAXAEBG@Z	; ImVector<unsigned short>::push_back
$LN4@AddInputCh:
; Line 1134
	mov	rax, QWORD PTR this$[rbp]
	movzx	ecx, WORD PTR c$[rbp]
	mov	WORD PTR [rax+5444], cx
; Line 1135
	jmp	$LN1@AddInputCh
$LN3@AddInputCh:
; Line 1138
	movzx	eax, WORD PTR c$[rbp]
	mov	WORD PTR cp$[rbp], ax
; Line 1139
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, WORD PTR [rax+5444]
	test	eax, eax
	je	SHORT $LN5@AddInputCh
; Line 1141
	movzx	eax, WORD PTR c$[rbp]
	and	eax, 64512				; 0000fc00H
	cmp	eax, 56320				; 0000dc00H
	je	SHORT $LN6@AddInputCh
; Line 1143
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 5448				; 00001548H
	mov	QWORD PTR tv91[rbp], rax
	mov	eax, 65533				; 0000fffdH
	mov	WORD PTR $T5[rbp], ax
	lea	rdx, QWORD PTR $T5[rbp]
	mov	rcx, QWORD PTR tv91[rbp]
	call	?push_back@?$ImVector@G@@QEAAXAEBG@Z	; ImVector<unsigned short>::push_back
; Line 1144
	jmp	SHORT $LN7@AddInputCh
$LN6@AddInputCh:
; Line 1148
	mov	eax, 65533				; 0000fffdH
	mov	WORD PTR cp$[rbp], ax
$LN7@AddInputCh:
; Line 1154
	xor	eax, eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	WORD PTR [rcx+5444], ax
$LN5@AddInputCh:
; Line 1156
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 5448				; 00001548H
	mov	QWORD PTR tv129[rbp], rax
	lea	rdx, QWORD PTR cp$[rbp]
	mov	rcx, QWORD PTR tv129[rbp]
	call	?push_back@?$ImVector@G@@QEAAXAEBG@Z	; ImVector<unsigned short>::push_back
$LN1@AddInputCh:
; Line 1157
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?AddInputCharacterUTF16@ImGuiIO@@QEAAXG@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
?AddInputCharacterUTF16@ImGuiIO@@QEAAXG@Z ENDP		; ImGuiIO::AddInputCharacterUTF16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?AddInputCharacter@ImGuiIO@@QEAAXI@Z
_TEXT	SEGMENT
$T1 = 196
tv73 = 216
tv69 = 224
this$ = 272
c$ = 280
?AddInputCharacter@ImGuiIO@@QEAAXI@Z PROC		; ImGuiIO::AddInputCharacter, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1118
$LN6:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1119
	cmp	DWORD PTR c$[rbp], 0
	je	SHORT $LN2@AddInputCh
; Line 1120
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 5448				; 00001548H
	mov	QWORD PTR tv73[rbp], rax
	cmp	DWORD PTR c$[rbp], 65535		; 0000ffffH
	ja	SHORT $LN4@AddInputCh
	movzx	eax, WORD PTR c$[rbp]
	mov	DWORD PTR tv69[rbp], eax
	jmp	SHORT $LN5@AddInputCh
$LN4@AddInputCh:
	mov	DWORD PTR tv69[rbp], 65533		; 0000fffdH
$LN5@AddInputCh:
	movzx	eax, WORD PTR tv69[rbp]
	mov	WORD PTR $T1[rbp], ax
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR tv73[rbp]
	call	?push_back@?$ImVector@G@@QEAAXAEBG@Z	; ImVector<unsigned short>::push_back
$LN2@AddInputCh:
; Line 1121
	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
?AddInputCharacter@ImGuiIO@@QEAAXI@Z ENDP		; ImGuiIO::AddInputCharacter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ScaleAllSizes@ImGuiStyle@@QEAAXM@Z
_TEXT	SEGMENT
$T1 = 388
$T2 = 420
$T3 = 452
$T4 = 484
$T5 = 516
$T6 = 548
$T7 = 580
$T8 = 612
$T9 = 644
$T10 = 676
$T11 = 708
$T12 = 740
$T13 = 772
$T14 = 804
$T15 = 836
$T16 = 868
$T17 = 900
$T18 = 932
tv233 = 948
this$ = 992
scale_factor$ = 1000
?ScaleAllSizes@ImGuiStyle@@QEAAXM@Z PROC		; ImGuiStyle::ScaleAllSizes, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1030
$LN6:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1000				; 000003e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1031
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 4
	movss	xmm2, DWORD PTR scale_factor$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T1[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+4], rax
; Line 1032
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	mulss	xmm0, DWORD PTR scale_factor$[rbp]
	call	?ImFloor@@YAMM@Z			; ImFloor
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+12], xmm0
; Line 1033
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 20
	movss	xmm2, DWORD PTR scale_factor$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T3[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	rdx, rax
	lea	rcx, QWORD PTR $T4[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+20], rax
; Line 1034
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+40]
	mulss	xmm0, DWORD PTR scale_factor$[rbp]
	call	?ImFloor@@YAMM@Z			; ImFloor
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+40], xmm0
; Line 1035
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+48]
	mulss	xmm0, DWORD PTR scale_factor$[rbp]
	call	?ImFloor@@YAMM@Z			; ImFloor
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+48], xmm0
; Line 1036
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 56					; 00000038H
	movss	xmm2, DWORD PTR scale_factor$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T5[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	rdx, rax
	lea	rcx, QWORD PTR $T6[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+56], rax
; Line 1037
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+64]
	mulss	xmm0, DWORD PTR scale_factor$[rbp]
	call	?ImFloor@@YAMM@Z			; ImFloor
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+64], xmm0
; Line 1038
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 72					; 00000048H
	movss	xmm2, DWORD PTR scale_factor$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T7[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	rdx, rax
	lea	rcx, QWORD PTR $T8[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+72], rax
; Line 1039
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 80					; 00000050H
	movss	xmm2, DWORD PTR scale_factor$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T9[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	rdx, rax
	lea	rcx, QWORD PTR $T10[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+80], rax
; Line 1040
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 88					; 00000058H
	movss	xmm2, DWORD PTR scale_factor$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T11[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	rdx, rax
	lea	rcx, QWORD PTR $T12[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+88], rax
; Line 1041
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 96					; 00000060H
	movss	xmm2, DWORD PTR scale_factor$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T13[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	rdx, rax
	lea	rcx, QWORD PTR $T14[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+96], rax
; Line 1042
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+104]
	mulss	xmm0, DWORD PTR scale_factor$[rbp]
	call	?ImFloor@@YAMM@Z			; ImFloor
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+104], xmm0
; Line 1043
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+108]
	mulss	xmm0, DWORD PTR scale_factor$[rbp]
	call	?ImFloor@@YAMM@Z			; ImFloor
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+108], xmm0
; Line 1044
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+112]
	mulss	xmm0, DWORD PTR scale_factor$[rbp]
	call	?ImFloor@@YAMM@Z			; ImFloor
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+112], xmm0
; Line 1045
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+116]
	mulss	xmm0, DWORD PTR scale_factor$[rbp]
	call	?ImFloor@@YAMM@Z			; ImFloor
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+116], xmm0
; Line 1046
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+120]
	mulss	xmm0, DWORD PTR scale_factor$[rbp]
	call	?ImFloor@@YAMM@Z			; ImFloor
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+120], xmm0
; Line 1047
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+124]
	mulss	xmm0, DWORD PTR scale_factor$[rbp]
	call	?ImFloor@@YAMM@Z			; ImFloor
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+124], xmm0
; Line 1048
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+128]
	mulss	xmm0, DWORD PTR scale_factor$[rbp]
	call	?ImFloor@@YAMM@Z			; ImFloor
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+128], xmm0
; Line 1049
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+132]
	mulss	xmm0, DWORD PTR scale_factor$[rbp]
	call	?ImFloor@@YAMM@Z			; ImFloor
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+132], xmm0
; Line 1050
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+140]
	ucomiss	xmm0, DWORD PTR __real@7f7fffff
	jp	SHORT $LN5@ScaleAllSi
	je	SHORT $LN3@ScaleAllSi
$LN5@ScaleAllSi:
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+140]
	mulss	xmm0, DWORD PTR scale_factor$[rbp]
	call	?ImFloor@@YAMM@Z			; ImFloor
	movss	DWORD PTR tv233[rbp], xmm0
	jmp	SHORT $LN4@ScaleAllSi
$LN3@ScaleAllSi:
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR tv233[rbp], xmm0
$LN4@ScaleAllSi:
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR tv233[rbp]
	movss	DWORD PTR [rax+140], xmm0
; Line 1051
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 164				; 000000a4H
	movss	xmm2, DWORD PTR scale_factor$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T15[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	rdx, rax
	lea	rcx, QWORD PTR $T16[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+164], rax
; Line 1052
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 172				; 000000acH
	movss	xmm2, DWORD PTR scale_factor$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T17[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	rdx, rax
	lea	rcx, QWORD PTR $T18[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+172], rax
; Line 1053
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+180]
	mulss	xmm0, DWORD PTR scale_factor$[rbp]
	call	?ImFloor@@YAMM@Z			; ImFloor
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+180], xmm0
; Line 1054
	lea	rsp, QWORD PTR [rbp+968]
	pop	rdi
	pop	rbp
	ret	0
?ScaleAllSizes@ImGuiStyle@@QEAAXM@Z ENDP		; ImGuiStyle::ScaleAllSizes
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGuiStyle@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
$T4 = 292
$T5 = 324
$T6 = 356
$T7 = 388
$T8 = 420
$T9 = 452
$T10 = 484
$T11 = 516
$T12 = 548
this$ = 608
??0ImGuiStyle@@QEAA@XZ PROC				; ImGuiStyle::ImGuiStyle, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 982
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 616				; 00000268H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 4
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 20
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 28
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 56					; 00000038H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 72					; 00000048H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 80					; 00000050H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 88					; 00000058H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 96					; 00000060H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 148				; 00000094H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 156				; 0000009cH
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 164				; 000000a4H
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 172				; 000000acH
	mov	rcx, rax
	call	??0ImVec2@@QEAA@XZ			; ImVec2::ImVec2
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 196				; 000000c4H
	lea	r9, OFFSET FLAT:??0ImVec4@@QEAA@XZ	; ImVec4::ImVec4
	mov	r8d, 53					; 00000035H
	mov	edx, 16
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z
; Line 983
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rax], xmm0
; Line 984
	movss	xmm2, DWORD PTR __real@41000000
	movss	xmm1, DWORD PTR __real@41000000
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+4], rax
; Line 985
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12], xmm0
; Line 986
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rax+16], xmm0
; Line 987
	movss	xmm2, DWORD PTR __real@42000000
	movss	xmm1, DWORD PTR __real@42000000
	lea	rcx, QWORD PTR $T2[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+20], rax
; Line 988
	movss	xmm2, DWORD PTR __real@3f000000
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T3[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+28], rax
; Line 989
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+36], 0
; Line 990
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+40], xmm0
; Line 991
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rax+44], xmm0
; Line 992
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+48], xmm0
; Line 993
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rax+52], xmm0
; Line 994
	movss	xmm2, DWORD PTR __real@40400000
	movss	xmm1, DWORD PTR __real@40800000
	lea	rcx, QWORD PTR $T4[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+56], rax
; Line 995
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+64], xmm0
; Line 996
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+68], xmm0
; Line 997
	movss	xmm2, DWORD PTR __real@40800000
	movss	xmm1, DWORD PTR __real@41000000
	lea	rcx, QWORD PTR $T5[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+72], rax
; Line 998
	movss	xmm2, DWORD PTR __real@40800000
	movss	xmm1, DWORD PTR __real@40800000
	lea	rcx, QWORD PTR $T6[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+80], rax
; Line 999
	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@40800000
	lea	rcx, QWORD PTR $T7[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+88], rax
; Line 1000
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T8[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+96], rax
; Line 1001
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@41a80000
	movss	DWORD PTR [rax+104], xmm0
; Line 1002
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@40c00000
	movss	DWORD PTR [rax+108], xmm0
; Line 1003
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@41600000
	movss	DWORD PTR [rax+112], xmm0
; Line 1004
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@41100000
	movss	DWORD PTR [rax+116], xmm0
; Line 1005
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR [rax+120], xmm0
; Line 1006
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+124], xmm0
; Line 1007
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [rax+128], xmm0
; Line 1008
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [rax+132], xmm0
; Line 1009
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+136], xmm0
; Line 1010
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+140], xmm0
; Line 1011
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+144], 1
; Line 1012
	movss	xmm2, DWORD PTR __real@3f000000
	movss	xmm1, DWORD PTR __real@3f000000
	lea	rcx, QWORD PTR $T9[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+148], rax
; Line 1013
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T10[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+156], rax
; Line 1014
	movss	xmm2, DWORD PTR __real@41980000
	movss	xmm1, DWORD PTR __real@41980000
	lea	rcx, QWORD PTR $T11[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+164], rax
; Line 1015
	movss	xmm2, DWORD PTR __real@40400000
	movss	xmm1, DWORD PTR __real@40400000
	lea	rcx, QWORD PTR $T12[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+172], rax
; Line 1016
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rax+180], xmm0
; Line 1017
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+184], 1
; Line 1018
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+185], 1
; Line 1019
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+186], 1
; Line 1020
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@3fa00000
	movss	DWORD PTR [rax+188], xmm0
; Line 1021
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@3e99999a
	movss	DWORD PTR [rax+192], xmm0
; Line 1024
	mov	rcx, QWORD PTR this$[rbp]
	call	?StyleColorsDark@ImGui@@YAXPEAUImGuiStyle@@@Z ; ImGui::StyleColorsDark
; Line 1025
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+584]
	pop	rdi
	pop	rbp
	ret	0
??0ImGuiStyle@@QEAA@XZ ENDP				; ImGuiStyle::ImGuiStyle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPEAXUImNewWrapper@@0@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
__formal$ = 240
??3@YAXPEAXUImNewWrapper@@0@Z PROC			; operator delete, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1648
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??3@YAXPEAXUImNewWrapper@@0@Z ENDP			; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2@YAPEAX_KUImNewWrapper@@PEAX@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
ptr$ = 240
??2@YAPEAX_KUImNewWrapper@@PEAX@Z PROC			; operator new, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1647
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR ptr$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??2@YAPEAX_KUImNewWrapper@@PEAX@Z ENDP			; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?MemFree@ImGui@@YAXPEAX@Z
_TEXT	SEGMENT
ctx$1 = 8
tv76 = 216
ptr$ = 256
?MemFree@ImGui@@YAXPEAX@Z PROC				; ImGui::MemFree, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3340
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3341
	cmp	QWORD PTR ptr$[rbp], 0
	je	SHORT $LN2@MemFree
; Line 3342
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR ctx$1[rbp], rax
	cmp	QWORD PTR ctx$1[rbp], 0
	je	SHORT $LN3@MemFree
; Line 3343
	mov	rax, QWORD PTR ctx$1[rbp]
	mov	eax, DWORD PTR [rax+948]
	dec	eax
	mov	rcx, QWORD PTR ctx$1[rbp]
	mov	DWORD PTR [rcx+948], eax
$LN3@MemFree:
$LN2@MemFree:
; Line 3344
	mov	rax, QWORD PTR ?GImAllocatorFreeFunc@@3P6AXPEAX0@ZEA
	mov	QWORD PTR tv76[rbp], rax
	mov	rdx, QWORD PTR ?GImAllocatorUserData@@3PEAXEA
	mov	rcx, QWORD PTR ptr$[rbp]
	call	QWORD PTR tv76[rbp]
; Line 3345
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?MemFree@ImGui@@YAXPEAX@Z ENDP				; ImGui::MemFree
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?MemAlloc@ImGui@@YAPEAX_K@Z
_TEXT	SEGMENT
ctx$1 = 8
tv76 = 216
size$ = 256
?MemAlloc@ImGui@@YAPEAX_K@Z PROC			; ImGui::MemAlloc, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3332
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3333
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR ctx$1[rbp], rax
	cmp	QWORD PTR ctx$1[rbp], 0
	je	SHORT $LN2@MemAlloc
; Line 3334
	mov	rax, QWORD PTR ctx$1[rbp]
	mov	eax, DWORD PTR [rax+948]
	inc	eax
	mov	rcx, QWORD PTR ctx$1[rbp]
	mov	DWORD PTR [rcx+948], eax
$LN2@MemAlloc:
; Line 3335
	mov	rax, QWORD PTR ?GImAllocatorAllocFunc@@3P6APEAX_KPEAX@ZEA
	mov	QWORD PTR tv76[rbp], rax
	mov	rdx, QWORD PTR ?GImAllocatorUserData@@3PEAXEA
	mov	rcx, QWORD PTR size$[rbp]
	call	QWORD PTR tv76[rbp]
; Line 3336
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?MemAlloc@ImGui@@YAPEAX_K@Z ENDP			; ImGui::MemAlloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetAllocatorFunctions@ImGui@@YAXPEAP6APEAX_KPEAX@ZPEAP6AX11@ZPEAPEAX@Z
_TEXT	SEGMENT
p_alloc_func$ = 224
p_free_func$ = 232
p_user_data$ = 240
?GetAllocatorFunctions@ImGui@@YAXPEAP6APEAX_KPEAX@ZPEAP6AX11@ZPEAPEAX@Z PROC ; ImGui::GetAllocatorFunctions, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3390
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3391
	mov	rax, QWORD PTR p_alloc_func$[rbp]
	mov	rcx, QWORD PTR ?GImAllocatorAllocFunc@@3P6APEAX_KPEAX@ZEA
	mov	QWORD PTR [rax], rcx
; Line 3392
	mov	rax, QWORD PTR p_free_func$[rbp]
	mov	rcx, QWORD PTR ?GImAllocatorFreeFunc@@3P6AXPEAX0@ZEA
	mov	QWORD PTR [rax], rcx
; Line 3393
	mov	rax, QWORD PTR p_user_data$[rbp]
	mov	rcx, QWORD PTR ?GImAllocatorUserData@@3PEAXEA
	mov	QWORD PTR [rax], rcx
; Line 3394
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetAllocatorFunctions@ImGui@@YAXPEAP6APEAX_KPEAX@ZPEAP6AX11@ZPEAPEAX@Z ENDP ; ImGui::GetAllocatorFunctions
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetAllocatorFunctions@ImGui@@YAXP6APEAX_KPEAX@ZP6AX11@Z1@Z
_TEXT	SEGMENT
alloc_func$ = 224
free_func$ = 232
user_data$ = 240
?SetAllocatorFunctions@ImGui@@YAXP6APEAX_KPEAX@ZP6AX11@Z1@Z PROC ; ImGui::SetAllocatorFunctions, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3382
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3383
	mov	rax, QWORD PTR alloc_func$[rbp]
	mov	QWORD PTR ?GImAllocatorAllocFunc@@3P6APEAX_KPEAX@ZEA, rax
; Line 3384
	mov	rax, QWORD PTR free_func$[rbp]
	mov	QWORD PTR ?GImAllocatorFreeFunc@@3P6AXPEAX0@ZEA, rax
; Line 3385
	mov	rax, QWORD PTR user_data$[rbp]
	mov	QWORD PTR ?GImAllocatorUserData@@3PEAXEA, rax
; Line 3386
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?SetAllocatorFunctions@ImGui@@YAXP6APEAX_KPEAX@ZP6AX11@Z1@Z ENDP ; ImGui::SetAllocatorFunctions
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DebugCheckVersionAndDataLayout@ImGui@@YA_NPEBD_K11111@Z
_TEXT	SEGMENT
error$ = 4
tv160 = 212
version$ = 256
sz_io$ = 264
sz_style$ = 272
sz_vec2$ = 280
sz_vec4$ = 288
sz_vert$ = 296
sz_idx$ = 304
?DebugCheckVersionAndDataLayout@ImGui@@YA_NPEBD_K11111@Z PROC ; ImGui::DebugCheckVersionAndDataLayout, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7160
$LN32:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7161
	mov	BYTE PTR error$[rbp], 0
; Line 7162
	mov	rax, QWORD PTR version$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_08JKMMBCCO@1?484?5WIP@
	sub	rcx, rax
$LL29@DebugCheck:
	movzx	edx, BYTE PTR [rax]
	cmp	dl, BYTE PTR [rax+rcx]
	jne	SHORT $LN31@DebugCheck
	inc	rax
	test	dl, dl
	jne	SHORT $LL29@DebugCheck
	xor	eax, eax
	jmp	SHORT $LN30@DebugCheck
$LN31@DebugCheck:
	sbb	eax, eax
	or	eax, 1
$LN30@DebugCheck:
	test	eax, eax
	je	SHORT $LN2@DebugCheck
	mov	BYTE PTR error$[rbp], 1
	mov	rax, QWORD PTR version$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_08JKMMBCCO@1?484?5WIP@
	sub	rcx, rax
$LL26@DebugCheck:
	movzx	edx, BYTE PTR [rax]
	cmp	dl, BYTE PTR [rax+rcx]
	jne	SHORT $LN28@DebugCheck
	inc	rax
	test	dl, dl
	jne	SHORT $LL26@DebugCheck
	xor	eax, eax
	jmp	SHORT $LN27@DebugCheck
$LN28@DebugCheck:
	sbb	eax, eax
	or	eax, 1
$LN27@DebugCheck:
	test	eax, eax
	jne	SHORT $LN10@DebugCheck
	lea	rax, OFFSET FLAT:??_C@_0BL@NJMNENPC@Mismatched?5version?5string?$CB@
	test	rax, rax
	jne	SHORT $LN11@DebugCheck
$LN10@DebugCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??DebugCheckVersionAndDataLayout@ImGui@@YA_NPEBD_K11111@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1IC@BBJPBEHP@?$AAs?$AAt?$AAr?$AAc?$AAm?$AAp?$AA?$CI?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN11@DebugCheck:
$LN2@DebugCheck:
; Line 7163
	cmp	QWORD PTR sz_io$[rbp], 5464		; 00001558H
	je	SHORT $LN3@DebugCheck
	mov	BYTE PTR error$[rbp], 1
	cmp	QWORD PTR sz_io$[rbp], 5464		; 00001558H
	jne	SHORT $LN12@DebugCheck
	lea	rax, OFFSET FLAT:??_C@_0BK@FMAIDOGC@Mismatched?5struct?5layout?$CB@
	test	rax, rax
	jne	SHORT $LN13@DebugCheck
$LN12@DebugCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??DebugCheckVersionAndDataLayout@ImGui@@YA_NPEBD_K11111@Z@4JA
	add	eax, 3
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1HA@BDEJLFJB@?$AAs?$AAz?$AA_?$AAi?$AAo?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN13@DebugCheck:
$LN3@DebugCheck:
; Line 7164
	cmp	QWORD PTR sz_style$[rbp], 1044		; 00000414H
	je	SHORT $LN4@DebugCheck
	mov	BYTE PTR error$[rbp], 1
	cmp	QWORD PTR sz_style$[rbp], 1044		; 00000414H
	jne	SHORT $LN14@DebugCheck
	lea	rax, OFFSET FLAT:??_C@_0BK@FMAIDOGC@Mismatched?5struct?5layout?$CB@
	test	rax, rax
	jne	SHORT $LN15@DebugCheck
$LN14@DebugCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??DebugCheckVersionAndDataLayout@ImGui@@YA_NPEBD_K11111@Z@4JA
	add	eax, 4
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1HM@KECEGJKN@?$AAs?$AAz?$AA_?$AAs?$AAt?$AAy?$AAl?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN15@DebugCheck:
$LN4@DebugCheck:
; Line 7165
	cmp	QWORD PTR sz_vec2$[rbp], 8
	je	SHORT $LN5@DebugCheck
	mov	BYTE PTR error$[rbp], 1
	cmp	QWORD PTR sz_vec2$[rbp], 8
	jne	SHORT $LN16@DebugCheck
	lea	rax, OFFSET FLAT:??_C@_0BK@FMAIDOGC@Mismatched?5struct?5layout?$CB@
	test	rax, rax
	jne	SHORT $LN17@DebugCheck
$LN16@DebugCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??DebugCheckVersionAndDataLayout@ImGui@@YA_NPEBD_K11111@Z@4JA
	add	eax, 5
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1HC@KAEGCKOM@?$AAs?$AAz?$AA_?$AAv?$AAe?$AAc?$AA2?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN17@DebugCheck:
$LN5@DebugCheck:
; Line 7166
	cmp	QWORD PTR sz_vec4$[rbp], 16
	je	SHORT $LN6@DebugCheck
	mov	BYTE PTR error$[rbp], 1
	cmp	QWORD PTR sz_vec4$[rbp], 16
	jne	SHORT $LN18@DebugCheck
	lea	rax, OFFSET FLAT:??_C@_0BK@FMAIDOGC@Mismatched?5struct?5layout?$CB@
	test	rax, rax
	jne	SHORT $LN19@DebugCheck
$LN18@DebugCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??DebugCheckVersionAndDataLayout@ImGui@@YA_NPEBD_K11111@Z@4JA
	add	eax, 6
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1HC@CFCKCFEN@?$AAs?$AAz?$AA_?$AAv?$AAe?$AAc?$AA4?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN19@DebugCheck:
$LN6@DebugCheck:
; Line 7167
	cmp	QWORD PTR sz_vert$[rbp], 20
	je	SHORT $LN7@DebugCheck
	mov	BYTE PTR error$[rbp], 1
	cmp	QWORD PTR sz_vert$[rbp], 20
	jne	SHORT $LN20@DebugCheck
	lea	rax, OFFSET FLAT:??_C@_0BK@FMAIDOGC@Mismatched?5struct?5layout?$CB@
	test	rax, rax
	jne	SHORT $LN21@DebugCheck
$LN20@DebugCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??DebugCheckVersionAndDataLayout@ImGui@@YA_NPEBD_K11111@Z@4JA
	add	eax, 7
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1HK@HMLAJPFG@?$AAs?$AAz?$AA_?$AAv?$AAe?$AAr?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN21@DebugCheck:
$LN7@DebugCheck:
; Line 7168
	cmp	QWORD PTR sz_idx$[rbp], 2
	je	SHORT $LN8@DebugCheck
	mov	BYTE PTR error$[rbp], 1
	cmp	QWORD PTR sz_idx$[rbp], 2
	jne	SHORT $LN22@DebugCheck
	lea	rax, OFFSET FLAT:??_C@_0BK@FMAIDOGC@Mismatched?5struct?5layout?$CB@
	test	rax, rax
	jne	SHORT $LN23@DebugCheck
$LN22@DebugCheck:
	mov	eax, DWORD PTR ?__LINE__Var@?0??DebugCheckVersionAndDataLayout@ImGui@@YA_NPEBD_K11111@Z@4JA
	add	eax, 8
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1HG@IIMLENED@?$AAs?$AAz?$AA_?$AAi?$AAd?$AAx?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN23@DebugCheck:
$LN8@DebugCheck:
; Line 7169
	movzx	eax, BYTE PTR error$[rbp]
	test	eax, eax
	jne	SHORT $LN24@DebugCheck
	mov	DWORD PTR tv160[rbp], 1
	jmp	SHORT $LN25@DebugCheck
$LN24@DebugCheck:
	mov	DWORD PTR tv160[rbp], 0
$LN25@DebugCheck:
	movzx	eax, BYTE PTR tv160[rbp]
; Line 7170
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?DebugCheckVersionAndDataLayout@ImGui@@YA_NPEBD_K11111@Z ENDP ; ImGui::DebugCheckVersionAndDataLayout
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SaveIniSettingsToMemory@ImGui@@YAPEBDPEA_K@Z
_TEXT	SEGMENT
g$ = 8
handler_n$1 = 36
handler$2 = 72
$T3 = 292
tv93 = 312
tv86 = 312
tv76 = 312
tv70 = 312
out_size$ = 352
?SaveIniSettingsToMemory@ImGui@@YAPEBDPEA_K@Z PROC	; ImGui::SaveIniSettingsToMemory, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10560
$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10561
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10562
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12388], xmm0
; Line 10563
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12392				; 00003068H
	mov	QWORD PTR tv70[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv70[rbp]
	call	?resize@?$ImVector@D@@QEAAXH@Z		; ImVector<char>::resize
; Line 10564
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12392				; 00003068H
	mov	QWORD PTR tv76[rbp], rax
	mov	BYTE PTR $T3[rbp], 0
	lea	rdx, QWORD PTR $T3[rbp]
	mov	rcx, QWORD PTR tv76[rbp]
	call	?push_back@?$ImVector@D@@QEAAXAEBD@Z	; ImVector<char>::push_back
; Line 10565
	mov	DWORD PTR handler_n$1[rbp], 0
	jmp	SHORT $LN4@SaveIniSet
$LN2@SaveIniSet:
	mov	eax, DWORD PTR handler_n$1[rbp]
	inc	eax
	mov	DWORD PTR handler_n$1[rbp], eax
$LN4@SaveIniSet:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+12408]
	cmp	DWORD PTR handler_n$1[rbp], eax
	jge	SHORT $LN3@SaveIniSet
; Line 10567
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12408				; 00003078H
	mov	QWORD PTR tv86[rbp], rax
	mov	edx, DWORD PTR handler_n$1[rbp]
	mov	rcx, QWORD PTR tv86[rbp]
	call	??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z ; ImVector<ImGuiSettingsHandler>::operator[]
	mov	QWORD PTR handler$2[rbp], rax
; Line 10568
	mov	rax, QWORD PTR handler$2[rbp]
	mov	rax, QWORD PTR [rax+56]
	mov	QWORD PTR tv93[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12392				; 00003068H
	mov	r8, rax
	mov	rdx, QWORD PTR handler$2[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	call	QWORD PTR tv93[rbp]
; Line 10569
	jmp	SHORT $LN2@SaveIniSet
$LN3@SaveIniSet:
; Line 10570
	cmp	QWORD PTR out_size$[rbp], 0
	je	SHORT $LN5@SaveIniSet
; Line 10571
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12392				; 00003068H
	mov	rcx, rax
	call	?size@ImGuiTextBuffer@@QEBAHXZ		; ImGuiTextBuffer::size
	cdqe
	mov	rcx, QWORD PTR out_size$[rbp]
	mov	QWORD PTR [rcx], rax
$LN5@SaveIniSet:
; Line 10572
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12392				; 00003068H
	mov	rcx, rax
	call	?c_str@ImGuiTextBuffer@@QEBAPEBDXZ	; ImGuiTextBuffer::c_str
; Line 10573
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?SaveIniSettingsToMemory@ImGui@@YAPEBDPEA_K@Z ENDP	; ImGui::SaveIniSettingsToMemory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SaveIniSettingsToDisk@ImGui@@YAXPEBD@Z
_TEXT	SEGMENT
g$ = 8
ini_data_size$ = 40
ini_data$ = 72
f$ = 104
__$ArrayPad$ = 312
ini_filename$ = 352
?SaveIniSettingsToDisk@ImGui@@YAXPEBD@Z PROC		; ImGui::SaveIniSettingsToDisk, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10543
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10544
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10545
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12388], xmm0
; Line 10546
	cmp	QWORD PTR ini_filename$[rbp], 0
	jne	SHORT $LN2@SaveIniSet
; Line 10547
	jmp	SHORT $LN1@SaveIniSet
$LN2@SaveIniSet:
; Line 10549
	mov	QWORD PTR ini_data_size$[rbp], 0
; Line 10550
	lea	rcx, QWORD PTR ini_data_size$[rbp]
	call	?SaveIniSettingsToMemory@ImGui@@YAPEBDPEA_K@Z ; ImGui::SaveIniSettingsToMemory
	mov	QWORD PTR ini_data$[rbp], rax
; Line 10551
	lea	rdx, OFFSET FLAT:??_C@_02BKFDOEMK@wt@
	mov	rcx, QWORD PTR ini_filename$[rbp]
	call	?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z	; ImFileOpen
	mov	QWORD PTR f$[rbp], rax
; Line 10552
	cmp	QWORD PTR f$[rbp], 0
	jne	SHORT $LN3@SaveIniSet
; Line 10553
	jmp	SHORT $LN1@SaveIniSet
$LN3@SaveIniSet:
; Line 10554
	mov	r9, QWORD PTR f$[rbp]
	mov	r8, QWORD PTR ini_data_size$[rbp]
	mov	edx, 1
	mov	rcx, QWORD PTR ini_data$[rbp]
	call	?ImFileWrite@@YA_KPEBX_K1PEAU_iobuf@@@Z	; ImFileWrite
; Line 10555
	mov	rcx, QWORD PTR f$[rbp]
	call	?ImFileClose@@YA_NPEAU_iobuf@@@Z	; ImFileClose
$LN1@SaveIniSet:
; Line 10556
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?SaveIniSettingsToDisk@ImGui@@YAXPEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?SaveIniSettingsToDisk@ImGui@@YAXPEBD@Z ENDP		; ImGui::SaveIniSettingsToDisk
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LoadIniSettingsFromMemory@ImGui@@YAXPEBD_K@Z
_TEXT	SEGMENT
g$ = 8
buf$ = 40
buf_end$ = 72
handler_n$1 = 100
entry_data$ = 136
entry_handler$ = 168
line_end$ = 200
line$2 = 232
name_end$3 = 264
type_start$4 = 296
type_end$5 = 328
name_start$6 = 360
handler_n$7 = 388
tv271 = 600
tv245 = 600
tv237 = 600
tv221 = 600
tv210 = 600
tv198 = 600
tv142 = 600
tv134 = 600
tv81 = 600
tv272 = 608
tv258 = 608
tv212 = 608
tv155 = 608
tv252 = 616
tv149 = 616
tv256 = 624
tv153 = 624
ini_data$ = 672
ini_size$ = 680
?LoadIniSettingsFromMemory@ImGui@@YAXPEBD_K@Z PROC	; ImGui::LoadIniSettingsFromMemory, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10473
$LN32:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 672				; 000002a0H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10474
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10475
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	jne	SHORT $LN26@LoadIniSet
	mov	eax, DWORD PTR ?__LINE__Var@?0??LoadIniSettingsFromMemory@ImGui@@YAXPEBD_K@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BM@ICEHPMG@?$AAg?$AA?4?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN26@LoadIniSet:
; Line 10481
	cmp	QWORD PTR ini_size$[rbp], 0
	jne	SHORT $LN15@LoadIniSet
; Line 10482
	mov	rax, QWORD PTR ini_data$[rbp]
	mov	QWORD PTR tv271[rbp], rax
	mov	QWORD PTR tv272[rbp], -1
$LL31@LoadIniSet:
	inc	QWORD PTR tv272[rbp]
	mov	rax, QWORD PTR tv271[rbp]
	mov	rcx, QWORD PTR tv272[rbp]
	cmp	BYTE PTR [rax+rcx], 0
	jne	SHORT $LL31@LoadIniSet
	mov	rax, QWORD PTR tv272[rbp]
	mov	QWORD PTR ini_size$[rbp], rax
$LN15@LoadIniSet:
; Line 10483
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12392				; 00003068H
	mov	QWORD PTR tv81[rbp], rax
	mov	eax, DWORD PTR ini_size$[rbp]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR tv81[rbp]
	call	?resize@?$ImVector@D@@QEAAXH@Z		; ImVector<char>::resize
; Line 10484
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+12400]
	mov	QWORD PTR buf$[rbp], rax
; Line 10485
	mov	rax, QWORD PTR ini_size$[rbp]
	mov	rcx, QWORD PTR buf$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR buf_end$[rbp], rax
; Line 10486
	mov	rdi, QWORD PTR buf$[rbp]
	mov	rsi, QWORD PTR ini_data$[rbp]
	mov	rcx, QWORD PTR ini_size$[rbp]
	rep movsb
; Line 10487
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR buf_end$[rbp]
	mov	BYTE PTR [rcx+rax], 0
; Line 10491
	mov	DWORD PTR handler_n$1[rbp], 0
	jmp	SHORT $LN4@LoadIniSet
$LN2@LoadIniSet:
	mov	eax, DWORD PTR handler_n$1[rbp]
	inc	eax
	mov	DWORD PTR handler_n$1[rbp], eax
$LN4@LoadIniSet:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+12408]
	cmp	DWORD PTR handler_n$1[rbp], eax
	jge	$LN3@LoadIniSet
; Line 10492
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12408				; 00003078H
	mov	QWORD PTR tv134[rbp], rax
	mov	edx, DWORD PTR handler_n$1[rbp]
	mov	rcx, QWORD PTR tv134[rbp]
	call	??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z ; ImVector<ImGuiSettingsHandler>::operator[]
	cmp	QWORD PTR [rax+24], 0
	je	SHORT $LN16@LoadIniSet
; Line 10493
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12408				; 00003078H
	mov	QWORD PTR tv142[rbp], rax
	mov	edx, DWORD PTR handler_n$1[rbp]
	mov	rcx, QWORD PTR tv142[rbp]
	call	??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z ; ImVector<ImGuiSettingsHandler>::operator[]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR tv155[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12408				; 00003078H
	mov	QWORD PTR tv149[rbp], rax
	mov	edx, DWORD PTR handler_n$1[rbp]
	mov	rcx, QWORD PTR tv149[rbp]
	call	??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z ; ImVector<ImGuiSettingsHandler>::operator[]
	mov	QWORD PTR tv153[rbp], rax
	mov	rdx, QWORD PTR tv153[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	call	QWORD PTR tv155[rbp]
$LN16@LoadIniSet:
	jmp	$LN2@LoadIniSet
$LN3@LoadIniSet:
; Line 10495
	mov	QWORD PTR entry_data$[rbp], 0
; Line 10496
	mov	QWORD PTR entry_handler$[rbp], 0
; Line 10498
	mov	QWORD PTR line_end$[rbp], 0
; Line 10499
	mov	rax, QWORD PTR buf$[rbp]
	mov	QWORD PTR line$2[rbp], rax
	jmp	SHORT $LN7@LoadIniSet
$LN5@LoadIniSet:
	mov	rax, QWORD PTR line_end$[rbp]
	inc	rax
	mov	QWORD PTR line$2[rbp], rax
$LN7@LoadIniSet:
	mov	rax, QWORD PTR buf_end$[rbp]
	cmp	QWORD PTR line$2[rbp], rax
	jae	$LN6@LoadIniSet
$LN8@LoadIniSet:
; Line 10502
	mov	rax, QWORD PTR line$2[rbp]
	movsx	eax, BYTE PTR [rax]
	cmp	eax, 10
	je	SHORT $LN17@LoadIniSet
	mov	rax, QWORD PTR line$2[rbp]
	movsx	eax, BYTE PTR [rax]
	cmp	eax, 13
	jne	SHORT $LN9@LoadIniSet
$LN17@LoadIniSet:
; Line 10503
	mov	rax, QWORD PTR line$2[rbp]
	inc	rax
	mov	QWORD PTR line$2[rbp], rax
	jmp	SHORT $LN8@LoadIniSet
$LN9@LoadIniSet:
; Line 10504
	mov	rax, QWORD PTR line$2[rbp]
	mov	QWORD PTR line_end$[rbp], rax
$LN10@LoadIniSet:
; Line 10505
	mov	rax, QWORD PTR buf_end$[rbp]
	cmp	QWORD PTR line_end$[rbp], rax
	jae	SHORT $LN11@LoadIniSet
	mov	rax, QWORD PTR line_end$[rbp]
	movsx	eax, BYTE PTR [rax]
	cmp	eax, 10
	je	SHORT $LN11@LoadIniSet
	mov	rax, QWORD PTR line_end$[rbp]
	movsx	eax, BYTE PTR [rax]
	cmp	eax, 13
	je	SHORT $LN11@LoadIniSet
; Line 10506
	mov	rax, QWORD PTR line_end$[rbp]
	inc	rax
	mov	QWORD PTR line_end$[rbp], rax
	jmp	SHORT $LN10@LoadIniSet
$LN11@LoadIniSet:
; Line 10507
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR line_end$[rbp]
	mov	BYTE PTR [rcx+rax], 0
; Line 10508
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR line$2[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 59					; 0000003bH
	jne	SHORT $LN18@LoadIniSet
; Line 10509
	jmp	$LN5@LoadIniSet
$LN18@LoadIniSet:
; Line 10510
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR line$2[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 91					; 0000005bH
	jne	$LN19@LoadIniSet
	mov	rax, QWORD PTR line$2[rbp]
	cmp	QWORD PTR line_end$[rbp], rax
	jbe	$LN19@LoadIniSet
	mov	eax, 1
	imul	rax, rax, -1
	mov	rcx, QWORD PTR line_end$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 93					; 0000005dH
	jne	$LN19@LoadIniSet
; Line 10513
	mov	eax, 1
	imul	rax, rax, -1
	mov	rcx, QWORD PTR line_end$[rbp]
	mov	BYTE PTR [rcx+rax], 0
; Line 10514
	mov	rax, QWORD PTR line_end$[rbp]
	dec	rax
	mov	QWORD PTR name_end$3[rbp], rax
; Line 10515
	mov	rax, QWORD PTR line$2[rbp]
	inc	rax
	mov	QWORD PTR type_start$4[rbp], rax
; Line 10516
	mov	r8b, 93					; 0000005dH
	mov	rdx, QWORD PTR name_end$3[rbp]
	mov	rcx, QWORD PTR type_start$4[rbp]
	call	?ImStrchrRange@@YAPEBDPEBD0D@Z		; ImStrchrRange
	mov	QWORD PTR type_end$5[rbp], rax
; Line 10517
	cmp	QWORD PTR type_end$5[rbp], 0
	je	SHORT $LN27@LoadIniSet
	mov	rax, QWORD PTR type_end$5[rbp]
	inc	rax
	mov	r8b, 91					; 0000005bH
	mov	rdx, QWORD PTR name_end$3[rbp]
	mov	rcx, rax
	call	?ImStrchrRange@@YAPEBDPEBD0D@Z		; ImStrchrRange
	mov	QWORD PTR tv198[rbp], rax
	jmp	SHORT $LN28@LoadIniSet
$LN27@LoadIniSet:
	mov	QWORD PTR tv198[rbp], 0
$LN28@LoadIniSet:
	mov	rax, QWORD PTR tv198[rbp]
	mov	QWORD PTR name_start$6[rbp], rax
; Line 10518
	cmp	QWORD PTR type_end$5[rbp], 0
	je	SHORT $LN22@LoadIniSet
	cmp	QWORD PTR name_start$6[rbp], 0
	jne	SHORT $LN21@LoadIniSet
$LN22@LoadIniSet:
; Line 10519
	jmp	$LN5@LoadIniSet
$LN21@LoadIniSet:
; Line 10520
	mov	rax, QWORD PTR type_end$5[rbp]
	mov	BYTE PTR [rax], 0
; Line 10521
	mov	rax, QWORD PTR name_start$6[rbp]
	inc	rax
	mov	QWORD PTR name_start$6[rbp], rax
; Line 10522
	mov	rcx, QWORD PTR type_start$4[rbp]
	call	?FindSettingsHandler@ImGui@@YAPEAUImGuiSettingsHandler@@PEBD@Z ; ImGui::FindSettingsHandler
	mov	QWORD PTR entry_handler$[rbp], rax
; Line 10523
	cmp	QWORD PTR entry_handler$[rbp], 0
	je	SHORT $LN29@LoadIniSet
	mov	rax, QWORD PTR entry_handler$[rbp]
	mov	rax, QWORD PTR [rax+32]
	mov	QWORD PTR tv210[rbp], rax
	mov	r8, QWORD PTR name_start$6[rbp]
	mov	rdx, QWORD PTR entry_handler$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	call	QWORD PTR tv210[rbp]
	mov	QWORD PTR tv212[rbp], rax
	jmp	SHORT $LN30@LoadIniSet
$LN29@LoadIniSet:
	mov	QWORD PTR tv212[rbp], 0
$LN30@LoadIniSet:
	mov	rax, QWORD PTR tv212[rbp]
	mov	QWORD PTR entry_data$[rbp], rax
; Line 10524
	jmp	SHORT $LN20@LoadIniSet
$LN19@LoadIniSet:
; Line 10525
	cmp	QWORD PTR entry_handler$[rbp], 0
	je	SHORT $LN23@LoadIniSet
	cmp	QWORD PTR entry_data$[rbp], 0
	je	SHORT $LN23@LoadIniSet
; Line 10528
	mov	rax, QWORD PTR entry_handler$[rbp]
	mov	rax, QWORD PTR [rax+40]
	mov	QWORD PTR tv221[rbp], rax
	mov	r9, QWORD PTR line$2[rbp]
	mov	r8, QWORD PTR entry_data$[rbp]
	mov	rdx, QWORD PTR entry_handler$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	call	QWORD PTR tv221[rbp]
$LN23@LoadIniSet:
$LN20@LoadIniSet:
; Line 10530
	jmp	$LN5@LoadIniSet
$LN6@LoadIniSet:
; Line 10531
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+12385], 1
; Line 10534
	mov	rdi, QWORD PTR buf$[rbp]
	mov	rsi, QWORD PTR ini_data$[rbp]
	mov	rcx, QWORD PTR ini_size$[rbp]
	rep movsb
; Line 10537
	mov	DWORD PTR handler_n$7[rbp], 0
	jmp	SHORT $LN14@LoadIniSet
$LN12@LoadIniSet:
	mov	eax, DWORD PTR handler_n$7[rbp]
	inc	eax
	mov	DWORD PTR handler_n$7[rbp], eax
$LN14@LoadIniSet:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+12408]
	cmp	DWORD PTR handler_n$7[rbp], eax
	jge	$LN13@LoadIniSet
; Line 10538
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12408				; 00003078H
	mov	QWORD PTR tv237[rbp], rax
	mov	edx, DWORD PTR handler_n$7[rbp]
	mov	rcx, QWORD PTR tv237[rbp]
	call	??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z ; ImVector<ImGuiSettingsHandler>::operator[]
	cmp	QWORD PTR [rax+48], 0
	je	SHORT $LN24@LoadIniSet
; Line 10539
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12408				; 00003078H
	mov	QWORD PTR tv245[rbp], rax
	mov	edx, DWORD PTR handler_n$7[rbp]
	mov	rcx, QWORD PTR tv245[rbp]
	call	??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z ; ImVector<ImGuiSettingsHandler>::operator[]
	mov	rax, QWORD PTR [rax+48]
	mov	QWORD PTR tv258[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12408				; 00003078H
	mov	QWORD PTR tv252[rbp], rax
	mov	edx, DWORD PTR handler_n$7[rbp]
	mov	rcx, QWORD PTR tv252[rbp]
	call	??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z ; ImVector<ImGuiSettingsHandler>::operator[]
	mov	QWORD PTR tv256[rbp], rax
	mov	rdx, QWORD PTR tv256[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	call	QWORD PTR tv258[rbp]
$LN24@LoadIniSet:
	jmp	$LN12@LoadIniSet
$LN13@LoadIniSet:
; Line 10540
	lea	rsp, QWORD PTR [rbp+640]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?LoadIniSettingsFromMemory@ImGui@@YAXPEBD_K@Z ENDP	; ImGui::LoadIniSettingsFromMemory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LoadIniSettingsFromDisk@ImGui@@YAXPEBD@Z
_TEXT	SEGMENT
file_data_size$ = 8
file_data$ = 40
__$ArrayPad$ = 248
ini_filename$ = 288
?LoadIniSettingsFromDisk@ImGui@@YAXPEBD@Z PROC		; ImGui::LoadIniSettingsFromDisk, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10462
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 18
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10463
	mov	QWORD PTR file_data_size$[rbp], 0
; Line 10464
	xor	r9d, r9d
	lea	r8, QWORD PTR file_data_size$[rbp]
	lea	rdx, OFFSET FLAT:??_C@_02JDPG@rb@
	mov	rcx, QWORD PTR ini_filename$[rbp]
	call	?ImFileLoadToMemory@@YAPEAXPEBD0PEA_KH@Z ; ImFileLoadToMemory
	mov	QWORD PTR file_data$[rbp], rax
; Line 10465
	cmp	QWORD PTR file_data$[rbp], 0
	jne	SHORT $LN2@LoadIniSet
; Line 10466
	jmp	SHORT $LN1@LoadIniSet
$LN2@LoadIniSet:
; Line 10467
	mov	rdx, QWORD PTR file_data_size$[rbp]
	mov	rcx, QWORD PTR file_data$[rbp]
	call	?LoadIniSettingsFromMemory@ImGui@@YAXPEBD_K@Z ; ImGui::LoadIniSettingsFromMemory
; Line 10468
	mov	rcx, QWORD PTR file_data$[rbp]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN1@LoadIniSet:
; Line 10469
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?LoadIniSettingsFromDisk@ImGui@@YAXPEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?LoadIniSettingsFromDisk@ImGui@@YAXPEBD@Z ENDP		; ImGui::LoadIniSettingsFromDisk
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetClipboardText@ImGui@@YAXPEBD@Z
_TEXT	SEGMENT
g$ = 8
tv74 = 216
text$ = 256
?SetClipboardText@ImGui@@YAXPEBD@Z PROC			; ImGui::SetClipboardText, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3354
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3355
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3356
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+264], 0
	je	SHORT $LN2@SetClipboa
; Line 3357
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+264]
	mov	QWORD PTR tv74[rbp], rax
	mov	rdx, QWORD PTR text$[rbp]
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+272]
	call	QWORD PTR tv74[rbp]
$LN2@SetClipboa:
; Line 3358
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetClipboardText@ImGui@@YAXPEBD@Z ENDP			; ImGui::SetClipboardText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetClipboardText@ImGui@@YAPEBDXZ
_TEXT	SEGMENT
g$ = 8
tv73 = 216
tv75 = 224
?GetClipboardText@ImGui@@YAPEBDXZ PROC			; ImGui::GetClipboardText, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3348
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3349
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3350
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+256], 0
	je	SHORT $LN3@GetClipboa
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+256]
	mov	QWORD PTR tv73[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+272]
	call	QWORD PTR tv73[rbp]
	mov	QWORD PTR tv75[rbp], rax
	jmp	SHORT $LN4@GetClipboa
$LN3@GetClipboa:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv75[rbp], rax
$LN4@GetClipboa:
	mov	rax, QWORD PTR tv75[rbp]
; Line 3351
	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
?GetClipboardText@ImGui@@YAPEBDXZ ENDP			; ImGui::GetClipboardText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CaptureMouseFromApp@ImGui@@YAX_N@Z
_TEXT	SEGMENT
tv67 = 192
capture$ = 240
?CaptureMouseFromApp@ImGui@@YAX_N@Z PROC		; ImGui::CaptureMouseFromApp, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4831
$LN5:
	mov	BYTE PTR [rsp+8], cl
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4832
	movzx	eax, BYTE PTR capture$[rbp]
	test	eax, eax
	je	SHORT $LN3@CaptureMou
	mov	DWORD PTR tv67[rbp], 1
	jmp	SHORT $LN4@CaptureMou
$LN3@CaptureMou:
	mov	DWORD PTR tv67[rbp], 0
$LN4@CaptureMou:
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	ecx, DWORD PTR tv67[rbp]
	mov	DWORD PTR [rax+13064], ecx
; Line 4833
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?CaptureMouseFromApp@ImGui@@YAX_N@Z ENDP		; ImGui::CaptureMouseFromApp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetMouseCursor@ImGui@@YAXH@Z
_TEXT	SEGMENT
cursor_type$ = 224
?SetMouseCursor@ImGui@@YAXH@Z PROC			; ImGui::SetMouseCursor, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4821
$LN3:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4822
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	ecx, DWORD PTR cursor_type$[rbp]
	mov	DWORD PTR [rax+8008], ecx
; Line 4823
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?SetMouseCursor@ImGui@@YAXH@Z ENDP			; ImGui::SetMouseCursor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetMouseCursor@ImGui@@YAHXZ
_TEXT	SEGMENT
?GetMouseCursor@ImGui@@YAHXZ PROC			; ImGui::GetMouseCursor, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4816
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4817
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	eax, DWORD PTR [rax+8008]
; Line 4818
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetMouseCursor@ImGui@@YAHXZ ENDP			; ImGui::GetMouseCursor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ResetMouseDragDelta@ImGui@@YAXH@Z
_TEXT	SEGMENT
g$ = 8
button$ = 256
?ResetMouseDragDelta@ImGui@@YAXH@Z PROC			; ImGui::ResetMouseDragDelta, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4808
$LN5:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4809
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4810
	cmp	DWORD PTR button$[rbp], 0
	jl	SHORT $LN3@ResetMouse
	cmp	DWORD PTR button$[rbp], 5
	jl	SHORT $LN4@ResetMouse
$LN3@ResetMouse:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ResetMouseDragDelta@ImGui@@YAXH@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1KI@IKDPMEHK@?$AAb?$AAu?$AAt?$AAt?$AAo?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@ResetMouse:
; Line 4812
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+296]
	movsxd	rcx, DWORD PTR button$[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rdx+rcx*8+972], rax
; Line 4813
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?ResetMouseDragDelta@ImGui@@YAXH@Z ENDP			; ImGui::ResetMouseDragDelta
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetMouseDragDelta@ImGui@@YA?AUImVec2@@HM@Z
_TEXT	SEGMENT
g$ = 8
__$ReturnUdt$ = 256
button$ = 264
lock_threshold$ = 272
?GetMouseDragDelta@ImGui@@YA?AUImVec2@@HM@Z PROC	; ImGui::GetMouseDragDelta, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4795
$LN10:
	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4796
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4797
	cmp	DWORD PTR button$[rbp], 0
	jl	SHORT $LN8@GetMouseDr
	cmp	DWORD PTR button$[rbp], 5
	jl	SHORT $LN9@GetMouseDr
$LN8@GetMouseDr:
	mov	eax, DWORD PTR ?__LINE__Var@?0??GetMouseDragDelta@ImGui@@YA?AUImVec2@@HM@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1KI@IKDPMEHK@?$AAb?$AAu?$AAt?$AAt?$AAo?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN9@GetMouseDr:
; Line 4798
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR lock_threshold$[rbp]
	jbe	SHORT $LN2@GetMouseDr
; Line 4799
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+56]
	movss	DWORD PTR lock_threshold$[rbp], xmm0
$LN2@GetMouseDr:
; Line 4800
	movsxd	rax, DWORD PTR button$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+304]
	test	eax, eax
	jne	SHORT $LN4@GetMouseDr
	movsxd	rax, DWORD PTR button$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1066]
	test	eax, eax
	je	$LN3@GetMouseDr
$LN4@GetMouseDr:
; Line 4801
	movsxd	rax, DWORD PTR button$[rbp]
	movss	xmm0, DWORD PTR lock_threshold$[rbp]
	mulss	xmm0, DWORD PTR lock_threshold$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rcx+rax*4+1164]
	comiss	xmm1, xmm0
	jb	SHORT $LN5@GetMouseDr
; Line 4802
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 296				; 00000128H
	mov	rcx, rax
	call	?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z ; ImGui::IsMousePosValid
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@GetMouseDr
	movsxd	rax, DWORD PTR button$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	lea	rax, QWORD PTR [rcx+rax*8+972]
	mov	rcx, rax
	call	?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z ; ImGui::IsMousePosValid
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@GetMouseDr
; Line 4803
	movsxd	rax, DWORD PTR button$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	lea	rax, QWORD PTR [rcx+rax*8+972]
	mov	rcx, QWORD PTR g$[rbp]
	add	rcx, 296				; 00000128H
	mov	r8, rax
	mov	rdx, rcx
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@GetMouseDr
$LN6@GetMouseDr:
$LN5@GetMouseDr:
$LN3@GetMouseDr:
; Line 4804
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@GetMouseDr:
; Line 4805
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetMouseDragDelta@ImGui@@YA?AUImVec2@@HM@Z ENDP	; ImGui::GetMouseDragDelta
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsMouseDragging@ImGui@@YA_NHM@Z
_TEXT	SEGMENT
g$ = 8
button$ = 256
lock_threshold$ = 264
?IsMouseDragging@ImGui@@YA_NHM@Z PROC			; ImGui::IsMouseDragging, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4748
$LN6:
	movss	DWORD PTR [rsp+16], xmm1
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4749
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4750
	cmp	DWORD PTR button$[rbp], 0
	jl	SHORT $LN4@IsMouseDra
	cmp	DWORD PTR button$[rbp], 5
	jl	SHORT $LN5@IsMouseDra
$LN4@IsMouseDra:
	mov	eax, DWORD PTR ?__LINE__Var@?0??IsMouseDragging@ImGui@@YA_NHM@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1KI@IKDPMEHK@?$AAb?$AAu?$AAt?$AAt?$AAo?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN5@IsMouseDra:
; Line 4751
	movsxd	rax, DWORD PTR button$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+304]
	test	eax, eax
	jne	SHORT $LN2@IsMouseDra
; Line 4752
	xor	al, al
	jmp	SHORT $LN1@IsMouseDra
$LN2@IsMouseDra:
; Line 4753
	movss	xmm1, DWORD PTR lock_threshold$[rbp]
	mov	ecx, DWORD PTR button$[rbp]
	call	?IsMouseDragPastThreshold@ImGui@@YA_NHM@Z ; ImGui::IsMouseDragPastThreshold
$LN1@IsMouseDra:
; Line 4754
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsMouseDragging@ImGui@@YA_NHM@Z ENDP			; ImGui::IsMouseDragging
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetMousePosOnOpeningCurrentPopup@ImGui@@YA?AUImVec2@@XZ
_TEXT	SEGMENT
g$ = 8
tv75 = 216
__$ReturnUdt$ = 256
?GetMousePosOnOpeningCurrentPopup@ImGui@@YA?AUImVec2@@XZ PROC ; ImGui::GetMousePosOnOpeningCurrentPopup, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4764
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4765
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4766
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7592], 0
	jle	SHORT $LN2@GetMousePo
; Line 4767
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv75[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7592]
	dec	eax
	mov	edx, eax
	mov	rcx, QWORD PTR tv75[rbp]
	call	??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ; ImVector<ImGuiPopupData>::operator[]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	SHORT $LN1@GetMousePo
$LN2@GetMousePo:
; Line 4768
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+296]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@GetMousePo:
; Line 4769
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetMousePosOnOpeningCurrentPopup@ImGui@@YA?AUImVec2@@XZ ENDP ; ImGui::GetMousePosOnOpeningCurrentPopup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetMousePos@ImGui@@YA?AUImVec2@@XZ
_TEXT	SEGMENT
g$ = 8
__$ReturnUdt$ = 256
?GetMousePos@ImGui@@YA?AUImVec2@@XZ PROC		; ImGui::GetMousePos, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4757
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4758
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4759
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+296]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 4760
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetMousePos@ImGui@@YA?AUImVec2@@XZ ENDP		; ImGui::GetMousePos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsAnyMouseDown@ImGui@@YA_NXZ
_TEXT	SEGMENT
g$ = 8
n$1 = 36
?IsAnyMouseDown@ImGui@@YA_NXZ PROC			; ImGui::IsAnyMouseDown, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4783
$LN7:
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4784
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4785
	mov	DWORD PTR n$1[rbp], 0
	jmp	SHORT $LN4@IsAnyMouse
$LN2@IsAnyMouse:
	mov	eax, DWORD PTR n$1[rbp]
	inc	eax
	mov	DWORD PTR n$1[rbp], eax
$LN4@IsAnyMouse:
	cmp	DWORD PTR n$1[rbp], 5
	jge	SHORT $LN3@IsAnyMouse
; Line 4786
	movsxd	rax, DWORD PTR n$1[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+304]
	test	eax, eax
	je	SHORT $LN5@IsAnyMouse
; Line 4787
	mov	al, 1
	jmp	SHORT $LN1@IsAnyMouse
$LN5@IsAnyMouse:
	jmp	SHORT $LN2@IsAnyMouse
$LN3@IsAnyMouse:
; Line 4788
	xor	al, al
$LN1@IsAnyMouse:
; Line 4789
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?IsAnyMouseDown@ImGui@@YA_NXZ ENDP			; ImGui::IsAnyMouseDown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z
_TEXT	SEGMENT
MOUSE_INVALID$ = 4
p$ = 40
$T4 = 264
tv77 = 276
tv73 = 280
__$ArrayPad$ = 288
mouse_pos$ = 336
?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z PROC		; ImGui::IsMousePosValid, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4773
$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+376]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4776
	cmp	QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA, 0 ; GImGui
	jne	SHORT $LN3@IsMousePos
	mov	eax, DWORD PTR ?__LINE__Var@?0??IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z@4JA
	add	eax, 3
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BI@DLHMADOF@?$AAG?$AAI?$AAm?$AAG?$AAu?$AAi?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@IsMousePos:
; Line 4777
	movss	xmm0, DWORD PTR __real@c87a0000
	movss	DWORD PTR MOUSE_INVALID$[rbp], xmm0
; Line 4778
	cmp	QWORD PTR mouse_pos$[rbp], 0
	je	SHORT $LN4@IsMousePos
	mov	rax, QWORD PTR mouse_pos$[rbp]
	mov	QWORD PTR tv73[rbp], rax
	jmp	SHORT $LN5@IsMousePos
$LN4@IsMousePos:
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	add	rax, 296				; 00000128H
	mov	QWORD PTR tv73[rbp], rax
$LN5@IsMousePos:
	mov	rax, QWORD PTR tv73[rbp]
	mov	QWORD PTR $T4[rbp], rax
	mov	rax, QWORD PTR $T4[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR p$[rbp], rax
; Line 4779
	movss	xmm0, DWORD PTR p$[rbp]
	comiss	xmm0, DWORD PTR __real@c87a0000
	jb	SHORT $LN6@IsMousePos
	movss	xmm0, DWORD PTR p$[rbp+4]
	comiss	xmm0, DWORD PTR __real@c87a0000
	jb	SHORT $LN6@IsMousePos
	mov	DWORD PTR tv77[rbp], 1
	jmp	SHORT $LN7@IsMousePos
$LN6@IsMousePos:
	mov	DWORD PTR tv77[rbp], 0
$LN7@IsMousePos:
	movzx	eax, BYTE PTR tv77[rbp]
; Line 4780
	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
?IsMousePosValid@ImGui@@YA_NPEBUImVec2@@@Z ENDP		; ImGui::IsMousePosValid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z
_TEXT	SEGMENT
g$ = 8
rect_clipped$ = 40
rect_for_touch$ = 88
$T5 = 324
$T6 = 356
tv92 = 376
tv90 = 384
__$ArrayPad$ = 392
r_min$ = 432
r_max$ = 440
clip$ = 448
?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z PROC	; ImGui::IsMouseHoveringRect, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4614
$LN5:
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 440				; 000001b8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+472]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4615
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4618
	mov	r8, QWORD PTR r_max$[rbp]
	mov	rdx, QWORD PTR r_min$[rbp]
	lea	rcx, QWORD PTR rect_clipped$[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
; Line 4619
	movzx	eax, BYTE PTR clip$[rbp]
	test	eax, eax
	je	SHORT $LN2@IsMouseHov
; Line 4620
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	add	rax, 592				; 00000250H
	mov	rdx, rax
	lea	rcx, QWORD PTR rect_clipped$[rbp]
	call	?ClipWith@ImRect@@QEAAXAEBU1@@Z		; ImRect::ClipWith
$LN2@IsMouseHov:
; Line 4623
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 5568				; 000015c0H
	mov	r8, rax
	lea	rdx, QWORD PTR rect_clipped$[rbp+8]
	lea	rcx, QWORD PTR $T5[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv92[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 5568				; 000015c0H
	mov	r8, rax
	lea	rdx, QWORD PTR rect_clipped$[rbp]
	lea	rcx, QWORD PTR $T6[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv90[rbp], rax
	mov	r8, QWORD PTR tv92[rbp]
	mov	rdx, QWORD PTR tv90[rbp]
	lea	rcx, QWORD PTR rect_for_touch$[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
; Line 4624
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 296				; 00000128H
	mov	rdx, rax
	lea	rcx, QWORD PTR rect_for_touch$[rbp]
	call	?Contains@ImRect@@QEBA_NAEBUImVec2@@@Z	; ImRect::Contains
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@IsMouseHov
; Line 4625
	xor	al, al
	jmp	SHORT $LN1@IsMouseHov
$LN3@IsMouseHov:
; Line 4626
	mov	al, 1
$LN1@IsMouseHov:
; Line 4627
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+408]
	pop	rdi
	pop	rbp
	ret	0
?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z ENDP	; ImGui::IsMouseHoveringRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsMouseDoubleClicked@ImGui@@YA_NH@Z
_TEXT	SEGMENT
g$ = 8
button$ = 256
?IsMouseDoubleClicked@ImGui@@YA_NH@Z PROC		; ImGui::IsMouseDoubleClicked, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4730
$LN5:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4731
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4732
	cmp	DWORD PTR button$[rbp], 0
	jl	SHORT $LN3@IsMouseDou
	cmp	DWORD PTR button$[rbp], 5
	jl	SHORT $LN4@IsMouseDou
$LN3@IsMouseDou:
	mov	eax, DWORD PTR ?__LINE__Var@?0??IsMouseDoubleClicked@ImGui@@YA_NH@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1KI@IKDPMEHK@?$AAb?$AAu?$AAt?$AAt?$AAo?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@IsMouseDou:
; Line 4733
	movsxd	rax, DWORD PTR button$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1061]
; Line 4734
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsMouseDoubleClicked@ImGui@@YA_NH@Z ENDP		; ImGui::IsMouseDoubleClicked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsMouseReleased@ImGui@@YA_NH@Z
_TEXT	SEGMENT
g$ = 8
button$ = 256
?IsMouseReleased@ImGui@@YA_NH@Z PROC			; ImGui::IsMouseReleased, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4723
$LN5:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4724
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4725
	cmp	DWORD PTR button$[rbp], 0
	jl	SHORT $LN3@IsMouseRel
	cmp	DWORD PTR button$[rbp], 5
	jl	SHORT $LN4@IsMouseRel
$LN3@IsMouseRel:
	mov	eax, DWORD PTR ?__LINE__Var@?0??IsMouseReleased@ImGui@@YA_NH@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1KI@IKDPMEHK@?$AAb?$AAu?$AAt?$AAt?$AAo?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@IsMouseRel:
; Line 4726
	movsxd	rax, DWORD PTR button$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1066]
; Line 4727
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsMouseReleased@ImGui@@YA_NH@Z ENDP			; ImGui::IsMouseReleased
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsMouseClicked@ImGui@@YA_NH_N@Z
_TEXT	SEGMENT
g$ = 8
t$ = 36
amount$1 = 68
tv93 = 276
button$ = 320
repeat$ = 328
?IsMouseClicked@ImGui@@YA_NH_N@Z PROC			; ImGui::IsMouseClicked, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4705
$LN8:
	mov	BYTE PTR [rsp+16], dl
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4706
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4707
	cmp	DWORD PTR button$[rbp], 0
	jl	SHORT $LN6@IsMouseCli
	cmp	DWORD PTR button$[rbp], 5
	jl	SHORT $LN7@IsMouseCli
$LN6@IsMouseCli:
	mov	eax, DWORD PTR ?__LINE__Var@?0??IsMouseClicked@ImGui@@YA_NH_N@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1KI@IKDPMEHK@?$AAb?$AAu?$AAt?$AAt?$AAo?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@IsMouseCli:
; Line 4708
	movsxd	rax, DWORD PTR button$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax*4+1084]
	movss	DWORD PTR t$[rbp], xmm0
; Line 4709
	movss	xmm0, DWORD PTR t$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN2@IsMouseCli
	jne	SHORT $LN2@IsMouseCli
; Line 4710
	mov	al, 1
	jmp	SHORT $LN1@IsMouseCli
$LN2@IsMouseCli:
; Line 4712
	movzx	eax, BYTE PTR repeat$[rbp]
	test	eax, eax
	je	SHORT $LN3@IsMouseCli
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR t$[rbp]
	comiss	xmm0, DWORD PTR [rax+148]
	jbe	SHORT $LN3@IsMouseCli
; Line 4715
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+152]
	mulss	xmm0, DWORD PTR __real@3f000000
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR t$[rbp]
	subss	xmm1, DWORD PTR [rax+24]
	movss	DWORD PTR tv93[rbp], xmm1
	movaps	xmm3, xmm0
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm2, DWORD PTR [rax+148]
	movss	xmm1, DWORD PTR t$[rbp]
	movss	xmm0, DWORD PTR tv93[rbp]
	call	?CalcTypematicRepeatAmount@ImGui@@YAHMMMM@Z ; ImGui::CalcTypematicRepeatAmount
	mov	DWORD PTR amount$1[rbp], eax
; Line 4716
	cmp	DWORD PTR amount$1[rbp], 0
	jle	SHORT $LN4@IsMouseCli
; Line 4717
	mov	al, 1
	jmp	SHORT $LN1@IsMouseCli
$LN4@IsMouseCli:
$LN3@IsMouseCli:
; Line 4719
	xor	al, al
$LN1@IsMouseCli:
; Line 4720
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?IsMouseClicked@ImGui@@YA_NH_N@Z ENDP			; ImGui::IsMouseClicked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsMouseDown@ImGui@@YA_NH@Z
_TEXT	SEGMENT
g$ = 8
button$ = 256
?IsMouseDown@ImGui@@YA_NH@Z PROC			; ImGui::IsMouseDown, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4698
$LN5:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4699
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4700
	cmp	DWORD PTR button$[rbp], 0
	jl	SHORT $LN3@IsMouseDow
	cmp	DWORD PTR button$[rbp], 5
	jl	SHORT $LN4@IsMouseDow
$LN3@IsMouseDow:
	mov	eax, DWORD PTR ?__LINE__Var@?0??IsMouseDown@ImGui@@YA_NH@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1KI@IKDPMEHK@?$AAb?$AAu?$AAt?$AAt?$AAo?$AAn?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@IsMouseDow:
; Line 4701
	movsxd	rax, DWORD PTR button$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+304]
; Line 4702
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsMouseDown@ImGui@@YA_NH@Z ENDP			; ImGui::IsMouseDown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CaptureKeyboardFromApp@ImGui@@YAX_N@Z
_TEXT	SEGMENT
tv67 = 192
capture$ = 240
?CaptureKeyboardFromApp@ImGui@@YAX_N@Z PROC		; ImGui::CaptureKeyboardFromApp, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4826
$LN5:
	mov	BYTE PTR [rsp+8], cl
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4827
	movzx	eax, BYTE PTR capture$[rbp]
	test	eax, eax
	je	SHORT $LN3@CaptureKey
	mov	DWORD PTR tv67[rbp], 1
	jmp	SHORT $LN4@CaptureKey
$LN3@CaptureKey:
	mov	DWORD PTR tv67[rbp], 0
$LN4@CaptureKey:
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	ecx, DWORD PTR tv67[rbp]
	mov	DWORD PTR [rax+13068], ecx
; Line 4828
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?CaptureKeyboardFromApp@ImGui@@YAX_N@Z ENDP		; ImGui::CaptureKeyboardFromApp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetKeyPressedAmount@ImGui@@YAHHMM@Z
_TEXT	SEGMENT
g$ = 8
t$ = 36
key_index$ = 288
repeat_delay$ = 296
repeat_rate$ = 304
?GetKeyPressedAmount@ImGui@@YAHHMM@Z PROC		; ImGui::GetKeyPressedAmount, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4666
$LN6:
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4667
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4668
	cmp	DWORD PTR key_index$[rbp], 0
	jge	SHORT $LN2@GetKeyPres
; Line 4669
	xor	eax, eax
	jmp	SHORT $LN1@GetKeyPres
$LN2@GetKeyPres:
; Line 4670
	cmp	DWORD PTR key_index$[rbp], 0
	jl	SHORT $LN4@GetKeyPres
	cmp	DWORD PTR key_index$[rbp], 512		; 00000200H
	jl	SHORT $LN5@GetKeyPres
$LN4@GetKeyPres:
	mov	eax, DWORD PTR ?__LINE__Var@?0??GetKeyPressedAmount@ImGui@@YAHHMM@Z@4JA
	add	eax, 4
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1LA@MNMNDIA@?$AAk?$AAe?$AAy?$AA_?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN5@GetKeyPres:
; Line 4671
	movsxd	rax, DWORD PTR key_index$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax*4+1184]
	movss	DWORD PTR t$[rbp], xmm0
; Line 4672
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR t$[rbp]
	subss	xmm0, DWORD PTR [rax+24]
	movss	xmm3, DWORD PTR repeat_rate$[rbp]
	movss	xmm2, DWORD PTR repeat_delay$[rbp]
	movss	xmm1, DWORD PTR t$[rbp]
	call	?CalcTypematicRepeatAmount@ImGui@@YAHMMMM@Z ; ImGui::CalcTypematicRepeatAmount
$LN1@GetKeyPres:
; Line 4673
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?GetKeyPressedAmount@ImGui@@YAHHMM@Z ENDP		; ImGui::GetKeyPressedAmount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsKeyReleased@ImGui@@YA_NH@Z
_TEXT	SEGMENT
g$ = 8
tv85 = 212
user_key_index$ = 256
?IsKeyReleased@ImGui@@YA_NH@Z PROC			; ImGui::IsKeyReleased, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4690
$LN8:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4691
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4692
	cmp	DWORD PTR user_key_index$[rbp], 0
	jge	SHORT $LN2@IsKeyRelea
	xor	al, al
	jmp	$LN1@IsKeyRelea
$LN2@IsKeyRelea:
; Line 4693
	cmp	DWORD PTR user_key_index$[rbp], 0
	jl	SHORT $LN4@IsKeyRelea
	cmp	DWORD PTR user_key_index$[rbp], 512	; 00000200H
	jl	SHORT $LN5@IsKeyRelea
$LN4@IsKeyRelea:
	mov	eax, DWORD PTR ?__LINE__Var@?0??IsKeyReleased@ImGui@@YA_NH@Z@4JA
	add	eax, 3
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1ME@GKDHJBBA@?$AAu?$AAs?$AAe?$AAr?$AA_?$AAk?$AAe?$AAy?$AA_?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN5@IsKeyRelea:
; Line 4694
	movsxd	rax, DWORD PTR user_key_index$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax*4+3232]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN6@IsKeyRelea
	movsxd	rax, DWORD PTR user_key_index$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+324]
	test	eax, eax
	jne	SHORT $LN6@IsKeyRelea
	mov	DWORD PTR tv85[rbp], 1
	jmp	SHORT $LN7@IsKeyRelea
$LN6@IsKeyRelea:
	mov	DWORD PTR tv85[rbp], 0
$LN7@IsKeyRelea:
	movzx	eax, BYTE PTR tv85[rbp]
$LN1@IsKeyRelea:
; Line 4695
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsKeyReleased@ImGui@@YA_NH@Z ENDP			; ImGui::IsKeyReleased
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsKeyPressed@ImGui@@YA_NH_N@Z
_TEXT	SEGMENT
g$ = 8
t$ = 36
tv92 = 244
user_key_index$ = 288
repeat$ = 296
?IsKeyPressed@ImGui@@YA_NH_N@Z PROC			; ImGui::IsKeyPressed, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4676
$LN10:
	mov	BYTE PTR [rsp+16], dl
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4677
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4678
	cmp	DWORD PTR user_key_index$[rbp], 0
	jge	SHORT $LN2@IsKeyPress
; Line 4679
	xor	al, al
	jmp	$LN1@IsKeyPress
$LN2@IsKeyPress:
; Line 4680
	cmp	DWORD PTR user_key_index$[rbp], 0
	jl	SHORT $LN6@IsKeyPress
	cmp	DWORD PTR user_key_index$[rbp], 512	; 00000200H
	jl	SHORT $LN7@IsKeyPress
$LN6@IsKeyPress:
	mov	eax, DWORD PTR ?__LINE__Var@?0??IsKeyPressed@ImGui@@YA_NH_N@Z@4JA
	add	eax, 4
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1ME@GKDHJBBA@?$AAu?$AAs?$AAe?$AAr?$AA_?$AAk?$AAe?$AAy?$AA_?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@IsKeyPress:
; Line 4681
	movsxd	rax, DWORD PTR user_key_index$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax*4+1184]
	movss	DWORD PTR t$[rbp], xmm0
; Line 4682
	movss	xmm0, DWORD PTR t$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN3@IsKeyPress
	jne	SHORT $LN3@IsKeyPress
; Line 4683
	mov	al, 1
	jmp	SHORT $LN1@IsKeyPress
$LN3@IsKeyPress:
; Line 4684
	movzx	eax, BYTE PTR repeat$[rbp]
	test	eax, eax
	je	SHORT $LN4@IsKeyPress
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR t$[rbp]
	comiss	xmm0, DWORD PTR [rax+148]
	jbe	SHORT $LN4@IsKeyPress
; Line 4685
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm2, DWORD PTR [rax+152]
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+148]
	mov	ecx, DWORD PTR user_key_index$[rbp]
	call	?GetKeyPressedAmount@ImGui@@YAHHMM@Z	; ImGui::GetKeyPressedAmount
	test	eax, eax
	jle	SHORT $LN8@IsKeyPress
	mov	DWORD PTR tv92[rbp], 1
	jmp	SHORT $LN9@IsKeyPress
$LN8@IsKeyPress:
	mov	DWORD PTR tv92[rbp], 0
$LN9@IsKeyPress:
	movzx	eax, BYTE PTR tv92[rbp]
	jmp	SHORT $LN1@IsKeyPress
$LN4@IsKeyPress:
; Line 4686
	xor	al, al
$LN1@IsKeyPress:
; Line 4687
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?IsKeyPressed@ImGui@@YA_NH_N@Z ENDP			; ImGui::IsKeyPressed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsKeyDown@ImGui@@YA_NH@Z
_TEXT	SEGMENT
g$ = 8
user_key_index$ = 256
?IsKeyDown@ImGui@@YA_NH@Z PROC				; ImGui::IsKeyDown, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4639
$LN6:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4640
	cmp	DWORD PTR user_key_index$[rbp], 0
	jge	SHORT $LN2@IsKeyDown
; Line 4641
	xor	al, al
	jmp	SHORT $LN1@IsKeyDown
$LN2@IsKeyDown:
; Line 4642
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4643
	cmp	DWORD PTR user_key_index$[rbp], 0
	jl	SHORT $LN4@IsKeyDown
	cmp	DWORD PTR user_key_index$[rbp], 512	; 00000200H
	jl	SHORT $LN5@IsKeyDown
$LN4@IsKeyDown:
	mov	eax, DWORD PTR ?__LINE__Var@?0??IsKeyDown@ImGui@@YA_NH@Z@4JA
	add	eax, 4
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1ME@GKDHJBBA@?$AAu?$AAs?$AAe?$AAr?$AA_?$AAk?$AAe?$AAy?$AA_?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN5@IsKeyDown:
; Line 4644
	movsxd	rax, DWORD PTR user_key_index$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+324]
$LN1@IsKeyDown:
; Line 4645
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsKeyDown@ImGui@@YA_NH@Z ENDP				; ImGui::IsKeyDown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetKeyIndex@ImGui@@YAHH@Z
_TEXT	SEGMENT
g$ = 8
imgui_key$ = 256
?GetKeyIndex@ImGui@@YAHH@Z PROC				; ImGui::GetKeyIndex, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4630
$LN5:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4631
	cmp	DWORD PTR imgui_key$[rbp], 0
	jl	SHORT $LN3@GetKeyInde
	cmp	DWORD PTR imgui_key$[rbp], 22
	jl	SHORT $LN4@GetKeyInde
$LN3@GetKeyInde:
	mov	eax, DWORD PTR ?__LINE__Var@?0??GetKeyIndex@ImGui@@YAHH@Z@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1FK@NOIPPDJE@?$AAi?$AAm?$AAg?$AAu?$AAi?$AA_?$AAk?$AAe?$AAy?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@GetKeyInde:
; Line 4632
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4633
	movsxd	rax, DWORD PTR imgui_key$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rcx+rax*4+60]
; Line 4634
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetKeyIndex@ImGui@@YAHH@Z ENDP				; ImGui::GetKeyIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ColorConvertHSVtoRGB@ImGui@@YAXMMMAEAM00@Z
_TEXT	SEGMENT
i$ = 4
f$ = 36
p$ = 68
q$ = 100
t$ = 132
tv81 = 340
h$ = 384
s$ = 392
v$ = 400
out_r$ = 408
out_g$ = 416
out_b$ = 424
?ColorConvertHSVtoRGB@ImGui@@YAXMMMAEAM00@Z PROC	; ImGui::ColorConvertHSVtoRGB, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1851
$LN14:
	mov	QWORD PTR [rsp+32], r9
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1852
	movss	xmm0, DWORD PTR s$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN4@ColorConve
	jne	SHORT $LN4@ColorConve
; Line 1855
	mov	rax, QWORD PTR out_b$[rbp]
	movss	xmm0, DWORD PTR v$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR out_g$[rbp]
	movss	xmm0, DWORD PTR v$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR out_r$[rbp]
	movss	xmm0, DWORD PTR v$[rbp]
	movss	DWORD PTR [rax], xmm0
; Line 1856
	jmp	$LN1@ColorConve
$LN4@ColorConve:
; Line 1859
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR h$[rbp]
	call	fmodf
	divss	xmm0, DWORD PTR __real@3e2aaaab
	movss	DWORD PTR h$[rbp], xmm0
; Line 1860
	cvttss2si eax, DWORD PTR h$[rbp]
	mov	DWORD PTR i$[rbp], eax
; Line 1861
	cvtsi2ss xmm0, DWORD PTR i$[rbp]
	movss	xmm1, DWORD PTR h$[rbp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR f$[rbp], xmm0
; Line 1862
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR s$[rbp]
	movss	xmm1, DWORD PTR v$[rbp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR p$[rbp], xmm0
; Line 1863
	movss	xmm0, DWORD PTR s$[rbp]
	mulss	xmm0, DWORD PTR f$[rbp]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR v$[rbp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR q$[rbp], xmm0
; Line 1864
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR f$[rbp]
	movss	xmm1, DWORD PTR s$[rbp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR v$[rbp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR t$[rbp], xmm0
; Line 1866
	mov	eax, DWORD PTR i$[rbp]
	mov	DWORD PTR tv81[rbp], eax
	cmp	DWORD PTR tv81[rbp], 5
	ja	$LN11@ColorConve
	movsxd	rax, DWORD PTR tv81[rbp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN13@ColorConve[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN5@ColorConve:
; Line 1868
	mov	rax, QWORD PTR out_r$[rbp]
	movss	xmm0, DWORD PTR v$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR out_g$[rbp]
	movss	xmm0, DWORD PTR t$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR out_b$[rbp]
	movss	xmm0, DWORD PTR p$[rbp]
	movss	DWORD PTR [rax], xmm0
	jmp	$LN2@ColorConve
$LN6@ColorConve:
; Line 1869
	mov	rax, QWORD PTR out_r$[rbp]
	movss	xmm0, DWORD PTR q$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR out_g$[rbp]
	movss	xmm0, DWORD PTR v$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR out_b$[rbp]
	movss	xmm0, DWORD PTR p$[rbp]
	movss	DWORD PTR [rax], xmm0
	jmp	$LN2@ColorConve
$LN7@ColorConve:
; Line 1870
	mov	rax, QWORD PTR out_r$[rbp]
	movss	xmm0, DWORD PTR p$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR out_g$[rbp]
	movss	xmm0, DWORD PTR v$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR out_b$[rbp]
	movss	xmm0, DWORD PTR t$[rbp]
	movss	DWORD PTR [rax], xmm0
	jmp	$LN2@ColorConve
$LN8@ColorConve:
; Line 1871
	mov	rax, QWORD PTR out_r$[rbp]
	movss	xmm0, DWORD PTR p$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR out_g$[rbp]
	movss	xmm0, DWORD PTR q$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR out_b$[rbp]
	movss	xmm0, DWORD PTR v$[rbp]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@ColorConve
$LN9@ColorConve:
; Line 1872
	mov	rax, QWORD PTR out_r$[rbp]
	movss	xmm0, DWORD PTR t$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR out_g$[rbp]
	movss	xmm0, DWORD PTR p$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR out_b$[rbp]
	movss	xmm0, DWORD PTR v$[rbp]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN2@ColorConve
$LN10@ColorConve:
$LN11@ColorConve:
; Line 1873
	mov	rax, QWORD PTR out_r$[rbp]
	movss	xmm0, DWORD PTR v$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR out_g$[rbp]
	movss	xmm0, DWORD PTR p$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR out_b$[rbp]
	movss	xmm0, DWORD PTR q$[rbp]
	movss	DWORD PTR [rax], xmm0
$LN2@ColorConve:
$LN1@ColorConve:
; Line 1875
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
	npad	3
$LN13@ColorConve:
	DD	$LN5@ColorConve
	DD	$LN6@ColorConve
	DD	$LN7@ColorConve
	DD	$LN8@ColorConve
	DD	$LN9@ColorConve
	DD	$LN10@ColorConve
?ColorConvertHSVtoRGB@ImGui@@YAXMMMAEAM00@Z ENDP	; ImGui::ColorConvertHSVtoRGB
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ColorConvertRGBtoHSV@ImGui@@YAXMMMAEAM00@Z
_TEXT	SEGMENT
K$ = 4
chroma$ = 36
tv72 = 244
r$ = 288
g$ = 296
b$ = 304
out_h$ = 312
out_s$ = 320
out_v$ = 328
?ColorConvertRGBtoHSV@ImGui@@YAXMMMAEAM00@Z PROC	; ImGui::ColorConvertRGBtoHSV, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1829
$LN7:
	mov	QWORD PTR [rsp+32], r9
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1830
	xorps	xmm0, xmm0
	movss	DWORD PTR K$[rbp], xmm0
; Line 1831
	movss	xmm0, DWORD PTR b$[rbp]
	comiss	xmm0, DWORD PTR g$[rbp]
	jbe	SHORT $LN2@ColorConve
; Line 1833
	lea	rdx, QWORD PTR b$[rbp]
	lea	rcx, QWORD PTR g$[rbp]
	call	??$ImSwap@M@@YAXAEAM0@Z			; ImSwap<float>
; Line 1834
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR K$[rbp], xmm0
$LN2@ColorConve:
; Line 1836
	movss	xmm0, DWORD PTR g$[rbp]
	comiss	xmm0, DWORD PTR r$[rbp]
	jbe	SHORT $LN3@ColorConve
; Line 1838
	lea	rdx, QWORD PTR g$[rbp]
	lea	rcx, QWORD PTR r$[rbp]
	call	??$ImSwap@M@@YAXAEAM0@Z			; ImSwap<float>
; Line 1839
	movss	xmm0, DWORD PTR __real@beaaaaab
	subss	xmm0, DWORD PTR K$[rbp]
	movss	DWORD PTR K$[rbp], xmm0
$LN3@ColorConve:
; Line 1842
	movss	xmm0, DWORD PTR b$[rbp]
	comiss	xmm0, DWORD PTR g$[rbp]
	jbe	SHORT $LN5@ColorConve
	movss	xmm0, DWORD PTR g$[rbp]
	movss	DWORD PTR tv72[rbp], xmm0
	jmp	SHORT $LN6@ColorConve
$LN5@ColorConve:
	movss	xmm0, DWORD PTR b$[rbp]
	movss	DWORD PTR tv72[rbp], xmm0
$LN6@ColorConve:
	movss	xmm0, DWORD PTR r$[rbp]
	subss	xmm0, DWORD PTR tv72[rbp]
	movss	DWORD PTR chroma$[rbp], xmm0
; Line 1843
	movss	xmm0, DWORD PTR g$[rbp]
	subss	xmm0, DWORD PTR b$[rbp]
	movss	xmm1, DWORD PTR __real@40c00000
	mulss	xmm1, DWORD PTR chroma$[rbp]
	addss	xmm1, DWORD PTR __real@1e3ce508
	divss	xmm0, xmm1
	movss	xmm1, DWORD PTR K$[rbp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	call	fabsf
	mov	rax, QWORD PTR out_h$[rbp]
	movss	DWORD PTR [rax], xmm0
; Line 1844
	movss	xmm0, DWORD PTR r$[rbp]
	addss	xmm0, DWORD PTR __real@1e3ce508
	movss	xmm1, DWORD PTR chroma$[rbp]
	divss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR out_s$[rbp]
	movss	DWORD PTR [rax], xmm0
; Line 1845
	mov	rax, QWORD PTR out_v$[rbp]
	movss	xmm0, DWORD PTR r$[rbp]
	movss	DWORD PTR [rax], xmm0
; Line 1846
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?ColorConvertRGBtoHSV@ImGui@@YAXMMMAEAM00@Z ENDP	; ImGui::ColorConvertRGBtoHSV
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z
_TEXT	SEGMENT
out$ = 4
in$ = 256
?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z PROC	; ImGui::ColorConvertFloat4ToU32, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1817
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1819
	mov	rax, QWORD PTR in$[rbp]
	movss	xmm0, DWORD PTR [rax]
	call	?ImSaturate@@YAMM@Z			; ImSaturate
	mulss	xmm0, DWORD PTR __real@437f0000
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si eax, xmm0
	mov	DWORD PTR out$[rbp], eax
; Line 1820
	mov	rax, QWORD PTR in$[rbp]
	movss	xmm0, DWORD PTR [rax+4]
	call	?ImSaturate@@YAMM@Z			; ImSaturate
	mulss	xmm0, DWORD PTR __real@437f0000
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si eax, xmm0
	shl	eax, 8
	mov	ecx, DWORD PTR out$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR out$[rbp], eax
; Line 1821
	mov	rax, QWORD PTR in$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	call	?ImSaturate@@YAMM@Z			; ImSaturate
	mulss	xmm0, DWORD PTR __real@437f0000
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si eax, xmm0
	shl	eax, 16
	mov	ecx, DWORD PTR out$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR out$[rbp], eax
; Line 1822
	mov	rax, QWORD PTR in$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	call	?ImSaturate@@YAMM@Z			; ImSaturate
	mulss	xmm0, DWORD PTR __real@437f0000
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si eax, xmm0
	shl	eax, 24
	mov	ecx, DWORD PTR out$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR out$[rbp], eax
; Line 1823
	mov	eax, DWORD PTR out$[rbp]
; Line 1824
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z ENDP	; ImGui::ColorConvertFloat4ToU32
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ColorConvertU32ToFloat4@ImGui@@YA?AUImVec4@@I@Z
_TEXT	SEGMENT
s$ = 4
tv83 = 212
__$ReturnUdt$ = 256
in$ = 264
?ColorConvertU32ToFloat4@ImGui@@YA?AUImVec4@@I@Z PROC	; ImGui::ColorConvertU32ToFloat4, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 1807
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 1808
	movss	xmm0, DWORD PTR __real@3b808081
	movss	DWORD PTR s$[rbp], xmm0
; Line 1809
	mov	eax, DWORD PTR in$[rbp]
	shr	eax, 24
	and	eax, 255				; 000000ffH
	mov	eax, eax
	cvtsi2ss xmm0, rax
	mulss	xmm0, DWORD PTR s$[rbp]
	mov	eax, DWORD PTR in$[rbp]
	shr	eax, 16
	and	eax, 255				; 000000ffH
	mov	eax, eax
	cvtsi2ss xmm1, rax
	mulss	xmm1, DWORD PTR s$[rbp]
	mov	eax, DWORD PTR in$[rbp]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	mov	eax, eax
	cvtsi2ss xmm2, rax
	mulss	xmm2, DWORD PTR s$[rbp]
	mov	eax, DWORD PTR in$[rbp]
	and	eax, 255				; 000000ffH
	mov	eax, eax
	cvtsi2ss xmm3, rax
	mulss	xmm3, DWORD PTR s$[rbp]
	movss	DWORD PTR tv83[rbp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv83[rbp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec4@@QEAA@MMMM@Z			; ImVec4::ImVec4
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 1814
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?ColorConvertU32ToFloat4@ImGui@@YA?AUImVec4@@I@Z ENDP	; ImGui::ColorConvertU32ToFloat4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CalcTextSize@ImGui@@YA?AUImVec2@@PEBD0_NM@Z
_TEXT	SEGMENT
g$ = 8
text_display_end$ = 40
font$ = 72
font_size$ = 100
text_size$ = 136
__$ArrayPad$ = 344
__$ReturnUdt$ = 384
text$ = 392
text_end$ = 400
hide_text_after_double_hash$ = 408
wrap_width$ = 416
?CalcTextSize@ImGui@@YA?AUImVec2@@PEBD0_NM@Z PROC	; ImGui::CalcTextSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4529
$LN6:
	mov	BYTE PTR [rsp+32], r9b
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 42					; 0000002aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+456]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4530
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4533
	movzx	eax, BYTE PTR hide_text_after_double_hash$[rbp]
	test	eax, eax
	je	SHORT $LN2@CalcTextSi
; Line 4534
	mov	rdx, QWORD PTR text_end$[rbp]
	mov	rcx, QWORD PTR text$[rbp]
	call	?FindRenderedTextEnd@ImGui@@YAPEBDPEBD0@Z ; ImGui::FindRenderedTextEnd
	mov	QWORD PTR text_display_end$[rbp], rax
	jmp	SHORT $LN3@CalcTextSi
$LN2@CalcTextSi:
; Line 4536
	mov	rax, QWORD PTR text_end$[rbp]
	mov	QWORD PTR text_display_end$[rbp], rax
$LN3@CalcTextSi:
; Line 4538
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+6520]
	mov	QWORD PTR font$[rbp], rax
; Line 4539
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+6528]
	movss	DWORD PTR font_size$[rbp], xmm0
; Line 4540
	mov	rax, QWORD PTR text_display_end$[rbp]
	cmp	QWORD PTR text$[rbp], rax
	jne	SHORT $LN4@CalcTextSi
; Line 4541
	movss	xmm2, DWORD PTR font_size$[rbp]
	xorps	xmm1, xmm1
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	jmp	$LN1@CalcTextSi
$LN4@CalcTextSi:
; Line 4542
	mov	QWORD PTR [rsp+56], 0
	mov	rax, QWORD PTR text_display_end$[rbp]
	mov	QWORD PTR [rsp+48], rax
	mov	rax, QWORD PTR text$[rbp]
	mov	QWORD PTR [rsp+40], rax
	movss	xmm0, DWORD PTR wrap_width$[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@7f7fffff
	movss	xmm2, DWORD PTR font_size$[rbp]
	lea	rdx, QWORD PTR text_size$[rbp]
	mov	rcx, QWORD PTR font$[rbp]
	call	?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z ; ImFont::CalcTextSizeA
; Line 4549
	movss	xmm0, DWORD PTR text_size$[rbp]
	addss	xmm0, DWORD PTR __real@3f7fff58
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	movss	DWORD PTR text_size$[rbp], xmm0
; Line 4551
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR text_size$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@CalcTextSi:
; Line 4552
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:?CalcTextSize@ImGui@@YA?AUImVec2@@PEBD0_NM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?CalcTextSize@ImGui@@YA?AUImVec2@@PEBD0_NM@Z ENDP	; ImGui::CalcTextSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EndChildFrame@ImGui@@YAXXZ
_TEXT	SEGMENT
?EndChildFrame@ImGui@@YAXXZ PROC			; ImGui::EndChildFrame, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5107
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5108
	call	?EndChild@ImGui@@YAXXZ			; ImGui::EndChild
; Line 5109
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?EndChildFrame@ImGui@@YAXXZ ENDP			; ImGui::EndChildFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BeginChildFrame@ImGui@@YA_NIAEBUImVec2@@H@Z
_TEXT	SEGMENT
g$ = 8
style$ = 40
ret$ = 68
id$ = 320
size$ = 328
extra_flags$ = 336
?BeginChildFrame@ImGui@@YA_NIAEBUImVec2@@H@Z PROC	; ImGui::BeginChildFrame, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5093
$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5094
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 5095
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 5472				; 00001560H
	mov	QWORD PTR style$[rbp], rax
; Line 5096
	mov	eax, 16
	imul	rax, rax, 7
	mov	rcx, QWORD PTR style$[rbp]
	lea	rax, QWORD PTR [rcx+rax+196]
	mov	rdx, rax
	mov	ecx, 3
	call	?PushStyleColor@ImGui@@YAXHAEBUImVec4@@@Z ; ImGui::PushStyleColor
; Line 5097
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm1, DWORD PTR [rax+64]
	mov	ecx, 6
	call	?PushStyleVar@ImGui@@YAXHM@Z		; ImGui::PushStyleVar
; Line 5098
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm1, DWORD PTR [rax+68]
	mov	ecx, 7
	call	?PushStyleVar@ImGui@@YAXHM@Z		; ImGui::PushStyleVar
; Line 5099
	mov	rax, QWORD PTR style$[rbp]
	add	rax, 56					; 00000038H
	mov	rdx, rax
	mov	ecx, 1
	call	?PushStyleVar@ImGui@@YAXHAEBUImVec2@@@Z	; ImGui::PushStyleVar
; Line 5100
	mov	eax, DWORD PTR extra_flags$[rbp]
	or	eax, 65540				; 00010004H
	mov	r9d, eax
	mov	r8b, 1
	mov	rdx, QWORD PTR size$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	call	?BeginChild@ImGui@@YA_NIAEBUImVec2@@_NH@Z ; ImGui::BeginChild
	mov	BYTE PTR ret$[rbp], al
; Line 5101
	mov	ecx, 3
	call	?PopStyleVar@ImGui@@YAXH@Z		; ImGui::PopStyleVar
; Line 5102
	mov	ecx, 1
	call	?PopStyleColor@ImGui@@YAXH@Z		; ImGui::PopStyleColor
; Line 5103
	movzx	eax, BYTE PTR ret$[rbp]
; Line 5104
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?BeginChildFrame@ImGui@@YA_NIAEBUImVec2@@H@Z ENDP	; ImGui::BeginChildFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CalcListClipping@ImGui@@YAXHMPEAH0@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
unclipped_rect$ = 72
pos$ = 120
start$ = 148
end$ = 180
$T5 = 404
$T6 = 452
$T7 = 484
tv144 = 504
tv142 = 512
__$ArrayPad$ = 520
items_count$ = 560
items_height$ = 568
out_items_display_start$ = 576
out_items_display_end$ = 584
?CalcListClipping@ImGui@@YAXHMPEAH0@Z PROC		; ImGui::CalcListClipping, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2215
$LN9:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	movss	DWORD PTR [rsp+16], xmm1
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 560				; 00000230H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+600]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2216
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 2217
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 2218
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12476]
	test	eax, eax
	je	SHORT $LN2@CalcListCl
; Line 2221
	mov	rax, QWORD PTR out_items_display_start$[rbp]
	mov	DWORD PTR [rax], 0
; Line 2222
	mov	rax, QWORD PTR out_items_display_end$[rbp]
	mov	ecx, DWORD PTR items_count$[rbp]
	mov	DWORD PTR [rax], ecx
; Line 2223
	jmp	$LN1@CalcListCl
$LN2@CalcListCl:
; Line 2225
	call	?GetSkipItemForListClipping@@YA_NXZ	; GetSkipItemForListClipping
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@CalcListCl
; Line 2227
	mov	rax, QWORD PTR out_items_display_end$[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR out_items_display_start$[rbp]
	mov	DWORD PTR [rax], 0
; Line 2228
	jmp	$LN1@CalcListCl
$LN3@CalcListCl:
; Line 2232
	lea	rax, QWORD PTR unclipped_rect$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	rdi, rax
	lea	rsi, QWORD PTR [rcx+592]
	mov	ecx, 16
	rep movsb
; Line 2233
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7736]
	test	eax, eax
	je	SHORT $LN4@CalcListCl
; Line 2234
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7680				; 00001e00H
	mov	rdx, rax
	lea	rcx, QWORD PTR unclipped_rect$[rbp]
	call	?Add@ImRect@@QEAAXAEBU1@@Z		; ImRect::Add
$LN4@CalcListCl:
; Line 2235
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7660], 0
	je	$LN5@CalcListCl
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR window$[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	mov	edx, DWORD PTR [rdx+7660]
	cmp	DWORD PTR [rcx+rax+936], edx
	jne	$LN5@CalcListCl
; Line 2236
	mov	eax, 16
	imul	rax, rax, 0
	mov	rcx, QWORD PTR window$[rbp]
	lea	rax, QWORD PTR [rcx+rax+952]
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 16
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T6[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv144[rbp], rax
	mov	eax, 16
	imul	rax, rax, 0
	mov	rcx, QWORD PTR window$[rbp]
	lea	rax, QWORD PTR [rcx+rax+944]
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 16
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T7[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv142[rbp], rax
	mov	r8, QWORD PTR tv144[rbp]
	mov	rdx, QWORD PTR tv142[rbp]
	lea	rcx, QWORD PTR $T5[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
	mov	rdx, rax
	lea	rcx, QWORD PTR unclipped_rect$[rbp]
	call	?Add@ImRect@@QEAAXAEBU1@@Z		; ImRect::Add
$LN5@CalcListCl:
; Line 2238
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+216]
	mov	QWORD PTR pos$[rbp], rax
; Line 2239
	movss	xmm0, DWORD PTR unclipped_rect$[rbp+4]
	subss	xmm0, DWORD PTR pos$[rbp+4]
	divss	xmm0, DWORD PTR items_height$[rbp]
	cvttss2si eax, xmm0
	mov	DWORD PTR start$[rbp], eax
; Line 2240
	movss	xmm0, DWORD PTR unclipped_rect$[rbp+12]
	subss	xmm0, DWORD PTR pos$[rbp+4]
	divss	xmm0, DWORD PTR items_height$[rbp]
	cvttss2si eax, xmm0
	mov	DWORD PTR end$[rbp], eax
; Line 2243
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7736]
	test	eax, eax
	je	SHORT $LN6@CalcListCl
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7760], 2
	jne	SHORT $LN6@CalcListCl
; Line 2244
	mov	eax, DWORD PTR start$[rbp]
	dec	eax
	mov	DWORD PTR start$[rbp], eax
$LN6@CalcListCl:
; Line 2245
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7736]
	test	eax, eax
	je	SHORT $LN7@CalcListCl
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7760], 3
	jne	SHORT $LN7@CalcListCl
; Line 2246
	mov	eax, DWORD PTR end$[rbp]
	inc	eax
	mov	DWORD PTR end$[rbp], eax
$LN7@CalcListCl:
; Line 2248
	mov	r8d, DWORD PTR items_count$[rbp]
	xor	edx, edx
	mov	ecx, DWORD PTR start$[rbp]
	call	??$ImClamp@H@@YAHHHH@Z			; ImClamp<int>
	mov	DWORD PTR start$[rbp], eax
; Line 2249
	mov	eax, DWORD PTR end$[rbp]
	inc	eax
	mov	r8d, DWORD PTR items_count$[rbp]
	mov	edx, DWORD PTR start$[rbp]
	mov	ecx, eax
	call	??$ImClamp@H@@YAHHHH@Z			; ImClamp<int>
	mov	DWORD PTR end$[rbp], eax
; Line 2250
	mov	rax, QWORD PTR out_items_display_start$[rbp]
	mov	ecx, DWORD PTR start$[rbp]
	mov	DWORD PTR [rax], ecx
; Line 2251
	mov	rax, QWORD PTR out_items_display_end$[rbp]
	mov	ecx, DWORD PTR end$[rbp]
	mov	DWORD PTR [rax], ecx
$LN1@CalcListCl:
; Line 2252
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?CalcListClipping@ImGui@@YAXHMPEAH0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+528]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?CalcListClipping@ImGui@@YAXHMPEAH0@Z ENDP		; ImGui::CalcListClipping
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetStateStorage@ImGui@@YAPEAUImGuiStorage@@XZ
_TEXT	SEGMENT
window$ = 8
?GetStateStorage@ImGui@@YAPEAUImGuiStorage@@XZ PROC	; ImGui::GetStateStorage, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7053
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7054
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7055
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+416]
; Line 7056
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetStateStorage@ImGui@@YAPEAUImGuiStorage@@XZ ENDP	; ImGui::GetStateStorage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetStateStorage@ImGui@@YAXPEAUImGuiStorage@@@Z
_TEXT	SEGMENT
window$ = 8
tv69 = 216
tree$ = 256
?SetStateStorage@ImGui@@YAXPEAUImGuiStorage@@@Z PROC	; ImGui::SetStateStorage, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7047
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7048
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7049
	cmp	QWORD PTR tree$[rbp], 0
	je	SHORT $LN3@SetStateSt
	mov	rax, QWORD PTR tree$[rbp]
	mov	QWORD PTR tv69[rbp], rax
	jmp	SHORT $LN4@SetStateSt
$LN3@SetStateSt:
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 648				; 00000288H
	mov	QWORD PTR tv69[rbp], rax
$LN4@SetStateSt:
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR tv69[rbp]
	mov	QWORD PTR [rax+416], rcx
; Line 7050
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetStateStorage@ImGui@@YAXPEAUImGuiStorage@@@Z ENDP	; ImGui::SetStateStorage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetStyleColorName@ImGui@@YAPEBDH@Z
_TEXT	SEGMENT
tv64 = 192
idx$ = 240
?GetStyleColorName@ImGui@@YAPEBDH@Z PROC		; ImGui::GetStyleColorName, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2589
$LN60:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2591
	mov	eax, DWORD PTR idx$[rbp]
	mov	DWORD PTR tv64[rbp], eax
	cmp	DWORD PTR tv64[rbp], 52			; 00000034H
	ja	$LN2@GetStyleCo
	movsxd	rax, DWORD PTR tv64[rbp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN59@GetStyleCo[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN4@GetStyleCo:
; Line 2593
	lea	rax, OFFSET FLAT:??_C@_04OJAHODMC@Text@
	jmp	$LN1@GetStyleCo
$LN5@GetStyleCo:
; Line 2594
	lea	rax, OFFSET FLAT:??_C@_0N@LNHHFNPK@TextDisabled@
	jmp	$LN1@GetStyleCo
$LN6@GetStyleCo:
; Line 2595
	lea	rax, OFFSET FLAT:??_C@_08DMKFNKPN@WindowBg@
	jmp	$LN1@GetStyleCo
$LN7@GetStyleCo:
; Line 2596
	lea	rax, OFFSET FLAT:??_C@_07BLEJOHFO@ChildBg@
	jmp	$LN1@GetStyleCo
$LN8@GetStyleCo:
; Line 2597
	lea	rax, OFFSET FLAT:??_C@_07LKIIIJHA@PopupBg@
	jmp	$LN1@GetStyleCo
$LN9@GetStyleCo:
; Line 2598
	lea	rax, OFFSET FLAT:??_C@_06CMOGDIBK@Border@
	jmp	$LN1@GetStyleCo
$LN10@GetStyleCo:
; Line 2599
	lea	rax, OFFSET FLAT:??_C@_0N@DECGFAEC@BorderShadow@
	jmp	$LN1@GetStyleCo
$LN11@GetStyleCo:
; Line 2600
	lea	rax, OFFSET FLAT:??_C@_07PJIIOGAC@FrameBg@
	jmp	$LN1@GetStyleCo
$LN12@GetStyleCo:
; Line 2601
	lea	rax, OFFSET FLAT:??_C@_0P@KIOOHHAC@FrameBgHovered@
	jmp	$LN1@GetStyleCo
$LN13@GetStyleCo:
; Line 2602
	lea	rax, OFFSET FLAT:??_C@_0O@BGDCDDEA@FrameBgActive@
	jmp	$LN1@GetStyleCo
$LN14@GetStyleCo:
; Line 2603
	lea	rax, OFFSET FLAT:??_C@_07MMLEKCPI@TitleBg@
	jmp	$LN1@GetStyleCo
$LN15@GetStyleCo:
; Line 2604
	lea	rax, OFFSET FLAT:??_C@_0O@JHBFJHNE@TitleBgActive@
	jmp	$LN1@GetStyleCo
$LN16@GetStyleCo:
; Line 2605
	lea	rax, OFFSET FLAT:??_C@_0BB@EGCOMBJG@TitleBgCollapsed@
	jmp	$LN1@GetStyleCo
$LN17@GetStyleCo:
; Line 2606
	lea	rax, OFFSET FLAT:??_C@_09GEKCKLDE@MenuBarBg@
	jmp	$LN1@GetStyleCo
$LN18@GetStyleCo:
; Line 2607
	lea	rax, OFFSET FLAT:??_C@_0M@MFDHPFJF@ScrollbarBg@
	jmp	$LN1@GetStyleCo
$LN19@GetStyleCo:
; Line 2608
	lea	rax, OFFSET FLAT:??_C@_0O@HABIDNBE@ScrollbarGrab@
	jmp	$LN1@GetStyleCo
$LN20@GetStyleCo:
; Line 2609
	lea	rax, OFFSET FLAT:??_C@_0BF@JFEOOMLL@ScrollbarGrabHovered@
	jmp	$LN1@GetStyleCo
$LN21@GetStyleCo:
; Line 2610
	lea	rax, OFFSET FLAT:??_C@_0BE@GODMFNCF@ScrollbarGrabActive@
	jmp	$LN1@GetStyleCo
$LN22@GetStyleCo:
; Line 2611
	lea	rax, OFFSET FLAT:??_C@_09DMKAANGE@CheckMark@
	jmp	$LN1@GetStyleCo
$LN23@GetStyleCo:
; Line 2612
	lea	rax, OFFSET FLAT:??_C@_0L@LAMBADIC@SliderGrab@
	jmp	$LN1@GetStyleCo
$LN24@GetStyleCo:
; Line 2613
	lea	rax, OFFSET FLAT:??_C@_0BB@HBOBMOMP@SliderGrabActive@
	jmp	$LN1@GetStyleCo
$LN25@GetStyleCo:
; Line 2614
	lea	rax, OFFSET FLAT:??_C@_06LKBCGDFD@Button@
	jmp	$LN1@GetStyleCo
$LN26@GetStyleCo:
; Line 2615
	lea	rax, OFFSET FLAT:??_C@_0O@HBCGNIAI@ButtonHovered@
	jmp	$LN1@GetStyleCo
$LN27@GetStyleCo:
; Line 2616
	lea	rax, OFFSET FLAT:??_C@_0N@IMHOFKJ@ButtonActive@
	jmp	$LN1@GetStyleCo
$LN28@GetStyleCo:
; Line 2617
	lea	rax, OFFSET FLAT:??_C@_06OENKJGA@Header@
	jmp	$LN1@GetStyleCo
$LN29@GetStyleCo:
; Line 2618
	lea	rax, OFFSET FLAT:??_C@_0O@HAINNLMC@HeaderHovered@
	jmp	$LN1@GetStyleCo
$LN30@GetStyleCo:
; Line 2619
	lea	rax, OFFSET FLAT:??_C@_0N@HILFCJOI@HeaderActive@
	jmp	$LN1@GetStyleCo
$LN31@GetStyleCo:
; Line 2620
	lea	rax, OFFSET FLAT:??_C@_09IBFEOKHN@Separator@
	jmp	$LN1@GetStyleCo
$LN32@GetStyleCo:
; Line 2621
	lea	rax, OFFSET FLAT:??_C@_0BB@CHICANJA@SeparatorHovered@
	jmp	$LN1@GetStyleCo
$LN33@GetStyleCo:
; Line 2622
	lea	rax, OFFSET FLAT:??_C@_0BA@BPNGFOJM@SeparatorActive@
	jmp	$LN1@GetStyleCo
$LN34@GetStyleCo:
; Line 2623
	lea	rax, OFFSET FLAT:??_C@_0L@NGBDNFNJ@ResizeGrip@
	jmp	$LN1@GetStyleCo
$LN35@GetStyleCo:
; Line 2624
	lea	rax, OFFSET FLAT:??_C@_0BC@NNEDPMNH@ResizeGripHovered@
	jmp	$LN1@GetStyleCo
$LN36@GetStyleCo:
; Line 2625
	lea	rax, OFFSET FLAT:??_C@_0BB@NBBKHKIC@ResizeGripActive@
	jmp	$LN1@GetStyleCo
$LN37@GetStyleCo:
; Line 2626
	lea	rax, OFFSET FLAT:??_C@_03IEAKBACE@Tab@
	jmp	$LN1@GetStyleCo
$LN38@GetStyleCo:
; Line 2627
	lea	rax, OFFSET FLAT:??_C@_0L@JFDLBKBD@TabHovered@
	jmp	$LN1@GetStyleCo
$LN39@GetStyleCo:
; Line 2628
	lea	rax, OFFSET FLAT:??_C@_09BLMKPFCF@TabActive@
	jmp	$LN1@GetStyleCo
$LN40@GetStyleCo:
; Line 2629
	lea	rax, OFFSET FLAT:??_C@_0N@KLEENDFP@TabUnfocused@
	jmp	$LN1@GetStyleCo
$LN41@GetStyleCo:
; Line 2630
	lea	rax, OFFSET FLAT:??_C@_0BD@JMEALEPP@TabUnfocusedActive@
	jmp	$LN1@GetStyleCo
$LN42@GetStyleCo:
; Line 2631
	lea	rax, OFFSET FLAT:??_C@_09HDJFFJLL@PlotLines@
	jmp	$LN1@GetStyleCo
$LN43@GetStyleCo:
; Line 2632
	lea	rax, OFFSET FLAT:??_C@_0BB@OMALNJLN@PlotLinesHovered@
	jmp	$LN1@GetStyleCo
$LN44@GetStyleCo:
; Line 2633
	lea	rax, OFFSET FLAT:??_C@_0O@EEKOCENA@PlotHistogram@
	jmp	$LN1@GetStyleCo
$LN45@GetStyleCo:
; Line 2634
	lea	rax, OFFSET FLAT:??_C@_0BF@GJALJGDC@PlotHistogramHovered@
	jmp	$LN1@GetStyleCo
$LN46@GetStyleCo:
; Line 2635
	lea	rax, OFFSET FLAT:??_C@_0O@OAEMMJAA@TableHeaderBg@
	jmp	$LN1@GetStyleCo
$LN47@GetStyleCo:
; Line 2636
	lea	rax, OFFSET FLAT:??_C@_0BC@EJINMLMM@TableBorderStrong@
	jmp	$LN1@GetStyleCo
$LN48@GetStyleCo:
; Line 2637
	lea	rax, OFFSET FLAT:??_C@_0BB@IPAPNNJD@TableBorderLight@
	jmp	SHORT $LN1@GetStyleCo
$LN49@GetStyleCo:
; Line 2638
	lea	rax, OFFSET FLAT:??_C@_0L@LLALIFOE@TableRowBg@
	jmp	SHORT $LN1@GetStyleCo
$LN50@GetStyleCo:
; Line 2639
	lea	rax, OFFSET FLAT:??_C@_0O@FGPLHMKP@TableRowBgAlt@
	jmp	SHORT $LN1@GetStyleCo
$LN51@GetStyleCo:
; Line 2640
	lea	rax, OFFSET FLAT:??_C@_0P@IBBLAEBJ@TextSelectedBg@
	jmp	SHORT $LN1@GetStyleCo
$LN52@GetStyleCo:
; Line 2641
	lea	rax, OFFSET FLAT:??_C@_0P@GDDMCLOI@DragDropTarget@
	jmp	SHORT $LN1@GetStyleCo
$LN53@GetStyleCo:
; Line 2642
	lea	rax, OFFSET FLAT:??_C@_0N@ENCIHEPH@NavHighlight@
	jmp	SHORT $LN1@GetStyleCo
$LN54@GetStyleCo:
; Line 2643
	lea	rax, OFFSET FLAT:??_C@_0BG@MCGDEFOI@NavWindowingHighlight@
	jmp	SHORT $LN1@GetStyleCo
$LN55@GetStyleCo:
; Line 2644
	lea	rax, OFFSET FLAT:??_C@_0BC@JHKONDGH@NavWindowingDimBg@
	jmp	SHORT $LN1@GetStyleCo
$LN56@GetStyleCo:
; Line 2645
	lea	rax, OFFSET FLAT:??_C@_0BB@JOEAHKNC@ModalWindowDimBg@
	jmp	SHORT $LN1@GetStyleCo
$LN2@GetStyleCo:
; Line 2647
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN58@GetStyleCo
	mov	eax, DWORD PTR ?__LINE__Var@?0??GetStyleColorName@ImGui@@YAPEBDH@Z@4JA
	add	eax, 58					; 0000003aH
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN58@GetStyleCo:
; Line 2648
	lea	rax, OFFSET FLAT:??_C@_07NBCGADJA@Unknown@
$LN1@GetStyleCo:
; Line 2649
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
	npad	1
$LN59@GetStyleCo:
	DD	$LN4@GetStyleCo
	DD	$LN5@GetStyleCo
	DD	$LN6@GetStyleCo
	DD	$LN7@GetStyleCo
	DD	$LN8@GetStyleCo
	DD	$LN9@GetStyleCo
	DD	$LN10@GetStyleCo
	DD	$LN11@GetStyleCo
	DD	$LN12@GetStyleCo
	DD	$LN13@GetStyleCo
	DD	$LN14@GetStyleCo
	DD	$LN15@GetStyleCo
	DD	$LN16@GetStyleCo
	DD	$LN17@GetStyleCo
	DD	$LN18@GetStyleCo
	DD	$LN19@GetStyleCo
	DD	$LN20@GetStyleCo
	DD	$LN21@GetStyleCo
	DD	$LN22@GetStyleCo
	DD	$LN23@GetStyleCo
	DD	$LN24@GetStyleCo
	DD	$LN25@GetStyleCo
	DD	$LN26@GetStyleCo
	DD	$LN27@GetStyleCo
	DD	$LN28@GetStyleCo
	DD	$LN29@GetStyleCo
	DD	$LN30@GetStyleCo
	DD	$LN31@GetStyleCo
	DD	$LN32@GetStyleCo
	DD	$LN33@GetStyleCo
	DD	$LN34@GetStyleCo
	DD	$LN35@GetStyleCo
	DD	$LN36@GetStyleCo
	DD	$LN37@GetStyleCo
	DD	$LN38@GetStyleCo
	DD	$LN39@GetStyleCo
	DD	$LN40@GetStyleCo
	DD	$LN41@GetStyleCo
	DD	$LN42@GetStyleCo
	DD	$LN43@GetStyleCo
	DD	$LN44@GetStyleCo
	DD	$LN45@GetStyleCo
	DD	$LN46@GetStyleCo
	DD	$LN47@GetStyleCo
	DD	$LN48@GetStyleCo
	DD	$LN49@GetStyleCo
	DD	$LN50@GetStyleCo
	DD	$LN51@GetStyleCo
	DD	$LN52@GetStyleCo
	DD	$LN53@GetStyleCo
	DD	$LN54@GetStyleCo
	DD	$LN55@GetStyleCo
	DD	$LN56@GetStyleCo
?GetStyleColorName@ImGui@@YAPEBDH@Z ENDP		; ImGui::GetStyleColorName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetDrawListSharedData@ImGui@@YAPEAUImDrawListSharedData@@XZ
_TEXT	SEGMENT
?GetDrawListSharedData@ImGui@@YAPEAUImDrawListSharedData@@XZ PROC ; ImGui::GetDrawListSharedData, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3516
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3517
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	add	rax, 6536				; 00001988H
; Line 3518
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetDrawListSharedData@ImGui@@YAPEAUImDrawListSharedData@@XZ ENDP ; ImGui::GetDrawListSharedData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@XZ
_TEXT	SEGMENT
g$ = 8
tv73 = 216
?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@XZ PROC	; ImGui::GetForegroundDrawList, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3510
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3511
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3512
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7608				; 00001db8H
	mov	QWORD PTR tv73[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv73[rbp]
	call	??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z ; ImVector<ImGuiViewportP *>::operator[]
	mov	rcx, QWORD PTR [rax]
	call	?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z ; ImGui::GetForegroundDrawList
; Line 3513
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@XZ ENDP	; ImGui::GetForegroundDrawList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@XZ
_TEXT	SEGMENT
g$ = 8
tv73 = 216
?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@XZ PROC	; ImGui::GetBackgroundDrawList, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3499
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3500
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3501
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7608				; 00001db8H
	mov	QWORD PTR tv73[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv73[rbp]
	call	??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z ; ImVector<ImGuiViewportP *>::operator[]
	mov	rcx, QWORD PTR [rax]
	call	?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z ; ImGui::GetBackgroundDrawList
; Line 3502
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@XZ ENDP	; ImGui::GetBackgroundDrawList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetFrameCount@ImGui@@YAHXZ
_TEXT	SEGMENT
?GetFrameCount@ImGui@@YAHXZ PROC			; ImGui::GetFrameCount, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3465
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3466
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	eax, DWORD PTR [rax+7056]
; Line 3467
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetFrameCount@ImGui@@YAHXZ ENDP			; ImGui::GetFrameCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetTime@ImGui@@YANXZ
_TEXT	SEGMENT
?GetTime@ImGui@@YANXZ PROC				; ImGui::GetTime, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3460
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3461
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	movsd	xmm0, QWORD PTR [rax+7048]
; Line 3462
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetTime@ImGui@@YANXZ ENDP				; ImGui::GetTime
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsRectVisible@ImGui@@YA_NAEBUImVec2@@0@Z
_TEXT	SEGMENT
window$ = 8
$T1 = 228
tv74 = 264
rect_min$ = 304
rect_max$ = 312
?IsRectVisible@ImGui@@YA_NAEBUImVec2@@0@Z PROC		; ImGui::IsRectVisible, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7144
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7145
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7146
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 592				; 00000250H
	mov	QWORD PTR tv74[rbp], rax
	mov	r8, QWORD PTR rect_max$[rbp]
	mov	rdx, QWORD PTR rect_min$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
	mov	rdx, rax
	mov	rcx, QWORD PTR tv74[rbp]
	call	?Overlaps@ImRect@@QEBA_NAEBU1@@Z	; ImRect::Overlaps
; Line 7147
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
?IsRectVisible@ImGui@@YA_NAEBUImVec2@@0@Z ENDP		; ImGui::IsRectVisible
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsRectVisible@ImGui@@YA_NAEBUImVec2@@@Z
_TEXT	SEGMENT
window$ = 8
$T1 = 228
$T2 = 276
tv82 = 296
size$ = 336
?IsRectVisible@ImGui@@YA_NAEBUImVec2@@@Z PROC		; ImGui::IsRectVisible, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7138
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7139
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7140
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 592				; 00000250H
	mov	QWORD PTR tv82[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 216				; 000000d8H
	mov	r8, QWORD PTR size$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 216				; 000000d8H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
	mov	rdx, rax
	mov	rcx, QWORD PTR tv82[rbp]
	call	?Overlaps@ImRect@@QEBA_NAEBU1@@Z	; ImRect::Overlaps
; Line 7141
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
?IsRectVisible@ImGui@@YA_NAEBUImVec2@@@Z ENDP		; ImGui::IsRectVisible
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetMainViewport@ImGui@@YAPEAUImGuiViewport@@XZ
_TEXT	SEGMENT
g$ = 8
tv72 = 216
?GetMainViewport@ImGui@@YAPEAUImGuiViewport@@XZ PROC	; ImGui::GetMainViewport, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10663
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10664
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10665
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7608				; 00001db8H
	mov	QWORD PTR tv72[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv72[rbp]
	call	??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z ; ImVector<ImGuiViewportP *>::operator[]
	mov	rax, QWORD PTR [rax]
; Line 10666
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetMainViewport@ImGui@@YAPEAUImGuiViewport@@XZ ENDP	; ImGui::GetMainViewport
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetItemAllowOverlap@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
id$ = 36
?SetItemAllowOverlap@ImGui@@YAXXZ PROC			; ImGui::SetItemAllowOverlap, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4936
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4937
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4938
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	eax, DWORD PTR [rax+292]
	mov	DWORD PTR id$[rbp], eax
; Line 4939
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7240], ecx
	jne	SHORT $LN2@SetItemAll
; Line 4940
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7248], 1
$LN2@SetItemAll:
; Line 4941
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+7260], ecx
	jne	SHORT $LN3@SetItemAll
; Line 4942
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7273], 1
$LN3@SetItemAll:
; Line 4943
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?SetItemAllowOverlap@ImGui@@YAXXZ ENDP			; ImGui::SetItemAllowOverlap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetItemRectSize@ImGui@@YA?AUImVec2@@XZ
_TEXT	SEGMENT
window$ = 8
tv71 = 216
__$ReturnUdt$ = 256
?GetItemRectSize@ImGui@@YA?AUImVec2@@XZ PROC		; ImGui::GetItemRectSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4978
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4979
	call	?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindowRead
	mov	QWORD PTR window$[rbp], rax
; Line 4980
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 300				; 0000012cH
	mov	QWORD PTR tv71[rbp], rax
	mov	rdx, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR tv71[rbp]
	call	?GetSize@ImRect@@QEBA?AUImVec2@@XZ	; ImRect::GetSize
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 4981
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetItemRectSize@ImGui@@YA?AUImVec2@@XZ ENDP		; ImGui::GetItemRectSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetItemRectMax@ImGui@@YA?AUImVec2@@XZ
_TEXT	SEGMENT
window$ = 8
__$ReturnUdt$ = 256
?GetItemRectMax@ImGui@@YA?AUImVec2@@XZ PROC		; ImGui::GetItemRectMax, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4972
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4973
	call	?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindowRead
	mov	QWORD PTR window$[rbp], rax
; Line 4974
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+308]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 4975
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetItemRectMax@ImGui@@YA?AUImVec2@@XZ ENDP		; ImGui::GetItemRectMax
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetItemRectMin@ImGui@@YA?AUImVec2@@XZ
_TEXT	SEGMENT
window$ = 8
__$ReturnUdt$ = 256
?GetItemRectMin@ImGui@@YA?AUImVec2@@XZ PROC		; ImGui::GetItemRectMin, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4966
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4967
	call	?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindowRead
	mov	QWORD PTR window$[rbp], rax
; Line 4968
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+300]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 4969
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetItemRectMin@ImGui@@YA?AUImVec2@@XZ ENDP		; ImGui::GetItemRectMin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsAnyItemFocused@ImGui@@YA_NXZ
_TEXT	SEGMENT
g$ = 8
tv69 = 212
?IsAnyItemFocused@ImGui@@YA_NXZ PROC			; ImGui::IsAnyItemFocused, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4916
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4917
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4918
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7632], 0
	je	SHORT $LN3@IsAnyItemF
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7710]
	test	eax, eax
	jne	SHORT $LN3@IsAnyItemF
	mov	DWORD PTR tv69[rbp], 1
	jmp	SHORT $LN4@IsAnyItemF
$LN3@IsAnyItemF:
	mov	DWORD PTR tv69[rbp], 0
$LN4@IsAnyItemF:
	movzx	eax, BYTE PTR tv69[rbp]
; Line 4919
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsAnyItemFocused@ImGui@@YA_NXZ ENDP			; ImGui::IsAnyItemFocused
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsAnyItemActive@ImGui@@YA_NXZ
_TEXT	SEGMENT
g$ = 8
tv66 = 212
?IsAnyItemActive@ImGui@@YA_NXZ PROC			; ImGui::IsAnyItemActive, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4910
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4911
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4912
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	je	SHORT $LN3@IsAnyItemA
	mov	DWORD PTR tv66[rbp], 1
	jmp	SHORT $LN4@IsAnyItemA
$LN3@IsAnyItemA:
	mov	DWORD PTR tv66[rbp], 0
$LN4@IsAnyItemA:
	movzx	eax, BYTE PTR tv66[rbp]
; Line 4913
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsAnyItemActive@ImGui@@YA_NXZ ENDP			; ImGui::IsAnyItemActive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsAnyItemHovered@ImGui@@YA_NXZ
_TEXT	SEGMENT
g$ = 8
tv68 = 212
?IsAnyItemHovered@ImGui@@YA_NXZ PROC			; ImGui::IsAnyItemHovered, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4904
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4905
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4906
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7240], 0
	jne	SHORT $LN3@IsAnyItemH
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7244], 0
	jne	SHORT $LN3@IsAnyItemH
	mov	DWORD PTR tv68[rbp], 0
	jmp	SHORT $LN4@IsAnyItemH
$LN3@IsAnyItemH:
	mov	DWORD PTR tv68[rbp], 1
$LN4@IsAnyItemH:
	movzx	eax, BYTE PTR tv68[rbp]
; Line 4907
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsAnyItemHovered@ImGui@@YA_NXZ ENDP			; ImGui::IsAnyItemHovered
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsItemToggledOpen@ImGui@@YA_NXZ
_TEXT	SEGMENT
g$ = 8
tv69 = 212
?IsItemToggledOpen@ImGui@@YA_NXZ PROC			; ImGui::IsItemToggledOpen, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4892
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4893
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4894
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	eax, DWORD PTR [rax+296]
	and	eax, 16
	test	eax, eax
	je	SHORT $LN3@IsItemTogg
	mov	BYTE PTR tv69[rbp], 1
	jmp	SHORT $LN4@IsItemTogg
$LN3@IsItemTogg:
	mov	BYTE PTR tv69[rbp], 0
$LN4@IsItemTogg:
	movzx	eax, BYTE PTR tv69[rbp]
; Line 4895
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsItemToggledOpen@ImGui@@YA_NXZ ENDP			; ImGui::IsItemToggledOpen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsItemDeactivatedAfterEdit@ImGui@@YA_NXZ
_TEXT	SEGMENT
g$ = 8
tv75 = 212
?IsItemDeactivatedAfterEdit@ImGui@@YA_NXZ PROC		; ImGui::IsItemDeactivatedAfterEdit, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4868
$LN7:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4869
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4870
	call	?IsItemDeactivated@ImGui@@YA_NXZ	; ImGui::IsItemDeactivated
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@IsItemDeac
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7325]
	test	eax, eax
	jne	SHORT $LN4@IsItemDeac
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	jne	SHORT $LN3@IsItemDeac
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7276]
	test	eax, eax
	je	SHORT $LN5@IsItemDeac
$LN4@IsItemDeac:
	mov	DWORD PTR tv75[rbp], 1
	jmp	SHORT $LN6@IsItemDeac
$LN5@IsItemDeac:
$LN3@IsItemDeac:
	mov	DWORD PTR tv75[rbp], 0
$LN6@IsItemDeac:
	movzx	eax, BYTE PTR tv75[rbp]
; Line 4871
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsItemDeactivatedAfterEdit@ImGui@@YA_NXZ ENDP		; ImGui::IsItemDeactivatedAfterEdit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsItemDeactivated@ImGui@@YA_NXZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
tv85 = 244
tv73 = 244
?IsItemDeactivated@ImGui@@YA_NXZ PROC			; ImGui::IsItemDeactivated, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4859
$LN8:
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4860
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4861
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 4862
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+296]
	and	eax, 32					; 00000020H
	test	eax, eax
	je	SHORT $LN2@IsItemDeac
; Line 4863
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+296]
	and	eax, 64					; 00000040H
	test	eax, eax
	je	SHORT $LN4@IsItemDeac
	mov	DWORD PTR tv73[rbp], 1
	jmp	SHORT $LN5@IsItemDeac
$LN4@IsItemDeac:
	mov	DWORD PTR tv73[rbp], 0
$LN5@IsItemDeac:
	movzx	eax, BYTE PTR tv73[rbp]
	jmp	SHORT $LN1@IsItemDeac
$LN2@IsItemDeac:
; Line 4864
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+292]
	cmp	DWORD PTR [rax+7320], ecx
	jne	SHORT $LN6@IsItemDeac
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7320], 0
	je	SHORT $LN6@IsItemDeac
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+292]
	cmp	DWORD PTR [rax+7260], ecx
	je	SHORT $LN6@IsItemDeac
	mov	DWORD PTR tv85[rbp], 1
	jmp	SHORT $LN7@IsItemDeac
$LN6@IsItemDeac:
	mov	DWORD PTR tv85[rbp], 0
$LN7@IsItemDeac:
	movzx	eax, BYTE PTR tv85[rbp]
$LN1@IsItemDeac:
; Line 4865
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?IsItemDeactivated@ImGui@@YA_NXZ ENDP			; ImGui::IsItemDeactivated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsItemActivated@ImGui@@YA_NXZ
_TEXT	SEGMENT
g$ = 8
window$1 = 40
?IsItemActivated@ImGui@@YA_NXZ PROC			; ImGui::IsItemActivated, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4847
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4848
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4849
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	je	SHORT $LN2@IsItemActi
; Line 4851
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$1[rbp], rax
; Line 4852
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$1[rbp]
	mov	ecx, DWORD PTR [rcx+292]
	cmp	DWORD PTR [rax+7260], ecx
	jne	SHORT $LN3@IsItemActi
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$1[rbp]
	mov	ecx, DWORD PTR [rcx+292]
	cmp	DWORD PTR [rax+7320], ecx
	je	SHORT $LN3@IsItemActi
; Line 4853
	mov	al, 1
	jmp	SHORT $LN1@IsItemActi
$LN3@IsItemActi:
$LN2@IsItemActi:
; Line 4855
	xor	al, al
$LN1@IsItemActi:
; Line 4856
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?IsItemActivated@ImGui@@YA_NXZ ENDP			; ImGui::IsItemActivated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsItemEdited@ImGui@@YA_NXZ
_TEXT	SEGMENT
window$ = 8
tv69 = 212
?IsItemEdited@ImGui@@YA_NXZ PROC			; ImGui::IsItemEdited, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4928
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4929
	call	?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindowRead
	mov	QWORD PTR window$[rbp], rax
; Line 4930
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+296]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN3@IsItemEdit
	mov	DWORD PTR tv69[rbp], 1
	jmp	SHORT $LN4@IsItemEdit
$LN3@IsItemEdit:
	mov	DWORD PTR tv69[rbp], 0
$LN4@IsItemEdit:
	movzx	eax, BYTE PTR tv69[rbp]
; Line 4931
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsItemEdited@ImGui@@YA_NXZ ENDP			; ImGui::IsItemEdited
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsItemVisible@ImGui@@YA_NXZ
_TEXT	SEGMENT
window$ = 8
tv72 = 216
?IsItemVisible@ImGui@@YA_NXZ PROC			; ImGui::IsItemVisible, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4922
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4923
	call	?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindowRead
	mov	QWORD PTR window$[rbp], rax
; Line 4924
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 592				; 00000250H
	mov	QWORD PTR tv72[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 300				; 0000012cH
	mov	rdx, rax
	mov	rcx, QWORD PTR tv72[rbp]
	call	?Overlaps@ImRect@@QEBA_NAEBU1@@Z	; ImRect::Overlaps
; Line 4925
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsItemVisible@ImGui@@YA_NXZ ENDP			; ImGui::IsItemVisible
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsItemClicked@ImGui@@YA_NH@Z
_TEXT	SEGMENT
tv73 = 192
mouse_button$ = 240
?IsItemClicked@ImGui@@YA_NH@Z PROC			; ImGui::IsItemClicked, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4887
$LN5:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4888
	xor	edx, edx
	mov	ecx, DWORD PTR mouse_button$[rbp]
	call	?IsMouseClicked@ImGui@@YA_NH_N@Z	; ImGui::IsMouseClicked
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@IsItemClic
	xor	ecx, ecx
	call	?IsItemHovered@ImGui@@YA_NH@Z		; ImGui::IsItemHovered
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@IsItemClic
	mov	DWORD PTR tv73[rbp], 1
	jmp	SHORT $LN4@IsItemClic
$LN3@IsItemClic:
	mov	DWORD PTR tv73[rbp], 0
$LN4@IsItemClic:
	movzx	eax, BYTE PTR tv73[rbp]
; Line 4889
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?IsItemClicked@ImGui@@YA_NH@Z ENDP			; ImGui::IsItemClicked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsItemFocused@ImGui@@YA_NXZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
?IsItemFocused@ImGui@@YA_NXZ PROC			; ImGui::IsItemFocused, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4875
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4876
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4877
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 4879
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+292]
	cmp	DWORD PTR [rax+7632], ecx
	jne	SHORT $LN3@IsItemFocu
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7632], 0
	jne	SHORT $LN2@IsItemFocu
$LN3@IsItemFocu:
; Line 4880
	xor	al, al
	jmp	SHORT $LN1@IsItemFocu
$LN2@IsItemFocu:
; Line 4881
	mov	al, 1
$LN1@IsItemFocu:
; Line 4882
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?IsItemFocused@ImGui@@YA_NXZ ENDP			; ImGui::IsItemFocused
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsItemActive@ImGui@@YA_NXZ
_TEXT	SEGMENT
g$ = 8
window$1 = 40
tv71 = 244
?IsItemActive@ImGui@@YA_NXZ PROC			; ImGui::IsItemActive, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4836
$LN6:
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4837
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4838
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	je	SHORT $LN2@IsItemActi
; Line 4840
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$1[rbp], rax
; Line 4841
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$1[rbp]
	mov	ecx, DWORD PTR [rcx+292]
	cmp	DWORD PTR [rax+7260], ecx
	jne	SHORT $LN4@IsItemActi
	mov	DWORD PTR tv71[rbp], 1
	jmp	SHORT $LN5@IsItemActi
$LN4@IsItemActi:
	mov	DWORD PTR tv71[rbp], 0
$LN5@IsItemActi:
	movzx	eax, BYTE PTR tv71[rbp]
	jmp	SHORT $LN1@IsItemActi
$LN2@IsItemActi:
; Line 4843
	xor	al, al
$LN1@IsItemActi:
; Line 4844
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?IsItemActive@ImGui@@YA_NXZ ENDP			; ImGui::IsItemActive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsItemHovered@ImGui@@YA_NH@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
status_flags$ = 68
flags$ = 320
?IsItemHovered@ImGui@@YA_NH@Z PROC			; ImGui::IsItemHovered, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3156
$LN13:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3157
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3158
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 3159
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7711]
	test	eax, eax
	je	SHORT $LN2@IsItemHove
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7710]
	test	eax, eax
	jne	SHORT $LN2@IsItemHove
; Line 3160
	call	?IsItemFocused@ImGui@@YA_NXZ		; ImGui::IsItemFocused
	jmp	$LN1@IsItemHove
$LN2@IsItemHove:
; Line 3163
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+296]
	mov	DWORD PTR status_flags$[rbp], eax
; Line 3164
	mov	eax, DWORD PTR status_flags$[rbp]
	and	eax, 1
	test	eax, eax
	jne	SHORT $LN3@IsItemHove
; Line 3165
	xor	al, al
	jmp	$LN1@IsItemHove
$LN3@IsItemHove:
; Line 3166
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 3
	test	eax, eax
	je	SHORT $LN12@IsItemHove
	mov	eax, DWORD PTR ?__LINE__Var@?0??IsItemHovered@ImGui@@YA_NH@Z@4JA
	add	eax, 10
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1JO@PPIAHLHG@?$AA?$CI?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AAI?$AAm?$AAG?$AAu?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN12@IsItemHove:
; Line 3173
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+7192], rcx
	je	SHORT $LN4@IsItemHove
	mov	eax, DWORD PTR status_flags$[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	SHORT $LN4@IsItemHove
; Line 3174
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 64					; 00000040H
	test	eax, eax
	jne	SHORT $LN5@IsItemHove
; Line 3175
	xor	al, al
	jmp	$LN1@IsItemHove
$LN5@IsItemHove:
$LN4@IsItemHove:
; Line 3178
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN6@IsItemHove
; Line 3179
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	je	SHORT $LN7@IsItemHove
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+292]
	cmp	DWORD PTR [rax+7260], ecx
	je	SHORT $LN7@IsItemHove
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7273]
	test	eax, eax
	jne	SHORT $LN7@IsItemHove
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+84]
	cmp	DWORD PTR [rax+7260], ecx
	je	SHORT $LN7@IsItemHove
; Line 3180
	xor	al, al
	jmp	SHORT $LN1@IsItemHove
$LN7@IsItemHove:
$LN6@IsItemHove:
; Line 3184
	mov	edx, DWORD PTR flags$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?IsWindowContentHoverable@@YA_NPEAUImGuiWindow@@H@Z ; IsWindowContentHoverable
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@IsItemHove
; Line 3185
	xor	al, al
	jmp	SHORT $LN1@IsItemHove
$LN8@IsItemHove:
; Line 3188
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7236]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN9@IsItemHove
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	jne	SHORT $LN9@IsItemHove
; Line 3189
	xor	al, al
	jmp	SHORT $LN1@IsItemHove
$LN9@IsItemHove:
; Line 3193
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+84]
	cmp	DWORD PTR [rax+292], ecx
	jne	SHORT $LN10@IsItemHove
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+144]
	test	eax, eax
	je	SHORT $LN10@IsItemHove
; Line 3194
	xor	al, al
	jmp	SHORT $LN1@IsItemHove
$LN10@IsItemHove:
; Line 3195
	mov	al, 1
$LN1@IsItemHove:
; Line 3196
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?IsItemHovered@ImGui@@YA_NH@Z ENDP			; ImGui::IsItemHovered
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetKeyboardFocusHere@ImGui@@YAXH@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
offset$ = 288
?SetKeyboardFocusHere@ImGui@@YAXH@Z PROC		; ImGui::SetKeyboardFocusHere, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7020
$LN4:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7021
	cmp	DWORD PTR offset$[rbp], -1
	jge	SHORT $LN3@SetKeyboar
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetKeyboardFocusHere@ImGui@@YAXH@Z@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BK@BEOECDF@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA?9?$AA1@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@SetKeyboar:
; Line 7022
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7023
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7024
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax+7976], rcx
; Line 7025
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+444]
	mov	ecx, DWORD PTR offset$[rbp]
	lea	eax, DWORD PTR [rax+rcx+1]
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7992], eax
; Line 7026
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7996], 2147483647	; 7fffffffH
; Line 7027
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?SetKeyboardFocusHere@ImGui@@YAXH@Z ENDP		; ImGui::SetKeyboardFocusHere
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetItemDefaultFocus@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
$T1 = 260
$T2 = 308
$T3 = 340
tv140 = 360
tv138 = 368
?SetItemDefaultFocus@ImGui@@YAXXZ PROC			; ImGui::SetItemDefaultFocus, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7030
$LN7:
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 416				; 000001a0H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7031
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7032
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7033
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+148]
	test	eax, eax
	jne	SHORT $LN2@SetItemDef
; Line 7034
	jmp	$LN1@SetItemDef
$LN2@SetItemDef:
; Line 7035
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR [rcx+920]
	cmp	QWORD PTR [rax+7624], rcx
	jne	$LN3@SetItemDef
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7713]
	test	eax, eax
	jne	SHORT $LN4@SetItemDef
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7716], 0
	je	$LN3@SetItemDef
$LN4@SetItemDef:
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+332]
	cmp	DWORD PTR [rax+7700], ecx
	jne	$LN3@SetItemDef
; Line 7037
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7713], 0
; Line 7038
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+292]
	mov	DWORD PTR [rax+7716], ecx
; Line 7039
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 308				; 00000134H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T2[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv140[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 300				; 0000012cH
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T3[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv138[rbp], rax
	mov	r8, QWORD PTR tv140[rbp]
	mov	rdx, QWORD PTR tv138[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
	mov	rcx, QWORD PTR g$[rbp]
	lea	rdi, QWORD PTR [rcx+7720]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
; Line 7040
	call	?NavUpdateAnyRequestFlag@ImGui@@YAXXZ	; ImGui::NavUpdateAnyRequestFlag
; Line 7041
	call	?IsItemVisible@ImGui@@YA_NXZ		; ImGui::IsItemVisible
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@SetItemDef
; Line 7042
	movss	xmm0, DWORD PTR __real@3f000000
	call	?SetScrollHereY@ImGui@@YAXM@Z		; ImGui::SetScrollHereY
$LN5@SetItemDef:
$LN3@SetItemDef:
$LN1@SetItemDef:
; Line 7044
	lea	rsp, QWORD PTR [rbp+384]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?SetItemDefaultFocus@ImGui@@YAXXZ ENDP			; ImGui::SetItemDefaultFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PopClipRect@ImGui@@YAXXZ
_TEXT	SEGMENT
window$ = 8
$T1 = 228
?PopClipRect@ImGui@@YAXXZ PROC				; ImGui::PopClipRect, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4374
$LN3:
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 304				; 00000130H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4375
	call	?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindow
	mov	QWORD PTR window$[rbp], rax
; Line 4376
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR [rax+688]
	call	?PopClipRect@ImDrawList@@QEAAXXZ	; ImDrawList::PopClipRect
; Line 4377
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	add	rax, 88					; 00000058H
	mov	rcx, rax
	call	?back@?$ImVector@UImVec4@@@@QEAAAEAUImVec4@@XZ ; ImVector<ImVec4>::back
	mov	rdx, rax
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImRect@@QEAA@AEBUImVec4@@@Z		; ImRect::ImRect
	mov	rax, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	lea	rdi, QWORD PTR [rax+592]
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
; Line 4378
	lea	rsp, QWORD PTR [rbp+272]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?PopClipRect@ImGui@@YAXXZ ENDP				; ImGui::PopClipRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushClipRect@ImGui@@YAXAEBUImVec2@@0_N@Z
_TEXT	SEGMENT
window$ = 8
$T1 = 228
tv71 = 264
clip_rect_min$ = 304
clip_rect_max$ = 312
intersect_with_current_clip_rect$ = 320
?PushClipRect@ImGui@@YAXAEBUImVec2@@0_N@Z PROC		; ImGui::PushClipRect, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4367
$LN3:
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 304				; 00000130H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4368
	call	?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindow
	mov	QWORD PTR window$[rbp], rax
; Line 4369
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv71[rbp], rax
	movzx	r9d, BYTE PTR intersect_with_current_clip_rect$[rbp]
	mov	rax, QWORD PTR clip_rect_max$[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR clip_rect_min$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv71[rbp]
	call	?PushClipRect@ImDrawList@@QEAAXUImVec2@@0_N@Z ; ImDrawList::PushClipRect
; Line 4370
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	add	rax, 88					; 00000058H
	mov	rcx, rax
	call	?back@?$ImVector@UImVec4@@@@QEAAAEAUImVec4@@XZ ; ImVector<ImVec4>::back
	mov	rdx, rax
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImRect@@QEAA@AEBUImVec4@@@Z		; ImRect::ImRect
	mov	rax, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	lea	rdi, QWORD PTR [rax+592]
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
; Line 4371
	lea	rsp, QWORD PTR [rbp+272]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?PushClipRect@ImGui@@YAXAEBUImVec2@@0_N@Z ENDP		; ImGui::PushClipRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetDragDropPayload@ImGui@@YAPEBUImGuiPayload@@XZ
_TEXT	SEGMENT
g$ = 8
tv68 = 216
?GetDragDropPayload@ImGui@@YAPEBUImGuiPayload@@XZ PROC	; ImGui::GetDragDropPayload, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10083
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10084
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10085
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8012]
	test	eax, eax
	je	SHORT $LN3@GetDragDro
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8032				; 00001f60H
	mov	QWORD PTR tv68[rbp], rax
	jmp	SHORT $LN4@GetDragDro
$LN3@GetDragDro:
	mov	QWORD PTR tv68[rbp], 0
$LN4@GetDragDro:
	mov	rax, QWORD PTR tv68[rbp]
; Line 10086
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetDragDropPayload@ImGui@@YAPEBUImGuiPayload@@XZ ENDP	; ImGui::GetDragDropPayload
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EndDragDropTarget@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
?EndDragDropTarget@ImGui@@YAXXZ PROC			; ImGui::EndDragDropTarget, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10090
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10091
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10092
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8012]
	test	eax, eax
	jne	SHORT $LN3@EndDragDro
	mov	eax, DWORD PTR ?__LINE__Var@?0??EndDragDropTarget@ImGui@@YAXXZ@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CC@NMCEOFEI@?$AAg?$AA?4?$AAD?$AAr?$AAa?$AAg?$AAD?$AAr?$AAo?$AAp?$AAA?$AAc?$AAt?$AAi?$AAv@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@EndDragDro:
; Line 10093
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8014]
	test	eax, eax
	jne	SHORT $LN4@EndDragDro
	mov	eax, DWORD PTR ?__LINE__Var@?0??EndDragDropTarget@ImGui@@YAXXZ@4JA
	add	eax, 3
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CO@LEPEHAFL@?$AAg?$AA?4?$AAD?$AAr?$AAa?$AAg?$AAD?$AAr?$AAo?$AAp?$AAW?$AAi?$AAt?$AAh?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@EndDragDro:
; Line 10094
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+8014], 0
; Line 10095
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?EndDragDropTarget@ImGui@@YAXXZ ENDP			; ImGui::EndDragDropTarget
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
payload$ = 72
was_accepted_previously$ = 100
r$ = 136
r_surface$ = 180
$T4 = 404
$T5 = 436
$T6 = 468
$T7 = 500
tv190 = 516
tv94 = 516
tv90 = 516
tv179 = 520
tv177 = 528
tv175 = 536
tv173 = 544
__$ArrayPad$ = 552
type$ = 592
flags$ = 600
?AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z PROC ; ImGui::AcceptDragDropPayload, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10046
$LN13:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 624				; 00000270H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 92					; 0000005cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+664]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10047
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10048
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 10049
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8032				; 00001f60H
	mov	QWORD PTR payload$[rbp], rax
; Line 10050
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8012]
	test	eax, eax
	jne	SHORT $LN7@AcceptDrag
	mov	eax, DWORD PTR ?__LINE__Var@?0??AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z@4JA
	add	eax, 4
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CC@NMCEOFEI@?$AAg?$AA?4?$AAD?$AAr?$AAa?$AAg?$AAD?$AAr?$AAo?$AAp?$AAA?$AAc?$AAt?$AAi?$AAv@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@AcceptDrag:
; Line 10051
	mov	rax, QWORD PTR payload$[rbp]
	cmp	DWORD PTR [rax+20], -1
	jne	SHORT $LN8@AcceptDrag
	mov	eax, DWORD PTR ?__LINE__Var@?0??AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z@4JA
	add	eax, 5
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DK@OHFCBLGB@?$AAp?$AAa?$AAy?$AAl?$AAo?$AAa?$AAd?$AA?4?$AAD?$AAa?$AAt?$AAa?$AAF?$AAr?$AAa@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN8@AcceptDrag:
; Line 10052
	cmp	QWORD PTR type$[rbp], 0
	je	SHORT $LN2@AcceptDrag
	mov	rdx, QWORD PTR type$[rbp]
	mov	rcx, QWORD PTR payload$[rbp]
	call	?IsDataType@ImGuiPayload@@QEBA_NPEBD@Z	; ImGuiPayload::IsDataType
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@AcceptDrag
; Line 10053
	xor	eax, eax
	jmp	$LN1@AcceptDrag
$LN2@AcceptDrag:
; Line 10057
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+8112]
	cmp	DWORD PTR [rax+8128], ecx
	jne	SHORT $LN9@AcceptDrag
	mov	BYTE PTR tv90[rbp], 1
	jmp	SHORT $LN10@AcceptDrag
$LN9@AcceptDrag:
	mov	BYTE PTR tv90[rbp], 0
$LN10@AcceptDrag:
	movzx	eax, BYTE PTR tv90[rbp]
	mov	BYTE PTR was_accepted_previously$[rbp], al
; Line 10058
	lea	rax, QWORD PTR r$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rdi, rax
	lea	rsi, QWORD PTR [rcx+8096]
	mov	ecx, 16
	rep movsb
; Line 10059
	lea	rcx, QWORD PTR r$[rbp]
	call	?GetWidth@ImRect@@QEBAMXZ		; ImRect::GetWidth
	movss	DWORD PTR tv94[rbp], xmm0
	lea	rcx, QWORD PTR r$[rbp]
	call	?GetHeight@ImRect@@QEBAMXZ		; ImRect::GetHeight
	movss	xmm1, DWORD PTR tv94[rbp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR r_surface$[rbp], xmm0
; Line 10060
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+8120]
	comiss	xmm0, DWORD PTR r_surface$[rbp]
	jb	SHORT $LN3@AcceptDrag
; Line 10062
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR flags$[rbp]
	mov	DWORD PTR [rax+8116], ecx
; Line 10063
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+8112]
	mov	DWORD PTR [rax+8124], ecx
; Line 10064
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR r_surface$[rbp]
	movss	DWORD PTR [rax+8120], xmm0
$LN3@AcceptDrag:
; Line 10069
	mov	rax, QWORD PTR payload$[rbp]
	movzx	ecx, BYTE PTR was_accepted_previously$[rbp]
	mov	BYTE PTR [rax+57], cl
; Line 10070
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+8016]
	and	eax, 2048				; 00000800H
	mov	ecx, DWORD PTR flags$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR flags$[rbp], eax
; Line 10071
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 2048				; 00000800H
	test	eax, eax
	jne	$LN4@AcceptDrag
	mov	rax, QWORD PTR payload$[rbp]
	movzx	eax, BYTE PTR [rax+57]
	test	eax, eax
	je	$LN4@AcceptDrag
; Line 10072
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv179[rbp], rax
	movss	xmm1, DWORD PTR __real@3f800000
	mov	ecx, 48					; 00000030H
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv177[rbp], eax
	movss	xmm2, DWORD PTR __real@40600000
	movss	xmm1, DWORD PTR __real@40600000
	lea	rcx, QWORD PTR $T4[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r8, rax
	lea	rdx, QWORD PTR r$[rbp+8]
	lea	rcx, QWORD PTR $T5[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv175[rbp], rax
	movss	xmm2, DWORD PTR __real@40600000
	movss	xmm1, DWORD PTR __real@40600000
	lea	rcx, QWORD PTR $T6[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r8, rax
	lea	rdx, QWORD PTR r$[rbp]
	lea	rcx, QWORD PTR $T7[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv173[rbp], rax
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR tv177[rbp]
	mov	r8, QWORD PTR tv175[rbp]
	mov	rdx, QWORD PTR tv173[rbp]
	mov	rcx, QWORD PTR tv179[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
$LN4@AcceptDrag:
; Line 10074
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7056]
	mov	DWORD PTR [rax+8132], ecx
; Line 10075
	movzx	eax, BYTE PTR was_accepted_previously$[rbp]
	test	eax, eax
	je	SHORT $LN11@AcceptDrag
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rax+8024]
	call	?IsMouseDown@ImGui@@YA_NH@Z		; ImGui::IsMouseDown
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN11@AcceptDrag
	mov	DWORD PTR tv190[rbp], 1
	jmp	SHORT $LN12@AcceptDrag
$LN11@AcceptDrag:
	mov	DWORD PTR tv190[rbp], 0
$LN12@AcceptDrag:
	mov	rax, QWORD PTR payload$[rbp]
	movzx	ecx, BYTE PTR tv190[rbp]
	mov	BYTE PTR [rax+58], cl
; Line 10076
	mov	rax, QWORD PTR payload$[rbp]
	movzx	eax, BYTE PTR [rax+58]
	test	eax, eax
	jne	SHORT $LN5@AcceptDrag
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 1024				; 00000400H
	test	eax, eax
	jne	SHORT $LN5@AcceptDrag
; Line 10077
	xor	eax, eax
	jmp	SHORT $LN1@AcceptDrag
$LN5@AcceptDrag:
; Line 10079
	mov	rax, QWORD PTR payload$[rbp]
$LN1@AcceptDrag:
; Line 10080
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:?AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+560]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?AcceptDragDropPayload@ImGui@@YAPEBUImGuiPayload@@PEBDH@Z ENDP ; ImGui::AcceptDragDropPayload
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BeginDragDropTarget@ImGui@@YA_NXZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
hovered_window$ = 72
display_rect$ = 104
id$ = 132
$T1 = 360
tv85 = 376
?BeginDragDropTarget@ImGui@@YA_NXZ PROC			; ImGui::BeginDragDropTarget, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10013
$LN12:
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 416				; 000001a0H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10014
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10015
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8012]
	test	eax, eax
	jne	SHORT $LN2@BeginDragD
; Line 10016
	xor	al, al
	jmp	$LN1@BeginDragD
$LN2@BeginDragD:
; Line 10018
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 10019
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+296]
	and	eax, 1
	test	eax, eax
	jne	SHORT $LN3@BeginDragD
; Line 10020
	xor	al, al
	jmp	$LN1@BeginDragD
$LN3@BeginDragD:
; Line 10021
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7200]
	mov	QWORD PTR hovered_window$[rbp], rax
; Line 10022
	cmp	QWORD PTR hovered_window$[rbp], 0
	je	SHORT $LN5@BeginDragD
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR hovered_window$[rbp]
	mov	rcx, QWORD PTR [rcx+904]
	cmp	QWORD PTR [rax+904], rcx
	je	SHORT $LN4@BeginDragD
$LN5@BeginDragD:
; Line 10023
	xor	al, al
	jmp	$LN1@BeginDragD
$LN4@BeginDragD:
; Line 10025
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+296]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN9@BeginDragD
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 316				; 0000013cH
	mov	QWORD PTR tv85[rbp], rax
	jmp	SHORT $LN10@BeginDragD
$LN9@BeginDragD:
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 300				; 0000012cH
	mov	QWORD PTR tv85[rbp], rax
$LN10@BeginDragD:
	mov	rax, QWORD PTR tv85[rbp]
	mov	QWORD PTR $T1[rbp], rax
	mov	rax, QWORD PTR $T1[rbp]
	mov	QWORD PTR display_rect$[rbp], rax
; Line 10026
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+292]
	mov	DWORD PTR id$[rbp], eax
; Line 10027
	cmp	DWORD PTR id$[rbp], 0
	jne	SHORT $LN6@BeginDragD
; Line 10028
	mov	rdx, QWORD PTR display_rect$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetIDFromRectangle@ImGuiWindow@@QEAAIAEBUImRect@@@Z ; ImGuiWindow::GetIDFromRectangle
	mov	DWORD PTR id$[rbp], eax
$LN6@BeginDragD:
; Line 10029
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	cmp	DWORD PTR [rax+8044], ecx
	jne	SHORT $LN7@BeginDragD
; Line 10030
	xor	al, al
	jmp	SHORT $LN1@BeginDragD
$LN7@BeginDragD:
; Line 10032
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8014]
	test	eax, eax
	je	SHORT $LN11@BeginDragD
	mov	eax, DWORD PTR ?__LINE__Var@?0??BeginDragDropTarget@ImGui@@YA_NXZ@4JA
	add	eax, 19
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EA@CHPNIKA@?$AAg?$AA?4?$AAD?$AAr?$AAa?$AAg?$AAD?$AAr?$AAo?$AAp?$AAW?$AAi?$AAt?$AAh?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN11@BeginDragD:
; Line 10033
	mov	rax, QWORD PTR g$[rbp]
	lea	rdi, QWORD PTR [rax+8096]
	mov	rsi, QWORD PTR display_rect$[rbp]
	mov	ecx, 16
	rep movsb
; Line 10034
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rax+8112], ecx
; Line 10035
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+8014], 1
; Line 10036
	mov	al, 1
$LN1@BeginDragD:
; Line 10037
	lea	rsp, QWORD PTR [rbp+384]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?BeginDragDropTarget@ImGui@@YA_NXZ ENDP			; ImGui::BeginDragDropTarget
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EndDragDropSource@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
?EndDragDropSource@ImGui@@YAXXZ PROC			; ImGui::EndDragDropSource, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 9927
$LN8:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 9928
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 9929
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8012]
	test	eax, eax
	jne	SHORT $LN5@EndDragDro
	mov	eax, DWORD PTR ?__LINE__Var@?0??EndDragDropSource@ImGui@@YAXXZ@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CC@NMCEOFEI@?$AAg?$AA?4?$AAD?$AAr?$AAa?$AAg?$AAD?$AAr?$AAo?$AAp?$AAA?$AAc?$AAt?$AAi?$AAv@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN5@EndDragDro:
; Line 9930
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8013]
	test	eax, eax
	je	SHORT $LN6@EndDragDro
	lea	rax, OFFSET FLAT:??_C@_0CD@GALGOANB@Not?5after?5a?5BeginDragDropSource@
	test	rax, rax
	jne	SHORT $LN7@EndDragDro
$LN6@EndDragDro:
	mov	eax, DWORD PTR ?__LINE__Var@?0??EndDragDropSource@ImGui@@YAXXZ@4JA
	add	eax, 3
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1HO@KPNGOBLC@?$AAg?$AA?4?$AAD?$AAr?$AAa?$AAg?$AAD?$AAr?$AAo?$AAp?$AAW?$AAi?$AAt?$AAh?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@EndDragDro:
; Line 9932
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+8016]
	and	eax, 1
	test	eax, eax
	jne	SHORT $LN2@EndDragDro
; Line 9933
	call	?EndTooltip@ImGui@@YAXXZ		; ImGui::EndTooltip
$LN2@EndDragDro:
; Line 9936
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+8052], -1
	jne	SHORT $LN3@EndDragDro
; Line 9937
	call	?ClearDragDrop@ImGui@@YAXXZ		; ImGui::ClearDragDrop
$LN3@EndDragDro:
; Line 9938
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+8013], 0
; Line 9939
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?EndDragDropSource@ImGui@@YAXXZ ENDP			; ImGui::EndDragDropSource
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetDragDropPayload@ImGui@@YA_NPEBDPEBX_KH@Z
_TEXT	SEGMENT
g$ = 8
payload$ = 40
tv188 = 244
tv194 = 248
tv153 = 248
tv147 = 248
tv195 = 256
type$ = 304
data$ = 312
data_size$ = 320
cond$ = 328
?SetDragDropPayload@ImGui@@YA_NPEBDPEBX_KH@Z PROC	; ImGui::SetDragDropPayload, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 9943
$LN21:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 304				; 00000130H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 9944
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 9945
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8032				; 00001f60H
	mov	QWORD PTR payload$[rbp], rax
; Line 9946
	cmp	DWORD PTR cond$[rbp], 0
	jne	SHORT $LN2@SetDragDro
; Line 9947
	mov	DWORD PTR cond$[rbp], 1
$LN2@SetDragDro:
; Line 9949
	cmp	QWORD PTR type$[rbp], 0
	jne	SHORT $LN10@SetDragDro
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetDragDropPayload@ImGui@@YA_NPEBDPEBX_KH@Z@4JA
	add	eax, 6
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BE@MGJHACMG@?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN10@SetDragDro:
; Line 9950
	mov	rax, QWORD PTR type$[rbp]
	mov	QWORD PTR tv194[rbp], rax
	mov	QWORD PTR tv195[rbp], -1
$LL20@SetDragDro:
	inc	QWORD PTR tv195[rbp]
	mov	rax, QWORD PTR tv194[rbp]
	mov	rcx, QWORD PTR tv195[rbp]
	cmp	BYTE PTR [rax+rcx], 0
	jne	SHORT $LL20@SetDragDro
	mov	rax, QWORD PTR tv195[rbp]
	cmp	rax, 33					; 00000021H
	jae	SHORT $LN11@SetDragDro
	lea	rax, OFFSET FLAT:??_C@_0CP@PLNIIIKE@Payload?5type?5can?5be?5at?5most?532?5@
	test	rax, rax
	jne	SHORT $LN12@SetDragDro
$LN11@SetDragDro:
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetDragDropPayload@ImGui@@YA_NPEBDPEBX_KH@Z@4JA
	add	eax, 7
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BAG@HHAODBGF@?$AAs?$AAt?$AAr?$AAl?$AAe?$AAn?$AA?$CI?$AAt?$AAy?$AAp?$AAe?$AA?$CJ?$AA?5?$AA?$DM?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN12@SetDragDro:
; Line 9951
	cmp	QWORD PTR data$[rbp], 0
	je	SHORT $LN13@SetDragDro
	cmp	QWORD PTR data_size$[rbp], 0
	ja	SHORT $LN15@SetDragDro
$LN13@SetDragDro:
	cmp	QWORD PTR data$[rbp], 0
	jne	SHORT $LN14@SetDragDro
	cmp	QWORD PTR data_size$[rbp], 0
	je	SHORT $LN15@SetDragDro
$LN14@SetDragDro:
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetDragDropPayload@ImGui@@YA_NPEBDPEBX_KH@Z@4JA
	add	eax, 8
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1HM@NCOAFGFM@?$AA?$CI?$AAd?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAd@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN15@SetDragDro:
; Line 9952
	cmp	DWORD PTR cond$[rbp], 1
	je	SHORT $LN16@SetDragDro
	cmp	DWORD PTR cond$[rbp], 2
	je	SHORT $LN16@SetDragDro
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetDragDropPayload@ImGui@@YA_NPEBDPEBX_KH@Z@4JA
	add	eax, 9
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1GG@ONMAEHAO@?$AAc?$AAo?$AAn?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAI?$AAm?$AAG?$AAu?$AAi?$AAC?$AAo@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN16@SetDragDro:
; Line 9953
	mov	rax, QWORD PTR payload$[rbp]
	cmp	DWORD PTR [rax+12], 0
	jne	SHORT $LN17@SetDragDro
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetDragDropPayload@ImGui@@YA_NPEBDPEBX_KH@Z@4JA
	add	eax, 10
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CM@DLJODDMB@?$AAp?$AAa?$AAy?$AAl?$AAo?$AAa?$AAd?$AA?4?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAI@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN17@SetDragDro:
; Line 9955
	cmp	DWORD PTR cond$[rbp], 1
	je	SHORT $LN4@SetDragDro
	mov	rax, QWORD PTR payload$[rbp]
	cmp	DWORD PTR [rax+20], -1
	jne	$LN3@SetDragDro
$LN4@SetDragDro:
; Line 9958
	mov	rax, QWORD PTR payload$[rbp]
	add	rax, 24
	mov	r8d, 33					; 00000021H
	mov	rdx, QWORD PTR type$[rbp]
	mov	rcx, rax
	call	?ImStrncpy@@YAXPEADPEBD_K@Z		; ImStrncpy
; Line 9959
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8144				; 00001fd0H
	mov	QWORD PTR tv147[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv147[rbp]
	call	?resize@?$ImVector@E@@QEAAXH@Z		; ImVector<unsigned char>::resize
; Line 9960
	cmp	QWORD PTR data_size$[rbp], 16
	jbe	SHORT $LN5@SetDragDro
; Line 9963
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8144				; 00001fd0H
	mov	QWORD PTR tv153[rbp], rax
	mov	edx, DWORD PTR data_size$[rbp]
	mov	rcx, QWORD PTR tv153[rbp]
	call	?resize@?$ImVector@E@@QEAAXH@Z		; ImVector<unsigned char>::resize
; Line 9964
	mov	rax, QWORD PTR payload$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+8152]
	mov	QWORD PTR [rax], rcx
; Line 9965
	mov	rax, QWORD PTR payload$[rbp]
	mov	rdi, QWORD PTR [rax]
	mov	rsi, QWORD PTR data$[rbp]
	mov	rcx, QWORD PTR data_size$[rbp]
	rep movsb
; Line 9966
	jmp	SHORT $LN6@SetDragDro
$LN5@SetDragDro:
; Line 9967
	cmp	QWORD PTR data_size$[rbp], 0
	jbe	SHORT $LN7@SetDragDro
; Line 9970
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8160				; 00001fe0H
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb
; Line 9971
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8160				; 00001fe0H
	mov	rcx, QWORD PTR payload$[rbp]
	mov	QWORD PTR [rcx], rax
; Line 9972
	mov	rax, QWORD PTR payload$[rbp]
	mov	rdi, QWORD PTR [rax]
	mov	rsi, QWORD PTR data$[rbp]
	mov	rcx, QWORD PTR data_size$[rbp]
	rep movsb
; Line 9973
	jmp	SHORT $LN8@SetDragDro
$LN7@SetDragDro:
; Line 9976
	mov	rax, QWORD PTR payload$[rbp]
	mov	QWORD PTR [rax], 0
$LN8@SetDragDro:
$LN6@SetDragDro:
; Line 9978
	mov	rax, QWORD PTR payload$[rbp]
	mov	ecx, DWORD PTR data_size$[rbp]
	mov	DWORD PTR [rax+8], ecx
$LN3@SetDragDro:
; Line 9980
	mov	rax, QWORD PTR payload$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7056]
	mov	DWORD PTR [rax+20], ecx
; Line 9982
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7056]
	cmp	DWORD PTR [rax+8132], ecx
	je	SHORT $LN18@SetDragDro
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7056]
	dec	eax
	mov	rcx, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rcx+8132], eax
	je	SHORT $LN18@SetDragDro
	mov	DWORD PTR tv188[rbp], 0
	jmp	SHORT $LN19@SetDragDro
$LN18@SetDragDro:
	mov	DWORD PTR tv188[rbp], 1
$LN19@SetDragDro:
	movzx	eax, BYTE PTR tv188[rbp]
; Line 9983
	lea	rsp, QWORD PTR [rbp+272]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?SetDragDropPayload@ImGui@@YA_NPEBDPEBX_KH@Z ENDP	; ImGui::SetDragDropPayload
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BeginDragDropSource@ImGui@@YA_NH@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
mouse_button$ = 68
source_drag_active$ = 100
source_id$ = 132
source_parent_id$ = 164
is_hovered$1 = 196
payload$2 = 232
tooltip_window$3 = 264
tv141 = 468
flags$ = 512
?BeginDragDropSource@ImGui@@YA_NH@Z PROC		; ImGui::BeginDragDropSource, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 9815
$LN25:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 520				; 00000208H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 9816
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 9817
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 9821
	mov	DWORD PTR mouse_button$[rbp], 0
; Line 9823
	mov	BYTE PTR source_drag_active$[rbp], 0
; Line 9824
	mov	DWORD PTR source_id$[rbp], 0
; Line 9825
	mov	DWORD PTR source_parent_id$[rbp], 0
; Line 9826
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16
	test	eax, eax
	jne	$LN2@BeginDragD
; Line 9828
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+292]
	mov	DWORD PTR source_id$[rbp], eax
; Line 9829
	cmp	DWORD PTR source_id$[rbp], 0
	je	SHORT $LN4@BeginDragD
; Line 9832
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR source_id$[rbp]
	cmp	DWORD PTR [rax+7260], ecx
	je	SHORT $LN6@BeginDragD
; Line 9833
	xor	al, al
	jmp	$LN1@BeginDragD
$LN6@BeginDragD:
; Line 9834
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7316], -1
	je	SHORT $LN7@BeginDragD
; Line 9835
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7316]
	mov	DWORD PTR mouse_button$[rbp], eax
$LN7@BeginDragD:
; Line 9836
	movsxd	rax, DWORD PTR mouse_button$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+304]
	test	eax, eax
	jne	SHORT $LN8@BeginDragD
; Line 9837
	xor	al, al
	jmp	$LN1@BeginDragD
$LN8@BeginDragD:
; Line 9838
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7273], 0
; Line 9839
	jmp	$LN5@BeginDragD
$LN4@BeginDragD:
; Line 9843
	movsxd	rax, DWORD PTR mouse_button$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+304]
	test	eax, eax
	jne	SHORT $LN9@BeginDragD
; Line 9844
	xor	al, al
	jmp	$LN1@BeginDragD
$LN9@BeginDragD:
; Line 9848
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 8
	test	eax, eax
	jne	SHORT $LN10@BeginDragD
; Line 9850
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN23@BeginDragD
	mov	eax, DWORD PTR ?__LINE__Var@?0??BeginDragDropSource@ImGui@@YA_NH@Z@4JA
	add	eax, 35					; 00000023H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN23@BeginDragD:
; Line 9851
	xor	al, al
	jmp	$LN1@BeginDragD
$LN10@BeginDragD:
; Line 9855
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+296]
	and	eax, 1
	test	eax, eax
	jne	SHORT $LN11@BeginDragD
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	je	SHORT $LN12@BeginDragD
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+7304], rcx
	je	SHORT $LN11@BeginDragD
$LN12@BeginDragD:
; Line 9856
	xor	al, al
	jmp	$LN1@BeginDragD
$LN11@BeginDragD:
; Line 9862
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 300				; 0000012cH
	mov	rdx, rax
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetIDFromRectangle@ImGuiWindow@@QEAAIAEBUImRect@@@Z ; ImGuiWindow::GetIDFromRectangle
	mov	DWORD PTR tv141[rbp], eax
	mov	rax, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR tv141[rbp]
	mov	DWORD PTR [rax+292], ecx
	mov	eax, DWORD PTR tv141[rbp]
	mov	DWORD PTR source_id$[rbp], eax
; Line 9863
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 300				; 0000012cH
	mov	edx, DWORD PTR source_id$[rbp]
	mov	rcx, rax
	call	?ItemHoverable@ImGui@@YA_NAEBUImRect@@I@Z ; ImGui::ItemHoverable
	mov	BYTE PTR is_hovered$1[rbp], al
; Line 9864
	movzx	eax, BYTE PTR is_hovered$1[rbp]
	test	eax, eax
	je	SHORT $LN13@BeginDragD
	movsxd	rax, DWORD PTR mouse_button$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1056]
	test	eax, eax
	je	SHORT $LN13@BeginDragD
; Line 9866
	mov	rdx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR source_id$[rbp]
	call	?SetActiveID@ImGui@@YAXIPEAUImGuiWindow@@@Z ; ImGui::SetActiveID
; Line 9867
	mov	rcx, QWORD PTR window$[rbp]
	call	?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::FocusWindow
$LN13@BeginDragD:
; Line 9869
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR source_id$[rbp]
	cmp	DWORD PTR [rax+7260], ecx
	jne	SHORT $LN14@BeginDragD
; Line 9870
	mov	rax, QWORD PTR g$[rbp]
	movzx	ecx, BYTE PTR is_hovered$1[rbp]
	mov	BYTE PTR [rax+7273], cl
$LN14@BeginDragD:
$LN5@BeginDragD:
; Line 9872
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR source_id$[rbp]
	cmp	DWORD PTR [rax+7260], ecx
	je	SHORT $LN15@BeginDragD
; Line 9873
	xor	al, al
	jmp	$LN1@BeginDragD
$LN15@BeginDragD:
; Line 9874
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 200				; 000000c8H
	mov	rcx, rax
	call	?back@?$ImVector@I@@QEAAAEAIXZ		; ImVector<unsigned int>::back
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR source_parent_id$[rbp], eax
; Line 9875
	movss	xmm1, DWORD PTR __real@bf800000
	mov	ecx, DWORD PTR mouse_button$[rbp]
	call	?IsMouseDragging@ImGui@@YA_NHM@Z	; ImGui::IsMouseDragging
	mov	BYTE PTR source_drag_active$[rbp], al
; Line 9878
	call	?SetActiveIdUsingNavAndKeys@ImGui@@YAXXZ ; ImGui::SetActiveIdUsingNavAndKeys
; Line 9879
	jmp	SHORT $LN3@BeginDragD
$LN2@BeginDragD:
; Line 9882
	mov	QWORD PTR window$[rbp], 0
; Line 9883
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, OFFSET FLAT:??_C@_0O@KMAIKFAM@?$CDSourceExtern@
	call	?ImHashStr@@YAIPEBD_KI@Z		; ImHashStr
	mov	DWORD PTR source_id$[rbp], eax
; Line 9884
	mov	BYTE PTR source_drag_active$[rbp], 1
$LN3@BeginDragD:
; Line 9887
	movzx	eax, BYTE PTR source_drag_active$[rbp]
	test	eax, eax
	je	$LN16@BeginDragD
; Line 9889
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8012]
	test	eax, eax
	jne	$LN17@BeginDragD
; Line 9891
	cmp	DWORD PTR source_id$[rbp], 0
	jne	SHORT $LN24@BeginDragD
	mov	eax, DWORD PTR ?__LINE__Var@?0??BeginDragDropSource@ImGui@@YA_NH@Z@4JA
	add	eax, 76					; 0000004cH
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BO@PJLJNAI@?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA_?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN24@BeginDragD:
; Line 9892
	call	?ClearDragDrop@ImGui@@YAXXZ		; ImGui::ClearDragDrop
; Line 9893
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8032				; 00001f60H
	mov	QWORD PTR payload$2[rbp], rax
; Line 9894
	mov	rax, QWORD PTR payload$2[rbp]
	mov	ecx, DWORD PTR source_id$[rbp]
	mov	DWORD PTR [rax+12], ecx
; Line 9895
	mov	rax, QWORD PTR payload$2[rbp]
	mov	ecx, DWORD PTR source_parent_id$[rbp]
	mov	DWORD PTR [rax+16], ecx
; Line 9896
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+8012], 1
; Line 9897
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR flags$[rbp]
	mov	DWORD PTR [rax+8016], ecx
; Line 9898
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR mouse_button$[rbp]
	mov	DWORD PTR [rax+8024], ecx
; Line 9899
	mov	rax, QWORD PTR payload$2[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7260]
	cmp	DWORD PTR [rax+12], ecx
	jne	SHORT $LN18@BeginDragD
; Line 9900
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7274], 1
$LN18@BeginDragD:
$LN17@BeginDragD:
; Line 9902
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7056]
	mov	DWORD PTR [rax+8020], ecx
; Line 9903
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+8013], 1
; Line 9905
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 1
	test	eax, eax
	jne	SHORT $LN19@BeginDragD
; Line 9909
	call	?BeginTooltip@ImGui@@YAXXZ		; ImGui::BeginTooltip
; Line 9910
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+8128], 0
	je	SHORT $LN20@BeginDragD
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+8116]
	and	eax, 4096				; 00001000H
	test	eax, eax
	je	SHORT $LN20@BeginDragD
; Line 9912
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR tooltip_window$3[rbp], rax
; Line 9913
	mov	rax, QWORD PTR tooltip_window$3[rbp]
	mov	BYTE PTR [rax+147], 1
; Line 9914
	mov	rax, QWORD PTR tooltip_window$3[rbp]
	mov	BYTE PTR [rax+176], 1
$LN20@BeginDragD:
$LN19@BeginDragD:
; Line 9918
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 2
	test	eax, eax
	jne	SHORT $LN21@BeginDragD
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16
	test	eax, eax
	jne	SHORT $LN21@BeginDragD
; Line 9919
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+296]
	and	eax, -2
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+296], eax
$LN21@BeginDragD:
; Line 9921
	mov	al, 1
	jmp	SHORT $LN1@BeginDragD
$LN16@BeginDragD:
; Line 9923
	xor	al, al
$LN1@BeginDragD:
; Line 9924
	lea	rsp, QWORD PTR [rbp+488]
	pop	rdi
	pop	rbp
	ret	0
?BeginDragDropSource@ImGui@@YA_NH@Z ENDP		; ImGui::BeginDragDropSource
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LogTextV@ImGui@@YAXPEBDPEAD@Z
_TEXT	SEGMENT
g$ = 8
fmt$ = 256
args$ = 264
?LogTextV@ImGui@@YAXPEBDPEAD@Z PROC			; ImGui::LogTextV, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10132
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10133
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10134
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12476]
	test	eax, eax
	jne	SHORT $LN2@LogTextV
; Line 10135
	jmp	SHORT $LN1@LogTextV
$LN2@LogTextV:
; Line 10137
	mov	r8, QWORD PTR args$[rbp]
	mov	rdx, QWORD PTR fmt$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	call	?LogTextV@@YAXAEAUImGuiContext@@PEBDPEAD@Z ; LogTextV
$LN1@LogTextV:
; Line 10138
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?LogTextV@ImGui@@YAXPEBDPEAD@Z ENDP			; ImGui::LogTextV
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LogText@ImGui@@YAXPEBDZZ
_TEXT	SEGMENT
g$ = 8
args$ = 40
__$ArrayPad$ = 280
fmt$ = 320
?LogText@ImGui@@YAXPEBDZZ PROC				; ImGui::LogText, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10120
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10121
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10122
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12476]
	test	eax, eax
	jne	SHORT $LN2@LogText
; Line 10123
	jmp	SHORT $LN1@LogText
$LN2@LogText:
; Line 10126
	lea	rax, QWORD PTR fmt$[rbp+8]
	mov	QWORD PTR args$[rbp], rax
; Line 10127
	mov	r8, QWORD PTR args$[rbp]
	mov	rdx, QWORD PTR fmt$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	call	?LogTextV@@YAXAEAUImGuiContext@@PEBDPEAD@Z ; LogTextV
; Line 10128
	mov	QWORD PTR args$[rbp], 0
$LN1@LogText:
; Line 10129
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?LogText@ImGui@@YAXPEBDZZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?LogText@ImGui@@YAXPEBDZZ ENDP				; ImGui::LogText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LogButtons@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
log_to_tty$ = 36
log_to_file$ = 68
log_to_clipboard$ = 100
$T1 = 324
$T2 = 356
$T3 = 388
?LogButtons@ImGui@@YAXXZ PROC				; ImGui::LogButtons, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10317
$LN6:
	push	rbp
	push	rdi
	sub	rsp, 472				; 000001d8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10318
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10320
	lea	rcx, OFFSET FLAT:??_C@_0L@DMNDGOCF@LogButtons@
	call	?PushID@ImGui@@YAXPEBD@Z		; ImGui::PushID
; Line 10322
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rdx, rax
	lea	rcx, OFFSET FLAT:??_C@_0L@COILDFG@Log?5To?5TTY@
	call	?Button@ImGui@@YA_NPEBDAEBUImVec2@@@Z	; ImGui::Button
	mov	BYTE PTR log_to_tty$[rbp], al
	movss	xmm1, DWORD PTR __real@bf800000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
; Line 10326
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T2[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rdx, rax
	lea	rcx, OFFSET FLAT:??_C@_0M@KAEBEAHF@Log?5To?5File@
	call	?Button@ImGui@@YA_NPEBDAEBUImVec2@@@Z	; ImGui::Button
	mov	BYTE PTR log_to_file$[rbp], al
	movss	xmm1, DWORD PTR __real@bf800000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
; Line 10327
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T3[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rdx, rax
	lea	rcx, OFFSET FLAT:??_C@_0BB@CPOBJDKM@Log?5To?5Clipboard@
	call	?Button@ImGui@@YA_NPEBDAEBUImVec2@@@Z	; ImGui::Button
	mov	BYTE PTR log_to_clipboard$[rbp], al
	movss	xmm1, DWORD PTR __real@bf800000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
; Line 10328
	xor	ecx, ecx
	call	?PushAllowKeyboardFocus@ImGui@@YAX_N@Z	; ImGui::PushAllowKeyboardFocus
; Line 10329
	movss	xmm0, DWORD PTR __real@42a00000
	call	?SetNextItemWidth@ImGui@@YAXM@Z		; ImGui::SetNextItemWidth
; Line 10330
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12544				; 00003100H
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 9
	xor	r8d, r8d
	mov	rdx, rax
	lea	rcx, OFFSET FLAT:??_C@_0O@CONALMON@Default?5Depth@
	call	?SliderInt@ImGui@@YA_NPEBDPEAHHH0H@Z	; ImGui::SliderInt
; Line 10331
	call	?PopAllowKeyboardFocus@ImGui@@YAXXZ	; ImGui::PopAllowKeyboardFocus
; Line 10332
	call	?PopID@ImGui@@YAXXZ			; ImGui::PopID
; Line 10335
	movzx	eax, BYTE PTR log_to_tty$[rbp]
	test	eax, eax
	je	SHORT $LN2@LogButtons
; Line 10336
	mov	ecx, -1
	call	?LogToTTY@ImGui@@YAXH@Z			; ImGui::LogToTTY
$LN2@LogButtons:
; Line 10337
	movzx	eax, BYTE PTR log_to_file$[rbp]
	test	eax, eax
	je	SHORT $LN3@LogButtons
; Line 10338
	xor	edx, edx
	mov	ecx, -1
	call	?LogToFile@ImGui@@YAXHPEBD@Z		; ImGui::LogToFile
$LN3@LogButtons:
; Line 10339
	movzx	eax, BYTE PTR log_to_clipboard$[rbp]
	test	eax, eax
	je	SHORT $LN4@LogButtons
; Line 10340
	mov	ecx, -1
	call	?LogToClipboard@ImGui@@YAXH@Z		; ImGui::LogToClipboard
$LN4@LogButtons:
; Line 10341
	lea	rsp, QWORD PTR [rbp+424]
	pop	rdi
	pop	rbp
	ret	0
?LogButtons@ImGui@@YAXXZ ENDP				; ImGui::LogButtons
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LogFinish@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
tv69 = 212
?LogFinish@ImGui@@YAXXZ PROC				; ImGui::LogFinish, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10281
$LN13:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10282
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10283
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12476]
	test	eax, eax
	jne	SHORT $LN4@LogFinish
; Line 10284
	jmp	$LN1@LogFinish
$LN4@LogFinish:
; Line 10286
	lea	rcx, OFFSET FLAT:??_C@_02PCIJFNDE@?$AN?6@
	call	?LogText@ImGui@@YAXPEBDZZ		; ImGui::LogText
; Line 10287
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+12480]
	mov	DWORD PTR tv69[rbp], eax
	cmp	DWORD PTR tv69[rbp], 0
	je	SHORT $LN10@LogFinish
	cmp	DWORD PTR tv69[rbp], 1
	je	SHORT $LN5@LogFinish
	cmp	DWORD PTR tv69[rbp], 2
	je	SHORT $LN6@LogFinish
	cmp	DWORD PTR tv69[rbp], 4
	je	SHORT $LN8@LogFinish
	jmp	$LN2@LogFinish
$LN5@LogFinish:
; Line 10291
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+12488]
	call	QWORD PTR __imp_fflush
; Line 10293
	jmp	SHORT $LN2@LogFinish
$LN6@LogFinish:
; Line 10295
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+12488]
	call	?ImFileClose@@YA_NPEAU_iobuf@@@Z	; ImFileClose
; Line 10296
	jmp	SHORT $LN2@LogFinish
; Line 10298
	jmp	SHORT $LN2@LogFinish
$LN8@LogFinish:
; Line 10300
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12496				; 000030d0H
	mov	rcx, rax
	call	?empty@ImGuiTextBuffer@@QEBA_NXZ	; ImGuiTextBuffer::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN9@LogFinish
; Line 10301
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12496				; 000030d0H
	mov	rcx, rax
	call	?begin@ImGuiTextBuffer@@QEBAPEBDXZ	; ImGuiTextBuffer::begin
	mov	rcx, rax
	call	?SetClipboardText@ImGui@@YAXPEBD@Z	; ImGui::SetClipboardText
$LN9@LogFinish:
; Line 10302
	jmp	SHORT $LN2@LogFinish
$LN10@LogFinish:
; Line 10304
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN12@LogFinish
	mov	eax, DWORD PTR ?__LINE__Var@?0??LogFinish@ImGui@@YAXXZ@4JA
	add	eax, 23
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN12@LogFinish:
$LN2@LogFinish:
; Line 10308
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+12476], 0
; Line 10309
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+12480], 0
; Line 10310
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+12488], 0
; Line 10311
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12496				; 000030d0H
	mov	rcx, rax
	call	?clear@ImGuiTextBuffer@@QEAAXXZ		; ImGuiTextBuffer::clear
$LN1@LogFinish:
; Line 10312
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?LogFinish@ImGui@@YAXXZ ENDP				; ImGui::LogFinish
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LogToClipboard@ImGui@@YAXH@Z
_TEXT	SEGMENT
g$ = 8
auto_open_depth$ = 256
?LogToClipboard@ImGui@@YAXH@Z PROC			; ImGui::LogToClipboard, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10265
$LN4:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10266
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10267
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12476]
	test	eax, eax
	je	SHORT $LN2@LogToClipb
; Line 10268
	jmp	SHORT $LN1@LogToClipb
$LN2@LogToClipb:
; Line 10269
	mov	edx, DWORD PTR auto_open_depth$[rbp]
	mov	ecx, 4
	call	?LogBegin@ImGui@@YAXW4ImGuiLogType@@H@Z	; ImGui::LogBegin
$LN1@LogToClipb:
; Line 10270
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?LogToClipboard@ImGui@@YAXH@Z ENDP			; ImGui::LogToClipboard
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LogToFile@ImGui@@YAXHPEBD@Z
_TEXT	SEGMENT
g$ = 8
f$ = 40
auto_open_depth$ = 288
filename$ = 296
?LogToFile@ImGui@@YAXHPEBD@Z PROC			; ImGui::LogToFile, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10240
$LN9:
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10241
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10242
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12476]
	test	eax, eax
	je	SHORT $LN2@LogToFile
; Line 10243
	jmp	$LN1@LogToFile
$LN2@LogToFile:
; Line 10248
	cmp	QWORD PTR filename$[rbp], 0
	jne	SHORT $LN3@LogToFile
; Line 10249
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+40]
	mov	QWORD PTR filename$[rbp], rax
$LN3@LogToFile:
; Line 10250
	cmp	QWORD PTR filename$[rbp], 0
	je	SHORT $LN5@LogToFile
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR filename$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	jne	SHORT $LN4@LogToFile
$LN5@LogToFile:
; Line 10251
	jmp	SHORT $LN1@LogToFile
$LN4@LogToFile:
; Line 10252
	lea	rdx, OFFSET FLAT:??_C@_02BOGAIONP@ab@
	mov	rcx, QWORD PTR filename$[rbp]
	call	?ImFileOpen@@YAPEAU_iobuf@@PEBD0@Z	; ImFileOpen
	mov	QWORD PTR f$[rbp], rax
; Line 10253
	cmp	QWORD PTR f$[rbp], 0
	jne	SHORT $LN6@LogToFile
; Line 10255
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN8@LogToFile
	mov	eax, DWORD PTR ?__LINE__Var@?0??LogToFile@ImGui@@YAXHPEBD@Z@4JA
	add	eax, 15
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN8@LogToFile:
; Line 10256
	jmp	SHORT $LN1@LogToFile
$LN6@LogToFile:
; Line 10259
	mov	edx, DWORD PTR auto_open_depth$[rbp]
	mov	ecx, 2
	call	?LogBegin@ImGui@@YAXW4ImGuiLogType@@H@Z	; ImGui::LogBegin
; Line 10260
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR f$[rbp]
	mov	QWORD PTR [rax+12488], rcx
$LN1@LogToFile:
; Line 10261
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?LogToFile@ImGui@@YAXHPEBD@Z ENDP			; ImGui::LogToFile
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LogToTTY@ImGui@@YAXH@Z
_TEXT	SEGMENT
g$ = 8
auto_open_depth$ = 256
?LogToTTY@ImGui@@YAXH@Z PROC				; ImGui::LogToTTY, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10227
$LN4:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10228
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10229
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12476]
	test	eax, eax
	je	SHORT $LN2@LogToTTY
; Line 10230
	jmp	SHORT $LN1@LogToTTY
$LN2@LogToTTY:
; Line 10233
	mov	edx, DWORD PTR auto_open_depth$[rbp]
	mov	ecx, 1
	call	?LogBegin@ImGui@@YAXW4ImGuiLogType@@H@Z	; ImGui::LogBegin
; Line 10234
	mov	ecx, 1
	call	QWORD PTR __imp___acrt_iob_func
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+12488], rax
$LN1@LogToTTY:
; Line 10236
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?LogToTTY@ImGui@@YAXH@Z ENDP				; ImGui::LogToTTY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsPopupOpen@ImGui@@YA_NPEBDH@Z
_TEXT	SEGMENT
g$ = 8
id$ = 36
tv73 = 244
tv71 = 248
str_id$ = 288
popup_flags$ = 296
?IsPopupOpen@ImGui@@YA_NPEBDH@Z PROC			; ImGui::IsPopupOpen, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8142
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8143
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8144
	mov	eax, DWORD PTR popup_flags$[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN4@IsPopupOpe
	mov	DWORD PTR tv73[rbp], 0
	jmp	SHORT $LN5@IsPopupOpe
$LN4@IsPopupOpe:
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR tv71[rbp], rax
	xor	r8d, r8d
	mov	rdx, QWORD PTR str_id$[rbp]
	mov	rcx, QWORD PTR tv71[rbp]
	call	?GetID@ImGuiWindow@@QEAAIPEBD0@Z	; ImGuiWindow::GetID
	mov	DWORD PTR tv73[rbp], eax
$LN5@IsPopupOpe:
	mov	eax, DWORD PTR tv73[rbp]
	mov	DWORD PTR id$[rbp], eax
; Line 8145
	mov	eax, DWORD PTR popup_flags$[rbp]
	and	eax, 256				; 00000100H
	test	eax, eax
	je	SHORT $LN2@IsPopupOpe
	cmp	DWORD PTR id$[rbp], 0
	je	SHORT $LN2@IsPopupOpe
; Line 8146
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN6@IsPopupOpe
	mov	eax, DWORD PTR ?__LINE__Var@?0??IsPopupOpen@ImGui@@YA_NPEBDH@Z@4JA
	add	eax, 4
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1KI@JIHIJAJC@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAu?$AAs@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@IsPopupOpe:
$LN2@IsPopupOpe:
; Line 8147
	mov	edx, DWORD PTR popup_flags$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	call	?IsPopupOpen@ImGui@@YA_NIH@Z		; ImGui::IsPopupOpen
; Line 8148
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?IsPopupOpen@ImGui@@YA_NPEBDH@Z ENDP			; ImGui::IsPopupOpen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BeginPopupContextVoid@ImGui@@YA_NPEBDH@Z
_TEXT	SEGMENT
window$ = 8
id$ = 36
mouse_button$ = 68
str_id$ = 320
popup_flags$ = 328
?BeginPopupContextVoid@ImGui@@YA_NPEBDH@Z PROC		; ImGui::BeginPopupContextVoid, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8472
$LN6:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8473
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 8474
	cmp	QWORD PTR str_id$[rbp], 0
	jne	SHORT $LN2@BeginPopup
; Line 8475
	lea	rax, OFFSET FLAT:??_C@_0N@OOFNFKBH@void_context@
	mov	QWORD PTR str_id$[rbp], rax
$LN2@BeginPopup:
; Line 8476
	xor	r8d, r8d
	mov	rdx, QWORD PTR str_id$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetID@ImGuiWindow@@QEAAIPEBD0@Z	; ImGuiWindow::GetID
	mov	DWORD PTR id$[rbp], eax
; Line 8477
	mov	eax, DWORD PTR popup_flags$[rbp]
	and	eax, 31
	mov	DWORD PTR mouse_button$[rbp], eax
; Line 8478
	mov	ecx, DWORD PTR mouse_button$[rbp]
	call	?IsMouseReleased@ImGui@@YA_NH@Z		; ImGui::IsMouseReleased
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@BeginPopup
	mov	ecx, 4
	call	?IsWindowHovered@ImGui@@YA_NH@Z		; ImGui::IsWindowHovered
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@BeginPopup
; Line 8479
	call	?GetTopMostPopupModal@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetTopMostPopupModal
	test	rax, rax
	jne	SHORT $LN4@BeginPopup
; Line 8480
	mov	edx, DWORD PTR popup_flags$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	call	?OpenPopupEx@ImGui@@YAXIH@Z		; ImGui::OpenPopupEx
$LN4@BeginPopup:
$LN3@BeginPopup:
; Line 8481
	mov	edx, 321				; 00000141H
	mov	ecx, DWORD PTR id$[rbp]
	call	?BeginPopupEx@ImGui@@YA_NIH@Z		; ImGui::BeginPopupEx
; Line 8482
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?BeginPopupContextVoid@ImGui@@YA_NPEBDH@Z ENDP		; ImGui::BeginPopupContextVoid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BeginPopupContextWindow@ImGui@@YA_NPEBDH@Z
_TEXT	SEGMENT
window$ = 8
id$ = 36
mouse_button$ = 68
str_id$ = 320
popup_flags$ = 328
?BeginPopupContextWindow@ImGui@@YA_NPEBDH@Z PROC	; ImGui::BeginPopupContextWindow, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8459
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8460
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 8461
	cmp	QWORD PTR str_id$[rbp], 0
	jne	SHORT $LN2@BeginPopup
; Line 8462
	lea	rax, OFFSET FLAT:??_C@_0P@DCJGJLLM@window_context@
	mov	QWORD PTR str_id$[rbp], rax
$LN2@BeginPopup:
; Line 8463
	xor	r8d, r8d
	mov	rdx, QWORD PTR str_id$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetID@ImGuiWindow@@QEAAIPEBD0@Z	; ImGuiWindow::GetID
	mov	DWORD PTR id$[rbp], eax
; Line 8464
	mov	eax, DWORD PTR popup_flags$[rbp]
	and	eax, 31
	mov	DWORD PTR mouse_button$[rbp], eax
; Line 8465
	mov	ecx, DWORD PTR mouse_button$[rbp]
	call	?IsMouseReleased@ImGui@@YA_NH@Z		; ImGui::IsMouseReleased
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@BeginPopup
	mov	ecx, 8
	call	?IsWindowHovered@ImGui@@YA_NH@Z		; ImGui::IsWindowHovered
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@BeginPopup
; Line 8466
	mov	eax, DWORD PTR popup_flags$[rbp]
	and	eax, 64					; 00000040H
	test	eax, eax
	je	SHORT $LN5@BeginPopup
	call	?IsAnyItemHovered@ImGui@@YA_NXZ		; ImGui::IsAnyItemHovered
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@BeginPopup
$LN5@BeginPopup:
; Line 8467
	mov	edx, DWORD PTR popup_flags$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	call	?OpenPopupEx@ImGui@@YAXIH@Z		; ImGui::OpenPopupEx
$LN4@BeginPopup:
$LN3@BeginPopup:
; Line 8468
	mov	edx, 321				; 00000141H
	mov	ecx, DWORD PTR id$[rbp]
	call	?BeginPopupEx@ImGui@@YA_NIH@Z		; ImGui::BeginPopupEx
; Line 8469
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?BeginPopupContextWindow@ImGui@@YA_NPEBDH@Z ENDP	; ImGui::BeginPopupContextWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BeginPopupContextItem@ImGui@@YA_NPEBDH@Z
_TEXT	SEGMENT
window$ = 8
id$ = 36
mouse_button$ = 68
tv75 = 276
str_id$ = 320
popup_flags$ = 328
?BeginPopupContextItem@ImGui@@YA_NPEBDH@Z PROC		; ImGui::BeginPopupContextItem, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8446
$LN8:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8447
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 8448
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+147]
	test	eax, eax
	je	SHORT $LN2@BeginPopup
; Line 8449
	xor	al, al
	jmp	$LN1@BeginPopup
$LN2@BeginPopup:
; Line 8450
	cmp	QWORD PTR str_id$[rbp], 0
	je	SHORT $LN5@BeginPopup
	xor	r8d, r8d
	mov	rdx, QWORD PTR str_id$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetID@ImGuiWindow@@QEAAIPEBD0@Z	; ImGuiWindow::GetID
	mov	DWORD PTR tv75[rbp], eax
	jmp	SHORT $LN6@BeginPopup
$LN5@BeginPopup:
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+292]
	mov	DWORD PTR tv75[rbp], eax
$LN6@BeginPopup:
	mov	eax, DWORD PTR tv75[rbp]
	mov	DWORD PTR id$[rbp], eax
; Line 8451
	cmp	DWORD PTR id$[rbp], 0
	jne	SHORT $LN7@BeginPopup
	mov	eax, DWORD PTR ?__LINE__Var@?0??BeginPopupContextItem@ImGui@@YA_NPEBDH@Z@4JA
	add	eax, 5
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BA@DDOODPOM@?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@BeginPopup:
; Line 8452
	mov	eax, DWORD PTR popup_flags$[rbp]
	and	eax, 31
	mov	DWORD PTR mouse_button$[rbp], eax
; Line 8453
	mov	ecx, DWORD PTR mouse_button$[rbp]
	call	?IsMouseReleased@ImGui@@YA_NH@Z		; ImGui::IsMouseReleased
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@BeginPopup
	mov	ecx, 8
	call	?IsItemHovered@ImGui@@YA_NH@Z		; ImGui::IsItemHovered
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@BeginPopup
; Line 8454
	mov	edx, DWORD PTR popup_flags$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	call	?OpenPopupEx@ImGui@@YAXIH@Z		; ImGui::OpenPopupEx
$LN3@BeginPopup:
; Line 8455
	mov	edx, 321				; 00000141H
	mov	ecx, DWORD PTR id$[rbp]
	call	?BeginPopupEx@ImGui@@YA_NIH@Z		; ImGui::BeginPopupEx
$LN1@BeginPopup:
; Line 8456
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?BeginPopupContextItem@ImGui@@YA_NPEBDH@Z ENDP		; ImGui::BeginPopupContextItem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CloseCurrentPopup@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
popup_idx$ = 36
popup_window$1 = 72
parent_popup_window$2 = 104
close_parent$3 = 132
window$4 = 168
tv132 = 376
tv92 = 376
tv76 = 376
tv83 = 384
tv80 = 392
?CloseCurrentPopup@ImGui@@YAXXZ PROC			; ImGui::CloseCurrentPopup, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8297
$LN12:
	push	rbp
	push	rdi
	sub	rsp, 440				; 000001b8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8298
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8299
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7592]
	dec	eax
	mov	DWORD PTR popup_idx$[rbp], eax
; Line 8300
	cmp	DWORD PTR popup_idx$[rbp], 0
	jl	SHORT $LN5@CloseCurre
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7576]
	cmp	DWORD PTR popup_idx$[rbp], eax
	jge	SHORT $LN5@CloseCurre
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7592				; 00001da8H
	mov	QWORD PTR tv76[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv83[rbp], rax
	mov	edx, DWORD PTR popup_idx$[rbp]
	mov	rcx, QWORD PTR tv83[rbp]
	call	??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ; ImVector<ImGuiPopupData>::operator[]
	mov	QWORD PTR tv80[rbp], rax
	mov	edx, DWORD PTR popup_idx$[rbp]
	mov	rcx, QWORD PTR tv76[rbp]
	call	??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ; ImVector<ImGuiPopupData>::operator[]
	mov	rcx, QWORD PTR tv80[rbp]
	mov	ecx, DWORD PTR [rcx]
	cmp	DWORD PTR [rax], ecx
	je	SHORT $LN4@CloseCurre
$LN5@CloseCurre:
; Line 8301
	jmp	$LN1@CloseCurre
$LN4@CloseCurre:
$LN2@CloseCurre:
; Line 8304
	cmp	DWORD PTR popup_idx$[rbp], 0
	jle	$LN3@CloseCurre
; Line 8306
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv92[rbp], rax
	mov	edx, DWORD PTR popup_idx$[rbp]
	mov	rcx, QWORD PTR tv92[rbp]
	call	??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ; ImVector<ImGuiPopupData>::operator[]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR popup_window$1[rbp], rax
; Line 8307
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv132[rbp], rax
	mov	eax, DWORD PTR popup_idx$[rbp]
	dec	eax
	mov	edx, eax
	mov	rcx, QWORD PTR tv132[rbp]
	call	??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ; ImVector<ImGuiPopupData>::operator[]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR parent_popup_window$2[rbp], rax
; Line 8308
	mov	BYTE PTR close_parent$3[rbp], 0
; Line 8309
	cmp	QWORD PTR popup_window$1[rbp], 0
	je	SHORT $LN6@CloseCurre
	mov	rax, QWORD PTR popup_window$1[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 268435456				; 10000000H
	test	eax, eax
	je	SHORT $LN6@CloseCurre
; Line 8310
	cmp	QWORD PTR parent_popup_window$2[rbp], 0
	je	SHORT $LN8@CloseCurre
	mov	rax, QWORD PTR parent_popup_window$2[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 134217728				; 08000000H
	test	eax, eax
	jne	SHORT $LN7@CloseCurre
$LN8@CloseCurre:
; Line 8311
	mov	BYTE PTR close_parent$3[rbp], 1
$LN7@CloseCurre:
$LN6@CloseCurre:
; Line 8312
	movzx	eax, BYTE PTR close_parent$3[rbp]
	test	eax, eax
	jne	SHORT $LN9@CloseCurre
; Line 8313
	jmp	SHORT $LN3@CloseCurre
$LN9@CloseCurre:
; Line 8314
	mov	eax, DWORD PTR popup_idx$[rbp]
	dec	eax
	mov	DWORD PTR popup_idx$[rbp], eax
; Line 8315
	jmp	$LN2@CloseCurre
$LN3@CloseCurre:
; Line 8317
	mov	dl, 1
	mov	ecx, DWORD PTR popup_idx$[rbp]
	call	?ClosePopupToLevel@ImGui@@YAXH_N@Z	; ImGui::ClosePopupToLevel
; Line 8322
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	QWORD PTR window$4[rbp], rax
	cmp	QWORD PTR window$4[rbp], 0
	je	SHORT $LN10@CloseCurre
; Line 8323
	mov	rax, QWORD PTR window$4[rbp]
	mov	BYTE PTR [rax+344], 1
$LN10@CloseCurre:
$LN1@CloseCurre:
; Line 8324
	lea	rsp, QWORD PTR [rbp+408]
	pop	rdi
	pop	rbp
	ret	0
?CloseCurrentPopup@ImGui@@YAXXZ ENDP			; ImGui::CloseCurrentPopup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?OpenPopupOnItemClick@ImGui@@YAXPEBDH@Z
_TEXT	SEGMENT
window$ = 8
mouse_button$ = 36
id$1 = 68
tv81 = 276
str_id$ = 320
popup_flags$ = 328
?OpenPopupOnItemClick@ImGui@@YAXPEBDH@Z PROC		; ImGui::OpenPopupOnItemClick, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8418
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8419
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 8420
	mov	eax, DWORD PTR popup_flags$[rbp]
	and	eax, 31
	mov	DWORD PTR mouse_button$[rbp], eax
; Line 8421
	mov	ecx, DWORD PTR mouse_button$[rbp]
	call	?IsMouseReleased@ImGui@@YA_NH@Z		; ImGui::IsMouseReleased
	movzx	eax, al
	test	eax, eax
	je	$LN2@OpenPopupO
	mov	ecx, 8
	call	?IsItemHovered@ImGui@@YA_NH@Z		; ImGui::IsItemHovered
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@OpenPopupO
; Line 8423
	cmp	QWORD PTR str_id$[rbp], 0
	je	SHORT $LN4@OpenPopupO
	xor	r8d, r8d
	mov	rdx, QWORD PTR str_id$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetID@ImGuiWindow@@QEAAIPEBD0@Z	; ImGuiWindow::GetID
	mov	DWORD PTR tv81[rbp], eax
	jmp	SHORT $LN5@OpenPopupO
$LN4@OpenPopupO:
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+292]
	mov	DWORD PTR tv81[rbp], eax
$LN5@OpenPopupO:
	mov	eax, DWORD PTR tv81[rbp]
	mov	DWORD PTR id$1[rbp], eax
; Line 8424
	cmp	DWORD PTR id$1[rbp], 0
	jne	SHORT $LN6@OpenPopupO
	mov	eax, DWORD PTR ?__LINE__Var@?0??OpenPopupOnItemClick@ImGui@@YAXPEBDH@Z@4JA
	add	eax, 6
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BA@DDOODPOM@?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@OpenPopupO:
; Line 8425
	mov	edx, DWORD PTR popup_flags$[rbp]
	mov	ecx, DWORD PTR id$1[rbp]
	call	?OpenPopupEx@ImGui@@YAXIH@Z		; ImGui::OpenPopupEx
$LN2@OpenPopupO:
; Line 8427
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?OpenPopupOnItemClick@ImGui@@YAXPEBDH@Z ENDP		; ImGui::OpenPopupOnItemClick
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?OpenPopup@ImGui@@YAXIH@Z
_TEXT	SEGMENT
id$ = 224
popup_flags$ = 232
?OpenPopup@ImGui@@YAXIH@Z PROC				; ImGui::OpenPopup, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8167
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8168
	mov	edx, DWORD PTR popup_flags$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	call	?OpenPopupEx@ImGui@@YAXIH@Z		; ImGui::OpenPopupEx
; Line 8169
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?OpenPopup@ImGui@@YAXIH@Z ENDP				; ImGui::OpenPopup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?OpenPopup@ImGui@@YAXPEBDH@Z
_TEXT	SEGMENT
g$ = 8
tv71 = 216
str_id$ = 256
popup_flags$ = 264
?OpenPopup@ImGui@@YAXPEBDH@Z PROC			; ImGui::OpenPopup, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8161
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8162
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8163
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR tv71[rbp], rax
	xor	r8d, r8d
	mov	rdx, QWORD PTR str_id$[rbp]
	mov	rcx, QWORD PTR tv71[rbp]
	call	?GetID@ImGuiWindow@@QEAAIPEBD0@Z	; ImGuiWindow::GetID
	mov	edx, DWORD PTR popup_flags$[rbp]
	mov	ecx, eax
	call	?OpenPopupEx@ImGui@@YAXIH@Z		; ImGui::OpenPopupEx
; Line 8164
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?OpenPopup@ImGui@@YAXPEBDH@Z ENDP			; ImGui::OpenPopup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EndPopup@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
?EndPopup@ImGui@@YAXXZ PROC				; ImGui::EndPopup, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8397
$LN8:
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8398
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8399
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 8400
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	jne	SHORT $LN5@EndPopup
	mov	eax, DWORD PTR ?__LINE__Var@?0??EndPopup@ImGui@@YAXXZ@4JA
	add	eax, 3
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EO@MGPJKAKN@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN5@EndPopup:
; Line 8401
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7592], 0
	jg	SHORT $LN6@EndPopup
	mov	eax, DWORD PTR ?__LINE__Var@?0??EndPopup@ImGui@@YAXXZ@4JA
	add	eax, 4
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DG@NPFLFCJJ@?$AAg?$AA?4?$AAB?$AAe?$AAg?$AAi?$AAn?$AAP?$AAo?$AAp?$AAu?$AAp?$AAS?$AAt?$AAa@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@EndPopup:
; Line 8404
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+7624], rcx
	jne	SHORT $LN2@EndPopup
; Line 8405
	mov	edx, 2
	mov	rcx, QWORD PTR window$[rbp]
	call	?NavMoveRequestTryWrapping@ImGui@@YAXPEAUImGuiWindow@@H@Z ; ImGui::NavMoveRequestTryWrapping
$LN2@EndPopup:
; Line 8408
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7070]
	test	eax, eax
	je	SHORT $LN7@EndPopup
	mov	eax, DWORD PTR ?__LINE__Var@?0??EndPopup@ImGui@@YAXXZ@4JA
	add	eax, 11
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DE@LOOJAFFK@?$AAg?$AA?4?$AAW?$AAi?$AAt?$AAh?$AAi?$AAn?$AAE?$AAn?$AAd?$AAC?$AAh?$AAi?$AAl@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@EndPopup:
; Line 8409
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN3@EndPopup
; Line 8410
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7070], 1
$LN3@EndPopup:
; Line 8411
	call	?End@ImGui@@YAXXZ			; ImGui::End
; Line 8412
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7070], 0
; Line 8413
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?EndPopup@ImGui@@YAXXZ ENDP				; ImGui::EndPopup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BeginPopupModal@ImGui@@YA_NPEBDPEA_NH@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
id$ = 68
viewport$1 = 104
is_open$ = 132
$T2 = 356
$T3 = 388
tv94 = 408
tv92 = 416
name$ = 464
p_open$ = 472
flags$ = 480
?BeginPopupModal@ImGui@@YA_NPEBDPEA_NH@Z PROC		; ImGui::BeginPopupModal, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8365
$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 472				; 000001d8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8366
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8367
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 8368
	xor	r8d, r8d
	mov	rdx, QWORD PTR name$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetID@ImGuiWindow@@QEAAIPEBD0@Z	; ImGuiWindow::GetID
	mov	DWORD PTR id$[rbp], eax
; Line 8369
	xor	edx, edx
	mov	ecx, DWORD PTR id$[rbp]
	call	?IsPopupOpen@ImGui@@YA_NIH@Z		; ImGui::IsPopupOpen
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@BeginPopup
; Line 8371
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7344				; 00001cb0H
	mov	rcx, rax
	call	?ClearFlags@ImGuiNextWindowData@@QEAAXXZ ; ImGuiNextWindowData::ClearFlags
; Line 8372
	xor	al, al
	jmp	$LN1@BeginPopup
$LN2@BeginPopup:
; Line 8378
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7344]
	and	eax, 1
	test	eax, eax
	jne	SHORT $LN3@BeginPopup
; Line 8380
	call	?GetMainViewport@ImGui@@YAPEAUImGuiViewport@@XZ ; ImGui::GetMainViewport
	mov	QWORD PTR viewport$1[rbp], rax
; Line 8381
	movss	xmm2, DWORD PTR __real@3f000000
	movss	xmm1, DWORD PTR __real@3f000000
	lea	rcx, QWORD PTR $T2[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv94[rbp], rax
	lea	rdx, QWORD PTR $T3[rbp]
	mov	rcx, QWORD PTR viewport$1[rbp]
	call	?GetCenter@ImGuiViewport@@QEBA?AUImVec2@@XZ ; ImGuiViewport::GetCenter
	mov	QWORD PTR tv92[rbp], rax
	mov	r8, QWORD PTR tv94[rbp]
	mov	edx, 4
	mov	rcx, QWORD PTR tv92[rbp]
	call	?SetNextWindowPos@ImGui@@YAXAEBUImVec2@@H0@Z ; ImGui::SetNextWindowPos
$LN3@BeginPopup:
; Line 8384
	mov	eax, DWORD PTR flags$[rbp]
	or	eax, 201326624				; 0c000020H
	mov	DWORD PTR flags$[rbp], eax
; Line 8385
	mov	r8d, DWORD PTR flags$[rbp]
	mov	rdx, QWORD PTR p_open$[rbp]
	mov	rcx, QWORD PTR name$[rbp]
	call	?Begin@ImGui@@YA_NPEBDPEA_NH@Z		; ImGui::Begin
	mov	BYTE PTR is_open$[rbp], al
; Line 8386
	movzx	eax, BYTE PTR is_open$[rbp]
	test	eax, eax
	je	SHORT $LN5@BeginPopup
	cmp	QWORD PTR p_open$[rbp], 0
	je	SHORT $LN4@BeginPopup
	mov	rax, QWORD PTR p_open$[rbp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	jne	SHORT $LN4@BeginPopup
$LN5@BeginPopup:
; Line 8388
	call	?EndPopup@ImGui@@YAXXZ			; ImGui::EndPopup
; Line 8389
	movzx	eax, BYTE PTR is_open$[rbp]
	test	eax, eax
	je	SHORT $LN6@BeginPopup
; Line 8390
	mov	dl, 1
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rax+7592]
	call	?ClosePopupToLevel@ImGui@@YAXH_N@Z	; ImGui::ClosePopupToLevel
$LN6@BeginPopup:
; Line 8391
	xor	al, al
	jmp	SHORT $LN1@BeginPopup
$LN4@BeginPopup:
; Line 8393
	movzx	eax, BYTE PTR is_open$[rbp]
$LN1@BeginPopup:
; Line 8394
	lea	rsp, QWORD PTR [rbp+440]
	pop	rdi
	pop	rbp
	ret	0
?BeginPopupModal@ImGui@@YA_NPEBDPEA_NH@Z ENDP		; ImGui::BeginPopupModal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BeginPopup@ImGui@@YA_NPEBDH@Z
_TEXT	SEGMENT
g$ = 8
tv80 = 216
str_id$ = 256
flags$ = 264
?BeginPopup@ImGui@@YA_NPEBDH@Z PROC			; ImGui::BeginPopup, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8351
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8352
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8353
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7592]
	cmp	DWORD PTR [rax+7576], ecx
	jg	SHORT $LN2@BeginPopup
; Line 8355
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7344				; 00001cb0H
	mov	rcx, rax
	call	?ClearFlags@ImGuiNextWindowData@@QEAAXXZ ; ImGuiNextWindowData::ClearFlags
; Line 8356
	xor	al, al
	jmp	SHORT $LN1@BeginPopup
$LN2@BeginPopup:
; Line 8358
	mov	eax, DWORD PTR flags$[rbp]
	or	eax, 321				; 00000141H
	mov	DWORD PTR flags$[rbp], eax
; Line 8359
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR tv80[rbp], rax
	xor	r8d, r8d
	mov	rdx, QWORD PTR str_id$[rbp]
	mov	rcx, QWORD PTR tv80[rbp]
	call	?GetID@ImGuiWindow@@QEAAIPEBD0@Z	; ImGuiWindow::GetID
	mov	edx, DWORD PTR flags$[rbp]
	mov	ecx, eax
	call	?BeginPopupEx@ImGui@@YA_NIH@Z		; ImGui::BeginPopupEx
$LN1@BeginPopup:
; Line 8360
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?BeginPopup@ImGui@@YA_NPEBDH@Z ENDP			; ImGui::BeginPopup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetTooltipV@ImGui@@YAXPEBDPEAD@Z
_TEXT	SEGMENT
fmt$ = 224
args$ = 232
?SetTooltipV@ImGui@@YAXPEBDPEAD@Z PROC			; ImGui::SetTooltipV, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8091
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8092
	mov	edx, 1
	xor	ecx, ecx
	call	?BeginTooltipEx@ImGui@@YAXHH@Z		; ImGui::BeginTooltipEx
; Line 8093
	mov	rdx, QWORD PTR args$[rbp]
	mov	rcx, QWORD PTR fmt$[rbp]
	call	?TextV@ImGui@@YAXPEBDPEAD@Z		; ImGui::TextV
; Line 8094
	call	?EndTooltip@ImGui@@YAXXZ		; ImGui::EndTooltip
; Line 8095
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?SetTooltipV@ImGui@@YAXPEBDPEAD@Z ENDP			; ImGui::SetTooltipV
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetTooltip@ImGui@@YAXPEBDZZ
_TEXT	SEGMENT
args$ = 8
__$ArrayPad$ = 248
fmt$ = 288
?SetTooltip@ImGui@@YAXPEBDZZ PROC			; ImGui::SetTooltip, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8098
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 18
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8100
	lea	rax, QWORD PTR fmt$[rbp+8]
	mov	QWORD PTR args$[rbp], rax
; Line 8101
	mov	rdx, QWORD PTR args$[rbp]
	mov	rcx, QWORD PTR fmt$[rbp]
	call	?SetTooltipV@ImGui@@YAXPEBDPEAD@Z	; ImGui::SetTooltipV
; Line 8102
	mov	QWORD PTR args$[rbp], 0
; Line 8103
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?SetTooltip@ImGui@@YAXPEBDZZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?SetTooltip@ImGui@@YAXPEBDZZ ENDP			; ImGui::SetTooltip
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EndTooltip@ImGui@@YAXXZ
_TEXT	SEGMENT
?EndTooltip@ImGui@@YAXXZ PROC				; ImGui::EndTooltip, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8085
$LN4:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8086
	call	?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindowRead
	mov	eax, DWORD PTR [rax+12]
	and	eax, 33554432				; 02000000H
	test	eax, eax
	jne	SHORT $LN3@EndTooltip
	mov	eax, DWORD PTR ?__LINE__Var@?0??EndTooltip@ImGui@@YAXXZ@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1HC@IKPEGHCP@?$AAG?$AAe?$AAt?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@EndTooltip:
; Line 8087
	call	?End@ImGui@@YAXXZ			; ImGui::End
; Line 8088
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?EndTooltip@ImGui@@YAXXZ ENDP				; ImGui::EndTooltip
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BeginTooltip@ImGui@@YAXXZ
_TEXT	SEGMENT
?BeginTooltip@ImGui@@YAXXZ PROC				; ImGui::BeginTooltip, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8048
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8049
	xor	edx, edx
	xor	ecx, ecx
	call	?BeginTooltipEx@ImGui@@YAXHH@Z		; ImGui::BeginTooltipEx
; Line 8050
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?BeginTooltip@ImGui@@YAXXZ ENDP				; ImGui::BeginTooltip
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetID@ImGui@@YAIPEBX@Z
_TEXT	SEGMENT
window$ = 8
ptr_id$ = 256
?GetID@ImGui@@YAIPEBX@Z PROC				; ImGui::GetID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7132
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7133
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7134
	mov	rdx, QWORD PTR ptr_id$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetID@ImGuiWindow@@QEAAIPEBX@Z		; ImGuiWindow::GetID
; Line 7135
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetID@ImGui@@YAIPEBX@Z ENDP				; ImGui::GetID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetID@ImGui@@YAIPEBD0@Z
_TEXT	SEGMENT
window$ = 8
str_id_begin$ = 256
str_id_end$ = 264
?GetID@ImGui@@YAIPEBD0@Z PROC				; ImGui::GetID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7126
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7127
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7128
	mov	r8, QWORD PTR str_id_end$[rbp]
	mov	rdx, QWORD PTR str_id_begin$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetID@ImGuiWindow@@QEAAIPEBD0@Z	; ImGuiWindow::GetID
; Line 7129
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetID@ImGui@@YAIPEBD0@Z ENDP				; ImGui::GetID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetID@ImGui@@YAIPEBD@Z
_TEXT	SEGMENT
window$ = 8
str_id$ = 256
?GetID@ImGui@@YAIPEBD@Z PROC				; ImGui::GetID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7120
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7121
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7122
	xor	r8d, r8d
	mov	rdx, QWORD PTR str_id$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetID@ImGuiWindow@@QEAAIPEBD0@Z	; ImGuiWindow::GetID
; Line 7123
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetID@ImGui@@YAIPEBD@Z ENDP				; ImGui::GetID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PopID@ImGui@@YAXXZ
_TEXT	SEGMENT
window$ = 8
?PopID@ImGui@@YAXXZ PROC				; ImGui::PopID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7113
$LN4:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7114
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7115
	mov	rax, QWORD PTR window$[rbp]
	cmp	DWORD PTR [rax+200], 1
	jg	SHORT $LN3@PopID
	mov	eax, DWORD PTR ?__LINE__Var@?0??PopID@ImGui@@YAXXZ@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DC@KOOPJPAL@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAI?$AAD?$AAS?$AAt?$AAa?$AAc?$AAk@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@PopID:
; Line 7116
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 200				; 000000c8H
	mov	rcx, rax
	call	?pop_back@?$ImVector@I@@QEAAXXZ		; ImVector<unsigned int>::pop_back
; Line 7117
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?PopID@ImGui@@YAXXZ ENDP				; ImGui::PopID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushID@ImGui@@YAXH@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
id$ = 68
tv72 = 280
__$ArrayPad$ = 288
int_id$ = 336
?PushID@ImGui@@YAXH@Z PROC				; ImGui::PushID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7083
$LN3:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+376]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7084
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7085
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7086
	mov	edx, DWORD PTR int_id$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetIDNoKeepAlive@ImGuiWindow@@QEAAIH@Z	; ImGuiWindow::GetIDNoKeepAlive
	mov	DWORD PTR id$[rbp], eax
; Line 7087
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 200				; 000000c8H
	mov	QWORD PTR tv72[rbp], rax
	lea	rdx, QWORD PTR id$[rbp]
	mov	rcx, QWORD PTR tv72[rbp]
	call	?push_back@?$ImVector@I@@QEAAXAEBI@Z	; ImVector<unsigned int>::push_back
; Line 7088
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?PushID@ImGui@@YAXH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
?PushID@ImGui@@YAXH@Z ENDP				; ImGui::PushID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushID@ImGui@@YAXPEBX@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
id$ = 68
tv72 = 280
__$ArrayPad$ = 288
ptr_id$ = 336
?PushID@ImGui@@YAXPEBX@Z PROC				; ImGui::PushID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7075
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+376]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7076
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7077
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7078
	mov	rdx, QWORD PTR ptr_id$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetIDNoKeepAlive@ImGuiWindow@@QEAAIPEBX@Z ; ImGuiWindow::GetIDNoKeepAlive
	mov	DWORD PTR id$[rbp], eax
; Line 7079
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 200				; 000000c8H
	mov	QWORD PTR tv72[rbp], rax
	lea	rdx, QWORD PTR id$[rbp]
	mov	rcx, QWORD PTR tv72[rbp]
	call	?push_back@?$ImVector@I@@QEAAXAEBI@Z	; ImVector<unsigned int>::push_back
; Line 7080
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?PushID@ImGui@@YAXPEBX@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
?PushID@ImGui@@YAXPEBX@Z ENDP				; ImGui::PushID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushID@ImGui@@YAXPEBD0@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
id$ = 68
tv73 = 280
__$ArrayPad$ = 288
str_id_begin$ = 336
str_id_end$ = 344
?PushID@ImGui@@YAXPEBD0@Z PROC				; ImGui::PushID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7067
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+376]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7068
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7069
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7070
	mov	r8, QWORD PTR str_id_end$[rbp]
	mov	rdx, QWORD PTR str_id_begin$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetIDNoKeepAlive@ImGuiWindow@@QEAAIPEBD0@Z ; ImGuiWindow::GetIDNoKeepAlive
	mov	DWORD PTR id$[rbp], eax
; Line 7071
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 200				; 000000c8H
	mov	QWORD PTR tv73[rbp], rax
	lea	rdx, QWORD PTR id$[rbp]
	mov	rcx, QWORD PTR tv73[rbp]
	call	?push_back@?$ImVector@I@@QEAAXAEBI@Z	; ImVector<unsigned int>::push_back
; Line 7072
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?PushID@ImGui@@YAXPEBD0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
?PushID@ImGui@@YAXPEBD0@Z ENDP				; ImGui::PushID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushID@ImGui@@YAXPEBD@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
id$ = 68
tv73 = 280
__$ArrayPad$ = 288
str_id$ = 336
?PushID@ImGui@@YAXPEBD@Z PROC				; ImGui::PushID, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7059
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+376]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7060
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7061
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7062
	xor	r8d, r8d
	mov	rdx, QWORD PTR str_id$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetIDNoKeepAlive@ImGuiWindow@@QEAAIPEBD0@Z ; ImGuiWindow::GetIDNoKeepAlive
	mov	DWORD PTR id$[rbp], eax
; Line 7063
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 200				; 000000c8H
	mov	QWORD PTR tv73[rbp], rax
	lea	rdx, QWORD PTR id$[rbp]
	mov	rcx, QWORD PTR tv73[rbp]
	call	?push_back@?$ImVector@I@@QEAAXAEBI@Z	; ImVector<unsigned int>::push_back
; Line 7064
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?PushID@ImGui@@YAXPEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
?PushID@ImGui@@YAXPEBD@Z ENDP				; ImGui::PushID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetFrameHeightWithSpacing@ImGui@@YAMXZ
_TEXT	SEGMENT
g$ = 8
?GetFrameHeightWithSpacing@ImGui@@YAMXZ PROC		; ImGui::GetFrameHeightWithSpacing, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7697
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7698
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7699
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5532]
	mulss	xmm0, DWORD PTR __real@40000000
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+6528]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR g$[rbp]
	addss	xmm0, DWORD PTR [rax+5548]
; Line 7700
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetFrameHeightWithSpacing@ImGui@@YAMXZ ENDP		; ImGui::GetFrameHeightWithSpacing
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetFrameHeight@ImGui@@YAMXZ
_TEXT	SEGMENT
g$ = 8
?GetFrameHeight@ImGui@@YAMXZ PROC			; ImGui::GetFrameHeight, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7691
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7692
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7693
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5532]
	mulss	xmm0, DWORD PTR __real@40000000
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+6528]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
; Line 7694
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetFrameHeight@ImGui@@YAMXZ ENDP			; ImGui::GetFrameHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetTextLineHeightWithSpacing@ImGui@@YAMXZ
_TEXT	SEGMENT
g$ = 8
?GetTextLineHeightWithSpacing@ImGui@@YAMXZ PROC		; ImGui::GetTextLineHeightWithSpacing, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7685
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7686
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7687
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+6528]
	addss	xmm0, DWORD PTR [rcx+5548]
; Line 7688
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetTextLineHeightWithSpacing@ImGui@@YAMXZ ENDP		; ImGui::GetTextLineHeightWithSpacing
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetTextLineHeight@ImGui@@YAMXZ
_TEXT	SEGMENT
g$ = 8
?GetTextLineHeight@ImGui@@YAMXZ PROC			; ImGui::GetTextLineHeight, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7679
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7680
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7681
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+6528]
; Line 7682
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetTextLineHeight@ImGui@@YAMXZ ENDP			; ImGui::GetTextLineHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetCursorScreenPos@ImGui@@YAXAEBUImVec2@@@Z
_TEXT	SEGMENT
window$ = 8
$T1 = 228
pos$ = 288
?SetCursorScreenPos@ImGui@@YAXAEBUImVec2@@@Z PROC	; ImGui::SetCursorScreenPos, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7524
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7525
	call	?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindow
	mov	QWORD PTR window$[rbp], rax
; Line 7526
	mov	rax, QWORD PTR pos$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+216], rax
; Line 7527
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 216				; 000000d8H
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 240				; 000000f0H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T1[rbp]
	call	?ImMax@@YA?AUImVec2@@AEBU1@0@Z		; ImMax
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+240], rax
; Line 7528
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?SetCursorScreenPos@ImGui@@YAXAEBUImVec2@@@Z ENDP	; ImGui::SetCursorScreenPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetCursorScreenPos@ImGui@@YA?AUImVec2@@XZ
_TEXT	SEGMENT
window$ = 8
__$ReturnUdt$ = 256
?GetCursorScreenPos@ImGui@@YA?AUImVec2@@XZ PROC		; ImGui::GetCursorScreenPos, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7518
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7519
	call	?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindowRead
	mov	QWORD PTR window$[rbp], rax
; Line 7520
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+216]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 7521
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetCursorScreenPos@ImGui@@YA?AUImVec2@@XZ ENDP		; ImGui::GetCursorScreenPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetCursorStartPos@ImGui@@YA?AUImVec2@@XZ
_TEXT	SEGMENT
window$ = 8
__$ReturnUdt$ = 256
?GetCursorStartPos@ImGui@@YA?AUImVec2@@XZ PROC		; ImGui::GetCursorStartPos, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7572
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7573
	call	?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindowRead
	mov	QWORD PTR window$[rbp], rax
; Line 7574
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 232				; 000000e8H
	mov	r8, rax
	mov	rdx, rcx
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 7575
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetCursorStartPos@ImGui@@YA?AUImVec2@@XZ ENDP		; ImGui::GetCursorStartPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetCursorPosY@ImGui@@YAXM@Z
_TEXT	SEGMENT
window$ = 8
y$ = 256
?SetCursorPosY@ImGui@@YAXM@Z PROC			; ImGui::SetCursorPosY, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7565
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7566
	call	?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindow
	mov	QWORD PTR window$[rbp], rax
; Line 7567
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+20]
	subss	xmm0, DWORD PTR [rcx+96]
	addss	xmm0, DWORD PTR y$[rbp]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+220], xmm0
; Line 7568
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+220]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+244]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+244], xmm0
; Line 7569
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetCursorPosY@ImGui@@YAXM@Z ENDP			; ImGui::SetCursorPosY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetCursorPosX@ImGui@@YAXM@Z
_TEXT	SEGMENT
window$ = 8
x$ = 256
?SetCursorPosX@ImGui@@YAXM@Z PROC			; ImGui::SetCursorPosX, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7558
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7559
	call	?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindow
	mov	QWORD PTR window$[rbp], rax
; Line 7560
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	subss	xmm0, DWORD PTR [rcx+92]
	addss	xmm0, DWORD PTR x$[rbp]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+216], xmm0
; Line 7561
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+216]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+240]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+240], xmm0
; Line 7562
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetCursorPosX@ImGui@@YAXM@Z ENDP			; ImGui::SetCursorPosX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetCursorPos@ImGui@@YAXAEBUImVec2@@@Z
_TEXT	SEGMENT
window$ = 8
$T1 = 228
$T2 = 260
$T3 = 292
local_pos$ = 352
?SetCursorPos@ImGui@@YAXAEBUImVec2@@@Z PROC		; ImGui::SetCursorPos, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7551
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7552
	call	?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindow
	mov	QWORD PTR window$[rbp], rax
; Line 7553
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 92					; 0000005cH
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 16
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T1[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	r8, QWORD PTR local_pos$[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+216], rax
; Line 7554
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 216				; 000000d8H
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 240				; 000000f0H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T3[rbp]
	call	?ImMax@@YA?AUImVec2@@AEBU1@0@Z		; ImMax
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+240], rax
; Line 7555
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?SetCursorPos@ImGui@@YAXAEBUImVec2@@@Z ENDP		; ImGui::SetCursorPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetCursorPosY@ImGui@@YAMXZ
_TEXT	SEGMENT
window$ = 8
?GetCursorPosY@ImGui@@YAMXZ PROC			; ImGui::GetCursorPosY, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7545
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7546
	call	?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindowRead
	mov	QWORD PTR window$[rbp], rax
; Line 7547
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+220]
	subss	xmm0, DWORD PTR [rcx+20]
	mov	rax, QWORD PTR window$[rbp]
	addss	xmm0, DWORD PTR [rax+96]
; Line 7548
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetCursorPosY@ImGui@@YAMXZ ENDP			; ImGui::GetCursorPosY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetCursorPosX@ImGui@@YAMXZ
_TEXT	SEGMENT
window$ = 8
?GetCursorPosX@ImGui@@YAMXZ PROC			; ImGui::GetCursorPosX, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7539
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7540
	call	?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindowRead
	mov	QWORD PTR window$[rbp], rax
; Line 7541
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+216]
	subss	xmm0, DWORD PTR [rcx+16]
	mov	rax, QWORD PTR window$[rbp]
	addss	xmm0, DWORD PTR [rax+92]
; Line 7542
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetCursorPosX@ImGui@@YAMXZ ENDP			; ImGui::GetCursorPosX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetCursorPos@ImGui@@YA?AUImVec2@@XZ
_TEXT	SEGMENT
window$ = 8
$T1 = 228
tv66 = 248
__$ReturnUdt$ = 288
?GetCursorPos@ImGui@@YA?AUImVec2@@XZ PROC		; ImGui::GetCursorPos, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7533
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7534
	call	?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindowRead
	mov	QWORD PTR window$[rbp], rax
; Line 7535
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 92					; 0000005cH
	mov	QWORD PTR tv66[rbp], rax
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 16
	mov	rdx, QWORD PTR window$[rbp]
	add	rdx, 216				; 000000d8H
	mov	r8, rcx
	lea	rcx, QWORD PTR $T1[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rcx, QWORD PTR tv66[rbp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 7536
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?GetCursorPos@ImGui@@YA?AUImVec2@@XZ ENDP		; ImGui::GetCursorPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EndGroup@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
group_data$ = 72
group_bb$ = 104
group_contains_curr_active_id$ = 148
group_contains_prev_active_id$ = 180
group_contains_curr_hovered_id$ = 212
$T4 = 436
$T5 = 468
$T6 = 500
tv215 = 516
tv197 = 516
tv190 = 516
__$ArrayPad$ = 520
?EndGroup@ImGui@@YAXXZ PROC				; ImGui::EndGroup, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7781
$LN19:
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 560				; 00000230H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7782
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7783
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7784
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7560], 0
	jg	SHORT $LN11@EndGroup
	mov	eax, DWORD PTR ?__LINE__Var@?0??EndGroup@ImGui@@YAXXZ@4JA
	add	eax, 3
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CM@HMCHNBOE@?$AAg?$AA?4?$AAG?$AAr?$AAo?$AAu?$AAp?$AAS?$AAt?$AAa?$AAc?$AAk?$AA?4?$AAS?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN11@EndGroup:
; Line 7786
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7560				; 00001d88H
	mov	rcx, rax
	call	?back@?$ImVector@UImGuiGroupData@@@@QEAAAEAUImGuiGroupData@@XZ ; ImVector<ImGuiGroupData>::back
	mov	QWORD PTR group_data$[rbp], rax
; Line 7787
	mov	rax, QWORD PTR group_data$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+8]
	cmp	DWORD PTR [rax], ecx
	je	SHORT $LN12@EndGroup
	mov	eax, DWORD PTR ?__LINE__Var@?0??EndGroup@ImGui@@YAXXZ@4JA
	add	eax, 6
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EE@BNODPOAB@?$AAg?$AAr?$AAo?$AAu?$AAp?$AA_?$AAd?$AAa?$AAt?$AAa?$AA?4?$AAW?$AAi?$AAn?$AAd@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN12@EndGroup:
; Line 7789
	mov	rax, QWORD PTR group_data$[rbp]
	add	rax, 4
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 240				; 000000f0H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T4[rbp]
	call	?ImMax@@YA?AUImVec2@@AEBU1@0@Z		; ImMax
	mov	rcx, QWORD PTR group_data$[rbp]
	add	rcx, 4
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR group_bb$[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
; Line 7791
	mov	rax, QWORD PTR group_data$[rbp]
	mov	rax, QWORD PTR [rax+4]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+216], rax
; Line 7792
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 240				; 000000f0H
	mov	rcx, QWORD PTR group_data$[rbp]
	add	rcx, 12
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T5[rbp]
	call	?ImMax@@YA?AUImVec2@@AEBU1@0@Z		; ImMax
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+240], rax
; Line 7793
	mov	rax, QWORD PTR group_data$[rbp]
	mov	eax, DWORD PTR [rax+20]
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+280], eax
; Line 7794
	mov	rax, QWORD PTR group_data$[rbp]
	mov	eax, DWORD PTR [rax+24]
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+288], eax
; Line 7795
	mov	rax, QWORD PTR group_data$[rbp]
	mov	rax, QWORD PTR [rax+28]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+256], rax
; Line 7796
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR group_data$[rbp]
	movss	xmm0, DWORD PTR [rcx+36]
	movss	DWORD PTR [rax+272], xmm0
; Line 7797
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12476]
	test	eax, eax
	je	SHORT $LN2@EndGroup
; Line 7798
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR __real@ff7fffff
	movss	DWORD PTR [rax+12528], xmm0
$LN2@EndGroup:
; Line 7800
	mov	rax, QWORD PTR group_data$[rbp]
	movzx	eax, BYTE PTR [rax+46]
	test	eax, eax
	jne	SHORT $LN3@EndGroup
; Line 7802
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7560				; 00001d88H
	mov	rcx, rax
	call	?pop_back@?$ImVector@UImGuiGroupData@@@@QEAAXXZ ; ImVector<ImGuiGroupData>::pop_back
; Line 7803
	jmp	$LN1@EndGroup
$LN3@EndGroup:
; Line 7806
	mov	rax, QWORD PTR group_data$[rbp]
	movss	xmm1, DWORD PTR [rax+36]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+276]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+272], xmm0
; Line 7807
	lea	rdx, QWORD PTR $T6[rbp]
	lea	rcx, QWORD PTR group_bb$[rbp]
	call	?GetSize@ImRect@@QEBA?AUImVec2@@XZ	; ImRect::GetSize
	movss	xmm1, DWORD PTR __real@bf800000
	mov	rcx, rax
	call	?ItemSize@ImGui@@YAXAEBUImVec2@@M@Z	; ImGui::ItemSize
; Line 7808
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR group_bb$[rbp]
	call	?ItemAdd@ImGui@@YA_NAEBUImRect@@IPEBU2@H@Z ; ImGui::ItemAdd
; Line 7814
	mov	rax, QWORD PTR group_data$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7260]
	cmp	DWORD PTR [rax+40], ecx
	je	SHORT $LN13@EndGroup
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7260]
	cmp	DWORD PTR [rax+7264], ecx
	jne	SHORT $LN13@EndGroup
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	je	SHORT $LN13@EndGroup
	mov	BYTE PTR tv190[rbp], 1
	jmp	SHORT $LN14@EndGroup
$LN13@EndGroup:
	mov	BYTE PTR tv190[rbp], 0
$LN14@EndGroup:
	movzx	eax, BYTE PTR tv190[rbp]
	mov	BYTE PTR group_contains_curr_active_id$[rbp], al
; Line 7815
	mov	rax, QWORD PTR group_data$[rbp]
	movzx	eax, BYTE PTR [rax+44]
	test	eax, eax
	jne	SHORT $LN15@EndGroup
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7324]
	cmp	eax, 1
	jne	SHORT $LN15@EndGroup
	mov	BYTE PTR tv197[rbp], 1
	jmp	SHORT $LN16@EndGroup
$LN15@EndGroup:
	mov	BYTE PTR tv197[rbp], 0
$LN16@EndGroup:
	movzx	eax, BYTE PTR tv197[rbp]
	mov	BYTE PTR group_contains_prev_active_id$[rbp], al
; Line 7816
	movzx	eax, BYTE PTR group_contains_curr_active_id$[rbp]
	test	eax, eax
	je	SHORT $LN4@EndGroup
; Line 7817
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7260]
	mov	DWORD PTR [rax+292], ecx
	jmp	SHORT $LN5@EndGroup
$LN4@EndGroup:
; Line 7818
	movzx	eax, BYTE PTR group_contains_prev_active_id$[rbp]
	test	eax, eax
	je	SHORT $LN6@EndGroup
; Line 7819
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7320]
	mov	DWORD PTR [rax+292], ecx
$LN6@EndGroup:
$LN5@EndGroup:
; Line 7820
	mov	rax, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR group_bb$[rbp]
	lea	rdi, QWORD PTR [rax+300]
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
; Line 7823
	mov	rax, QWORD PTR group_data$[rbp]
	movzx	eax, BYTE PTR [rax+45]
	test	eax, eax
	jne	SHORT $LN17@EndGroup
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7240], 0
	je	SHORT $LN17@EndGroup
	mov	BYTE PTR tv215[rbp], 1
	jmp	SHORT $LN18@EndGroup
$LN17@EndGroup:
	mov	BYTE PTR tv215[rbp], 0
$LN18@EndGroup:
	movzx	eax, BYTE PTR tv215[rbp]
	mov	BYTE PTR group_contains_curr_hovered_id$[rbp], al
; Line 7824
	movzx	eax, BYTE PTR group_contains_curr_hovered_id$[rbp]
	test	eax, eax
	je	SHORT $LN7@EndGroup
; Line 7825
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+296]
	bts	eax, 7
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+296], eax
$LN7@EndGroup:
; Line 7828
	movzx	eax, BYTE PTR group_contains_curr_active_id$[rbp]
	test	eax, eax
	je	SHORT $LN8@EndGroup
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7277]
	test	eax, eax
	je	SHORT $LN8@EndGroup
; Line 7829
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+296]
	or	eax, 4
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+296], eax
$LN8@EndGroup:
; Line 7832
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+296]
	or	eax, 32					; 00000020H
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+296], eax
; Line 7833
	movzx	eax, BYTE PTR group_contains_prev_active_id$[rbp]
	test	eax, eax
	je	SHORT $LN9@EndGroup
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7320]
	cmp	DWORD PTR [rax+7260], ecx
	je	SHORT $LN9@EndGroup
; Line 7834
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+296]
	or	eax, 64					; 00000040H
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+296], eax
$LN9@EndGroup:
; Line 7836
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7560				; 00001d88H
	mov	rcx, rax
	call	?pop_back@?$ImVector@UImGuiGroupData@@@@QEAAXXZ ; ImVector<ImGuiGroupData>::pop_back
$LN1@EndGroup:
; Line 7838
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?EndGroup@ImGui@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+528]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?EndGroup@ImGui@@YAXXZ ENDP				; ImGui::EndGroup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BeginGroup@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
group_data$ = 72
$T1 = 292
tv138 = 308
tv72 = 312
?BeginGroup@ImGui@@YAXXZ PROC				; ImGui::BeginGroup, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7754
$LN6:
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7755
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7756
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7758
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7560				; 00001d88H
	mov	QWORD PTR tv72[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7560]
	inc	eax
	mov	edx, eax
	mov	rcx, QWORD PTR tv72[rbp]
	call	?resize@?$ImVector@UImGuiGroupData@@@@QEAAXH@Z ; ImVector<ImGuiGroupData>::resize
; Line 7759
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7560				; 00001d88H
	mov	rcx, rax
	call	?back@?$ImVector@UImGuiGroupData@@@@QEAAAEAUImGuiGroupData@@XZ ; ImVector<ImGuiGroupData>::back
	mov	QWORD PTR group_data$[rbp], rax
; Line 7760
	mov	rax, QWORD PTR group_data$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+8]
	mov	DWORD PTR [rax], ecx
; Line 7761
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+216]
	mov	rcx, QWORD PTR group_data$[rbp]
	mov	QWORD PTR [rcx+4], rax
; Line 7762
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+240]
	mov	rcx, QWORD PTR group_data$[rbp]
	mov	QWORD PTR [rcx+12], rax
; Line 7763
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+280]
	mov	rcx, QWORD PTR group_data$[rbp]
	mov	DWORD PTR [rcx+20], eax
; Line 7764
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+288]
	mov	rcx, QWORD PTR group_data$[rbp]
	mov	DWORD PTR [rcx+24], eax
; Line 7765
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+256]
	mov	rcx, QWORD PTR group_data$[rbp]
	mov	QWORD PTR [rcx+28], rax
; Line 7766
	mov	rax, QWORD PTR group_data$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rcx+272]
	movss	DWORD PTR [rax+36], xmm0
; Line 7767
	mov	rax, QWORD PTR group_data$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7264]
	mov	DWORD PTR [rax+40], ecx
; Line 7768
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7240], 0
	je	SHORT $LN4@BeginGroup
	mov	DWORD PTR tv138[rbp], 1
	jmp	SHORT $LN5@BeginGroup
$LN4@BeginGroup:
	mov	DWORD PTR tv138[rbp], 0
$LN5@BeginGroup:
	mov	rax, QWORD PTR group_data$[rbp]
	movzx	ecx, BYTE PTR tv138[rbp]
	mov	BYTE PTR [rax+45], cl
; Line 7769
	mov	rax, QWORD PTR group_data$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	ecx, BYTE PTR [rcx+7324]
	mov	BYTE PTR [rax+44], cl
; Line 7770
	mov	rax, QWORD PTR group_data$[rbp]
	mov	BYTE PTR [rax+46], 1
; Line 7772
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+216]
	subss	xmm0, DWORD PTR [rcx+16]
	mov	rax, QWORD PTR window$[rbp]
	subss	xmm0, DWORD PTR [rax+284]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+288], xmm0
; Line 7773
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+288]
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+280], eax
; Line 7774
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+216]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+240], rax
; Line 7775
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+256], rax
; Line 7776
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12476]
	test	eax, eax
	je	SHORT $LN2@BeginGroup
; Line 7777
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR __real@ff7fffff
	movss	DWORD PTR [rax+12528], xmm0
$LN2@BeginGroup:
; Line 7778
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?BeginGroup@ImGui@@YAXXZ ENDP				; ImGui::BeginGroup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Unindent@ImGui@@YAXM@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
tv71 = 244
indent_w$ = 288
?Unindent@ImGui@@YAXM@Z PROC				; ImGui::Unindent, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7586
$LN6:
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7587
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7588
	call	?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindow
	mov	QWORD PTR window$[rbp], rax
; Line 7589
	movss	xmm0, DWORD PTR indent_w$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN5@Unindent
	je	SHORT $LN3@Unindent
$LN5@Unindent:
	movss	xmm0, DWORD PTR indent_w$[rbp]
	movss	DWORD PTR tv71[rbp], xmm0
	jmp	SHORT $LN4@Unindent
$LN3@Unindent:
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5576]
	movss	DWORD PTR tv71[rbp], xmm0
$LN4@Unindent:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+280]
	subss	xmm0, DWORD PTR tv71[rbp]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+280], xmm0
; Line 7590
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	addss	xmm0, DWORD PTR [rcx+280]
	mov	rax, QWORD PTR window$[rbp]
	addss	xmm0, DWORD PTR [rax+284]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+216], xmm0
; Line 7591
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?Unindent@ImGui@@YAXM@Z ENDP				; ImGui::Unindent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Indent@ImGui@@YAXM@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
tv71 = 244
indent_w$ = 288
?Indent@ImGui@@YAXM@Z PROC				; ImGui::Indent, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7578
$LN6:
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7579
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7580
	call	?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindow
	mov	QWORD PTR window$[rbp], rax
; Line 7581
	movss	xmm0, DWORD PTR indent_w$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN5@Indent
	je	SHORT $LN3@Indent
$LN5@Indent:
	movss	xmm0, DWORD PTR indent_w$[rbp]
	movss	DWORD PTR tv71[rbp], xmm0
	jmp	SHORT $LN4@Indent
$LN3@Indent:
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5576]
	movss	DWORD PTR tv71[rbp], xmm0
$LN4@Indent:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+280]
	addss	xmm0, DWORD PTR tv71[rbp]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+280], xmm0
; Line 7582
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	addss	xmm0, DWORD PTR [rcx+280]
	mov	rax, QWORD PTR window$[rbp]
	addss	xmm0, DWORD PTR [rax+284]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+216], xmm0
; Line 7583
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?Indent@ImGui@@YAXM@Z ENDP				; ImGui::Indent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SameLine@ImGui@@YAXMM@Z
_TEXT	SEGMENT
window$ = 8
g$ = 40
offset_from_start_x$ = 288
spacing_w$ = 296
?SameLine@ImGui@@YAXMM@Z PROC				; ImGui::SameLine, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7495
$LN9:
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7496
	call	?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindow
	mov	QWORD PTR window$[rbp], rax
; Line 7497
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+147]
	test	eax, eax
	je	SHORT $LN2@SameLine
; Line 7498
	jmp	$LN1@SameLine
$LN2@SameLine:
; Line 7500
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7501
	movss	xmm0, DWORD PTR offset_from_start_x$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN8@SameLine
	je	SHORT $LN3@SameLine
$LN8@SameLine:
; Line 7503
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR spacing_w$[rbp]
	jbe	SHORT $LN5@SameLine
	xorps	xmm0, xmm0
	movss	DWORD PTR spacing_w$[rbp], xmm0
$LN5@SameLine:
; Line 7504
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	subss	xmm0, DWORD PTR [rcx+92]
	addss	xmm0, DWORD PTR offset_from_start_x$[rbp]
	addss	xmm0, DWORD PTR spacing_w$[rbp]
	mov	rax, QWORD PTR window$[rbp]
	addss	xmm0, DWORD PTR [rax+288]
	mov	rax, QWORD PTR window$[rbp]
	addss	xmm0, DWORD PTR [rax+284]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+216], xmm0
; Line 7505
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rcx+228]
	movss	DWORD PTR [rax+220], xmm0
; Line 7506
	jmp	SHORT $LN4@SameLine
$LN3@SameLine:
; Line 7509
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR spacing_w$[rbp]
	jbe	SHORT $LN6@SameLine
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5544]
	movss	DWORD PTR spacing_w$[rbp], xmm0
$LN6@SameLine:
; Line 7510
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+224]
	addss	xmm0, DWORD PTR spacing_w$[rbp]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+216], xmm0
; Line 7511
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rcx+228]
	movss	DWORD PTR [rax+220], xmm0
$LN4@SameLine:
; Line 7513
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+264]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+256], rax
; Line 7514
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rcx+276]
	movss	DWORD PTR [rax+272], xmm0
$LN1@SameLine:
; Line 7515
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?SameLine@ImGui@@YAXMM@Z ENDP				; ImGui::SameLine
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetStyleColorVec4@ImGui@@YAAEBUImVec4@@H@Z
_TEXT	SEGMENT
style$ = 8
idx$ = 256
?GetStyleColorVec4@ImGui@@YAAEBUImVec4@@H@Z PROC	; ImGui::GetStyleColorVec4, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2453
$LN3:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2454
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	add	rax, 5472				; 00001560H
	mov	QWORD PTR style$[rbp], rax
; Line 2455
	movsxd	rax, DWORD PTR idx$[rbp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR style$[rbp]
	lea	rax, QWORD PTR [rcx+rax+196]
; Line 2456
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetStyleColorVec4@ImGui@@YAAEBUImVec4@@H@Z ENDP	; ImGui::GetStyleColorVec4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetColorU32@ImGui@@YAII@Z
_TEXT	SEGMENT
style$ = 8
a$ = 36
col$ = 288
?GetColorU32@ImGui@@YAII@Z PROC				; ImGui::GetColorU32, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2459
$LN4:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2460
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	add	rax, 5472				; 00001560H
	mov	QWORD PTR style$[rbp], rax
; Line 2461
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rax]
	comiss	xmm0, DWORD PTR __real@3f800000
	jb	SHORT $LN2@GetColorU3
; Line 2462
	mov	eax, DWORD PTR col$[rbp]
	jmp	SHORT $LN1@GetColorU3
$LN2@GetColorU3:
; Line 2463
	mov	eax, DWORD PTR col$[rbp]
	and	eax, -16777216				; ff000000H
	shr	eax, 24
	mov	DWORD PTR a$[rbp], eax
; Line 2464
	mov	eax, DWORD PTR a$[rbp]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR style$[rbp]
	mulss	xmm0, DWORD PTR [rax]
	cvttss2si rax, xmm0
	mov	DWORD PTR a$[rbp], eax
; Line 2465
	mov	eax, DWORD PTR col$[rbp]
	and	eax, 16777215				; 00ffffffH
	mov	ecx, DWORD PTR a$[rbp]
	shl	ecx, 24
	or	eax, ecx
$LN1@GetColorU3:
; Line 2466
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?GetColorU32@ImGui@@YAII@Z ENDP				; ImGui::GetColorU32
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetColorU32@ImGui@@YAIAEBUImVec4@@@Z
_TEXT	SEGMENT
style$ = 8
c$ = 40
__$ArrayPad$ = 264
col$ = 304
?GetColorU32@ImGui@@YAIAEBUImVec4@@@Z PROC		; ImGui::GetColorU32, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2445
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 304				; 00000130H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 20
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+344]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2446
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	add	rax, 5472				; 00001560H
	mov	QWORD PTR style$[rbp], rax
; Line 2447
	lea	rax, QWORD PTR c$[rbp]
	mov	rdi, rax
	mov	rsi, QWORD PTR col$[rbp]
	mov	ecx, 16
	rep movsb
; Line 2448
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR c$[rbp+12]
	mulss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR c$[rbp+12], xmm0
; Line 2449
	lea	rcx, QWORD PTR c$[rbp]
	call	?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z ; ImGui::ColorConvertFloat4ToU32
; Line 2450
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?GetColorU32@ImGui@@YAIAEBUImVec4@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+272]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?GetColorU32@ImGui@@YAIAEBUImVec4@@@Z ENDP		; ImGui::GetColorU32
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetColorU32@ImGui@@YAIHM@Z
_TEXT	SEGMENT
style$ = 8
c$ = 40
__$ArrayPad$ = 264
idx$ = 304
alpha_mul$ = 312
?GetColorU32@ImGui@@YAIHM@Z PROC			; ImGui::GetColorU32, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2437
$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 304				; 00000130H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 20
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+344]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2438
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	add	rax, 5472				; 00001560H
	mov	QWORD PTR style$[rbp], rax
; Line 2439
	movsxd	rax, DWORD PTR idx$[rbp]
	imul	rax, rax, 16
	lea	rcx, QWORD PTR c$[rbp]
	mov	rdx, QWORD PTR style$[rbp]
	mov	rdi, rcx
	lea	rsi, QWORD PTR [rdx+rax+196]
	mov	ecx, 16
	rep movsb
; Line 2440
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR alpha_mul$[rbp]
	movss	xmm1, DWORD PTR c$[rbp+12]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR c$[rbp+12], xmm0
; Line 2441
	lea	rcx, QWORD PTR c$[rbp]
	call	?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z ; ImGui::ColorConvertFloat4ToU32
; Line 2442
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?GetColorU32@ImGui@@YAIHM@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+272]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?GetColorU32@ImGui@@YAIHM@Z ENDP			; ImGui::GetColorU32
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetFontTexUvWhitePixel@ImGui@@YA?AUImVec2@@XZ
_TEXT	SEGMENT
__$ReturnUdt$ = 224
?GetFontTexUvWhitePixel@ImGui@@YA?AUImVec2@@XZ PROC	; ImGui::GetFontTexUvWhitePixel, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6983
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6984
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+6536]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 6985
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetFontTexUvWhitePixel@ImGui@@YA?AUImVec2@@XZ ENDP	; ImGui::GetFontTexUvWhitePixel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetFontSize@ImGui@@YAMXZ
_TEXT	SEGMENT
?GetFontSize@ImGui@@YAMXZ PROC				; ImGui::GetFontSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6978
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6979
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	movss	xmm0, DWORD PTR [rax+6528]
; Line 6980
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetFontSize@ImGui@@YAMXZ ENDP				; ImGui::GetFontSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetFont@ImGui@@YAPEAUImFont@@XZ
_TEXT	SEGMENT
?GetFont@ImGui@@YAPEAUImFont@@XZ PROC			; ImGui::GetFont, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6973
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6974
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+6520]
; Line 6975
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetFont@ImGui@@YAPEAUImFont@@XZ ENDP			; ImGui::GetFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PopTextWrapPos@ImGui@@YAXXZ
_TEXT	SEGMENT
window$ = 8
?PopTextWrapPos@ImGui@@YAXXZ PROC			; ImGui::PopTextWrapPos, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6640
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6641
	call	?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindow
	mov	QWORD PTR window$[rbp], rax
; Line 6642
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 480				; 000001e0H
	mov	rcx, rax
	call	?back@?$ImVector@M@@QEAAAEAMXZ		; ImVector<float>::back
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR [rcx+456], xmm0
; Line 6643
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 480				; 000001e0H
	mov	rcx, rax
	call	?pop_back@?$ImVector@M@@QEAAXXZ		; ImVector<float>::pop_back
; Line 6644
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?PopTextWrapPos@ImGui@@YAXXZ ENDP			; ImGui::PopTextWrapPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushTextWrapPos@ImGui@@YAXM@Z
_TEXT	SEGMENT
window$ = 8
tv72 = 216
wrap_pos_x$ = 256
?PushTextWrapPos@ImGui@@YAXM@Z PROC			; ImGui::PushTextWrapPos, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6633
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6634
	call	?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindow
	mov	QWORD PTR window$[rbp], rax
; Line 6635
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 480				; 000001e0H
	mov	QWORD PTR tv72[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 456				; 000001c8H
	mov	rdx, rax
	mov	rcx, QWORD PTR tv72[rbp]
	call	?push_back@?$ImVector@M@@QEAAXAEBM@Z	; ImVector<float>::push_back
; Line 6636
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR wrap_pos_x$[rbp]
	movss	DWORD PTR [rax+456], xmm0
; Line 6637
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?PushTextWrapPos@ImGui@@YAXM@Z ENDP			; ImGui::PushTextWrapPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CalcItemWidth@ImGui@@YAMXZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
w$ = 68
region_max_x$1 = 100
$T2 = 324
?CalcItemWidth@ImGui@@YAMXZ PROC			; ImGui::CalcItemWidth, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7636
$LN6:
	push	rbp
	push	rdi
	sub	rsp, 408				; 00000198H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7637
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7638
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7640
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7456]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@CalcItemWi
; Line 7641
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7460]
	movss	DWORD PTR w$[rbp], xmm0
	jmp	SHORT $LN3@CalcItemWi
$LN2@CalcItemWi:
; Line 7643
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+452]
	movss	DWORD PTR w$[rbp], xmm0
$LN3@CalcItemWi:
; Line 7644
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR w$[rbp]
	jbe	SHORT $LN4@CalcItemWi
; Line 7646
	lea	rcx, QWORD PTR $T2[rbp]
	call	?GetContentRegionMaxAbs@ImGui@@YA?AUImVec2@@XZ ; ImGui::GetContentRegionMaxAbs
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR region_max_x$1[rbp], xmm0
; Line 7647
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR region_max_x$1[rbp]
	subss	xmm0, DWORD PTR [rax+216]
	addss	xmm0, DWORD PTR w$[rbp]
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR w$[rbp], xmm0
$LN4@CalcItemWi:
; Line 7649
	cvttss2si eax, DWORD PTR w$[rbp]
	cvtsi2ss xmm0, eax
	movss	DWORD PTR w$[rbp], xmm0
; Line 7650
	movss	xmm0, DWORD PTR w$[rbp]
; Line 7651
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?CalcItemWidth@ImGui@@YAMXZ ENDP			; ImGui::CalcItemWidth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetNextItemWidth@ImGui@@YAXM@Z
_TEXT	SEGMENT
g$ = 8
item_width$ = 256
?SetNextItemWidth@ImGui@@YAXM@Z PROC			; ImGui::SetNextItemWidth, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7595
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7596
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7597
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7456]
	or	eax, 1
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7456], eax
; Line 7598
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR item_width$[rbp]
	movss	DWORD PTR [rax+7460], xmm0
; Line 7599
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetNextItemWidth@ImGui@@YAXM@Z ENDP			; ImGui::SetNextItemWidth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PopItemWidth@ImGui@@YAXXZ
_TEXT	SEGMENT
window$ = 8
?PopItemWidth@ImGui@@YAXXZ PROC				; ImGui::PopItemWidth, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7627
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7628
	call	?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindow
	mov	QWORD PTR window$[rbp], rax
; Line 7629
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 464				; 000001d0H
	mov	rcx, rax
	call	?back@?$ImVector@M@@QEAAAEAMXZ		; ImVector<float>::back
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR [rcx+452], xmm0
; Line 7630
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 464				; 000001d0H
	mov	rcx, rax
	call	?pop_back@?$ImVector@M@@QEAAXXZ		; ImVector<float>::pop_back
; Line 7631
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?PopItemWidth@ImGui@@YAXXZ ENDP				; ImGui::PopItemWidth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushItemWidth@ImGui@@YAXM@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
tv77 = 244
tv72 = 248
item_width$ = 288
?PushItemWidth@ImGui@@YAXM@Z PROC			; ImGui::PushItemWidth, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7603
$LN5:
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7604
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7605
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7606
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 464				; 000001d0H
	mov	QWORD PTR tv72[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 452				; 000001c4H
	mov	rdx, rax
	mov	rcx, QWORD PTR tv72[rbp]
	call	?push_back@?$ImVector@M@@QEAAXAEBM@Z	; ImVector<float>::push_back
; Line 7607
	movss	xmm0, DWORD PTR item_width$[rbp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN3@PushItemWi
	jne	SHORT $LN3@PushItemWi
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+640]
	movss	DWORD PTR tv77[rbp], xmm0
	jmp	SHORT $LN4@PushItemWi
$LN3@PushItemWi:
	movss	xmm0, DWORD PTR item_width$[rbp]
	movss	DWORD PTR tv77[rbp], xmm0
$LN4@PushItemWi:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR tv77[rbp]
	movss	DWORD PTR [rax+452], xmm0
; Line 7608
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7456]
	and	eax, -2
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7456], eax
; Line 7609
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?PushItemWidth@ImGui@@YAXM@Z ENDP			; ImGui::PushItemWidth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PopButtonRepeat@ImGui@@YAXXZ
_TEXT	SEGMENT
?PopButtonRepeat@ImGui@@YAXXZ PROC			; ImGui::PopButtonRepeat, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6628
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6629
	call	?PopItemFlag@ImGui@@YAXXZ		; ImGui::PopItemFlag
; Line 6630
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?PopButtonRepeat@ImGui@@YAXXZ ENDP			; ImGui::PopButtonRepeat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushButtonRepeat@ImGui@@YAX_N@Z
_TEXT	SEGMENT
repeat$ = 224
?PushButtonRepeat@ImGui@@YAX_N@Z PROC			; ImGui::PushButtonRepeat, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6623
$LN3:
	mov	BYTE PTR [rsp+8], cl
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6624
	movzx	edx, BYTE PTR repeat$[rbp]
	mov	ecx, 2
	call	?PushItemFlag@ImGui@@YAXH_N@Z		; ImGui::PushItemFlag
; Line 6625
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?PushButtonRepeat@ImGui@@YAX_N@Z ENDP			; ImGui::PushButtonRepeat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PopAllowKeyboardFocus@ImGui@@YAXXZ
_TEXT	SEGMENT
?PopAllowKeyboardFocus@ImGui@@YAXXZ PROC		; ImGui::PopAllowKeyboardFocus, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6618
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6619
	call	?PopItemFlag@ImGui@@YAXXZ		; ImGui::PopItemFlag
; Line 6620
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?PopAllowKeyboardFocus@ImGui@@YAXXZ ENDP		; ImGui::PopAllowKeyboardFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushAllowKeyboardFocus@ImGui@@YAX_N@Z
_TEXT	SEGMENT
tv66 = 192
allow_keyboard_focus$ = 240
?PushAllowKeyboardFocus@ImGui@@YAX_N@Z PROC		; ImGui::PushAllowKeyboardFocus, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6613
$LN5:
	mov	BYTE PTR [rsp+8], cl
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6614
	movzx	eax, BYTE PTR allow_keyboard_focus$[rbp]
	test	eax, eax
	jne	SHORT $LN3@PushAllowK
	mov	BYTE PTR tv66[rbp], 1
	jmp	SHORT $LN4@PushAllowK
$LN3@PushAllowK:
	mov	BYTE PTR tv66[rbp], 0
$LN4@PushAllowK:
	movzx	edx, BYTE PTR tv66[rbp]
	mov	ecx, 1
	call	?PushItemFlag@ImGui@@YAXH_N@Z		; ImGui::PushItemFlag
; Line 6615
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?PushAllowKeyboardFocus@ImGui@@YAX_N@Z ENDP		; ImGui::PushAllowKeyboardFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PopStyleVar@ImGui@@YAXH@Z
_TEXT	SEGMENT
g$ = 8
backup$1 = 40
info$2 = 72
data$3 = 104
count$ = 352
?PopStyleVar@ImGui@@YAXH@Z PROC				; ImGui::PopStyleVar, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2573
$LN8:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2574
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
$LN2@PopStyleVa:
; Line 2575
	cmp	DWORD PTR count$[rbp], 0
	jle	$LN3@PopStyleVa
; Line 2578
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7496				; 00001d48H
	mov	rcx, rax
	call	?back@?$ImVector@UImGuiStyleMod@@@@QEAAAEAUImGuiStyleMod@@XZ ; ImVector<ImGuiStyleMod>::back
	mov	QWORD PTR backup$1[rbp], rax
; Line 2579
	mov	rax, QWORD PTR backup$1[rbp]
	mov	ecx, DWORD PTR [rax]
	call	?GetStyleVarInfo@@YAPEBUImGuiStyleVarInfo@@H@Z ; GetStyleVarInfo
	mov	QWORD PTR info$2[rbp], rax
; Line 2580
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 5472				; 00001560H
	mov	rdx, rax
	mov	rcx, QWORD PTR info$2[rbp]
	call	?GetVarPtr@ImGuiStyleVarInfo@@QEBAPEAXPEAUImGuiStyle@@@Z ; ImGuiStyleVarInfo::GetVarPtr
	mov	QWORD PTR data$3[rbp], rax
; Line 2581
	mov	rax, QWORD PTR info$2[rbp]
	cmp	DWORD PTR [rax], 8
	jne	SHORT $LN4@PopStyleVa
	mov	rax, QWORD PTR info$2[rbp]
	cmp	DWORD PTR [rax+4], 1
	jne	SHORT $LN4@PopStyleVa
	mov	eax, 4
	imul	rax, rax, 0
	mov	ecx, 4
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR data$3[rbp]
	mov	r8, QWORD PTR backup$1[rbp]
	movss	xmm0, DWORD PTR [r8+rax+4]
	movss	DWORD PTR [rdx+rcx], xmm0
	jmp	SHORT $LN5@PopStyleVa
$LN4@PopStyleVa:
; Line 2582
	mov	rax, QWORD PTR info$2[rbp]
	cmp	DWORD PTR [rax], 8
	jne	SHORT $LN6@PopStyleVa
	mov	rax, QWORD PTR info$2[rbp]
	cmp	DWORD PTR [rax+4], 2
	jne	SHORT $LN6@PopStyleVa
	mov	eax, 4
	imul	rax, rax, 0
	mov	ecx, 4
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR data$3[rbp]
	mov	r8, QWORD PTR backup$1[rbp]
	movss	xmm0, DWORD PTR [r8+rax+4]
	movss	DWORD PTR [rdx+rcx], xmm0
	mov	eax, 4
	imul	rax, rax, 1
	mov	ecx, 4
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR data$3[rbp]
	mov	r8, QWORD PTR backup$1[rbp]
	movss	xmm0, DWORD PTR [r8+rax+4]
	movss	DWORD PTR [rdx+rcx], xmm0
$LN6@PopStyleVa:
$LN5@PopStyleVa:
; Line 2583
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7496				; 00001d48H
	mov	rcx, rax
	call	?pop_back@?$ImVector@UImGuiStyleMod@@@@QEAAXXZ ; ImVector<ImGuiStyleMod>::pop_back
; Line 2584
	mov	eax, DWORD PTR count$[rbp]
	dec	eax
	mov	DWORD PTR count$[rbp], eax
; Line 2585
	jmp	$LN2@PopStyleVa
$LN3@PopStyleVa:
; Line 2586
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?PopStyleVar@ImGui@@YAXH@Z ENDP				; ImGui::PopStyleVar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushStyleVar@ImGui@@YAXHAEBUImVec2@@@Z
_TEXT	SEGMENT
var_info$ = 8
g$1 = 40
pvar$2 = 72
$T3 = 292
tv82 = 312
idx$ = 352
val$ = 360
?PushStyleVar@ImGui@@YAXHAEBUImVec2@@@Z PROC		; ImGui::PushStyleVar, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2559
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2560
	mov	ecx, DWORD PTR idx$[rbp]
	call	?GetStyleVarInfo@@YAPEBUImGuiStyleVarInfo@@H@Z ; GetStyleVarInfo
	mov	QWORD PTR var_info$[rbp], rax
; Line 2561
	mov	rax, QWORD PTR var_info$[rbp]
	cmp	DWORD PTR [rax], 8
	jne	SHORT $LN2@PushStyleV
	mov	rax, QWORD PTR var_info$[rbp]
	cmp	DWORD PTR [rax+4], 2
	jne	SHORT $LN2@PushStyleV
; Line 2563
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$1[rbp], rax
; Line 2564
	mov	rax, QWORD PTR g$1[rbp]
	add	rax, 5472				; 00001560H
	mov	rdx, rax
	mov	rcx, QWORD PTR var_info$[rbp]
	call	?GetVarPtr@ImGuiStyleVarInfo@@QEBAPEAXPEAUImGuiStyle@@@Z ; ImGuiStyleVarInfo::GetVarPtr
	mov	QWORD PTR pvar$2[rbp], rax
; Line 2565
	mov	rax, QWORD PTR g$1[rbp]
	add	rax, 7496				; 00001d48H
	mov	QWORD PTR tv82[rbp], rax
	mov	rax, QWORD PTR pvar$2[rbp]
	mov	r8, QWORD PTR [rax]
	mov	edx, DWORD PTR idx$[rbp]
	lea	rcx, QWORD PTR $T3[rbp]
	call	??0ImGuiStyleMod@@QEAA@HUImVec2@@@Z	; ImGuiStyleMod::ImGuiStyleMod
	mov	rdx, rax
	mov	rcx, QWORD PTR tv82[rbp]
	call	?push_back@?$ImVector@UImGuiStyleMod@@@@QEAAXAEBUImGuiStyleMod@@@Z ; ImVector<ImGuiStyleMod>::push_back
; Line 2566
	mov	rax, QWORD PTR val$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR pvar$2[rbp]
	mov	QWORD PTR [rcx], rax
; Line 2567
	jmp	SHORT $LN1@PushStyleV
$LN2@PushStyleV:
; Line 2569
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@PushStyleV
	mov	eax, DWORD PTR ?__LINE__Var@?0??PushStyleVar@ImGui@@YAXHAEBUImVec2@@@Z@4JA
	add	eax, 10
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1JE@EECEMJDC@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?5?$AAP?$AAu@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@PushStyleV:
$LN1@PushStyleV:
; Line 2570
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?PushStyleVar@ImGui@@YAXHAEBUImVec2@@@Z ENDP		; ImGui::PushStyleVar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushStyleVar@ImGui@@YAXHM@Z
_TEXT	SEGMENT
var_info$ = 8
g$1 = 40
pvar$2 = 72
$T3 = 292
tv82 = 312
idx$ = 352
val$ = 360
?PushStyleVar@ImGui@@YAXHM@Z PROC			; ImGui::PushStyleVar, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2545
$LN5:
	movss	DWORD PTR [rsp+16], xmm1
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2546
	mov	ecx, DWORD PTR idx$[rbp]
	call	?GetStyleVarInfo@@YAPEBUImGuiStyleVarInfo@@H@Z ; GetStyleVarInfo
	mov	QWORD PTR var_info$[rbp], rax
; Line 2547
	mov	rax, QWORD PTR var_info$[rbp]
	cmp	DWORD PTR [rax], 8
	jne	SHORT $LN2@PushStyleV
	mov	rax, QWORD PTR var_info$[rbp]
	cmp	DWORD PTR [rax+4], 1
	jne	SHORT $LN2@PushStyleV
; Line 2549
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$1[rbp], rax
; Line 2550
	mov	rax, QWORD PTR g$1[rbp]
	add	rax, 5472				; 00001560H
	mov	rdx, rax
	mov	rcx, QWORD PTR var_info$[rbp]
	call	?GetVarPtr@ImGuiStyleVarInfo@@QEBAPEAXPEAUImGuiStyle@@@Z ; ImGuiStyleVarInfo::GetVarPtr
	mov	QWORD PTR pvar$2[rbp], rax
; Line 2551
	mov	rax, QWORD PTR g$1[rbp]
	add	rax, 7496				; 00001d48H
	mov	QWORD PTR tv82[rbp], rax
	mov	rax, QWORD PTR pvar$2[rbp]
	movss	xmm2, DWORD PTR [rax]
	mov	edx, DWORD PTR idx$[rbp]
	lea	rcx, QWORD PTR $T3[rbp]
	call	??0ImGuiStyleMod@@QEAA@HM@Z		; ImGuiStyleMod::ImGuiStyleMod
	mov	rdx, rax
	mov	rcx, QWORD PTR tv82[rbp]
	call	?push_back@?$ImVector@UImGuiStyleMod@@@@QEAAXAEBUImGuiStyleMod@@@Z ; ImVector<ImGuiStyleMod>::push_back
; Line 2552
	mov	rax, QWORD PTR pvar$2[rbp]
	movss	xmm0, DWORD PTR val$[rbp]
	movss	DWORD PTR [rax], xmm0
; Line 2553
	jmp	SHORT $LN1@PushStyleV
$LN2@PushStyleV:
; Line 2555
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@PushStyleV
	mov	eax, DWORD PTR ?__LINE__Var@?0??PushStyleVar@ImGui@@YAXHM@Z@4JA
	add	eax, 10
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1JA@BICGEIG@?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAC?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?5?$AAP?$AAu@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@PushStyleV:
$LN1@PushStyleV:
; Line 2556
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?PushStyleVar@ImGui@@YAXHM@Z ENDP			; ImGui::PushStyleVar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PopStyleColor@ImGui@@YAXH@Z
_TEXT	SEGMENT
g$ = 8
backup$1 = 40
count$ = 288
?PopStyleColor@ImGui@@YAXH@Z PROC			; ImGui::PopStyleColor, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2490
$LN5:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 288				; 00000120H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2491
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
$LN2@PopStyleCo:
; Line 2492
	cmp	DWORD PTR count$[rbp], 0
	jle	SHORT $LN3@PopStyleCo
; Line 2494
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7480				; 00001d38H
	mov	rcx, rax
	call	?back@?$ImVector@UImGuiColorMod@@@@QEAAAEAUImGuiColorMod@@XZ ; ImVector<ImGuiColorMod>::back
	mov	QWORD PTR backup$1[rbp], rax
; Line 2495
	mov	rax, QWORD PTR backup$1[rbp]
	movsxd	rax, DWORD PTR [rax]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR g$[rbp]
	mov	rdx, QWORD PTR backup$1[rbp]
	lea	rdi, QWORD PTR [rcx+rax+5668]
	lea	rsi, QWORD PTR [rdx+4]
	mov	ecx, 16
	rep movsb
; Line 2496
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7480				; 00001d38H
	mov	rcx, rax
	call	?pop_back@?$ImVector@UImGuiColorMod@@@@QEAAXXZ ; ImVector<ImGuiColorMod>::pop_back
; Line 2497
	mov	eax, DWORD PTR count$[rbp]
	dec	eax
	mov	DWORD PTR count$[rbp], eax
; Line 2498
	jmp	SHORT $LN2@PopStyleCo
$LN3@PopStyleCo:
; Line 2499
	lea	rsp, QWORD PTR [rbp+256]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?PopStyleColor@ImGui@@YAXH@Z ENDP			; ImGui::PopStyleColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushStyleColor@ImGui@@YAXHAEBUImVec4@@@Z
_TEXT	SEGMENT
g$ = 8
backup$ = 40
tv75 = 264
__$ArrayPad$ = 272
idx$ = 320
col$ = 328
?PushStyleColor@ImGui@@YAXHAEBUImVec4@@@Z PROC		; ImGui::PushStyleColor, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2480
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 24
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2481
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 2482
	lea	rcx, QWORD PTR backup$[rbp]
	call	??0ImGuiColorMod@@QEAA@XZ
; Line 2483
	mov	eax, DWORD PTR idx$[rbp]
	mov	DWORD PTR backup$[rbp], eax
; Line 2484
	movsxd	rax, DWORD PTR idx$[rbp]
	imul	rax, rax, 16
	lea	rcx, QWORD PTR backup$[rbp+4]
	mov	rdx, QWORD PTR g$[rbp]
	mov	rdi, rcx
	lea	rsi, QWORD PTR [rdx+rax+5668]
	mov	ecx, 16
	rep movsb
; Line 2485
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7480				; 00001d38H
	mov	QWORD PTR tv75[rbp], rax
	lea	rdx, QWORD PTR backup$[rbp]
	mov	rcx, QWORD PTR tv75[rbp]
	call	?push_back@?$ImVector@UImGuiColorMod@@@@QEAAXAEBUImGuiColorMod@@@Z ; ImVector<ImGuiColorMod>::push_back
; Line 2486
	movsxd	rax, DWORD PTR idx$[rbp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR g$[rbp]
	lea	rdi, QWORD PTR [rcx+rax+5668]
	mov	rsi, QWORD PTR col$[rbp]
	mov	ecx, 16
	rep movsb
; Line 2487
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?PushStyleColor@ImGui@@YAXHAEBUImVec4@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+288]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?PushStyleColor@ImGui@@YAXHAEBUImVec4@@@Z ENDP		; ImGui::PushStyleColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushStyleColor@ImGui@@YAXHI@Z
_TEXT	SEGMENT
g$ = 8
backup$ = 40
$T4 = 276
tv75 = 312
__$ArrayPad$ = 320
idx$ = 368
col$ = 376
?PushStyleColor@ImGui@@YAXHI@Z PROC			; ImGui::PushStyleColor, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2470
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 368				; 00000170H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+408]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2471
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 2472
	lea	rcx, QWORD PTR backup$[rbp]
	call	??0ImGuiColorMod@@QEAA@XZ
; Line 2473
	mov	eax, DWORD PTR idx$[rbp]
	mov	DWORD PTR backup$[rbp], eax
; Line 2474
	movsxd	rax, DWORD PTR idx$[rbp]
	imul	rax, rax, 16
	lea	rcx, QWORD PTR backup$[rbp+4]
	mov	rdx, QWORD PTR g$[rbp]
	mov	rdi, rcx
	lea	rsi, QWORD PTR [rdx+rax+5668]
	mov	ecx, 16
	rep movsb
; Line 2475
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7480				; 00001d38H
	mov	QWORD PTR tv75[rbp], rax
	lea	rdx, QWORD PTR backup$[rbp]
	mov	rcx, QWORD PTR tv75[rbp]
	call	?push_back@?$ImVector@UImGuiColorMod@@@@QEAAXAEBUImGuiColorMod@@@Z ; ImVector<ImGuiColorMod>::push_back
; Line 2476
	mov	edx, DWORD PTR col$[rbp]
	lea	rcx, QWORD PTR $T4[rbp]
	call	?ColorConvertU32ToFloat4@ImGui@@YA?AUImVec4@@I@Z ; ImGui::ColorConvertU32ToFloat4
	movsxd	rcx, DWORD PTR idx$[rbp]
	imul	rcx, rcx, 16
	mov	rdx, QWORD PTR g$[rbp]
	lea	rdi, QWORD PTR [rdx+rcx+5668]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
; Line 2477
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?PushStyleColor@ImGui@@YAXHI@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+336]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?PushStyleColor@ImGui@@YAXHI@Z ENDP			; ImGui::PushStyleColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PopFont@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
tv78 = 216
?PopFont@ImGui@@YAXXZ PROC				; ImGui::PopFont, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6561
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6562
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6563
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	rcx, QWORD PTR [rax+688]
	call	?PopTextureID@ImDrawList@@QEAAXXZ	; ImDrawList::PopTextureID
; Line 6564
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7512				; 00001d58H
	mov	rcx, rax
	call	?pop_back@?$ImVector@PEAUImFont@@@@QEAAXXZ ; ImVector<ImFont *>::pop_back
; Line 6565
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7512				; 00001d58H
	mov	rcx, rax
	call	?empty@?$ImVector@PEAUImFont@@@@QEBA_NXZ ; ImVector<ImFont *>::empty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@PopFont
	call	?GetDefaultFont@ImGui@@YAPEAUImFont@@XZ	; ImGui::GetDefaultFont
	mov	QWORD PTR tv78[rbp], rax
	jmp	SHORT $LN4@PopFont
$LN3@PopFont:
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7512				; 00001d58H
	mov	rcx, rax
	call	?back@?$ImVector@PEAUImFont@@@@QEAAAEAPEAUImFont@@XZ ; ImVector<ImFont *>::back
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv78[rbp], rax
$LN4@PopFont:
	mov	rcx, QWORD PTR tv78[rbp]
	call	?SetCurrentFont@ImGui@@YAXPEAUImFont@@@Z ; ImGui::SetCurrentFont
; Line 6566
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?PopFont@ImGui@@YAXXZ ENDP				; ImGui::PopFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushFont@ImGui@@YAXPEAUImFont@@@Z
_TEXT	SEGMENT
g$ = 8
tv79 = 216
tv71 = 216
font$ = 256
?PushFont@ImGui@@YAXPEAUImFont@@@Z PROC			; ImGui::PushFont, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6551
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6552
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6553
	cmp	QWORD PTR font$[rbp], 0
	jne	SHORT $LN2@PushFont
; Line 6554
	call	?GetDefaultFont@ImGui@@YAPEAUImFont@@XZ	; ImGui::GetDefaultFont
	mov	QWORD PTR font$[rbp], rax
$LN2@PushFont:
; Line 6555
	mov	rcx, QWORD PTR font$[rbp]
	call	?SetCurrentFont@ImGui@@YAXPEAUImFont@@@Z ; ImGui::SetCurrentFont
; Line 6556
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7512				; 00001d58H
	mov	QWORD PTR tv71[rbp], rax
	lea	rdx, QWORD PTR font$[rbp]
	mov	rcx, QWORD PTR tv71[rbp]
	call	?push_back@?$ImVector@PEAUImFont@@@@QEAAXAEBQEAUImFont@@@Z ; ImVector<ImFont *>::push_back
; Line 6557
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv79[rbp], rax
	mov	rax, QWORD PTR font$[rbp]
	mov	rax, QWORD PTR [rax+64]
	mov	rdx, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR tv79[rbp]
	call	?PushTextureID@ImDrawList@@QEAAXPEAX@Z	; ImDrawList::PushTextureID
; Line 6558
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?PushFont@ImGui@@YAXPEAUImFont@@@Z ENDP			; ImGui::PushFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetScrollFromPosY@ImGui@@YAXMM@Z
_TEXT	SEGMENT
g$ = 8
local_y$ = 256
center_y_ratio$ = 264
?SetScrollFromPosY@ImGui@@YAXMM@Z PROC			; ImGui::SetScrollFromPosY, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8012
$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8013
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8014
	movss	xmm2, DWORD PTR center_y_ratio$[rbp]
	movss	xmm1, DWORD PTR local_y$[rbp]
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+7184]
	call	?SetScrollFromPosY@ImGui@@YAXPEAUImGuiWindow@@MM@Z ; ImGui::SetScrollFromPosY
; Line 8015
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetScrollFromPosY@ImGui@@YAXMM@Z ENDP			; ImGui::SetScrollFromPosY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetScrollFromPosX@ImGui@@YAXMM@Z
_TEXT	SEGMENT
g$ = 8
local_x$ = 256
center_x_ratio$ = 264
?SetScrollFromPosX@ImGui@@YAXMM@Z PROC			; ImGui::SetScrollFromPosX, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8006
$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8007
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8008
	movss	xmm2, DWORD PTR center_x_ratio$[rbp]
	movss	xmm1, DWORD PTR local_x$[rbp]
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+7184]
	call	?SetScrollFromPosX@ImGui@@YAXPEAUImGuiWindow@@MM@Z ; ImGui::SetScrollFromPosX
; Line 8009
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetScrollFromPosX@ImGui@@YAXMM@Z ENDP			; ImGui::SetScrollFromPosX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetScrollHereY@ImGui@@YAXM@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
spacing_y$ = 68
target_pos_y$ = 100
tv87 = 308
center_y_ratio$ = 352
?SetScrollHereY@ImGui@@YAXM@Z PROC			; ImGui::SetScrollHereY, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8032
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8033
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8034
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 8035
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+5548]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+68]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR spacing_y$[rbp], xmm0
; Line 8036
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+228]
	addss	xmm0, DWORD PTR [rcx+268]
	addss	xmm0, DWORD PTR spacing_y$[rbp]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+228]
	subss	xmm1, DWORD PTR spacing_y$[rbp]
	movss	DWORD PTR tv87[rbp], xmm1
	movss	xmm2, DWORD PTR center_y_ratio$[rbp]
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR tv87[rbp]
	call	??$ImLerp@M@@YAMMMM@Z			; ImLerp<float>
	movss	DWORD PTR target_pos_y$[rbp], xmm0
; Line 8037
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR target_pos_y$[rbp]
	subss	xmm0, DWORD PTR [rax+20]
	movss	xmm2, DWORD PTR center_y_ratio$[rbp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetScrollFromPosY@ImGui@@YAXPEAUImGuiWindow@@MM@Z ; ImGui::SetScrollFromPosY
; Line 8040
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+68]
	subss	xmm0, DWORD PTR spacing_y$[rbp]
	movaps	xmm1, xmm0
	xorps	xmm0, xmm0
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+128], xmm0
; Line 8041
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?SetScrollHereY@ImGui@@YAXM@Z ENDP			; ImGui::SetScrollHereY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetScrollHereX@ImGui@@YAXM@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
spacing_x$ = 68
target_pos_x$ = 100
tv85 = 308
center_x_ratio$ = 352
?SetScrollHereX@ImGui@@YAXM@Z PROC			; ImGui::SetScrollHereX, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 8019
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 8020
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 8021
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 8022
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+5544]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+64]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR spacing_x$[rbp], xmm0
; Line 8023
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+308]
	addss	xmm0, DWORD PTR spacing_x$[rbp]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+300]
	subss	xmm1, DWORD PTR spacing_x$[rbp]
	movss	DWORD PTR tv85[rbp], xmm1
	movss	xmm2, DWORD PTR center_x_ratio$[rbp]
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR tv85[rbp]
	call	??$ImLerp@M@@YAMMMM@Z			; ImLerp<float>
	movss	DWORD PTR target_pos_x$[rbp], xmm0
; Line 8024
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR target_pos_x$[rbp]
	subss	xmm0, DWORD PTR [rax+16]
	movss	xmm2, DWORD PTR center_x_ratio$[rbp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetScrollFromPosX@ImGui@@YAXPEAUImGuiWindow@@MM@Z ; ImGui::SetScrollFromPosX
; Line 8027
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+64]
	subss	xmm0, DWORD PTR spacing_x$[rbp]
	movaps	xmm1, xmm0
	xorps	xmm0, xmm0
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+124], xmm0
; Line 8028
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?SetScrollHereX@ImGui@@YAXM@Z ENDP			; ImGui::SetScrollHereX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetScrollMaxY@ImGui@@YAMXZ
_TEXT	SEGMENT
window$ = 8
?GetScrollMaxY@ImGui@@YAMXZ PROC			; ImGui::GetScrollMaxY, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7946
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7947
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7948
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+104]
; Line 7949
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetScrollMaxY@ImGui@@YAMXZ ENDP			; ImGui::GetScrollMaxY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetScrollMaxX@ImGui@@YAMXZ
_TEXT	SEGMENT
window$ = 8
?GetScrollMaxX@ImGui@@YAMXZ PROC			; ImGui::GetScrollMaxX, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7940
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7941
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7942
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+100]
; Line 7943
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetScrollMaxX@ImGui@@YAMXZ ENDP			; ImGui::GetScrollMaxX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetScrollY@ImGui@@YAXM@Z
_TEXT	SEGMENT
g$ = 8
scroll_y$ = 256
?SetScrollY@ImGui@@YAXM@Z PROC				; ImGui::SetScrollY, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7972
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7973
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7974
	movss	xmm1, DWORD PTR scroll_y$[rbp]
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+7184]
	call	?SetScrollY@ImGui@@YAXPEAUImGuiWindow@@M@Z ; ImGui::SetScrollY
; Line 7975
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetScrollY@ImGui@@YAXM@Z ENDP				; ImGui::SetScrollY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetScrollX@ImGui@@YAXM@Z
_TEXT	SEGMENT
g$ = 8
scroll_x$ = 256
?SetScrollX@ImGui@@YAXM@Z PROC				; ImGui::SetScrollX, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7966
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7967
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7968
	movss	xmm1, DWORD PTR scroll_x$[rbp]
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+7184]
	call	?SetScrollX@ImGui@@YAXPEAUImGuiWindow@@M@Z ; ImGui::SetScrollX
; Line 7969
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetScrollX@ImGui@@YAXM@Z ENDP				; ImGui::SetScrollX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetScrollY@ImGui@@YAMXZ
_TEXT	SEGMENT
window$ = 8
?GetScrollY@ImGui@@YAMXZ PROC				; ImGui::GetScrollY, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7934
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7935
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7936
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+96]
; Line 7937
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetScrollY@ImGui@@YAMXZ ENDP				; ImGui::GetScrollY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetScrollX@ImGui@@YAMXZ
_TEXT	SEGMENT
window$ = 8
?GetScrollX@ImGui@@YAMXZ PROC				; ImGui::GetScrollX, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7928
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7929
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7930
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+92]
; Line 7931
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetScrollX@ImGui@@YAMXZ ENDP				; ImGui::GetScrollX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetWindowContentRegionWidth@ImGui@@YAMXZ
_TEXT	SEGMENT
window$ = 8
?GetWindowContentRegionWidth@ImGui@@YAMXZ PROC		; ImGui::GetWindowContentRegionWidth, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7746
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7747
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7748
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 608				; 00000260H
	mov	rcx, rax
	call	?GetWidth@ImRect@@QEBAMXZ		; ImRect::GetWidth
; Line 7749
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetWindowContentRegionWidth@ImGui@@YAMXZ ENDP		; ImGui::GetWindowContentRegionWidth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetWindowContentRegionMax@ImGui@@YA?AUImVec2@@XZ
_TEXT	SEGMENT
window$ = 8
__$ReturnUdt$ = 256
?GetWindowContentRegionMax@ImGui@@YA?AUImVec2@@XZ PROC	; ImGui::GetWindowContentRegionMax, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7740
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7741
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7742
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 616				; 00000268H
	mov	r8, rax
	mov	rdx, rcx
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 7743
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetWindowContentRegionMax@ImGui@@YA?AUImVec2@@XZ ENDP	; ImGui::GetWindowContentRegionMax
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetWindowContentRegionMin@ImGui@@YA?AUImVec2@@XZ
_TEXT	SEGMENT
window$ = 8
__$ReturnUdt$ = 256
?GetWindowContentRegionMin@ImGui@@YA?AUImVec2@@XZ PROC	; ImGui::GetWindowContentRegionMin, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7734
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7735
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7736
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 608				; 00000260H
	mov	r8, rax
	mov	rdx, rcx
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 7737
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetWindowContentRegionMin@ImGui@@YA?AUImVec2@@XZ ENDP	; ImGui::GetWindowContentRegionMin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetContentRegionMax@ImGui@@YA?AUImVec2@@XZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
mx$ = 72
__$ArrayPad$ = 280
__$ReturnUdt$ = 320
?GetContentRegionMax@ImGui@@YA?AUImVec2@@XZ PROC	; ImGui::GetContentRegionMax, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7706
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7707
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 7708
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7709
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 616				; 00000268H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR mx$[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
; Line 7710
	mov	rax, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+424], 0
	jne	SHORT $LN3@GetContent
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+8176], 0
	je	SHORT $LN2@GetContent
$LN3@GetContent:
; Line 7711
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+568]
	subss	xmm0, DWORD PTR [rcx+16]
	movss	DWORD PTR mx$[rbp], xmm0
$LN2@GetContent:
; Line 7712
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
	mov	rcx, QWORD PTR mx$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 7713
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?GetContentRegionMax@ImGui@@YA?AUImVec2@@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?GetContentRegionMax@ImGui@@YA?AUImVec2@@XZ ENDP	; ImGui::GetContentRegionMax
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetContentRegionAvail@ImGui@@YA?AUImVec2@@XZ
_TEXT	SEGMENT
window$ = 8
$T1 = 228
tv67 = 248
__$ReturnUdt$ = 288
?GetContentRegionAvail@ImGui@@YA?AUImVec2@@XZ PROC	; ImGui::GetContentRegionAvail, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 7727
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 7728
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 7729
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 216				; 000000d8H
	mov	QWORD PTR tv67[rbp], rax
	lea	rcx, QWORD PTR $T1[rbp]
	call	?GetContentRegionMaxAbs@ImGui@@YA?AUImVec2@@XZ ; ImGui::GetContentRegionMaxAbs
	mov	rcx, QWORD PTR tv67[rbp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 7730
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?GetContentRegionAvail@ImGui@@YA?AUImVec2@@XZ ENDP	; ImGui::GetContentRegionAvail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetWindowFocus@ImGui@@YAXPEBD@Z
_TEXT	SEGMENT
window$1 = 8
name$ = 256
?SetWindowFocus@ImGui@@YAXPEBD@Z PROC			; ImGui::SetWindowFocus, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6888
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6889
	cmp	QWORD PTR name$[rbp], 0
	je	SHORT $LN2@SetWindowF
; Line 6891
	mov	rcx, QWORD PTR name$[rbp]
	call	?FindWindowByName@ImGui@@YAPEAUImGuiWindow@@PEBD@Z ; ImGui::FindWindowByName
	mov	QWORD PTR window$1[rbp], rax
	cmp	QWORD PTR window$1[rbp], 0
	je	SHORT $LN4@SetWindowF
; Line 6892
	mov	rcx, QWORD PTR window$1[rbp]
	call	?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::FocusWindow
$LN4@SetWindowF:
; Line 6893
	jmp	SHORT $LN3@SetWindowF
$LN2@SetWindowF:
; Line 6896
	xor	ecx, ecx
	call	?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::FocusWindow
$LN3@SetWindowF:
; Line 6898
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetWindowFocus@ImGui@@YAXPEBD@Z ENDP			; ImGui::SetWindowFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetWindowCollapsed@ImGui@@YAXPEBD_NH@Z
_TEXT	SEGMENT
window$1 = 8
name$ = 256
collapsed$ = 264
cond$ = 272
?SetWindowCollapsed@ImGui@@YAXPEBD_NH@Z PROC		; ImGui::SetWindowCollapsed, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6877
$LN4:
	mov	DWORD PTR [rsp+24], r8d
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6878
	mov	rcx, QWORD PTR name$[rbp]
	call	?FindWindowByName@ImGui@@YAPEAUImGuiWindow@@PEBD@Z ; ImGui::FindWindowByName
	mov	QWORD PTR window$1[rbp], rax
	cmp	QWORD PTR window$1[rbp], 0
	je	SHORT $LN2@SetWindowC
; Line 6879
	mov	r8d, DWORD PTR cond$[rbp]
	movzx	edx, BYTE PTR collapsed$[rbp]
	mov	rcx, QWORD PTR window$1[rbp]
	call	?SetWindowCollapsed@ImGui@@YAXPEAUImGuiWindow@@_NH@Z ; ImGui::SetWindowCollapsed
$LN2@SetWindowC:
; Line 6880
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetWindowCollapsed@ImGui@@YAXPEBD_NH@Z ENDP		; ImGui::SetWindowCollapsed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetWindowSize@ImGui@@YAXPEBDAEBUImVec2@@H@Z
_TEXT	SEGMENT
window$1 = 8
name$ = 256
size$ = 264
cond$ = 272
?SetWindowSize@ImGui@@YAXPEBDAEBUImVec2@@H@Z PROC	; ImGui::SetWindowSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6836
$LN4:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6837
	mov	rcx, QWORD PTR name$[rbp]
	call	?FindWindowByName@ImGui@@YAPEAUImGuiWindow@@PEBD@Z ; ImGui::FindWindowByName
	mov	QWORD PTR window$1[rbp], rax
	cmp	QWORD PTR window$1[rbp], 0
	je	SHORT $LN2@SetWindowS
; Line 6838
	mov	r8d, DWORD PTR cond$[rbp]
	mov	rdx, QWORD PTR size$[rbp]
	mov	rcx, QWORD PTR window$1[rbp]
	call	?SetWindowSize@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z ; ImGui::SetWindowSize
$LN2@SetWindowS:
; Line 6839
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetWindowSize@ImGui@@YAXPEBDAEBUImVec2@@H@Z ENDP	; ImGui::SetWindowSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetWindowPos@ImGui@@YAXPEBDAEBUImVec2@@H@Z
_TEXT	SEGMENT
window$1 = 8
name$ = 256
pos$ = 264
cond$ = 272
?SetWindowPos@ImGui@@YAXPEBDAEBUImVec2@@H@Z PROC	; ImGui::SetWindowPos, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6787
$LN4:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6788
	mov	rcx, QWORD PTR name$[rbp]
	call	?FindWindowByName@ImGui@@YAPEAUImGuiWindow@@PEBD@Z ; ImGui::FindWindowByName
	mov	QWORD PTR window$1[rbp], rax
	cmp	QWORD PTR window$1[rbp], 0
	je	SHORT $LN2@SetWindowP
; Line 6789
	mov	r8d, DWORD PTR cond$[rbp]
	mov	rdx, QWORD PTR pos$[rbp]
	mov	rcx, QWORD PTR window$1[rbp]
	call	?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z ; ImGui::SetWindowPos
$LN2@SetWindowP:
; Line 6790
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetWindowPos@ImGui@@YAXPEBDAEBUImVec2@@H@Z ENDP	; ImGui::SetWindowPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetWindowFontScale@ImGui@@YAXM@Z
_TEXT	SEGMENT
g$ = 8
window$ = 40
tv76 = 244
scale$ = 288
?SetWindowFontScale@ImGui@@YAXM@Z PROC			; ImGui::SetWindowFontScale, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6988
$LN4:
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6989
	movss	xmm0, DWORD PTR scale$[rbp]
	comiss	xmm0, DWORD PTR __real@00000000
	ja	SHORT $LN3@SetWindowF
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetWindowFontScale@ImGui@@YAXM@Z@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BK@JIIMNACC@?$AAs?$AAc?$AAa?$AAl?$AAe?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AA0?$AAf@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@SetWindowF:
; Line 6990
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6991
	call	?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindow
	mov	QWORD PTR window$[rbp], rax
; Line 6992
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR scale$[rbp]
	movss	DWORD PTR [rax+680], xmm0
; Line 6993
	mov	rcx, QWORD PTR window$[rbp]
	call	?CalcFontSize@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::CalcFontSize
	movss	DWORD PTR tv76[rbp], xmm0
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR tv76[rbp]
	movss	DWORD PTR [rax+6552], xmm0
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR tv76[rbp]
	movss	DWORD PTR [rax+6528], xmm0
; Line 6994
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?SetWindowFontScale@ImGui@@YAXM@Z ENDP			; ImGui::SetWindowFontScale
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetWindowFocus@ImGui@@YAXXZ
_TEXT	SEGMENT
?SetWindowFocus@ImGui@@YAXXZ PROC			; ImGui::SetWindowFocus, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6883
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6884
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rcx, QWORD PTR [rax+7184]
	call	?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::FocusWindow
; Line 6885
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?SetWindowFocus@ImGui@@YAXXZ ENDP			; ImGui::SetWindowFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetWindowCollapsed@ImGui@@YAX_NH@Z
_TEXT	SEGMENT
collapsed$ = 224
cond$ = 232
?SetWindowCollapsed@ImGui@@YAX_NH@Z PROC		; ImGui::SetWindowCollapsed, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6860
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	BYTE PTR [rsp+8], cl
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6861
	mov	r8d, DWORD PTR cond$[rbp]
	movzx	edx, BYTE PTR collapsed$[rbp]
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rcx, QWORD PTR [rax+7184]
	call	?SetWindowCollapsed@ImGui@@YAXPEAUImGuiWindow@@_NH@Z ; ImGui::SetWindowCollapsed
; Line 6862
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?SetWindowCollapsed@ImGui@@YAX_NH@Z ENDP		; ImGui::SetWindowCollapsed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetWindowSize@ImGui@@YAXAEBUImVec2@@H@Z
_TEXT	SEGMENT
size$ = 224
cond$ = 232
?SetWindowSize@ImGui@@YAXAEBUImVec2@@H@Z PROC		; ImGui::SetWindowSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6831
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6832
	mov	r8d, DWORD PTR cond$[rbp]
	mov	rdx, QWORD PTR size$[rbp]
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rcx, QWORD PTR [rax+7184]
	call	?SetWindowSize@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z ; ImGui::SetWindowSize
; Line 6833
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?SetWindowSize@ImGui@@YAXAEBUImVec2@@H@Z ENDP		; ImGui::SetWindowSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetWindowPos@ImGui@@YAXAEBUImVec2@@H@Z
_TEXT	SEGMENT
window$ = 8
pos$ = 256
cond$ = 264
?SetWindowPos@ImGui@@YAXAEBUImVec2@@H@Z PROC		; ImGui::SetWindowPos, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6781
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6782
	call	?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindowRead
	mov	QWORD PTR window$[rbp], rax
; Line 6783
	mov	r8d, DWORD PTR cond$[rbp]
	mov	rdx, QWORD PTR pos$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z ; ImGui::SetWindowPos
; Line 6784
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetWindowPos@ImGui@@YAXAEBUImVec2@@H@Z ENDP		; ImGui::SetWindowPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetNextWindowBgAlpha@ImGui@@YAXM@Z
_TEXT	SEGMENT
g$ = 8
alpha$ = 256
?SetNextWindowBgAlpha@ImGui@@YAXM@Z PROC		; ImGui::SetNextWindowBgAlpha, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6960
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6961
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6962
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7344]
	or	eax, 64					; 00000040H
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7344], eax
; Line 6963
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR alpha$[rbp]
	movss	DWORD PTR [rax+7440], xmm0
; Line 6964
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetNextWindowBgAlpha@ImGui@@YAXM@Z ENDP		; ImGui::SetNextWindowBgAlpha
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetNextWindowFocus@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
?SetNextWindowFocus@ImGui@@YAXXZ PROC			; ImGui::SetNextWindowFocus, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6954
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6955
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6956
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7344]
	or	eax, 32					; 00000020H
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7344], eax
; Line 6957
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetNextWindowFocus@ImGui@@YAXXZ ENDP			; ImGui::SetNextWindowFocus
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetNextWindowCollapsed@ImGui@@YAX_NH@Z
_TEXT	SEGMENT
g$ = 8
tv84 = 212
collapsed$ = 256
cond$ = 264
?SetNextWindowCollapsed@ImGui@@YAX_NH@Z PROC		; ImGui::SetNextWindowCollapsed, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6945
$LN6:
	mov	DWORD PTR [rsp+16], edx
	mov	BYTE PTR [rsp+8], cl
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6946
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6947
	cmp	DWORD PTR cond$[rbp], 0
	je	SHORT $LN3@SetNextWin
	mov	ecx, DWORD PTR cond$[rbp]
	call	?ImIsPowerOfTwo@@YA_NH@Z		; ImIsPowerOfTwo
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@SetNextWin
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetNextWindowCollapsed@ImGui@@YAX_NH@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EE@PBEDMJFL@?$AAc?$AAo?$AAn?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAI?$AAm@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@SetNextWin:
; Line 6948
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7344]
	or	eax, 8
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7344], eax
; Line 6949
	mov	rax, QWORD PTR g$[rbp]
	movzx	ecx, BYTE PTR collapsed$[rbp]
	mov	BYTE PTR [rax+7400], cl
; Line 6950
	cmp	DWORD PTR cond$[rbp], 0
	je	SHORT $LN4@SetNextWin
	mov	eax, DWORD PTR cond$[rbp]
	mov	DWORD PTR tv84[rbp], eax
	jmp	SHORT $LN5@SetNextWin
$LN4@SetNextWin:
	mov	DWORD PTR tv84[rbp], 1
$LN5@SetNextWin:
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR tv84[rbp]
	mov	DWORD PTR [rax+7356], ecx
; Line 6951
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetNextWindowCollapsed@ImGui@@YAX_NH@Z ENDP		; ImGui::SetNextWindowCollapsed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetNextWindowContentSize@ImGui@@YAXAEBUImVec2@@@Z
_TEXT	SEGMENT
g$ = 8
$T1 = 228
size$ = 288
?SetNextWindowContentSize@ImGui@@YAXAEBUImVec2@@@Z PROC	; ImGui::SetNextWindowContentSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6931
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6932
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6933
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7344]
	or	eax, 4
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7344], eax
; Line 6934
	mov	rdx, QWORD PTR size$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+7384], rax
; Line 6935
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?SetNextWindowContentSize@ImGui@@YAXAEBUImVec2@@@Z ENDP	; ImGui::SetNextWindowContentSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetNextWindowSizeConstraints@ImGui@@YAXAEBUImVec2@@0P6AXPEAUImGuiSizeCallbackData@@@ZPEAX@Z
_TEXT	SEGMENT
g$ = 8
$T1 = 228
size_min$ = 304
size_max$ = 312
custom_callback$ = 320
custom_callback_user_data$ = 328
?SetNextWindowSizeConstraints@ImGui@@YAXAEBUImVec2@@0P6AXPEAUImGuiSizeCallbackData@@@ZPEAX@Z PROC ; ImGui::SetNextWindowSizeConstraints, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6920
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 304				; 00000130H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6921
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6922
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7344]
	or	eax, 16
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7344], eax
; Line 6923
	mov	r8, QWORD PTR size_max$[rbp]
	mov	rdx, QWORD PTR size_min$[rbp]
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
	mov	rcx, QWORD PTR g$[rbp]
	lea	rdi, QWORD PTR [rcx+7404]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
; Line 6924
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR custom_callback$[rbp]
	mov	QWORD PTR [rax+7424], rcx
; Line 6925
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR custom_callback_user_data$[rbp]
	mov	QWORD PTR [rax+7432], rcx
; Line 6926
	lea	rsp, QWORD PTR [rbp+272]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?SetNextWindowSizeConstraints@ImGui@@YAXAEBUImVec2@@0P6AXPEAUImGuiSizeCallbackData@@@ZPEAX@Z ENDP ; ImGui::SetNextWindowSizeConstraints
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetNextWindowSize@ImGui@@YAXAEBUImVec2@@H@Z
_TEXT	SEGMENT
g$ = 8
tv85 = 212
size$ = 256
cond$ = 264
?SetNextWindowSize@ImGui@@YAXAEBUImVec2@@H@Z PROC	; ImGui::SetNextWindowSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6911
$LN6:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6912
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6913
	cmp	DWORD PTR cond$[rbp], 0
	je	SHORT $LN3@SetNextWin
	mov	ecx, DWORD PTR cond$[rbp]
	call	?ImIsPowerOfTwo@@YA_NH@Z		; ImIsPowerOfTwo
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@SetNextWin
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetNextWindowSize@ImGui@@YAXAEBUImVec2@@H@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EE@PBEDMJFL@?$AAc?$AAo?$AAn?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAI?$AAm@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@SetNextWin:
; Line 6914
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7344]
	or	eax, 2
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7344], eax
; Line 6915
	mov	rax, QWORD PTR size$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+7376], rax
; Line 6916
	cmp	DWORD PTR cond$[rbp], 0
	je	SHORT $LN4@SetNextWin
	mov	eax, DWORD PTR cond$[rbp]
	mov	DWORD PTR tv85[rbp], eax
	jmp	SHORT $LN5@SetNextWin
$LN4@SetNextWin:
	mov	DWORD PTR tv85[rbp], 1
$LN5@SetNextWin:
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR tv85[rbp]
	mov	DWORD PTR [rax+7352], ecx
; Line 6917
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetNextWindowSize@ImGui@@YAXAEBUImVec2@@H@Z ENDP	; ImGui::SetNextWindowSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetNextWindowPos@ImGui@@YAXAEBUImVec2@@H0@Z
_TEXT	SEGMENT
g$ = 8
tv88 = 212
pos$ = 256
cond$ = 264
pivot$ = 272
?SetNextWindowPos@ImGui@@YAXAEBUImVec2@@H0@Z PROC	; ImGui::SetNextWindowPos, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6901
$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6902
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6903
	cmp	DWORD PTR cond$[rbp], 0
	je	SHORT $LN3@SetNextWin
	mov	ecx, DWORD PTR cond$[rbp]
	call	?ImIsPowerOfTwo@@YA_NH@Z		; ImIsPowerOfTwo
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@SetNextWin
	mov	eax, DWORD PTR ?__LINE__Var@?0??SetNextWindowPos@ImGui@@YAXAEBUImVec2@@H0@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EE@PBEDMJFL@?$AAc?$AAo?$AAn?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAI?$AAm@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@SetNextWin:
; Line 6904
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7344]
	or	eax, 1
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7344], eax
; Line 6905
	mov	rax, QWORD PTR pos$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+7360], rax
; Line 6906
	mov	rax, QWORD PTR pivot$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+7368], rax
; Line 6907
	cmp	DWORD PTR cond$[rbp], 0
	je	SHORT $LN4@SetNextWin
	mov	eax, DWORD PTR cond$[rbp]
	mov	DWORD PTR tv88[rbp], eax
	jmp	SHORT $LN5@SetNextWin
$LN4@SetNextWin:
	mov	DWORD PTR tv88[rbp], 1
$LN5@SetNextWin:
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR tv88[rbp]
	mov	DWORD PTR [rax+7348], ecx
; Line 6908
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?SetNextWindowPos@ImGui@@YAXAEBUImVec2@@H0@Z ENDP	; ImGui::SetNextWindowPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetWindowHeight@ImGui@@YAMXZ
_TEXT	SEGMENT
window$ = 8
?GetWindowHeight@ImGui@@YAMXZ PROC			; ImGui::GetWindowHeight, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6748
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6749
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 6750
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+28]
; Line 6751
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetWindowHeight@ImGui@@YAMXZ ENDP			; ImGui::GetWindowHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetWindowWidth@ImGui@@YAMXZ
_TEXT	SEGMENT
window$ = 8
?GetWindowWidth@ImGui@@YAMXZ PROC			; ImGui::GetWindowWidth, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6742
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6743
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 6744
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+24]
; Line 6745
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetWindowWidth@ImGui@@YAMXZ ENDP			; ImGui::GetWindowWidth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetWindowSize@ImGui@@YA?AUImVec2@@XZ
_TEXT	SEGMENT
window$ = 8
__$ReturnUdt$ = 256
?GetWindowSize@ImGui@@YA?AUImVec2@@XZ PROC		; ImGui::GetWindowSize, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6793
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6794
	call	?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindowRead
	mov	QWORD PTR window$[rbp], rax
; Line 6795
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 6796
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetWindowSize@ImGui@@YA?AUImVec2@@XZ ENDP		; ImGui::GetWindowSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetWindowPos@ImGui@@YA?AUImVec2@@XZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
__$ReturnUdt$ = 288
?GetWindowPos@ImGui@@YA?AUImVec2@@XZ PROC		; ImGui::GetWindowPos, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6754
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6755
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6756
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 6757
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 6758
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?GetWindowPos@ImGui@@YA?AUImVec2@@XZ ENDP		; ImGui::GetWindowPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetWindowDrawList@ImGui@@YAPEAUImDrawList@@XZ
_TEXT	SEGMENT
window$ = 8
?GetWindowDrawList@ImGui@@YAPEAUImDrawList@@XZ PROC	; ImGui::GetWindowDrawList, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6967
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6968
	call	?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindow
	mov	QWORD PTR window$[rbp], rax
; Line 6969
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
; Line 6970
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?GetWindowDrawList@ImGui@@YAPEAUImDrawList@@XZ ENDP	; ImGui::GetWindowDrawList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsWindowHovered@ImGui@@YA_NH@Z
_TEXT	SEGMENT
g$ = 8
window$1 = 40
tv77 = 244
flags$ = 288
?IsWindowHovered@ImGui@@YA_NH@Z PROC			; ImGui::IsWindowHovered, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6674
$LN19:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6675
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 64					; 00000040H
	test	eax, eax
	je	SHORT $LN18@IsWindowHo
	mov	eax, DWORD PTR ?__LINE__Var@?0??IsWindowHovered@ImGui@@YA_NH@Z@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1GK@LMFCIBAK@?$AA?$CI?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AAI?$AAm?$AAG?$AAu?$AAi?$AAH@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN18@IsWindowHo:
; Line 6676
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6677
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7192], 0
	jne	SHORT $LN4@IsWindowHo
; Line 6678
	xor	al, al
	jmp	$LN1@IsWindowHo
$LN4@IsWindowHo:
; Line 6680
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 4
	test	eax, eax
	jne	$LN5@IsWindowHo
; Line 6682
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$1[rbp], rax
; Line 6683
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 3
	mov	DWORD PTR tv77[rbp], eax
	cmp	DWORD PTR tv77[rbp], 1
	je	SHORT $LN10@IsWindowHo
	cmp	DWORD PTR tv77[rbp], 2
	je	SHORT $LN8@IsWindowHo
	cmp	DWORD PTR tv77[rbp], 3
	je	SHORT $LN6@IsWindowHo
	jmp	SHORT $LN12@IsWindowHo
$LN6@IsWindowHo:
; Line 6686
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7192]
	mov	rcx, QWORD PTR window$1[rbp]
	mov	rcx, QWORD PTR [rcx+904]
	cmp	QWORD PTR [rax+904], rcx
	je	SHORT $LN7@IsWindowHo
; Line 6687
	xor	al, al
	jmp	$LN1@IsWindowHo
$LN7@IsWindowHo:
; Line 6688
	jmp	SHORT $LN2@IsWindowHo
$LN8@IsWindowHo:
; Line 6690
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$1[rbp]
	mov	rcx, QWORD PTR [rcx+904]
	cmp	QWORD PTR [rax+7192], rcx
	je	SHORT $LN9@IsWindowHo
; Line 6691
	xor	al, al
	jmp	$LN1@IsWindowHo
$LN9@IsWindowHo:
; Line 6692
	jmp	SHORT $LN2@IsWindowHo
$LN10@IsWindowHo:
; Line 6694
	mov	rdx, QWORD PTR window$1[rbp]
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+7192]
	call	?IsWindowChildOf@ImGui@@YA_NPEAUImGuiWindow@@0@Z ; ImGui::IsWindowChildOf
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN11@IsWindowHo
; Line 6695
	xor	al, al
	jmp	$LN1@IsWindowHo
$LN11@IsWindowHo:
; Line 6696
	jmp	SHORT $LN2@IsWindowHo
$LN12@IsWindowHo:
; Line 6698
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$1[rbp]
	cmp	QWORD PTR [rax+7192], rcx
	je	SHORT $LN13@IsWindowHo
; Line 6699
	xor	al, al
	jmp	SHORT $LN1@IsWindowHo
$LN13@IsWindowHo:
$LN2@IsWindowHo:
$LN5@IsWindowHo:
; Line 6704
	mov	edx, DWORD PTR flags$[rbp]
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+7192]
	call	?IsWindowContentHoverable@@YA_NPEAUImGuiWindow@@H@Z ; IsWindowContentHoverable
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN14@IsWindowHo
; Line 6705
	xor	al, al
	jmp	SHORT $LN1@IsWindowHo
$LN14@IsWindowHo:
; Line 6706
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN15@IsWindowHo
; Line 6707
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	je	SHORT $LN16@IsWindowHo
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7273]
	test	eax, eax
	jne	SHORT $LN16@IsWindowHo
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7192]
	mov	rcx, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+84]
	cmp	DWORD PTR [rcx+7260], eax
	je	SHORT $LN16@IsWindowHo
; Line 6708
	xor	al, al
	jmp	SHORT $LN1@IsWindowHo
$LN16@IsWindowHo:
$LN15@IsWindowHo:
; Line 6709
	mov	al, 1
$LN1@IsWindowHo:
; Line 6710
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?IsWindowHovered@ImGui@@YA_NH@Z ENDP			; ImGui::IsWindowHovered
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsWindowFocused@ImGui@@YA_NH@Z
_TEXT	SEGMENT
g$ = 8
tv140 = 212
tv135 = 212
tv92 = 212
tv86 = 212
tv78 = 212
tv68 = 212
flags$ = 256
?IsWindowFocused@ImGui@@YA_NH@Z PROC			; ImGui::IsWindowFocused, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6713
$LN21:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6714
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6716
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN4@IsWindowFo
; Line 6717
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN10@IsWindowFo
	mov	DWORD PTR tv68[rbp], 1
	jmp	SHORT $LN11@IsWindowFo
$LN10@IsWindowFo:
	mov	DWORD PTR tv68[rbp], 0
$LN11@IsWindowFo:
	movzx	eax, BYTE PTR tv68[rbp]
	jmp	$LN1@IsWindowFo
$LN4@IsWindowFo:
; Line 6719
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7184], 0
	jne	SHORT $LN12@IsWindowFo
	mov	eax, DWORD PTR ?__LINE__Var@?0??IsWindowFocused@ImGui@@YA_NH@Z@4JA
	add	eax, 6
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CA@CLMFAGNB@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN12@IsWindowFo:
; Line 6720
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 3
	mov	DWORD PTR tv78[rbp], eax
	cmp	DWORD PTR tv78[rbp], 1
	je	$LN7@IsWindowFo
	cmp	DWORD PTR tv78[rbp], 2
	je	SHORT $LN6@IsWindowFo
	cmp	DWORD PTR tv78[rbp], 3
	je	SHORT $LN5@IsWindowFo
	jmp	$LN8@IsWindowFo
$LN5@IsWindowFo:
; Line 6723
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN13@IsWindowFo
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+7184]
	mov	rcx, QWORD PTR [rcx+904]
	cmp	QWORD PTR [rax+904], rcx
	jne	SHORT $LN13@IsWindowFo
	mov	DWORD PTR tv86[rbp], 1
	jmp	SHORT $LN14@IsWindowFo
$LN13@IsWindowFo:
	mov	DWORD PTR tv86[rbp], 0
$LN14@IsWindowFo:
	movzx	eax, BYTE PTR tv86[rbp]
	jmp	$LN1@IsWindowFo
$LN6@IsWindowFo:
; Line 6725
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+904]
	cmp	QWORD PTR [rcx+7624], rax
	jne	SHORT $LN15@IsWindowFo
	mov	DWORD PTR tv92[rbp], 1
	jmp	SHORT $LN16@IsWindowFo
$LN15@IsWindowFo:
	mov	DWORD PTR tv92[rbp], 0
$LN16@IsWindowFo:
	movzx	eax, BYTE PTR tv92[rbp]
	jmp	$LN1@IsWindowFo
$LN7@IsWindowFo:
; Line 6727
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN17@IsWindowFo
	mov	rax, QWORD PTR g$[rbp]
	mov	rdx, QWORD PTR [rax+7184]
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+7624]
	call	?IsWindowChildOf@ImGui@@YA_NPEAUImGuiWindow@@0@Z ; ImGui::IsWindowChildOf
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN17@IsWindowFo
	mov	DWORD PTR tv135[rbp], 1
	jmp	SHORT $LN18@IsWindowFo
$LN17@IsWindowFo:
	mov	DWORD PTR tv135[rbp], 0
$LN18@IsWindowFo:
	movzx	eax, BYTE PTR tv135[rbp]
	jmp	SHORT $LN1@IsWindowFo
$LN8@IsWindowFo:
; Line 6729
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+7184]
	cmp	QWORD PTR [rax+7624], rcx
	jne	SHORT $LN19@IsWindowFo
	mov	DWORD PTR tv140[rbp], 1
	jmp	SHORT $LN20@IsWindowFo
$LN19@IsWindowFo:
	mov	DWORD PTR tv140[rbp], 0
$LN20@IsWindowFo:
	movzx	eax, BYTE PTR tv140[rbp]
$LN1@IsWindowFo:
; Line 6731
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsWindowFocused@ImGui@@YA_NH@Z ENDP			; ImGui::IsWindowFocused
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsWindowCollapsed@ImGui@@YA_NXZ
_TEXT	SEGMENT
window$ = 8
?IsWindowCollapsed@ImGui@@YA_NXZ PROC			; ImGui::IsWindowCollapsed, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6865
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6866
	call	?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindowRead
	mov	QWORD PTR window$[rbp], rax
; Line 6867
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+145]
; Line 6868
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsWindowCollapsed@ImGui@@YA_NXZ ENDP			; ImGui::IsWindowCollapsed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsWindowAppearing@ImGui@@YA_NXZ
_TEXT	SEGMENT
window$ = 8
?IsWindowAppearing@ImGui@@YA_NXZ PROC			; ImGui::IsWindowAppearing, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6871
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6872
	call	?GetCurrentWindowRead@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindowRead
	mov	QWORD PTR window$[rbp], rax
; Line 6873
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+148]
; Line 6874
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?IsWindowAppearing@ImGui@@YA_NXZ ENDP			; ImGui::IsWindowAppearing
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EndChild@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
sz$5 = 72
parent_window$6 = 104
bb$7 = 136
$T8 = 372
$T9 = 404
$T10 = 452
$T11 = 484
$T12 = 516
$T13 = 548
tv204 = 564
tv199 = 568
tv197 = 576
tv202 = 584
__$ArrayPad$ = 592
?EndChild@ImGui@@YAXXZ PROC				; ImGui::EndChild, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5046
$LN14:
	push	rbp
	push	rdi
	sub	rsp, 648				; 00000288H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 106				; 0000006aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5047
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 5048
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 5050
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7070]
	test	eax, eax
	je	SHORT $LN12@EndChild
	mov	eax, DWORD PTR ?__LINE__Var@?0??EndChild@ImGui@@YAXXZ@4JA
	add	eax, 4
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DE@LOOJAFFK@?$AAg?$AA?4?$AAW?$AAi?$AAt?$AAh?$AAi?$AAn?$AAE?$AAn?$AAd?$AAC?$AAh?$AAi?$AAl@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN12@EndChild:
; Line 5051
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	jne	SHORT $LN13@EndChild
	mov	eax, DWORD PTR ?__LINE__Var@?0??EndChild@ImGui@@YAXXZ@4JA
	add	eax, 5
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1FK@ONDIMCKL@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN13@EndChild:
; Line 5053
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7070], 1
; Line 5054
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, WORD PTR [rax+154]
	cmp	eax, 1
	jle	SHORT $LN2@EndChild
; Line 5056
	call	?End@ImGui@@YAXXZ			; ImGui::End
; Line 5057
	jmp	$LN3@EndChild
$LN2@EndChild:
; Line 5060
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR sz$5[rbp], rax
; Line 5061
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+170]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN4@EndChild
; Line 5062
	movss	xmm1, DWORD PTR sz$5[rbp]
	movss	xmm0, DWORD PTR __real@40800000
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR sz$5[rbp], xmm0
$LN4@EndChild:
; Line 5063
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+170]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN5@EndChild
; Line 5064
	movss	xmm1, DWORD PTR sz$5[rbp+4]
	movss	xmm0, DWORD PTR __real@40800000
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR sz$5[rbp+4], xmm0
$LN5@EndChild:
; Line 5065
	call	?End@ImGui@@YAXXZ			; ImGui::End
; Line 5067
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR parent_window$6[rbp], rax
; Line 5068
	mov	rax, QWORD PTR parent_window$6[rbp]
	add	rax, 216				; 000000d8H
	lea	r8, QWORD PTR sz$5[rbp]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T8[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rcx, QWORD PTR parent_window$6[rbp]
	add	rcx, 216				; 000000d8H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR bb$7[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
; Line 5069
	movss	xmm1, DWORD PTR __real@bf800000
	lea	rcx, QWORD PTR sz$5[rbp]
	call	?ItemSize@ImGui@@YAXAEBUImVec2@@M@Z	; ImGui::ItemSize
; Line 5070
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, WORD PTR [rax+336]
	test	eax, eax
	jne	SHORT $LN8@EndChild
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+345]
	test	eax, eax
	je	$LN6@EndChild
$LN8@EndChild:
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 8388608				; 00800000H
	test	eax, eax
	jne	$LN6@EndChild
; Line 5072
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rax, QWORD PTR window$[rbp]
	mov	edx, DWORD PTR [rax+88]
	lea	rcx, QWORD PTR bb$7[rbp]
	call	?ItemAdd@ImGui@@YA_NAEBUImRect@@IPEBU2@H@Z ; ImGui::ItemAdd
; Line 5073
	mov	r8d, 1
	mov	rax, QWORD PTR window$[rbp]
	mov	edx, DWORD PTR [rax+88]
	lea	rcx, QWORD PTR bb$7[rbp]
	call	?RenderNavHighlight@ImGui@@YAXAEBUImRect@@IH@Z ; ImGui::RenderNavHighlight
; Line 5076
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, WORD PTR [rax+336]
	test	eax, eax
	jne	$LN9@EndChild
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	cmp	QWORD PTR window$[rbp], rax
	jne	$LN9@EndChild
; Line 5077
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7632]
	mov	DWORD PTR tv204[rbp], eax
	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR $T10[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r8, rax
	lea	rdx, QWORD PTR bb$7[rbp+8]
	lea	rcx, QWORD PTR $T11[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv199[rbp], rax
	movss	xmm2, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@40000000
	lea	rcx, QWORD PTR $T12[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r8, rax
	lea	rdx, QWORD PTR bb$7[rbp]
	lea	rcx, QWORD PTR $T13[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv197[rbp], rax
	mov	r8, QWORD PTR tv199[rbp]
	mov	rdx, QWORD PTR tv197[rbp]
	lea	rcx, QWORD PTR $T9[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
	mov	QWORD PTR tv202[rbp], rax
	mov	r8d, 2
	mov	edx, DWORD PTR tv204[rbp]
	mov	rcx, QWORD PTR tv202[rbp]
	call	?RenderNavHighlight@ImGui@@YAXAEBUImRect@@IH@Z ; ImGui::RenderNavHighlight
$LN9@EndChild:
; Line 5078
	jmp	SHORT $LN7@EndChild
$LN6@EndChild:
; Line 5082
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR bb$7[rbp]
	call	?ItemAdd@ImGui@@YA_NAEBUImRect@@IPEBU2@H@Z ; ImGui::ItemAdd
$LN7@EndChild:
; Line 5084
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+7192], rcx
	jne	SHORT $LN10@EndChild
; Line 5085
	mov	rax, QWORD PTR parent_window$6[rbp]
	mov	eax, DWORD PTR [rax+296]
	bts	eax, 7
	mov	rcx, QWORD PTR parent_window$6[rbp]
	mov	DWORD PTR [rcx+296], eax
$LN10@EndChild:
$LN3@EndChild:
; Line 5087
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7070], 0
; Line 5088
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR __real@ff7fffff
	movss	DWORD PTR [rax+12528], xmm0
; Line 5089
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?EndChild@ImGui@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+616]
	pop	rdi
	pop	rbp
	ret	0
?EndChild@ImGui@@YAXXZ ENDP				; ImGui::EndChild
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BeginChild@ImGui@@YA_NIAEBUImVec2@@_NH@Z
_TEXT	SEGMENT
id$ = 224
size_arg$ = 232
border$ = 240
extra_flags$ = 248
?BeginChild@ImGui@@YA_NIAEBUImVec2@@_NH@Z PROC		; ImGui::BeginChild, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5040
$LN4:
	mov	DWORD PTR [rsp+32], r9d
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5041
	cmp	DWORD PTR id$[rbp], 0
	jne	SHORT $LN3@BeginChild
	mov	eax, DWORD PTR ?__LINE__Var@?0??BeginChild@ImGui@@YA_NIAEBUImVec2@@_NH@Z@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BA@DDOODPOM@?$AAi?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@BeginChild:
; Line 5042
	mov	eax, DWORD PTR extra_flags$[rbp]
	mov	DWORD PTR [rsp+32], eax
	movzx	r9d, BYTE PTR border$[rbp]
	mov	r8, QWORD PTR size_arg$[rbp]
	mov	edx, DWORD PTR id$[rbp]
	xor	ecx, ecx
	call	?BeginChildEx@ImGui@@YA_NPEBDIAEBUImVec2@@_NH@Z ; ImGui::BeginChildEx
; Line 5043
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?BeginChild@ImGui@@YA_NIAEBUImVec2@@_NH@Z ENDP		; ImGui::BeginChild
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BeginChild@ImGui@@YA_NPEBDAEBUImVec2@@_NH@Z
_TEXT	SEGMENT
window$ = 8
str_id$ = 256
size_arg$ = 264
border$ = 272
extra_flags$ = 280
?BeginChild@ImGui@@YA_NPEBDAEBUImVec2@@_NH@Z PROC	; ImGui::BeginChild, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5034
$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5035
	call	?GetCurrentWindow@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetCurrentWindow
	mov	QWORD PTR window$[rbp], rax
; Line 5036
	xor	r8d, r8d
	mov	rdx, QWORD PTR str_id$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetID@ImGuiWindow@@QEAAIPEBD0@Z	; ImGuiWindow::GetID
	mov	ecx, DWORD PTR extra_flags$[rbp]
	mov	DWORD PTR [rsp+32], ecx
	movzx	r9d, BYTE PTR border$[rbp]
	mov	r8, QWORD PTR size_arg$[rbp]
	mov	edx, eax
	mov	rcx, QWORD PTR str_id$[rbp]
	call	?BeginChildEx@ImGui@@YA_NPEBDIAEBUImVec2@@_NH@Z ; ImGui::BeginChildEx
; Line 5037
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?BeginChild@ImGui@@YA_NPEBDAEBUImVec2@@_NH@Z ENDP	; ImGui::BeginChild
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?End@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
window$ = 40
tv156 = 248
?End@ImGui@@YAXXZ PROC					; ImGui::End, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 6385
$LN15:
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 6386
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 6387
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	QWORD PTR window$[rbp], rax
; Line 6390
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7136], 1
	jg	SHORT $LN2@End
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7069]
	test	eax, eax
	je	SHORT $LN2@End
; Line 6392
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7136], 1
	jle	SHORT $LN8@End
	lea	rax, OFFSET FLAT:??_C@_0BO@JOGPJJCM@Calling?5End?$CI?$CJ?5too?5many?5times?$CB@
	test	rax, rax
	jne	SHORT $LN9@End
$LN8@End:
	mov	eax, DWORD PTR ?__LINE__Var@?0??End@ImGui@@YAXXZ@4JA
	add	eax, 7
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1IG@DKOLGHNA@?$AA?$CI?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN9@End:
; Line 6393
	jmp	$LN1@End
$LN2@End:
; Line 6395
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7136], 0
	jg	SHORT $LN10@End
	mov	eax, DWORD PTR ?__LINE__Var@?0??End@ImGui@@YAXXZ@4JA
	add	eax, 10
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DM@FOOGCAMP@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN10@End:
; Line 6398
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN3@End
; Line 6399
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7070]
	test	eax, eax
	je	SHORT $LN11@End
	lea	rax, OFFSET FLAT:??_C@_0CE@DEHLBEMA@Must?5call?5EndChild?$CI?$CJ?5and?5not?5En@
	test	rax, rax
	jne	SHORT $LN12@End
$LN11@End:
	mov	eax, DWORD PTR ?__LINE__Var@?0??End@ImGui@@YAXXZ@4JA
	add	eax, 14
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1HI@MIOLBHIM@?$AA?$CI?$AAg?$AA?4?$AAW?$AAi?$AAt?$AAh?$AAi?$AAn?$AAE?$AAn?$AAd?$AAC?$AAh?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN12@End:
$LN3@End:
; Line 6402
	mov	rax, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+424], 0
	je	SHORT $LN4@End
; Line 6403
	call	?EndColumns@ImGui@@YAXXZ		; ImGui::EndColumns
$LN4@End:
; Line 6404
	call	?PopClipRect@ImGui@@YAXXZ		; ImGui::PopClipRect
; Line 6407
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	jne	SHORT $LN5@End
; Line 6408
	call	?LogFinish@ImGui@@YAXXZ			; ImGui::LogFinish
$LN5@End:
; Line 6411
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7136				; 00001be0H
	mov	rcx, rax
	call	?pop_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXXZ ; ImVector<ImGuiWindow *>::pop_back
; Line 6412
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	je	SHORT $LN6@End
; Line 6413
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7592				; 00001da8H
	mov	rcx, rax
	call	?pop_back@?$ImVector@UImGuiPopupData@@@@QEAAXXZ ; ImVector<ImGuiPopupData>::pop_back
$LN6@End:
; Line 6414
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 496				; 000001f0H
	mov	rcx, rax
	call	?CompareWithCurrentState@ImGuiStackSizes@@QEAAXXZ ; ImGuiStackSizes::CompareWithCurrentState
; Line 6415
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7136				; 00001be0H
	mov	rcx, rax
	call	?empty@?$ImVector@PEAUImGuiWindow@@@@QEBA_NXZ ; ImVector<ImGuiWindow *>::empty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@End
	mov	QWORD PTR tv156[rbp], 0
	jmp	SHORT $LN14@End
$LN13@End:
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7136				; 00001be0H
	mov	rcx, rax
	call	?back@?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@XZ ; ImVector<ImGuiWindow *>::back
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv156[rbp], rax
$LN14@End:
	mov	rcx, QWORD PTR tv156[rbp]
	call	?SetCurrentWindow@@YAXPEAUImGuiWindow@@@Z ; SetCurrentWindow
$LN1@End:
; Line 6416
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?End@ImGui@@YAXXZ ENDP					; ImGui::End
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Begin@ImGui@@YA_NPEBDPEA_NH@Z
_TEXT	SEGMENT
g$ = 8
style$ = 40
window$ = 72
window_just_created$ = 100
current_frame$ = 132
first_begin_of_the_frame$ = 164
window_just_activated_by_user$ = 196
popup_ref$21 = 232
parent_window_in_stack$ = 264
parent_window$ = 296
popup_ref$22 = 328
window_pos_set_by_api$ = 356
window_size_x_set_by_api$ = 388
window_size_y_set_by_api$ = 420
window_is_child_tooltip$23 = 452
window_title_visible_elsewhere$24 = 484
buf_len$25 = 520
window_just_appearing_after_hidden_for_resize$26 = 548
title_bar_rect$27 = 584
size_auto_fit$28 = 632
use_current_size_for_scrollbar_x$29 = 660
use_current_size_for_scrollbar_y$30 = 692
decoration_up_height$31 = 724
window_pos_with_pivot$32 = 756
viewport$33 = 792
viewport_rect$34 = 824
viewport_work_rect$35 = 872
visibility_padding$36 = 920
visibility_rect$37 = 952
want_focus$38 = 996
border_held$39 = 1028
resize_grip_col$40 = 1064
resize_grip_count$41 = 1108
resize_grip_draw_size$42 = 1140
avail_size_from_current_frame$43 = 1176
avail_size_from_last_frame$44 = 1208
needed_size_from_last_frame$45 = 1240
size_x_for_scrollbars$46 = 1268
size_y_for_scrollbars$47 = 1300
host_rect$48 = 1336
outer_rect$49 = 1384
title_bar_rect$50 = 1432
top_border_size$51 = 1476
dim_bg_for_modal$52 = 1508
dim_bg_for_window_list$53 = 1540
dim_bg_col$54 = 1572
bb$55 = 1608
render_decorations_in_parent$56 = 1652
window_to_highlight$57 = 1688
title_bar_is_highlight$58 = 1716
rounding$59 = 1748
bb$60 = 1784
allow_scrollbar_x$61 = 1828
allow_scrollbar_y$62 = 1860
work_rect_size_x$63 = 1892
work_rect_size_y$64 = 1924
skip_items$65 = 1956
$T66 = 3332
$T67 = 3368
$T68 = 3396
$T69 = 3444
$T70 = 3492
$T71 = 3528
$T72 = 3556
$T73 = 3592
$T74 = 3620
$T75 = 3656
$T76 = 3688
$T77 = 3716
$T78 = 3764
$T79 = 3796
$T80 = 3832
$T81 = 3860
$T82 = 3892
$T83 = 3924
$T84 = 3960
$T85 = 3988
$T86 = 4024
$T87 = 4052
$T88 = 4088
$T89 = 4116
$T90 = 4148
$T91 = 4180
$T92 = 4216
$T93 = 4244
$T94 = 4280
$T95 = 4308
$T96 = 4340
$T97 = 4372
$T98 = 4404
$T99 = 4440
$T100 = 4472
$T101 = 4500
$T102 = 4536
$T103 = 4564
$T104 = 4600
$T105 = 4628
$T106 = 4660
$T107 = 4696
$T108 = 4724
$T109 = 4760
$T110 = 4788
tv2099 = 4820
tv2065 = 4820
tv1984 = 4820
tv1964 = 4820
tv1860 = 4820
tv1824 = 4820
tv1725 = 4820
tv1702 = 4820
tv1631 = 4820
tv1611 = 4820
tv1601 = 4820
tv1575 = 4820
tv1550 = 4820
tv1547 = 4820
tv1492 = 4820
tv1417 = 4820
tv1404 = 4820
tv1398 = 4820
tv1340 = 4820
tv1323 = 4820
tv1314 = 4820
tv1307 = 4820
tv1287 = 4820
tv1270 = 4820
tv1249 = 4820
tv1233 = 4820
tv1212 = 4820
tv1112 = 4820
tv1103 = 4820
tv1083 = 4820
tv1075 = 4820
tv1068 = 4820
tv1065 = 4820
tv995 = 4820
tv986 = 4820
tv969 = 4820
tv819 = 4820
tv762 = 4820
tv730 = 4820
tv714 = 4820
tv639 = 4820
tv598 = 4820
tv574 = 4820
tv557 = 4820
tv482 = 4820
tv430 = 4820
tv426 = 4820
tv346 = 4820
tv333 = 4820
tv285 = 4820
tv206 = 4820
tv182 = 4820
tv176 = 4820
tv160 = 4820
tv155 = 4820
tv147 = 4820
tv94 = 4820
tv1952 = 4824
tv1881 = 4824
tv1875 = 4824
tv1847 = 4824
tv1837 = 4824
tv1769 = 4824
tv1641 = 4824
tv1621 = 4824
tv1600 = 4824
tv1574 = 4824
tv1542 = 4824
tv1485 = 4824
tv1460 = 4824
tv1426 = 4824
tv1414 = 4824
tv1387 = 4824
tv1372 = 4824
tv1348 = 4824
tv1331 = 4824
tv1292 = 4824
tv1268 = 4824
tv1231 = 4824
tv1140 = 4824
tv1129 = 4824
tv1118 = 4824
tv1091 = 4824
tv1061 = 4824
tv1041 = 4824
tv967 = 4824
tv933 = 4824
tv837 = 4824
tv802 = 4824
tv756 = 4824
tv596 = 4824
tv477 = 4824
tv445 = 4824
tv266 = 4824
tv260 = 4824
tv245 = 4824
tv240 = 4824
tv219 = 4824
tv216 = 4824
tv171 = 4824
tv1597 = 4828
tv1571 = 4828
tv1274 = 4828
tv1237 = 4828
tv600 = 4828
tv1918 = 4832
tv1767 = 4832
tv1540 = 4832
tv1458 = 4832
tv1058 = 4832
tv1035 = 4832
tv931 = 4832
tv835 = 4832
tv759 = 4832
tv223 = 4832
tv1456 = 4836
tv1056 = 4840
tv1039 = 4840
tv843 = 4840
tv841 = 4848
__$ArrayPad$ = 4856
name$ = 4896
p_open$ = 4904
flags$ = 4912
?Begin@ImGui@@YA_NPEBDPEA_NH@Z PROC			; ImGui::Begin, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 5741
$LN240:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	mov	eax, 4928				; 00001340H
	call	__chkstk
	sub	rsp, rax
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 880				; 00000370H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+4968]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 5742
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 5743
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 5472				; 00001560H
	mov	QWORD PTR style$[rbp], rax
; Line 5744
	cmp	QWORD PTR name$[rbp], 0
	je	SHORT $LN108@Begin
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR name$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	jne	SHORT $LN109@Begin
$LN108@Begin:
	mov	eax, DWORD PTR ?__LINE__Var@?0??Begin@ImGui@@YA_NPEBDPEA_NH@Z@4JA
	add	eax, 3
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1DK@CDEKKEL@?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AAa@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN109@Begin:
; Line 5745
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7068]
	test	eax, eax
	jne	SHORT $LN110@Begin
	mov	eax, DWORD PTR ?__LINE__Var@?0??Begin@ImGui@@YA_NPEBDPEA_NH@Z@4JA
	add	eax, 4
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@FEBKCKMN@?$AAg?$AA?4?$AAW?$AAi?$AAt?$AAh?$AAi?$AAn?$AAF?$AAr?$AAa?$AAm?$AAe?$AAS?$AAc@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN110@Begin:
; Line 5746
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7056]
	cmp	DWORD PTR [rax+7060], ecx
	jne	SHORT $LN111@Begin
	mov	eax, DWORD PTR ?__LINE__Var@?0??Begin@ImGui@@YA_NPEBDPEA_NH@Z@4JA
	add	eax, 5
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EE@GGBMECGG@?$AAg?$AA?4?$AAF?$AAr?$AAa?$AAm?$AAe?$AAC?$AAo?$AAu?$AAn?$AAt?$AAE?$AAn?$AAd@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN111@Begin:
; Line 5749
	mov	rcx, QWORD PTR name$[rbp]
	call	?FindWindowByName@ImGui@@YAPEAUImGuiWindow@@PEBD@Z ; ImGui::FindWindowByName
	mov	QWORD PTR window$[rbp], rax
; Line 5750
	cmp	QWORD PTR window$[rbp], 0
	jne	SHORT $LN112@Begin
	mov	BYTE PTR tv94[rbp], 1
	jmp	SHORT $LN113@Begin
$LN112@Begin:
	mov	BYTE PTR tv94[rbp], 0
$LN113@Begin:
	movzx	eax, BYTE PTR tv94[rbp]
	mov	BYTE PTR window_just_created$[rbp], al
; Line 5751
	movzx	eax, BYTE PTR window_just_created$[rbp]
	test	eax, eax
	je	SHORT $LN2@Begin
; Line 5752
	mov	edx, DWORD PTR flags$[rbp]
	mov	rcx, QWORD PTR name$[rbp]
	call	?CreateNewWindow@@YAPEAUImGuiWindow@@PEBDH@Z ; CreateNewWindow
	mov	QWORD PTR window$[rbp], rax
$LN2@Begin:
; Line 5755
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 786944				; 000c0200H
	cmp	eax, 786944				; 000c0200H
	jne	SHORT $LN3@Begin
; Line 5756
	mov	eax, DWORD PTR flags$[rbp]
	or	eax, 6
	mov	DWORD PTR flags$[rbp], eax
$LN3@Begin:
; Line 5758
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 8388608				; 00800000H
	test	eax, eax
	je	SHORT $LN4@Begin
; Line 5759
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	jne	SHORT $LN114@Begin
	mov	eax, DWORD PTR ?__LINE__Var@?0??Begin@ImGui@@YA_NPEBDPEA_NH@Z@4JA
	add	eax, 18
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EK@IADLALGG@?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AAI?$AAm?$AAG?$AAu?$AAi?$AAW?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN114@Begin:
$LN4@Begin:
; Line 5761
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7056]
	mov	DWORD PTR current_frame$[rbp], eax
; Line 5762
	mov	rax, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR current_frame$[rbp]
	cmp	DWORD PTR [rax+632], ecx
	je	SHORT $LN115@Begin
	mov	BYTE PTR tv147[rbp], 1
	jmp	SHORT $LN116@Begin
$LN115@Begin:
	mov	BYTE PTR tv147[rbp], 0
$LN116@Begin:
	movzx	eax, BYTE PTR tv147[rbp]
	mov	BYTE PTR first_begin_of_the_frame$[rbp], al
; Line 5763
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7136], 0
	jne	SHORT $LN117@Begin
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7069]
	test	eax, eax
	je	SHORT $LN117@Begin
	mov	DWORD PTR tv155[rbp], 1
	jmp	SHORT $LN118@Begin
$LN117@Begin:
	mov	DWORD PTR tv155[rbp], 0
$LN118@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movzx	ecx, BYTE PTR tv155[rbp]
	mov	BYTE PTR [rax+150], cl
; Line 5766
	mov	eax, DWORD PTR current_frame$[rbp]
	dec	eax
	mov	rcx, QWORD PTR window$[rbp]
	cmp	DWORD PTR [rcx+632], eax
	jge	SHORT $LN119@Begin
	mov	DWORD PTR tv160[rbp], 1
	jmp	SHORT $LN120@Begin
$LN119@Begin:
	mov	DWORD PTR tv160[rbp], 0
$LN120@Begin:
	movzx	eax, BYTE PTR tv160[rbp]
	mov	BYTE PTR window_just_activated_by_user$[rbp], al
; Line 5767
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	je	$LN5@Begin
; Line 5769
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv171[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	edx, DWORD PTR [rax+7592]
	mov	rcx, QWORD PTR tv171[rbp]
	call	??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ; ImVector<ImGuiPopupData>::operator[]
	mov	QWORD PTR popup_ref$21[rbp], rax
; Line 5770
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR popup_ref$21[rbp]
	mov	ecx, DWORD PTR [rcx]
	cmp	DWORD PTR [rax+164], ecx
	je	SHORT $LN121@Begin
	mov	DWORD PTR tv176[rbp], 1
	jmp	SHORT $LN122@Begin
$LN121@Begin:
	mov	DWORD PTR tv176[rbp], 0
$LN122@Begin:
	movzx	eax, BYTE PTR window_just_activated_by_user$[rbp]
	or	eax, DWORD PTR tv176[rbp]
	mov	BYTE PTR window_just_activated_by_user$[rbp], al
; Line 5771
	mov	rax, QWORD PTR popup_ref$21[rbp]
	mov	rax, QWORD PTR [rax+8]
	cmp	QWORD PTR window$[rbp], rax
	je	SHORT $LN123@Begin
	mov	DWORD PTR tv182[rbp], 1
	jmp	SHORT $LN124@Begin
$LN123@Begin:
	mov	DWORD PTR tv182[rbp], 0
$LN124@Begin:
	movzx	eax, BYTE PTR window_just_activated_by_user$[rbp]
	or	eax, DWORD PTR tv182[rbp]
	mov	BYTE PTR window_just_activated_by_user$[rbp], al
$LN5@Begin:
; Line 5773
	mov	rax, QWORD PTR window$[rbp]
	movzx	ecx, BYTE PTR window_just_activated_by_user$[rbp]
	mov	BYTE PTR [rax+148], cl
; Line 5774
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+148]
	test	eax, eax
	je	SHORT $LN6@Begin
; Line 5775
	mov	r8b, 1
	mov	edx, 8
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetWindowConditionAllowFlags@@YAXPEAUImGuiWindow@@H_N@Z ; SetWindowConditionAllowFlags
$LN6@Begin:
; Line 5778
	movzx	eax, BYTE PTR first_begin_of_the_frame$[rbp]
	test	eax, eax
	je	SHORT $LN7@Begin
; Line 5780
	mov	rax, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR flags$[rbp]
	mov	DWORD PTR [rax+12], ecx
; Line 5781
	mov	rax, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR current_frame$[rbp]
	mov	DWORD PTR [rax+632], ecx
; Line 5782
	mov	rax, QWORD PTR g$[rbp]
	cvtsd2ss xmm0, QWORD PTR [rax+7048]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+636], xmm0
; Line 5783
	xor	eax, eax
	mov	rcx, QWORD PTR window$[rbp]
	mov	WORD PTR [rcx+156], ax
; Line 5784
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, WORD PTR [rax+7168]
	mov	WORD PTR tv206[rbp], ax
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7168]
	inc	eax
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7168], eax
	mov	rax, QWORD PTR window$[rbp]
	movzx	ecx, WORD PTR tv206[rbp]
	mov	WORD PTR [rax+158], cx
; Line 5785
	jmp	SHORT $LN8@Begin
$LN7@Begin:
; Line 5788
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	mov	DWORD PTR flags$[rbp], eax
$LN8@Begin:
; Line 5792
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7136				; 00001be0H
	mov	rcx, rax
	call	?empty@?$ImVector@PEAUImGuiWindow@@@@QEBA_NXZ ; ImVector<ImGuiWindow *>::empty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN125@Begin
	mov	QWORD PTR tv216[rbp], 0
	jmp	SHORT $LN126@Begin
$LN125@Begin:
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7136				; 00001be0H
	mov	rcx, rax
	call	?back@?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@XZ ; ImVector<ImGuiWindow *>::back
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv216[rbp], rax
$LN126@Begin:
	mov	rax, QWORD PTR tv216[rbp]
	mov	QWORD PTR parent_window_in_stack$[rbp], rax
; Line 5793
	movzx	eax, BYTE PTR first_begin_of_the_frame$[rbp]
	test	eax, eax
	je	SHORT $LN129@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 83886080				; 05000000H
	test	eax, eax
	je	SHORT $LN127@Begin
	mov	rax, QWORD PTR parent_window_in_stack$[rbp]
	mov	QWORD PTR tv219[rbp], rax
	jmp	SHORT $LN128@Begin
$LN127@Begin:
	mov	QWORD PTR tv219[rbp], 0
$LN128@Begin:
	mov	rax, QWORD PTR tv219[rbp]
	mov	QWORD PTR tv223[rbp], rax
	jmp	SHORT $LN130@Begin
$LN129@Begin:
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+896]
	mov	QWORD PTR tv223[rbp], rax
$LN130@Begin:
	mov	rax, QWORD PTR tv223[rbp]
	mov	QWORD PTR parent_window$[rbp], rax
; Line 5794
	cmp	QWORD PTR parent_window$[rbp], 0
	jne	SHORT $LN131@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN131@Begin
	mov	eax, DWORD PTR ?__LINE__Var@?0??Begin@ImGui@@YA_NPEBDPEA_NH@Z@4JA
	add	eax, 53					; 00000035H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1HM@BDHFFAHO@?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA_?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CB@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN131@Begin:
; Line 5797
	mov	rax, QWORD PTR window$[rbp]
	cmp	DWORD PTR [rax+200], 0
	jne	SHORT $LN9@Begin
; Line 5798
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 200				; 000000c8H
	mov	QWORD PTR tv240[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 8
	mov	rdx, rax
	mov	rcx, QWORD PTR tv240[rbp]
	call	?push_back@?$ImVector@I@@QEAAXAEBI@Z	; ImVector<unsigned int>::push_back
$LN9@Begin:
; Line 5802
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7136				; 00001be0H
	mov	QWORD PTR tv245[rbp], rax
	lea	rdx, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR tv245[rbp]
	call	?push_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z ; ImVector<ImGuiWindow *>::push_back
; Line 5803
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax+7184], rcx
; Line 5804
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 496				; 000001f0H
	mov	rcx, rax
	call	?SetToCurrentState@ImGuiStackSizes@@QEAAXXZ ; ImGuiStackSizes::SetToCurrentState
; Line 5805
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7184], 0
; Line 5807
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	je	SHORT $LN10@Begin
; Line 5809
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv260[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	edx, DWORD PTR [rax+7592]
	mov	rcx, QWORD PTR tv260[rbp]
	call	??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ; ImVector<ImGuiPopupData>::operator[]
	mov	QWORD PTR popup_ref$22[rbp], rax
; Line 5810
	mov	rax, QWORD PTR popup_ref$22[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax+8], rcx
; Line 5811
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7592				; 00001da8H
	mov	QWORD PTR tv266[rbp], rax
	mov	rdx, QWORD PTR popup_ref$22[rbp]
	mov	rcx, QWORD PTR tv266[rbp]
	call	?push_back@?$ImVector@UImGuiPopupData@@@@QEAAXAEBUImGuiPopupData@@@Z ; ImVector<ImGuiPopupData>::push_back
; Line 5812
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR popup_ref$22[rbp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax+164], ecx
$LN10@Begin:
; Line 5816
	movzx	eax, BYTE PTR first_begin_of_the_frame$[rbp]
	test	eax, eax
	je	SHORT $LN11@Begin
; Line 5817
	mov	r8, QWORD PTR parent_window$[rbp]
	mov	edx, DWORD PTR flags$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?UpdateWindowParentAndRootLinks@ImGui@@YAXPEAUImGuiWindow@@H0@Z ; ImGui::UpdateWindowParentAndRootLinks
$LN11@Begin:
; Line 5821
	mov	BYTE PTR window_pos_set_by_api$[rbp], 0
; Line 5822
	mov	BYTE PTR window_size_x_set_by_api$[rbp], 0
	mov	BYTE PTR window_size_y_set_by_api$[rbp], 0
; Line 5823
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7344]
	and	eax, 1
	test	eax, eax
	je	$LN12@Begin
; Line 5825
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+180]
	shl	eax, 24
	sar	eax, 24
	mov	rcx, QWORD PTR g$[rbp]
	and	eax, DWORD PTR [rcx+7348]
	test	eax, eax
	je	SHORT $LN132@Begin
	mov	DWORD PTR tv285[rbp], 1
	jmp	SHORT $LN133@Begin
$LN132@Begin:
	mov	DWORD PTR tv285[rbp], 0
$LN133@Begin:
	movzx	eax, BYTE PTR tv285[rbp]
	mov	BYTE PTR window_pos_set_by_api$[rbp], al
; Line 5826
	movzx	eax, BYTE PTR window_pos_set_by_api$[rbp]
	test	eax, eax
	je	SHORT $LN13@Begin
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7368				; 00001cc8H
	mov	rcx, rax
	call	?ImLengthSqr@@YAMAEBUImVec2@@@Z		; ImLengthSqr
	comiss	xmm0, DWORD PTR __real@3727c5ac
	jbe	SHORT $LN13@Begin
; Line 5830
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7360]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+184], rax
; Line 5831
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7368]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+192], rax
; Line 5832
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+180]
	shl	eax, 24
	sar	eax, 24
	and	eax, -15
	and	eax, 255				; 000000ffH
	mov	rcx, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR [rcx+180]
	and	ecx, -256				; ffffffffffffff00H
	or	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+180], eax
; Line 5833
	jmp	SHORT $LN14@Begin
$LN13@Begin:
; Line 5836
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7360				; 00001cc0H
	mov	rcx, QWORD PTR g$[rbp]
	mov	r8d, DWORD PTR [rcx+7348]
	mov	rdx, rax
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z ; ImGui::SetWindowPos
$LN14@Begin:
$LN12@Begin:
; Line 5839
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7344]
	and	eax, 2
	test	eax, eax
	je	$LN15@Begin
; Line 5841
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+180]
	shl	eax, 16
	sar	eax, 24
	mov	rcx, QWORD PTR g$[rbp]
	and	eax, DWORD PTR [rcx+7352]
	test	eax, eax
	je	SHORT $LN134@Begin
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7376]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN134@Begin
	mov	DWORD PTR tv333[rbp], 1
	jmp	SHORT $LN135@Begin
$LN134@Begin:
	mov	DWORD PTR tv333[rbp], 0
$LN135@Begin:
	movzx	eax, BYTE PTR tv333[rbp]
	mov	BYTE PTR window_size_x_set_by_api$[rbp], al
; Line 5842
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+180]
	shl	eax, 16
	sar	eax, 24
	mov	rcx, QWORD PTR g$[rbp]
	and	eax, DWORD PTR [rcx+7352]
	test	eax, eax
	je	SHORT $LN136@Begin
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7380]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN136@Begin
	mov	DWORD PTR tv346[rbp], 1
	jmp	SHORT $LN137@Begin
$LN136@Begin:
	mov	DWORD PTR tv346[rbp], 0
$LN137@Begin:
	movzx	eax, BYTE PTR tv346[rbp]
	mov	BYTE PTR window_size_y_set_by_api$[rbp], al
; Line 5843
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7376				; 00001cd0H
	mov	rcx, QWORD PTR g$[rbp]
	mov	r8d, DWORD PTR [rcx+7352]
	mov	rdx, rax
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetWindowSize@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z ; ImGui::SetWindowSize
$LN15@Begin:
; Line 5845
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7344]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN16@Begin
; Line 5847
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7392]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN17@Begin
; Line 5849
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+7392]
	movss	DWORD PTR [rax+108], xmm0
; Line 5850
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+116], xmm0
$LN17@Begin:
; Line 5852
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7396]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN18@Begin
; Line 5854
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+7396]
	movss	DWORD PTR [rax+112], xmm0
; Line 5855
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+120], xmm0
$LN18@Begin:
$LN16@Begin:
; Line 5858
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7344]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN19@Begin
; Line 5859
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7384]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+56], rax
	jmp	SHORT $LN20@Begin
$LN19@Begin:
; Line 5860
	movzx	eax, BYTE PTR first_begin_of_the_frame$[rbp]
	test	eax, eax
	je	SHORT $LN21@Begin
; Line 5861
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T66[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T67[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR $T67[rbp]
	mov	QWORD PTR [rax+56], rcx
$LN21@Begin:
$LN20@Begin:
; Line 5862
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7344]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN22@Begin
; Line 5863
	mov	rax, QWORD PTR g$[rbp]
	mov	r8d, DWORD PTR [rax+7356]
	mov	rax, QWORD PTR g$[rbp]
	movzx	edx, BYTE PTR [rax+7400]
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetWindowCollapsed@ImGui@@YAXPEAUImGuiWindow@@_NH@Z ; ImGui::SetWindowCollapsed
$LN22@Begin:
; Line 5864
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7344]
	and	eax, 32					; 00000020H
	test	eax, eax
	je	SHORT $LN23@Begin
; Line 5865
	mov	rcx, QWORD PTR window$[rbp]
	call	?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::FocusWindow
$LN23@Begin:
; Line 5866
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+148]
	test	eax, eax
	je	SHORT $LN24@Begin
; Line 5867
	xor	r8d, r8d
	mov	edx, 8
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetWindowConditionAllowFlags@@YAXPEAUImGuiWindow@@H_N@Z ; SetWindowConditionAllowFlags
$LN24@Begin:
; Line 5870
	movzx	eax, BYTE PTR first_begin_of_the_frame$[rbp]
	test	eax, eax
	je	$LN25@Begin
; Line 5873
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN138@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 33554432				; 02000000H
	test	eax, eax
	je	SHORT $LN138@Begin
	mov	BYTE PTR tv426[rbp], 1
	jmp	SHORT $LN139@Begin
$LN138@Begin:
	mov	BYTE PTR tv426[rbp], 0
$LN139@Begin:
	movzx	eax, BYTE PTR tv426[rbp]
	mov	BYTE PTR window_is_child_tooltip$23[rbp], al
; Line 5874
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+142], 1
; Line 5875
	cmp	QWORD PTR p_open$[rbp], 0
	je	SHORT $LN140@Begin
	mov	DWORD PTR tv430[rbp], 1
	jmp	SHORT $LN141@Begin
$LN140@Begin:
	mov	DWORD PTR tv430[rbp], 0
$LN141@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movzx	ecx, BYTE PTR tv430[rbp]
	mov	BYTE PTR [rax+151], cl
; Line 5876
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@7f7fffff
	movss	xmm2, DWORD PTR __real@ff7fffff
	movss	xmm1, DWORD PTR __real@ff7fffff
	lea	rcx, QWORD PTR $T69[rbp]
	call	??0ImVec4@@QEAA@MMMM@Z			; ImVec4::ImVec4
	mov	rdx, rax
	lea	rcx, QWORD PTR $T68[rbp]
	call	??0ImRect@@QEAA@AEBUImVec4@@@Z		; ImRect::ImRect
	mov	rax, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR $T68[rbp]
	lea	rdi, QWORD PTR [rax+592]
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
; Line 5877
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 200				; 000000c8H
	mov	QWORD PTR tv445[rbp], rax
	mov	edx, 1
	mov	rcx, QWORD PTR tv445[rbp]
	call	?resize@?$ImVector@I@@QEAAXH@Z		; ImVector<unsigned int>::resize
; Line 5878
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR [rax+688]
	call	?_ResetForNewFrame@ImDrawList@@QEAAXXZ	; ImDrawList::_ResetForNewFrame
; Line 5879
	mov	rax, QWORD PTR window$[rbp]
	mov	DWORD PTR [rax+432], -1
; Line 5882
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+984]
	test	eax, eax
	je	SHORT $LN27@Begin
; Line 5883
	mov	rcx, QWORD PTR window$[rbp]
	call	?GcAwakeTransientWindowBuffers@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::GcAwakeTransientWindowBuffers
$LN27@Begin:
; Line 5887
	mov	BYTE PTR window_title_visible_elsewhere$24[rbp], 0
; Line 5888
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7944], 0
	je	SHORT $LN28@Begin
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 524288				; 00080000H
	test	eax, eax
	jne	SHORT $LN28@Begin
; Line 5889
	mov	BYTE PTR window_title_visible_elsewhere$24[rbp], 1
$LN28@Begin:
; Line 5890
	movzx	eax, BYTE PTR window_title_visible_elsewhere$24[rbp]
	test	eax, eax
	je	$LN29@Begin
	movzx	eax, BYTE PTR window_just_created$[rbp]
	test	eax, eax
	jne	SHORT $LN29@Begin
	mov	rax, QWORD PTR name$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
$LL237@Begin:
	movzx	edx, BYTE PTR [rax]
	cmp	dl, BYTE PTR [rax+rcx]
	jne	SHORT $LN239@Begin
	inc	rax
	test	dl, dl
	jne	SHORT $LL237@Begin
	xor	eax, eax
	jmp	SHORT $LN238@Begin
$LN239@Begin:
	sbb	eax, eax
	or	eax, 1
$LN238@Begin:
	test	eax, eax
	je	SHORT $LN29@Begin
; Line 5892
	mov	rax, QWORD PTR window$[rbp]
	movsxd	rax, DWORD PTR [rax+80]
	mov	QWORD PTR buf_len$25[rbp], rax
; Line 5893
	mov	r8, QWORD PTR name$[rbp]
	lea	rdx, QWORD PTR buf_len$25[rbp]
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?ImStrdupcpy@@YAPEADPEADPEA_KPEBD@Z	; ImStrdupcpy
	mov	QWORD PTR tv477[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR tv477[rbp]
	mov	QWORD PTR [rax], rcx
; Line 5894
	mov	rax, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR buf_len$25[rbp]
	mov	DWORD PTR [rax+80], ecx
$LN29@Begin:
; Line 5900
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+177]
	test	eax, eax
	jle	SHORT $LN142@Begin
	mov	BYTE PTR tv482[rbp], 1
	jmp	SHORT $LN143@Begin
$LN142@Begin:
	mov	BYTE PTR tv482[rbp], 0
$LN143@Begin:
	movzx	eax, BYTE PTR tv482[rbp]
	mov	BYTE PTR window_just_appearing_after_hidden_for_resize$26[rbp], al
; Line 5901
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 48					; 00000030H
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 40					; 00000028H
	mov	r8, rax
	mov	rdx, rcx
	mov	rcx, QWORD PTR window$[rbp]
	call	?CalcWindowContentSizes@@YAXPEAUImGuiWindow@@PEAUImVec2@@1@Z ; CalcWindowContentSizes
; Line 5902
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+176]
	test	eax, eax
	jle	SHORT $LN30@Begin
; Line 5903
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+176]
	dec	al
	mov	rcx, QWORD PTR window$[rbp]
	mov	BYTE PTR [rcx+176], al
$LN30@Begin:
; Line 5904
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+177]
	test	eax, eax
	jle	SHORT $LN31@Begin
; Line 5905
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+177]
	dec	al
	mov	rcx, QWORD PTR window$[rbp]
	mov	BYTE PTR [rcx+177], al
$LN31@Begin:
; Line 5906
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+178]
	test	eax, eax
	jle	SHORT $LN32@Begin
; Line 5907
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+178]
	dec	al
	mov	rcx, QWORD PTR window$[rbp]
	mov	BYTE PTR [rcx+178], al
$LN32@Begin:
; Line 5910
	movzx	eax, BYTE PTR window_just_created$[rbp]
	test	eax, eax
	je	SHORT $LN33@Begin
	movzx	eax, BYTE PTR window_size_x_set_by_api$[rbp]
	test	eax, eax
	je	SHORT $LN34@Begin
	movzx	eax, BYTE PTR window_size_y_set_by_api$[rbp]
	test	eax, eax
	jne	SHORT $LN33@Begin
$LN34@Begin:
; Line 5911
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+177], 1
$LN33@Begin:
; Line 5915
	movzx	eax, BYTE PTR window_just_activated_by_user$[rbp]
	test	eax, eax
	je	$LN35@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 100663296				; 06000000H
	test	eax, eax
	je	$LN35@Begin
; Line 5917
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+177], 1
; Line 5918
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 64					; 00000040H
	test	eax, eax
	je	$LN36@Begin
; Line 5920
	movzx	eax, BYTE PTR window_size_x_set_by_api$[rbp]
	test	eax, eax
	jne	SHORT $LN37@Begin
; Line 5921
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+32], xmm0
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+24], xmm0
$LN37@Begin:
; Line 5922
	movzx	eax, BYTE PTR window_size_y_set_by_api$[rbp]
	test	eax, eax
	jne	SHORT $LN38@Begin
; Line 5923
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+36], xmm0
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+28], xmm0
$LN38@Begin:
; Line 5924
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T70[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T71[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR $T71[rbp]
	mov	QWORD PTR [rax+48], rcx
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+48]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+40], rax
$LN36@Begin:
$LN35@Begin:
; Line 5930
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetCurrentWindow@@YAXPEAUImGuiWindow@@@Z ; SetCurrentWindow
; Line 5934
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN39@Begin
; Line 5935
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rcx+44]
	movss	DWORD PTR [rax+76], xmm0
	jmp	SHORT $LN40@Begin
$LN39@Begin:
; Line 5937
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 100663296				; 06000000H
	test	eax, eax
	je	SHORT $LN144@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 134217728				; 08000000H
	test	eax, eax
	jne	SHORT $LN144@Begin
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rax+52]
	movss	DWORD PTR tv557[rbp], xmm0
	jmp	SHORT $LN145@Begin
$LN144@Begin:
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	movss	DWORD PTR tv557[rbp], xmm0
$LN145@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR tv557[rbp]
	movss	DWORD PTR [rax+76], xmm0
$LN40@Begin:
; Line 5938
	mov	rax, QWORD PTR style$[rbp]
	mov	rax, QWORD PTR [rax+4]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+64], rax
; Line 5939
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	$LN41@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 67174400				; 04010000H
	test	eax, eax
	jne	SHORT $LN41@Begin
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+76]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN41@Begin
	jne	SHORT $LN41@Begin
; Line 5940
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 1024				; 00000400H
	test	eax, eax
	je	SHORT $LN146@Begin
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rax+8]
	movss	DWORD PTR tv574[rbp], xmm0
	jmp	SHORT $LN147@Begin
$LN146@Begin:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv574[rbp], xmm0
$LN147@Begin:
	movss	xmm2, DWORD PTR tv574[rbp]
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T72[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T73[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR $T73[rbp]
	mov	QWORD PTR [rax+64], rcx
$LN41@Begin:
; Line 5943
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7444]
	movss	DWORD PTR tv598[rbp], xmm0
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm1, DWORD PTR [rax+72]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+64]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR tv596[rbp], xmm0
	movss	xmm1, DWORD PTR tv598[rbp]
	movss	xmm0, DWORD PTR tv596[rbp]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR tv600[rbp], xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR tv600[rbp]
	movss	DWORD PTR [rax+348], xmm0
; Line 5944
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+7448]
	movss	DWORD PTR [rax+352], xmm0
; Line 5948
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 1
	test	eax, eax
	jne	$LN42@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 32					; 00000020H
	test	eax, eax
	jne	$LN42@Begin
; Line 5951
	lea	rdx, QWORD PTR title_bar_rect$27[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?TitleBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ ; ImGuiWindow::TitleBarRect
; Line 5952
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+7192], rcx
	jne	SHORT $LN44@Begin
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7240], 0
	jne	SHORT $LN44@Begin
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7244], 0
	jne	SHORT $LN44@Begin
	mov	r8b, 1
	lea	rdx, QWORD PTR title_bar_rect$27[rbp+8]
	lea	rcx, QWORD PTR title_bar_rect$27[rbp]
	call	?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z ; ImGui::IsMouseHoveringRect
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN44@Begin
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1061]
	test	eax, eax
	je	SHORT $LN44@Begin
; Line 5953
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+146], 1
$LN44@Begin:
; Line 5954
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+146]
	test	eax, eax
	je	SHORT $LN45@Begin
; Line 5956
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+145]
	test	eax, eax
	jne	SHORT $LN148@Begin
	mov	DWORD PTR tv639[rbp], 1
	jmp	SHORT $LN149@Begin
$LN148@Begin:
	mov	DWORD PTR tv639[rbp], 0
$LN149@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movzx	ecx, BYTE PTR tv639[rbp]
	mov	BYTE PTR [rax+145], cl
; Line 5957
	mov	rcx, QWORD PTR window$[rbp]
	call	?MarkIniSettingsDirty@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::MarkIniSettingsDirty
$LN45@Begin:
; Line 5959
	jmp	SHORT $LN43@Begin
$LN42@Begin:
; Line 5962
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+145], 0
$LN43@Begin:
; Line 5964
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+146], 0
; Line 5969
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 48					; 00000030H
	mov	r8, rax
	mov	rdx, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR size_auto_fit$28[rbp]
	call	?CalcWindowAutoFitSize@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z ; CalcWindowAutoFitSize
; Line 5970
	movzx	eax, BYTE PTR window_just_created$[rbp]
	mov	BYTE PTR use_current_size_for_scrollbar_x$29[rbp], al
; Line 5971
	movzx	eax, BYTE PTR window_just_created$[rbp]
	mov	BYTE PTR use_current_size_for_scrollbar_y$30[rbp], al
; Line 5972
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 64					; 00000040H
	test	eax, eax
	je	SHORT $LN46@Begin
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+145]
	test	eax, eax
	jne	SHORT $LN46@Begin
; Line 5975
	movzx	eax, BYTE PTR window_size_x_set_by_api$[rbp]
	test	eax, eax
	jne	SHORT $LN48@Begin
; Line 5977
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR size_auto_fit$28[rbp]
	movss	DWORD PTR [rax+32], xmm0
; Line 5978
	mov	BYTE PTR use_current_size_for_scrollbar_x$29[rbp], 1
$LN48@Begin:
; Line 5980
	movzx	eax, BYTE PTR window_size_y_set_by_api$[rbp]
	test	eax, eax
	jne	SHORT $LN49@Begin
; Line 5982
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR size_auto_fit$28[rbp+4]
	movss	DWORD PTR [rax+36], xmm0
; Line 5983
	mov	BYTE PTR use_current_size_for_scrollbar_y$30[rbp], 1
$LN49@Begin:
; Line 5985
	jmp	$LN47@Begin
$LN46@Begin:
; Line 5986
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+168]
	test	eax, eax
	jg	SHORT $LN51@Begin
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+169]
	test	eax, eax
	jle	$LN50@Begin
$LN51@Begin:
; Line 5990
	movzx	eax, BYTE PTR window_size_x_set_by_api$[rbp]
	test	eax, eax
	jne	SHORT $LN52@Begin
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+168]
	test	eax, eax
	jle	SHORT $LN52@Begin
; Line 5992
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+171]
	test	eax, eax
	je	SHORT $LN150@Begin
	movss	xmm1, DWORD PTR size_auto_fit$28[rbp]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+32]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR tv714[rbp], xmm0
	jmp	SHORT $LN151@Begin
$LN150@Begin:
	movss	xmm0, DWORD PTR size_auto_fit$28[rbp]
	movss	DWORD PTR tv714[rbp], xmm0
$LN151@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR tv714[rbp]
	movss	DWORD PTR [rax+32], xmm0
; Line 5993
	mov	BYTE PTR use_current_size_for_scrollbar_x$29[rbp], 1
$LN52@Begin:
; Line 5995
	movzx	eax, BYTE PTR window_size_y_set_by_api$[rbp]
	test	eax, eax
	jne	SHORT $LN53@Begin
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+169]
	test	eax, eax
	jle	SHORT $LN53@Begin
; Line 5997
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+171]
	test	eax, eax
	je	SHORT $LN152@Begin
	movss	xmm1, DWORD PTR size_auto_fit$28[rbp+4]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+36]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR tv730[rbp], xmm0
	jmp	SHORT $LN153@Begin
$LN152@Begin:
	movss	xmm0, DWORD PTR size_auto_fit$28[rbp+4]
	movss	DWORD PTR tv730[rbp], xmm0
$LN153@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR tv730[rbp]
	movss	DWORD PTR [rax+36], xmm0
; Line 5998
	mov	BYTE PTR use_current_size_for_scrollbar_y$30[rbp], 1
$LN53@Begin:
; Line 6000
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+145]
	test	eax, eax
	jne	SHORT $LN54@Begin
; Line 6001
	mov	rcx, QWORD PTR window$[rbp]
	call	?MarkIniSettingsDirty@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::MarkIniSettingsDirty
$LN54@Begin:
$LN50@Begin:
$LN47@Begin:
; Line 6005
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 32					; 00000020H
	mov	r8, rax
	mov	rdx, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR $T74[rbp]
	call	?CalcWindowSizeAfterConstraint@@YA?AUImVec2@@PEAUImGuiWindow@@AEBU1@@Z ; CalcWindowSizeAfterConstraint
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T75[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR $T75[rbp]
	mov	QWORD PTR [rax+32], rcx
; Line 6006
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+145]
	test	eax, eax
	je	SHORT $LN154@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	jne	SHORT $LN154@Begin
	lea	rdx, QWORD PTR $T77[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?TitleBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ ; ImGuiWindow::TitleBarRect
	mov	QWORD PTR tv756[rbp], rax
	lea	rdx, QWORD PTR $T78[rbp]
	mov	rcx, QWORD PTR tv756[rbp]
	call	?GetSize@ImRect@@QEBA?AUImVec2@@XZ	; ImRect::GetSize
	mov	QWORD PTR tv759[rbp], rax
	jmp	SHORT $LN155@Begin
$LN154@Begin:
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+32]
	mov	QWORD PTR $T79[rbp], rax
	lea	rax, QWORD PTR $T79[rbp]
	mov	QWORD PTR tv759[rbp], rax
$LN155@Begin:
	mov	rax, QWORD PTR tv759[rbp]
	mov	QWORD PTR $T76[rbp], rax
	mov	rax, QWORD PTR $T76[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+24], rax
; Line 6009
	mov	rcx, QWORD PTR window$[rbp]
	call	?TitleBarHeight@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::TitleBarHeight
	movss	DWORD PTR tv762[rbp], xmm0
	mov	rcx, QWORD PTR window$[rbp]
	call	?MenuBarHeight@ImGuiWindow@@QEBAMXZ	; ImGuiWindow::MenuBarHeight
	movss	xmm1, DWORD PTR tv762[rbp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR decoration_up_height$31[rbp], xmm0
; Line 6014
	movzx	eax, BYTE PTR window_just_activated_by_user$[rbp]
	test	eax, eax
	je	SHORT $LN55@Begin
; Line 6016
	mov	rax, QWORD PTR window$[rbp]
	mov	DWORD PTR [rax+172], -1
; Line 6017
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	je	SHORT $LN56@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 134217728				; 08000000H
	test	eax, eax
	jne	SHORT $LN56@Begin
	movzx	eax, BYTE PTR window_pos_set_by_api$[rbp]
	test	eax, eax
	jne	SHORT $LN56@Begin
; Line 6018
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7592				; 00001da8H
	mov	rcx, rax
	call	?back@?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@XZ ; ImVector<ImGuiPopupData>::back
	mov	rax, QWORD PTR [rax+32]
	mov	QWORD PTR $T80[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR $T80[rbp]
	mov	QWORD PTR [rax+16], rcx
$LN56@Begin:
$LN55@Begin:
; Line 6022
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	$LN57@Begin
; Line 6024
	cmp	QWORD PTR parent_window$[rbp], 0
	je	SHORT $LN156@Begin
	mov	rax, QWORD PTR parent_window$[rbp]
	movzx	eax, BYTE PTR [rax+142]
	test	eax, eax
	jne	SHORT $LN157@Begin
$LN156@Begin:
	mov	eax, DWORD PTR ?__LINE__Var@?0??Begin@ImGui@@YA_NPEBDPEA_NH@Z@4JA
	add	eax, 283				; 0000011bH
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1EO@GBMDJNAA@?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA_?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?5?$AA?$CG@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN157@Begin:
; Line 6025
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR parent_window$[rbp]
	movzx	ecx, WORD PTR [rcx+400]
	mov	WORD PTR [rax+156], cx
; Line 6026
	mov	rax, QWORD PTR parent_window$[rbp]
	add	rax, 400				; 00000190H
	mov	QWORD PTR tv802[rbp], rax
	lea	rdx, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR tv802[rbp]
	call	?push_back@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEBQEAUImGuiWindow@@@Z ; ImVector<ImGuiWindow *>::push_back
; Line 6027
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	jne	SHORT $LN58@Begin
	movzx	eax, BYTE PTR window_pos_set_by_api$[rbp]
	test	eax, eax
	jne	SHORT $LN58@Begin
	movzx	eax, BYTE PTR window_is_child_tooltip$23[rbp]
	test	eax, eax
	jne	SHORT $LN58@Begin
; Line 6028
	mov	rax, QWORD PTR parent_window$[rbp]
	mov	rax, QWORD PTR [rax+216]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+16], rax
$LN58@Begin:
$LN57@Begin:
; Line 6031
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+184]
	ucomiss	xmm0, DWORD PTR __real@7f7fffff
	jp	SHORT $LN236@Begin
	je	SHORT $LN158@Begin
$LN236@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+177]
	test	eax, eax
	jne	SHORT $LN158@Begin
	mov	BYTE PTR tv819[rbp], 1
	jmp	SHORT $LN159@Begin
$LN158@Begin:
	mov	BYTE PTR tv819[rbp], 0
$LN159@Begin:
	movzx	eax, BYTE PTR tv819[rbp]
	mov	BYTE PTR window_pos_with_pivot$32[rbp], al
; Line 6032
	movzx	eax, BYTE PTR window_pos_with_pivot$32[rbp]
	test	eax, eax
	je	$LN59@Begin
; Line 6033
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 192				; 000000c0H
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 24
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T81[rbp]
	call	??D@YA?AUImVec2@@AEBU0@0@Z		; operator*
	mov	QWORD PTR tv837[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 184				; 000000b8H
	mov	QWORD PTR tv835[rbp], rax
	mov	r8, QWORD PTR tv837[rbp]
	mov	rdx, QWORD PTR tv835[rbp]
	lea	rcx, QWORD PTR $T82[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv843[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	QWORD PTR tv841[rbp], rax
	xor	r8d, r8d
	mov	rdx, QWORD PTR tv843[rbp]
	mov	rcx, QWORD PTR tv841[rbp]
	call	?SetWindowPos@ImGui@@YAXPEAUImGuiWindow@@AEBUImVec2@@H@Z ; ImGui::SetWindowPos
	jmp	$LN60@Begin
$LN59@Begin:
; Line 6034
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 268435456				; 10000000H
	test	eax, eax
	je	SHORT $LN61@Begin
; Line 6035
	mov	rdx, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR $T83[rbp]
	call	?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z ; ImGui::FindBestWindowPosForPopup
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T84[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR $T84[rbp]
	mov	QWORD PTR [rax+16], rcx
	jmp	$LN62@Begin
$LN61@Begin:
; Line 6036
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	je	SHORT $LN63@Begin
	movzx	eax, BYTE PTR window_pos_set_by_api$[rbp]
	test	eax, eax
	jne	SHORT $LN63@Begin
	movzx	eax, BYTE PTR window_just_appearing_after_hidden_for_resize$26[rbp]
	test	eax, eax
	je	SHORT $LN63@Begin
; Line 6037
	mov	rdx, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR $T85[rbp]
	call	?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z ; ImGui::FindBestWindowPosForPopup
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T86[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR $T86[rbp]
	mov	QWORD PTR [rax+16], rcx
	jmp	SHORT $LN64@Begin
$LN63@Begin:
; Line 6038
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 33554432				; 02000000H
	test	eax, eax
	je	SHORT $LN65@Begin
	movzx	eax, BYTE PTR window_pos_set_by_api$[rbp]
	test	eax, eax
	jne	SHORT $LN65@Begin
	movzx	eax, BYTE PTR window_is_child_tooltip$23[rbp]
	test	eax, eax
	jne	SHORT $LN65@Begin
; Line 6039
	mov	rdx, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR $T87[rbp]
	call	?FindBestWindowPosForPopup@ImGui@@YA?AUImVec2@@PEAUImGuiWindow@@@Z ; ImGui::FindBestWindowPosForPopup
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T88[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR $T88[rbp]
	mov	QWORD PTR [rax+16], rcx
$LN65@Begin:
$LN64@Begin:
$LN62@Begin:
$LN60@Begin:
; Line 6043
	call	?GetMainViewport@ImGui@@YAPEAUImGuiViewport@@XZ ; ImGui::GetMainViewport
	mov	QWORD PTR viewport$33[rbp], rax
; Line 6044
	lea	rdx, QWORD PTR viewport_rect$34[rbp]
	mov	rcx, QWORD PTR viewport$33[rbp]
	call	?GetMainRect@ImGuiViewportP@@QEBA?AUImRect@@XZ ; ImGuiViewportP::GetMainRect
; Line 6045
	lea	rdx, QWORD PTR viewport_work_rect$35[rbp]
	mov	rcx, QWORD PTR viewport$33[rbp]
	call	?GetWorkRect@ImGuiViewportP@@QEBA?AUImRect@@XZ ; ImGuiViewportP::GetWorkRect
; Line 6046
	mov	rax, QWORD PTR style$[rbp]
	add	rax, 172				; 000000acH
	mov	rcx, QWORD PTR style$[rbp]
	add	rcx, 164				; 000000a4H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR visibility_padding$36[rbp]
	call	?ImMax@@YA?AUImVec2@@AEBU1@0@Z		; ImMax
; Line 6047
	lea	r8, QWORD PTR visibility_padding$36[rbp]
	lea	rdx, QWORD PTR viewport_work_rect$35[rbp+8]
	lea	rcx, QWORD PTR $T89[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv933[rbp], rax
	lea	r8, QWORD PTR visibility_padding$36[rbp]
	lea	rdx, QWORD PTR viewport_work_rect$35[rbp]
	lea	rcx, QWORD PTR $T90[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv931[rbp], rax
	mov	r8, QWORD PTR tv933[rbp]
	mov	rdx, QWORD PTR tv931[rbp]
	lea	rcx, QWORD PTR visibility_rect$37[rbp]
	call	??0ImRect@@QEAA@AEBUImVec2@@0@Z		; ImRect::ImRect
; Line 6051
	movzx	eax, BYTE PTR window_pos_set_by_api$[rbp]
	test	eax, eax
	jne	SHORT $LN66@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	jne	SHORT $LN66@Begin
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+168]
	test	eax, eax
	jg	SHORT $LN66@Begin
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+169]
	test	eax, eax
	jg	SHORT $LN66@Begin
; Line 6052
	lea	rcx, QWORD PTR viewport_rect$34[rbp]
	call	?GetWidth@ImRect@@QEBAMXZ		; ImRect::GetWidth
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN67@Begin
	lea	rcx, QWORD PTR viewport_rect$34[rbp]
	call	?GetHeight@ImRect@@QEBAMXZ		; ImRect::GetHeight
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN67@Begin
; Line 6053
	lea	rdx, QWORD PTR visibility_rect$37[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?ClampWindowRect@@YAXPEAUImGuiWindow@@AEBUImRect@@@Z ; ClampWindowRect
$LN67@Begin:
$LN66@Begin:
; Line 6054
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	mov	rdx, rax
	lea	rcx, QWORD PTR $T91[rbp]
	call	?ImFloor@@YA?AUImVec2@@AEBU1@@Z		; ImFloor
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T92[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR $T92[rbp]
	mov	QWORD PTR [rax+16], rcx
; Line 6058
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN162@Begin
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rax+40]
	movss	DWORD PTR tv969[rbp], xmm0
	jmp	SHORT $LN163@Begin
$LN162@Begin:
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	je	SHORT $LN160@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 134217728				; 08000000H
	test	eax, eax
	jne	SHORT $LN160@Begin
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rax+48]
	movss	DWORD PTR tv967[rbp], xmm0
	jmp	SHORT $LN161@Begin
$LN160@Begin:
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rax+12]
	movss	DWORD PTR tv967[rbp], xmm0
$LN161@Begin:
	movss	xmm0, DWORD PTR tv967[rbp]
	movss	DWORD PTR tv969[rbp], xmm0
$LN163@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR tv969[rbp]
	movss	DWORD PTR [rax+72], xmm0
; Line 6065
	mov	BYTE PTR want_focus$38[rbp], 0
; Line 6066
	movzx	eax, BYTE PTR window_just_activated_by_user$[rbp]
	test	eax, eax
	je	SHORT $LN68@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 4096				; 00001000H
	test	eax, eax
	jne	SHORT $LN68@Begin
; Line 6068
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	je	SHORT $LN69@Begin
; Line 6069
	mov	BYTE PTR want_focus$38[rbp], 1
	jmp	SHORT $LN70@Begin
$LN69@Begin:
; Line 6070
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 50331648				; 03000000H
	test	eax, eax
	jne	SHORT $LN71@Begin
; Line 6071
	mov	BYTE PTR want_focus$38[rbp], 1
$LN71@Begin:
$LN70@Begin:
$LN68@Begin:
; Line 6075
	mov	DWORD PTR border_held$39[rbp], -1
; Line 6076
	lea	rax, QWORD PTR resize_grip_col$40[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb
; Line 6077
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+204]
	test	eax, eax
	je	SHORT $LN164@Begin
	mov	DWORD PTR tv986[rbp], 2
	jmp	SHORT $LN165@Begin
$LN164@Begin:
	mov	DWORD PTR tv986[rbp], 1
$LN165@Begin:
	mov	eax, DWORD PTR tv986[rbp]
	mov	DWORD PTR resize_grip_count$41[rbp], eax
; Line 6078
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+72]
	addss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+6528]
	mulss	xmm1, DWORD PTR __real@3e4ccccd
	addss	xmm0, xmm1
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+6528]
	mulss	xmm1, DWORD PTR __real@3f8ccccd
	movss	DWORD PTR tv995[rbp], xmm1
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR tv995[rbp]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	movss	DWORD PTR resize_grip_draw_size$42[rbp], xmm0
; Line 6079
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+145]
	test	eax, eax
	jne	SHORT $LN72@Begin
; Line 6080
	mov	eax, 4
	imul	rax, rax, 0
	lea	rax, QWORD PTR resize_grip_col$40[rbp+rax]
	lea	rcx, QWORD PTR visibility_rect$37[rbp]
	mov	QWORD PTR [rsp+40], rcx
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, DWORD PTR resize_grip_count$41[rbp]
	lea	r8, QWORD PTR border_held$39[rbp]
	lea	rdx, QWORD PTR size_auto_fit$28[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?UpdateWindowManualResize@ImGui@@YA_NPEAUImGuiWindow@@AEBUImVec2@@PEAHHQEAIAEBUImRect@@@Z ; ImGui::UpdateWindowManualResize
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN73@Begin
; Line 6081
	mov	BYTE PTR use_current_size_for_scrollbar_y$30[rbp], 1
	movzx	eax, BYTE PTR use_current_size_for_scrollbar_y$30[rbp]
	mov	BYTE PTR use_current_size_for_scrollbar_x$29[rbp], al
$LN73@Begin:
$LN72@Begin:
; Line 6082
	mov	rax, QWORD PTR window$[rbp]
	movzx	ecx, BYTE PTR border_held$39[rbp]
	mov	BYTE PTR [rax+152], cl
; Line 6087
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+145]
	test	eax, eax
	jne	$LN74@Begin
; Line 6091
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+36]
	subss	xmm0, DWORD PTR decoration_up_height$31[rbp]
	movaps	xmm2, xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+32]
	lea	rcx, QWORD PTR avail_size_from_current_frame$43[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
; Line 6092
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 132				; 00000084H
	mov	QWORD PTR tv1041[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 528				; 00000210H
	mov	QWORD PTR tv1035[rbp], rax
	lea	rdx, QWORD PTR $T93[rbp]
	mov	rcx, QWORD PTR tv1035[rbp]
	call	?GetSize@ImRect@@QEBA?AUImVec2@@XZ	; ImRect::GetSize
	mov	QWORD PTR tv1039[rbp], rax
	mov	r8, QWORD PTR tv1041[rbp]
	mov	rdx, QWORD PTR tv1039[rbp]
	lea	rcx, QWORD PTR avail_size_from_last_frame$44[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
; Line 6093
	movzx	eax, BYTE PTR window_just_created$[rbp]
	test	eax, eax
	je	SHORT $LN166@Begin
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T95[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv1061[rbp], rax
	jmp	SHORT $LN167@Begin
$LN166@Begin:
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 64					; 00000040H
	movss	xmm2, DWORD PTR __real@40000000
	mov	rdx, rax
	lea	rcx, QWORD PTR $T96[rbp]
	call	??D@YA?AUImVec2@@AEBU0@M@Z		; operator*
	mov	QWORD PTR tv1058[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 40					; 00000028H
	mov	QWORD PTR tv1056[rbp], rax
	mov	r8, QWORD PTR tv1058[rbp]
	mov	rdx, QWORD PTR tv1056[rbp]
	lea	rcx, QWORD PTR $T97[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv1061[rbp], rax
$LN167@Begin:
	mov	rax, QWORD PTR tv1061[rbp]
	mov	QWORD PTR $T94[rbp], rax
	mov	rax, QWORD PTR $T94[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR needed_size_from_last_frame$45[rbp], rax
; Line 6094
	movzx	eax, BYTE PTR use_current_size_for_scrollbar_x$29[rbp]
	test	eax, eax
	je	SHORT $LN168@Begin
	movss	xmm0, DWORD PTR avail_size_from_current_frame$43[rbp]
	movss	DWORD PTR tv1065[rbp], xmm0
	jmp	SHORT $LN169@Begin
$LN168@Begin:
	movss	xmm0, DWORD PTR avail_size_from_last_frame$44[rbp]
	movss	DWORD PTR tv1065[rbp], xmm0
$LN169@Begin:
	movss	xmm0, DWORD PTR tv1065[rbp]
	movss	DWORD PTR size_x_for_scrollbars$46[rbp], xmm0
; Line 6095
	movzx	eax, BYTE PTR use_current_size_for_scrollbar_y$30[rbp]
	test	eax, eax
	je	SHORT $LN170@Begin
	movss	xmm0, DWORD PTR avail_size_from_current_frame$43[rbp+4]
	movss	DWORD PTR tv1068[rbp], xmm0
	jmp	SHORT $LN171@Begin
$LN170@Begin:
	movss	xmm0, DWORD PTR avail_size_from_last_frame$44[rbp+4]
	movss	DWORD PTR tv1068[rbp], xmm0
$LN171@Begin:
	movss	xmm0, DWORD PTR tv1068[rbp]
	movss	DWORD PTR size_y_for_scrollbars$47[rbp], xmm0
; Line 6097
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16384				; 00004000H
	test	eax, eax
	jne	SHORT $LN173@Begin
	movss	xmm0, DWORD PTR needed_size_from_last_frame$45[rbp+4]
	comiss	xmm0, DWORD PTR size_y_for_scrollbars$47[rbp]
	jbe	SHORT $LN172@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN173@Begin
$LN172@Begin:
	mov	DWORD PTR tv1075[rbp], 0
	jmp	SHORT $LN174@Begin
$LN173@Begin:
	mov	DWORD PTR tv1075[rbp], 1
$LN174@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movzx	ecx, BYTE PTR tv1075[rbp]
	mov	BYTE PTR [rax+141], cl
; Line 6098
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 32768				; 00008000H
	test	eax, eax
	jne	SHORT $LN178@Begin
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+141]
	test	eax, eax
	je	SHORT $LN175@Begin
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rax+112]
	movss	DWORD PTR tv1083[rbp], xmm0
	jmp	SHORT $LN176@Begin
$LN175@Begin:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv1083[rbp], xmm0
$LN176@Begin:
	movss	xmm0, DWORD PTR size_x_for_scrollbars$46[rbp]
	subss	xmm0, DWORD PTR tv1083[rbp]
	movss	xmm1, DWORD PTR needed_size_from_last_frame$45[rbp]
	comiss	xmm1, xmm0
	jbe	SHORT $LN177@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 8
	test	eax, eax
	jne	SHORT $LN177@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 2048				; 00000800H
	test	eax, eax
	jne	SHORT $LN178@Begin
$LN177@Begin:
	mov	DWORD PTR tv1091[rbp], 0
	jmp	SHORT $LN179@Begin
$LN178@Begin:
	mov	DWORD PTR tv1091[rbp], 1
$LN179@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movzx	ecx, BYTE PTR tv1091[rbp]
	mov	BYTE PTR [rax+140], cl
; Line 6099
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+140]
	test	eax, eax
	je	SHORT $LN75@Begin
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+141]
	test	eax, eax
	jne	SHORT $LN75@Begin
; Line 6100
	movss	xmm0, DWORD PTR needed_size_from_last_frame$45[rbp+4]
	comiss	xmm0, DWORD PTR size_y_for_scrollbars$47[rbp]
	jbe	SHORT $LN180@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 8
	test	eax, eax
	jne	SHORT $LN180@Begin
	mov	DWORD PTR tv1103[rbp], 1
	jmp	SHORT $LN181@Begin
$LN180@Begin:
	mov	DWORD PTR tv1103[rbp], 0
$LN181@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movzx	ecx, BYTE PTR tv1103[rbp]
	mov	BYTE PTR [rax+141], cl
$LN75@Begin:
; Line 6101
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+140]
	test	eax, eax
	je	SHORT $LN182@Begin
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rax+112]
	movss	DWORD PTR tv1112[rbp], xmm0
	jmp	SHORT $LN183@Begin
$LN182@Begin:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv1112[rbp], xmm0
$LN183@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+141]
	test	eax, eax
	je	SHORT $LN184@Begin
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rax+112]
	movss	DWORD PTR tv1118[rbp], xmm0
	jmp	SHORT $LN185@Begin
$LN184@Begin:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv1118[rbp], xmm0
$LN185@Begin:
	movss	xmm2, DWORD PTR tv1112[rbp]
	movss	xmm1, DWORD PTR tv1118[rbp]
	lea	rcx, QWORD PTR $T98[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T99[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR $T99[rbp]
	mov	QWORD PTR [rax+132], rcx
$LN74@Begin:
; Line 6113
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN186@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	jne	SHORT $LN186@Begin
	movzx	eax, BYTE PTR window_is_child_tooltip$23[rbp]
	test	eax, eax
	jne	SHORT $LN186@Begin
	mov	rax, QWORD PTR parent_window$[rbp]
	add	rax, 592				; 00000250H
	mov	QWORD PTR tv1129[rbp], rax
	jmp	SHORT $LN187@Begin
$LN186@Begin:
	lea	rax, QWORD PTR viewport_rect$34[rbp]
	mov	QWORD PTR tv1129[rbp], rax
$LN187@Begin:
	mov	rax, QWORD PTR tv1129[rbp]
	mov	QWORD PTR $T100[rbp], rax
	lea	rax, QWORD PTR host_rect$48[rbp]
	mov	rdi, rax
	mov	rsi, QWORD PTR $T100[rbp]
	mov	ecx, 16
	rep movsb
; Line 6114
	lea	rdx, QWORD PTR outer_rect$49[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?Rect@ImGuiWindow@@QEBA?AUImRect@@XZ	; ImGuiWindow::Rect
; Line 6115
	lea	rdx, QWORD PTR title_bar_rect$50[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?TitleBarRect@ImGuiWindow@@QEBA?AUImRect@@XZ ; ImGuiWindow::TitleBarRect
; Line 6116
	mov	rax, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR outer_rect$49[rbp]
	lea	rdi, QWORD PTR [rax+512]
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
; Line 6117
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 512				; 00000200H
	mov	QWORD PTR tv1140[rbp], rax
	lea	rdx, QWORD PTR host_rect$48[rbp]
	mov	rcx, QWORD PTR tv1140[rbp]
	call	?ClipWith@ImRect@@QEAAXAEBU1@@Z		; ImRect::ClipWith
; Line 6125
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rcx+16]
	movss	DWORD PTR [rax+528], xmm0
; Line 6126
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+20]
	addss	xmm0, DWORD PTR decoration_up_height$31[rbp]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+532], xmm0
; Line 6127
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	addss	xmm0, DWORD PTR [rcx+24]
	mov	rax, QWORD PTR window$[rbp]
	subss	xmm0, DWORD PTR [rax+132]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+536], xmm0
; Line 6128
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+20]
	addss	xmm0, DWORD PTR [rcx+28]
	mov	rax, QWORD PTR window$[rbp]
	subss	xmm0, DWORD PTR [rax+136]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+540], xmm0
; Line 6137
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 1024				; 00000400H
	test	eax, eax
	jne	SHORT $LN188@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN188@Begin
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+76]
	movss	DWORD PTR tv1212[rbp], xmm0
	jmp	SHORT $LN189@Begin
$LN188@Begin:
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm0, DWORD PTR [rax+68]
	movss	DWORD PTR tv1212[rbp], xmm0
$LN189@Begin:
	movss	xmm0, DWORD PTR tv1212[rbp]
	movss	DWORD PTR top_border_size$51[rbp], xmm0
; Line 6138
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+76]
	movss	DWORD PTR tv1233[rbp], xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+64]
	mulss	xmm0, DWORD PTR __real@3f000000
	call	?ImFloor@@YAMM@Z			; ImFloor
	movss	DWORD PTR tv1231[rbp], xmm0
	movss	xmm1, DWORD PTR tv1233[rbp]
	movss	xmm0, DWORD PTR tv1231[rbp]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR __real@3f000000
	addss	xmm1, DWORD PTR [rax+528]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	call	?ImFloor@@YAMM@Z			; ImFloor
	movss	DWORD PTR tv1237[rbp], xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR tv1237[rbp]
	movss	DWORD PTR [rax+544], xmm0
; Line 6139
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR __real@3f000000
	addss	xmm0, DWORD PTR [rax+532]
	addss	xmm0, DWORD PTR top_border_size$51[rbp]
	call	?ImFloor@@YAMM@Z			; ImFloor
	movss	DWORD PTR tv1249[rbp], xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR tv1249[rbp]
	movss	DWORD PTR [rax+548], xmm0
; Line 6140
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+76]
	movss	DWORD PTR tv1270[rbp], xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+64]
	mulss	xmm0, DWORD PTR __real@3f000000
	call	?ImFloor@@YAMM@Z			; ImFloor
	movss	DWORD PTR tv1268[rbp], xmm0
	movss	xmm1, DWORD PTR tv1270[rbp]
	movss	xmm0, DWORD PTR tv1268[rbp]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR __real@3f000000
	addss	xmm1, DWORD PTR [rax+536]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	call	?ImFloor@@YAMM@Z			; ImFloor
	movss	DWORD PTR tv1274[rbp], xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR tv1274[rbp]
	movss	DWORD PTR [rax+552], xmm0
; Line 6141
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR __real@3f000000
	addss	xmm0, DWORD PTR [rax+540]
	mov	rax, QWORD PTR window$[rbp]
	subss	xmm0, DWORD PTR [rax+76]
	call	?ImFloor@@YAMM@Z			; ImFloor
	movss	DWORD PTR tv1287[rbp], xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR tv1287[rbp]
	movss	DWORD PTR [rax+556], xmm0
; Line 6142
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 544				; 00000220H
	mov	QWORD PTR tv1292[rbp], rax
	lea	rdx, QWORD PTR host_rect$48[rbp]
	mov	rcx, QWORD PTR tv1292[rbp]
	call	?ClipWithFull@ImRect@@QEAAXAEBU1@@Z	; ImRect::ClipWithFull
; Line 6145
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+24]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN76@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 33554432				; 02000000H
	test	eax, eax
	jne	SHORT $LN76@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 64					; 00000040H
	test	eax, eax
	jne	SHORT $LN76@Begin
; Line 6146
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+24]
	mulss	xmm0, DWORD PTR __real@3f266666
	call	?ImFloor@@YAMM@Z			; ImFloor
	movss	DWORD PTR tv1307[rbp], xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR tv1307[rbp]
	movss	DWORD PTR [rax+640], xmm0
	jmp	SHORT $LN77@Begin
$LN76@Begin:
; Line 6148
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+6528]
	mulss	xmm0, DWORD PTR __real@41800000
	call	?ImFloor@@YAMM@Z			; ImFloor
	movss	DWORD PTR tv1314[rbp], xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR tv1314[rbp]
	movss	DWORD PTR [rax+640], xmm0
$LN77@Begin:
; Line 6155
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+64]
	mulss	xmm0, DWORD PTR __real@40000000
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+40]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv1323[rbp], xmm0
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 528				; 00000210H
	mov	rcx, rax
	call	?GetWidth@ImRect@@QEBAMXZ		; ImRect::GetWidth
	movss	xmm1, DWORD PTR tv1323[rbp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movaps	xmm1, xmm0
	xorps	xmm0, xmm0
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR tv1331[rbp], xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR tv1331[rbp]
	movss	DWORD PTR [rax+100], xmm0
; Line 6156
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+68]
	mulss	xmm0, DWORD PTR __real@40000000
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+44]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv1340[rbp], xmm0
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 528				; 00000210H
	mov	rcx, rax
	call	?GetHeight@ImRect@@QEBAMXZ		; ImRect::GetHeight
	movss	xmm1, DWORD PTR tv1340[rbp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movaps	xmm1, xmm0
	xorps	xmm0, xmm0
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR tv1348[rbp], xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR tv1348[rbp]
	movss	DWORD PTR [rax+104], xmm0
; Line 6159
	mov	rdx, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR $T101[rbp]
	call	?CalcNextScrollFromScrollTargetAndClamp@@YA?AUImVec2@@PEAUImGuiWindow@@@Z ; CalcNextScrollFromScrollTargetAndClamp
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T102[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR $T102[rbp]
	mov	QWORD PTR [rax+92], rcx
; Line 6160
	movss	xmm2, DWORD PTR __real@7f7fffff
	movss	xmm1, DWORD PTR __real@7f7fffff
	lea	rcx, QWORD PTR $T103[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T104[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR $T104[rbp]
	mov	QWORD PTR [rax+108], rcx
; Line 6165
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	cmp	DWORD PTR [rax], 1
	jne	SHORT $LN190@Begin
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv1372[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv1372[rbp]
	call	??A?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@H@Z ; ImVector<ImDrawCmd>::operator[]
	cmp	DWORD PTR [rax+32], 0
	je	SHORT $LN191@Begin
$LN190@Begin:
	mov	eax, DWORD PTR ?__LINE__Var@?0??Begin@ImGui@@YA_NPEBDPEA_NH@Z@4JA
	add	eax, 424				; 000001a8H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1KO@GJELMBN@?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AA?9?$AA?$DO?$AAD?$AAr?$AAa?$AAw?$AAL?$AAi?$AAs@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN191@Begin:
; Line 6166
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv1387[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+6520]
	mov	rax, QWORD PTR [rax+64]
	mov	rdx, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR tv1387[rbp]
	call	?PushTextureID@ImDrawList@@QEAAXPEAX@Z	; ImDrawList::PushTextureID
; Line 6167
	xor	r8d, r8d
	lea	rdx, QWORD PTR host_rect$48[rbp+8]
	lea	rcx, QWORD PTR host_rect$48[rbp]
	call	?PushClipRect@ImGui@@YAXAEBUImVec2@@0_N@Z ; ImGui::PushClipRect
; Line 6170
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 134217728				; 08000000H
	test	eax, eax
	je	SHORT $LN192@Begin
	call	?GetTopMostPopupModal@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetTopMostPopupModal
	cmp	QWORD PTR window$[rbp], rax
	jne	SHORT $LN192@Begin
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+177]
	test	eax, eax
	jg	SHORT $LN192@Begin
	mov	BYTE PTR tv1398[rbp], 1
	jmp	SHORT $LN193@Begin
$LN192@Begin:
	mov	BYTE PTR tv1398[rbp], 0
$LN193@Begin:
	movzx	eax, BYTE PTR tv1398[rbp]
	mov	BYTE PTR dim_bg_for_modal$52[rbp], al
; Line 6171
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7936], 0
	je	SHORT $LN194@Begin
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7936]
	mov	rax, QWORD PTR [rax+904]
	cmp	QWORD PTR window$[rbp], rax
	jne	SHORT $LN194@Begin
	mov	BYTE PTR tv1404[rbp], 1
	jmp	SHORT $LN195@Begin
$LN194@Begin:
	mov	BYTE PTR tv1404[rbp], 0
$LN195@Begin:
	movzx	eax, BYTE PTR tv1404[rbp]
	mov	BYTE PTR dim_bg_for_window_list$53[rbp], al
; Line 6172
	movzx	eax, BYTE PTR dim_bg_for_modal$52[rbp]
	test	eax, eax
	jne	SHORT $LN79@Begin
	movzx	eax, BYTE PTR dim_bg_for_window_list$53[rbp]
	test	eax, eax
	je	$LN78@Begin
$LN79@Begin:
; Line 6174
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+8004]
	movss	DWORD PTR tv1417[rbp], xmm0
	movzx	eax, BYTE PTR dim_bg_for_modal$52[rbp]
	test	eax, eax
	je	SHORT $LN196@Begin
	mov	DWORD PTR tv1414[rbp], 52		; 00000034H
	jmp	SHORT $LN197@Begin
$LN196@Begin:
	mov	DWORD PTR tv1414[rbp], 51		; 00000033H
$LN197@Begin:
	movss	xmm1, DWORD PTR tv1417[rbp]
	mov	ecx, DWORD PTR tv1414[rbp]
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR dim_bg_col$54[rbp], eax
; Line 6175
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv1426[rbp], rax
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR dim_bg_col$54[rbp]
	lea	r8, QWORD PTR viewport_rect$34[rbp+8]
	lea	rdx, QWORD PTR viewport_rect$34[rbp]
	mov	rcx, QWORD PTR tv1426[rbp]
	call	?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z ; ImDrawList::AddRectFilled
$LN78@Begin:
; Line 6179
	movzx	eax, BYTE PTR dim_bg_for_window_list$53[rbp]
	test	eax, eax
	je	$LN80@Begin
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7936]
	cmp	QWORD PTR window$[rbp], rax
	jne	$LN80@Begin
; Line 6181
	lea	rdx, QWORD PTR bb$55[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?Rect@ImGuiWindow@@QEBA?AUImRect@@XZ	; ImGuiWindow::Rect
; Line 6182
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+6528]
	lea	rcx, QWORD PTR bb$55[rbp]
	call	?Expand@ImRect@@QEAAXM@Z		; ImRect::Expand
; Line 6183
	lea	rdx, QWORD PTR viewport_rect$34[rbp]
	lea	rcx, QWORD PTR bb$55[rbp]
	call	?Contains@ImRect@@QEBA_NAEBU1@@Z	; ImRect::Contains
	movzx	eax, al
	test	eax, eax
	jne	$LN81@Begin
; Line 6184
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv1460[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5484]
	movss	DWORD PTR tv1458[rbp], xmm0
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7956]
	mulss	xmm0, DWORD PTR __real@3e800000
	movaps	xmm1, xmm0
	mov	ecx, 50					; 00000032H
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv1456[rbp], eax
	mov	DWORD PTR [rsp+40], 0
	movss	xmm0, DWORD PTR tv1458[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR tv1456[rbp]
	lea	r8, QWORD PTR bb$55[rbp+8]
	lea	rdx, QWORD PTR bb$55[rbp]
	mov	rcx, QWORD PTR tv1460[rbp]
	call	?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z ; ImDrawList::AddRectFilled
$LN81@Begin:
$LN80@Begin:
; Line 6193
	mov	BYTE PTR render_decorations_in_parent$56[rbp], 0
; Line 6194
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN82@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 67108864				; 04000000H
	test	eax, eax
	jne	SHORT $LN82@Begin
	movzx	eax, BYTE PTR window_is_child_tooltip$23[rbp]
	test	eax, eax
	jne	SHORT $LN82@Begin
; Line 6195
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	rcx, rax
	call	?back@?$ImVector@UImDrawCmd@@@@QEAAAEAUImDrawCmd@@XZ ; ImVector<ImDrawCmd>::back
	cmp	DWORD PTR [rax+32], 0
	jne	SHORT $LN83@Begin
	mov	rax, QWORD PTR parent_window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	cmp	DWORD PTR [rax+32], 0
	jle	SHORT $LN83@Begin
; Line 6196
	mov	BYTE PTR render_decorations_in_parent$56[rbp], 1
$LN83@Begin:
$LN82@Begin:
; Line 6197
	movzx	eax, BYTE PTR render_decorations_in_parent$56[rbp]
	test	eax, eax
	je	SHORT $LN84@Begin
; Line 6198
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR parent_window$[rbp]
	mov	rcx, QWORD PTR [rcx+688]
	mov	QWORD PTR [rax+688], rcx
$LN84@Begin:
; Line 6201
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	je	SHORT $LN198@Begin
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7928]
	mov	QWORD PTR tv1485[rbp], rax
	jmp	SHORT $LN199@Begin
$LN198@Begin:
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	QWORD PTR tv1485[rbp], rax
$LN199@Begin:
	mov	rax, QWORD PTR tv1485[rbp]
	mov	QWORD PTR window_to_highlight$57[rbp], rax
; Line 6202
	movzx	eax, BYTE PTR want_focus$38[rbp]
	test	eax, eax
	jne	SHORT $LN201@Begin
	cmp	QWORD PTR window_to_highlight$57[rbp], 0
	je	SHORT $LN200@Begin
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window_to_highlight$57[rbp]
	mov	rcx, QWORD PTR [rcx+912]
	cmp	QWORD PTR [rax+912], rcx
	je	SHORT $LN201@Begin
$LN200@Begin:
	mov	BYTE PTR tv1492[rbp], 0
	jmp	SHORT $LN202@Begin
$LN201@Begin:
	mov	BYTE PTR tv1492[rbp], 1
$LN202@Begin:
	movzx	eax, BYTE PTR tv1492[rbp]
	mov	BYTE PTR title_bar_is_highlight$58[rbp], al
; Line 6203
	movss	xmm0, DWORD PTR resize_grip_draw_size$42[rbp]
	movss	DWORD PTR [rsp+40], xmm0
	lea	rax, QWORD PTR resize_grip_col$40[rbp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, DWORD PTR resize_grip_count$41[rbp]
	movzx	r8d, BYTE PTR title_bar_is_highlight$58[rbp]
	lea	rdx, QWORD PTR title_bar_rect$50[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?RenderWindowDecorations@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@_NHQEBIM@Z ; ImGui::RenderWindowDecorations
; Line 6205
	movzx	eax, BYTE PTR render_decorations_in_parent$56[rbp]
	test	eax, eax
	je	SHORT $LN85@Begin
; Line 6206
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 696				; 000002b8H
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+688], rax
$LN85@Begin:
; Line 6210
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	cmp	QWORD PTR [rax+7936], rcx
	jne	$LN86@Begin
; Line 6212
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+5484]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+72]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR rounding$59[rbp], xmm0
; Line 6213
	lea	rdx, QWORD PTR bb$60[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?Rect@ImGuiWindow@@QEBA?AUImRect@@XZ	; ImGuiWindow::Rect
; Line 6214
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+6528]
	lea	rcx, QWORD PTR bb$60[rbp]
	call	?Expand@ImRect@@QEAAXM@Z		; ImRect::Expand
; Line 6215
	lea	rdx, QWORD PTR viewport_rect$34[rbp]
	lea	rcx, QWORD PTR bb$60[rbp]
	call	?Contains@ImRect@@QEBA_NAEBU1@@Z	; ImRect::Contains
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN87@Begin
; Line 6217
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+6528]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	subss	xmm0, DWORD PTR __real@3f800000
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR bb$60[rbp]
	call	?Expand@ImRect@@QEAAXM@Z		; ImRect::Expand
; Line 6218
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+72]
	movss	DWORD PTR rounding$59[rbp], xmm0
$LN87@Begin:
; Line 6220
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+688]
	mov	QWORD PTR tv1542[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+7956]
	mov	ecx, 50					; 00000032H
	call	?GetColorU32@ImGui@@YAIHM@Z		; ImGui::GetColorU32
	mov	DWORD PTR tv1540[rbp], eax
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	movss	xmm0, DWORD PTR rounding$59[rbp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR tv1540[rbp]
	lea	r8, QWORD PTR bb$60[rbp+8]
	lea	rdx, QWORD PTR bb$60[rbp]
	mov	rcx, QWORD PTR tv1542[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
$LN86@Begin:
; Line 6230
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 8
	test	eax, eax
	jne	SHORT $LN203@Begin
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 2048				; 00000800H
	test	eax, eax
	je	SHORT $LN203@Begin
	mov	BYTE PTR tv1547[rbp], 1
	jmp	SHORT $LN204@Begin
$LN203@Begin:
	mov	BYTE PTR tv1547[rbp], 0
$LN204@Begin:
	movzx	eax, BYTE PTR tv1547[rbp]
	mov	BYTE PTR allow_scrollbar_x$61[rbp], al
; Line 6231
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 8
	test	eax, eax
	jne	SHORT $LN205@Begin
	mov	BYTE PTR tv1550[rbp], 1
	jmp	SHORT $LN206@Begin
$LN205@Begin:
	mov	BYTE PTR tv1550[rbp], 0
$LN206@Begin:
	movzx	eax, BYTE PTR tv1550[rbp]
	mov	BYTE PTR allow_scrollbar_y$62[rbp], al
; Line 6232
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+56]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN235@Begin
	je	SHORT $LN209@Begin
$LN235@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+56]
	movss	DWORD PTR tv1575[rbp], xmm0
	jmp	SHORT $LN210@Begin
$LN209@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+64]
	mulss	xmm0, DWORD PTR __real@40000000
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+24]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR window$[rbp]
	subss	xmm0, DWORD PTR [rax+132]
	movss	DWORD PTR tv1574[rbp], xmm0
	movzx	eax, BYTE PTR allow_scrollbar_x$61[rbp]
	test	eax, eax
	je	SHORT $LN207@Begin
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+40]
	movss	DWORD PTR tv1571[rbp], xmm0
	jmp	SHORT $LN208@Begin
$LN207@Begin:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv1571[rbp], xmm0
$LN208@Begin:
	movss	xmm1, DWORD PTR tv1574[rbp]
	movss	xmm0, DWORD PTR tv1571[rbp]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR tv1575[rbp], xmm0
$LN210@Begin:
	movss	xmm0, DWORD PTR tv1575[rbp]
	movss	DWORD PTR work_rect_size_x$63[rbp], xmm0
; Line 6233
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+60]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN234@Begin
	je	SHORT $LN213@Begin
$LN234@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+60]
	movss	DWORD PTR tv1601[rbp], xmm0
	jmp	$LN214@Begin
$LN213@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+68]
	mulss	xmm0, DWORD PTR __real@40000000
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+28]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	subss	xmm0, DWORD PTR decoration_up_height$31[rbp]
	mov	rax, QWORD PTR window$[rbp]
	subss	xmm0, DWORD PTR [rax+136]
	movss	DWORD PTR tv1600[rbp], xmm0
	movzx	eax, BYTE PTR allow_scrollbar_y$62[rbp]
	test	eax, eax
	je	SHORT $LN211@Begin
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+44]
	movss	DWORD PTR tv1597[rbp], xmm0
	jmp	SHORT $LN212@Begin
$LN211@Begin:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv1597[rbp], xmm0
$LN212@Begin:
	movss	xmm1, DWORD PTR tv1600[rbp]
	movss	xmm0, DWORD PTR tv1597[rbp]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	DWORD PTR tv1601[rbp], xmm0
$LN214@Begin:
	movss	xmm0, DWORD PTR tv1601[rbp]
	movss	DWORD PTR work_rect_size_y$64[rbp], xmm0
; Line 6234
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+528]
	subss	xmm0, DWORD PTR [rcx+92]
	movss	DWORD PTR tv1611[rbp], xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+76]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+64]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	xmm1, DWORD PTR tv1611[rbp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	call	?ImFloor@@YAMM@Z			; ImFloor
	movss	DWORD PTR tv1621[rbp], xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR tv1621[rbp]
	movss	DWORD PTR [rax+560], xmm0
; Line 6235
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+532]
	subss	xmm0, DWORD PTR [rcx+96]
	movss	DWORD PTR tv1631[rbp], xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+76]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+68]
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	movss	xmm1, DWORD PTR tv1631[rbp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	call	?ImFloor@@YAMM@Z			; ImFloor
	movss	DWORD PTR tv1641[rbp], xmm0
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR tv1641[rbp]
	movss	DWORD PTR [rax+564], xmm0
; Line 6236
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+560]
	addss	xmm0, DWORD PTR work_rect_size_x$63[rbp]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+568], xmm0
; Line 6237
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+564]
	addss	xmm0, DWORD PTR work_rect_size_y$64[rbp]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+572], xmm0
; Line 6238
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	lea	rdi, QWORD PTR [rax+576]
	lea	rsi, QWORD PTR [rcx+560]
	mov	ecx, 16
	rep movsb
; Line 6244
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+16]
	subss	xmm0, DWORD PTR [rcx+92]
	mov	rax, QWORD PTR window$[rbp]
	addss	xmm0, DWORD PTR [rax+64]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+608], xmm0
; Line 6245
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+20]
	subss	xmm0, DWORD PTR [rcx+96]
	mov	rax, QWORD PTR window$[rbp]
	addss	xmm0, DWORD PTR [rax+68]
	addss	xmm0, DWORD PTR decoration_up_height$31[rbp]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+612], xmm0
; Line 6246
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+56]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN233@Begin
	je	SHORT $LN215@Begin
$LN233@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+56]
	movss	DWORD PTR tv1702[rbp], xmm0
	jmp	SHORT $LN216@Begin
$LN215@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+64]
	mulss	xmm0, DWORD PTR __real@40000000
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+24]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR window$[rbp]
	subss	xmm0, DWORD PTR [rax+132]
	movss	DWORD PTR tv1702[rbp], xmm0
$LN216@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+608]
	addss	xmm0, DWORD PTR tv1702[rbp]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+616], xmm0
; Line 6247
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+60]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN232@Begin
	je	SHORT $LN217@Begin
$LN232@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+60]
	movss	DWORD PTR tv1725[rbp], xmm0
	jmp	SHORT $LN218@Begin
$LN217@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+68]
	mulss	xmm0, DWORD PTR __real@40000000
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+28]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	subss	xmm0, DWORD PTR decoration_up_height$31[rbp]
	mov	rax, QWORD PTR window$[rbp]
	subss	xmm0, DWORD PTR [rax+136]
	movss	DWORD PTR tv1725[rbp], xmm0
$LN218@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+612]
	addss	xmm0, DWORD PTR tv1725[rbp]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+620], xmm0
; Line 6251
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	addss	xmm0, DWORD PTR [rax+64]
	mov	rax, QWORD PTR window$[rbp]
	subss	xmm0, DWORD PTR [rax+92]
	mov	rax, QWORD PTR window$[rbp]
	movss	DWORD PTR [rax+280], xmm0
; Line 6252
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+288], xmm0
; Line 6253
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+284], xmm0
; Line 6254
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR decoration_up_height$31[rbp]
	addss	xmm0, DWORD PTR [rax+68]
	mov	rax, QWORD PTR window$[rbp]
	subss	xmm0, DWORD PTR [rax+96]
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR [rax+280]
	addss	xmm1, DWORD PTR [rcx+284]
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR $T105[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv1769[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 16
	mov	QWORD PTR tv1767[rbp], rax
	mov	r8, QWORD PTR tv1769[rbp]
	mov	rdx, QWORD PTR tv1767[rbp]
	lea	rcx, QWORD PTR $T106[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T107[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR $T107[rbp]
	mov	QWORD PTR [rax+232], rcx
; Line 6255
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+232]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+216], rax
; Line 6256
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+216]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+224], rax
; Line 6257
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+232]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+240], rax
; Line 6258
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+232]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+248], rax
; Line 6259
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T108[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T109[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR $T109[rbp]
	mov	QWORD PTR [rax+264], rcx
	mov	rax, QWORD PTR window$[rbp]
	mov	rax, QWORD PTR [rax+264]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+256], rax
; Line 6260
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+276], xmm0
	mov	rax, QWORD PTR window$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+272], xmm0
; Line 6262
	mov	rax, QWORD PTR window$[rbp]
	mov	DWORD PTR [rax+332], 0
; Line 6263
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movzx	ecx, WORD PTR [rcx+338]
	mov	WORD PTR [rax+336], cx
; Line 6264
	xor	eax, eax
	mov	rcx, QWORD PTR window$[rbp]
	mov	WORD PTR [rcx+338], ax
; Line 6265
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+344], 0
; Line 6266
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+104]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN219@Begin
	mov	DWORD PTR tv1824[rbp], 1
	jmp	SHORT $LN220@Begin
$LN219@Begin:
	mov	DWORD PTR tv1824[rbp], 0
$LN220@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movzx	ecx, BYTE PTR tv1824[rbp]
	mov	BYTE PTR [rax+345], cl
; Line 6268
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+346], 0
; Line 6269
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 356				; 00000164H
	mov	QWORD PTR tv1837[rbp], rax
	movzx	r9d, BYTE PTR window_just_activated_by_user$[rbp]
	mov	rax, QWORD PTR style$[rbp]
	movss	xmm2, DWORD PTR [rax+72]
	mov	edx, 3
	mov	rcx, QWORD PTR tv1837[rbp]
	call	?Update@ImGuiMenuColumns@@QEAAXHM_N@Z	; ImGuiMenuColumns::Update
; Line 6270
	mov	rax, QWORD PTR window$[rbp]
	mov	DWORD PTR [rax+392], 0
; Line 6271
	mov	rax, QWORD PTR window$[rbp]
	mov	DWORD PTR [rax+396], 0
; Line 6272
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 400				; 00000190H
	mov	QWORD PTR tv1847[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv1847[rbp]
	call	?resize@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z ; ImVector<ImGuiWindow *>::resize
; Line 6273
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 648				; 00000288H
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rcx+416], rax
; Line 6274
	mov	rax, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax+424], 0
; Line 6275
	mov	rax, QWORD PTR window$[rbp]
	mov	DWORD PTR [rax+436], 1
; Line 6276
	cmp	QWORD PTR parent_window$[rbp], 0
	je	SHORT $LN221@Begin
	mov	rax, QWORD PTR parent_window$[rbp]
	mov	eax, DWORD PTR [rax+436]
	mov	DWORD PTR tv1860[rbp], eax
	jmp	SHORT $LN222@Begin
$LN221@Begin:
	mov	DWORD PTR tv1860[rbp], 1
$LN222@Begin:
	mov	rax, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR tv1860[rbp]
	mov	DWORD PTR [rax+440], ecx
; Line 6277
	mov	rax, QWORD PTR window$[rbp]
	mov	DWORD PTR [rax+448], -1
	mov	rax, QWORD PTR window$[rbp]
	mov	DWORD PTR [rax+444], -1
; Line 6279
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rcx+640]
	movss	DWORD PTR [rax+452], xmm0
; Line 6280
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [rax+456], xmm0
; Line 6281
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 464				; 000001d0H
	mov	QWORD PTR tv1875[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv1875[rbp]
	call	?resize@?$ImVector@M@@QEAAXH@Z		; ImVector<float>::resize
; Line 6282
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 480				; 000001e0H
	mov	QWORD PTR tv1881[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv1881[rbp]
	call	?resize@?$ImVector@M@@QEAAXH@Z		; ImVector<float>::resize
; Line 6284
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+168]
	test	eax, eax
	jle	SHORT $LN88@Begin
; Line 6285
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+168]
	dec	al
	mov	rcx, QWORD PTR window$[rbp]
	mov	BYTE PTR [rcx+168], al
$LN88@Begin:
; Line 6286
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+169]
	test	eax, eax
	jle	SHORT $LN89@Begin
; Line 6287
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+169]
	dec	al
	mov	rcx, QWORD PTR window$[rbp]
	mov	BYTE PTR [rcx+169], al
$LN89@Begin:
; Line 6290
	movzx	eax, BYTE PTR want_focus$38[rbp]
	test	eax, eax
	je	SHORT $LN90@Begin
; Line 6292
	mov	rcx, QWORD PTR window$[rbp]
	call	?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::FocusWindow
; Line 6293
	xor	edx, edx
	mov	rcx, QWORD PTR window$[rbp]
	call	?NavInitWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z ; ImGui::NavInitWindow
$LN90@Begin:
; Line 6297
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 1
	test	eax, eax
	jne	SHORT $LN91@Begin
; Line 6298
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR title_bar_rect$50[rbp+8]
	subss	xmm0, DWORD PTR [rax+76]
	mov	rax, QWORD PTR window$[rbp]
	movss	xmm1, DWORD PTR title_bar_rect$50[rbp]
	addss	xmm1, DWORD PTR [rax+76]
	movss	xmm2, DWORD PTR title_bar_rect$50[rbp+12]
	movss	DWORD PTR [rsp+32], xmm2
	movaps	xmm3, xmm0
	movss	xmm2, DWORD PTR title_bar_rect$50[rbp+4]
	lea	rcx, QWORD PTR $T110[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
	mov	QWORD PTR tv1952[rbp], rax
	mov	rax, QWORD PTR window$[rbp]
	mov	QWORD PTR tv1918[rbp], rax
	mov	r9, QWORD PTR p_open$[rbp]
	mov	r8, QWORD PTR name$[rbp]
	mov	rdx, QWORD PTR tv1952[rbp]
	mov	rcx, QWORD PTR tv1918[rbp]
	call	?RenderWindowTitleBarContents@ImGui@@YAXPEAUImGuiWindow@@AEBUImRect@@PEBDPEA_N@Z ; ImGui::RenderWindowTitleBarContents
$LN91@Begin:
; Line 6301
	xor	eax, eax
	mov	rcx, QWORD PTR window$[rbp]
	mov	WORD PTR [rcx+626], ax
	xor	eax, eax
	mov	rcx, QWORD PTR window$[rbp]
	mov	WORD PTR [rcx+624], ax
; Line 6315
	xor	r8d, r8d
	lea	rdx, QWORD PTR title_bar_rect$50[rbp+8]
	lea	rcx, QWORD PTR title_bar_rect$50[rbp]
	call	?IsMouseHoveringRect@ImGui@@YA_NAEBUImVec2@@0_N@Z ; ImGui::IsMouseHoveringRect
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN223@Begin
	mov	DWORD PTR tv1964[rbp], 1
	jmp	SHORT $LN224@Begin
$LN223@Begin:
	mov	DWORD PTR tv1964[rbp], 0
$LN224@Begin:
	lea	r9, QWORD PTR title_bar_rect$50[rbp]
	mov	r8d, DWORD PTR tv1964[rbp]
	mov	rax, QWORD PTR window$[rbp]
	mov	edx, DWORD PTR [rax+84]
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetLastItemData@ImGui@@YAXPEAUImGuiWindow@@IHAEBUImRect@@@Z ; ImGui::SetLastItemData
; Line 6321
	jmp	SHORT $LN26@Begin
$LN25@Begin:
; Line 6325
	mov	rcx, QWORD PTR window$[rbp]
	call	?SetCurrentWindow@@YAXPEAUImGuiWindow@@@Z ; SetCurrentWindow
$LN26@Begin:
; Line 6329
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7544				; 00001d78H
	mov	rcx, rax
	call	?back@?$ImVector@H@@QEAAAEAHXZ		; ImVector<int>::back
	mov	rcx, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR [rcx+7236], eax
; Line 6330
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN225@Begin
	mov	rax, QWORD PTR parent_window$[rbp]
	mov	eax, DWORD PTR [rax+340]
	mov	DWORD PTR tv1984[rbp], eax
	jmp	SHORT $LN226@Begin
$LN225@Begin:
	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:??_C@_0M@OFKBALAI@?$CDFOCUSSCOPE@
	mov	rcx, QWORD PTR window$[rbp]
	call	?GetID@ImGuiWindow@@QEAAIPEBD0@Z	; ImGuiWindow::GetID
	mov	DWORD PTR tv1984[rbp], eax
$LN226@Begin:
	mov	rax, QWORD PTR window$[rbp]
	mov	ecx, DWORD PTR tv1984[rbp]
	mov	DWORD PTR [rax+340], ecx
; Line 6332
	mov	rax, QWORD PTR window$[rbp]
	add	rax, 552				; 00000228H
	mov	rcx, QWORD PTR window$[rbp]
	add	rcx, 544				; 00000220H
	mov	r8b, 1
	mov	rdx, rax
	call	?PushClipRect@ImGui@@YAXAEBUImVec2@@0_N@Z ; ImGui::PushClipRect
; Line 6335
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+144], 0
; Line 6336
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, WORD PTR [rax+154]
	inc	ax
	mov	rcx, QWORD PTR window$[rbp]
	mov	WORD PTR [rcx+154], ax
; Line 6337
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7344				; 00001cb0H
	mov	rcx, rax
	call	?ClearFlags@ImGuiNextWindowData@@QEAAXXZ ; ImGuiNextWindowData::ClearFlags
; Line 6340
	movzx	eax, BYTE PTR first_begin_of_the_frame$[rbp]
	test	eax, eax
	je	$LN92@Begin
; Line 6342
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	$LN93@Begin
; Line 6346
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 1
	test	eax, eax
	jne	SHORT $LN227@Begin
	mov	eax, DWORD PTR ?__LINE__Var@?0??Begin@ImGui@@YA_NPEBDPEA_NH@Z@4JA
	add	eax, 605				; 0000025dH
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1FG@JPKHCDHL@?$AA?$CI?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5?$AAI?$AAm?$AAG?$AAu?$AAi?$AAW@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN227@Begin:
; Line 6347
	mov	eax, DWORD PTR flags$[rbp]
	and	eax, 64					; 00000040H
	test	eax, eax
	jne	SHORT $LN94@Begin
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+168]
	test	eax, eax
	jg	SHORT $LN94@Begin
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+169]
	test	eax, eax
	jg	SHORT $LN94@Begin
; Line 6348
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+12476]
	test	eax, eax
	jne	SHORT $LN95@Begin
; Line 6349
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+512]
	comiss	xmm0, DWORD PTR [rcx+520]
	jae	SHORT $LN97@Begin
	mov	rax, QWORD PTR window$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	movss	xmm0, DWORD PTR [rax+516]
	comiss	xmm0, DWORD PTR [rcx+524]
	jb	SHORT $LN96@Begin
$LN97@Begin:
; Line 6350
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+176], 1
$LN96@Begin:
$LN95@Begin:
$LN94@Begin:
; Line 6353
	cmp	QWORD PTR parent_window$[rbp], 0
	je	SHORT $LN98@Begin
	mov	rax, QWORD PTR parent_window$[rbp]
	movzx	eax, BYTE PTR [rax+145]
	test	eax, eax
	jne	SHORT $LN99@Begin
	mov	rax, QWORD PTR parent_window$[rbp]
	movsx	eax, BYTE PTR [rax+176]
	test	eax, eax
	jle	SHORT $LN98@Begin
$LN99@Begin:
; Line 6354
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+176], 1
$LN98@Begin:
; Line 6355
	cmp	QWORD PTR parent_window$[rbp], 0
	je	SHORT $LN100@Begin
	mov	rax, QWORD PTR parent_window$[rbp]
	movzx	eax, BYTE PTR [rax+145]
	test	eax, eax
	jne	SHORT $LN101@Begin
	mov	rax, QWORD PTR parent_window$[rbp]
	movsx	eax, BYTE PTR [rax+177]
	test	eax, eax
	jle	SHORT $LN100@Begin
$LN101@Begin:
; Line 6356
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+177], 1
$LN100@Begin:
$LN93@Begin:
; Line 6360
	mov	rax, QWORD PTR style$[rbp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rax]
	jb	SHORT $LN102@Begin
; Line 6361
	mov	rax, QWORD PTR window$[rbp]
	mov	BYTE PTR [rax+176], 1
$LN102@Begin:
; Line 6364
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+176]
	test	eax, eax
	jg	SHORT $LN228@Begin
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+177]
	test	eax, eax
	jg	SHORT $LN228@Begin
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+178]
	test	eax, eax
	jg	SHORT $LN228@Begin
	mov	DWORD PTR tv2065[rbp], 0
	jmp	SHORT $LN229@Begin
$LN228@Begin:
	mov	DWORD PTR tv2065[rbp], 1
$LN229@Begin:
	mov	rax, QWORD PTR window$[rbp]
	movzx	ecx, BYTE PTR tv2065[rbp]
	mov	BYTE PTR [rax+149], cl
; Line 6367
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+179]
	test	eax, eax
	jle	SHORT $LN103@Begin
; Line 6369
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+179]
	dec	al
	mov	rcx, QWORD PTR window$[rbp]
	mov	BYTE PTR [rcx+179], al
; Line 6370
	mov	rax, QWORD PTR window$[rbp]
	mov	eax, DWORD PTR [rax+12]
	or	eax, 786944				; 000c0200H
	mov	rcx, QWORD PTR window$[rbp]
	mov	DWORD PTR [rcx+12], eax
$LN103@Begin:
; Line 6374
	mov	BYTE PTR skip_items$65[rbp], 0
; Line 6375
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+145]
	test	eax, eax
	jne	SHORT $LN105@Begin
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+142]
	test	eax, eax
	je	SHORT $LN105@Begin
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+149]
	test	eax, eax
	je	SHORT $LN104@Begin
$LN105@Begin:
; Line 6376
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+168]
	test	eax, eax
	jg	SHORT $LN106@Begin
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+169]
	test	eax, eax
	jg	SHORT $LN106@Begin
	mov	rax, QWORD PTR window$[rbp]
	movsx	eax, BYTE PTR [rax+177]
	test	eax, eax
	jg	SHORT $LN106@Begin
; Line 6377
	mov	BYTE PTR skip_items$65[rbp], 1
$LN106@Begin:
$LN104@Begin:
; Line 6378
	mov	rax, QWORD PTR window$[rbp]
	movzx	ecx, BYTE PTR skip_items$65[rbp]
	mov	BYTE PTR [rax+147], cl
$LN92@Begin:
; Line 6381
	mov	rax, QWORD PTR window$[rbp]
	movzx	eax, BYTE PTR [rax+147]
	test	eax, eax
	jne	SHORT $LN230@Begin
	mov	DWORD PTR tv2099[rbp], 1
	jmp	SHORT $LN231@Begin
$LN230@Begin:
	mov	DWORD PTR tv2099[rbp], 0
$LN231@Begin:
	movzx	eax, BYTE PTR tv2099[rbp]
; Line 6382
	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:?Begin@ImGui@@YA_NPEBDPEA_NH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+4864]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?Begin@ImGui@@YA_NPEBDPEA_NH@Z ENDP			; ImGui::Begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetVersion@ImGui@@YAPEBDXZ
_TEXT	SEGMENT
?GetVersion@ImGui@@YAPEBDXZ PROC			; ImGui::GetVersion, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3361
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3362
	lea	rax, OFFSET FLAT:??_C@_08JKMMBCCO@1?484?5WIP@
; Line 3363
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetVersion@ImGui@@YAPEBDXZ ENDP			; ImGui::GetVersion
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ShowMetricsWindow@ImGui@@YAXPEA_N@Z
_TEXT	SEGMENT
g$ = 8
io$ = 40
cfg$ = 72
wrt_rects_names$ = 112
trt_rects_names$ = 208
rect_n$14 = 340
r$15 = 376
table_n$16 = 420
table$17 = 456
buf$18 = 496
rect_n$19 = 644
column_n$20 = 676
r$21 = 712
r$22 = 760
drawlist_count$ = 804
viewport_i$23 = 836
viewport_i$24 = 868
viewport$25 = 904
layer_i$26 = 932
draw_list_i$27 = 964
i$28 = 996
i$29 = 1028
window$30 = 1064
n$31 = 1092
tab_bar$32 = 1128
n$33 = 1156
table$34 = 1192
atlas$ = 1224
n$35 = 1252
settings$36 = 1288
settings$37 = 1320
input_source_names$38 = 1352
n$39 = 1428
window$40 = 1464
draw_list$41 = 1496
r$42 = 1528
buf$43 = 1576
font_size$44 = 1636
table_n$45 = 1668
table$46 = 1704
draw_list$47 = 1736
column_n$48 = 1764
r$49 = 1800
col$50 = 1844
thickness$51 = 1876
r$52 = 1912
$T53 = 2916
$T54 = 2948
$T55 = 2980
$T56 = 3012
$T57 = 3044
$T58 = 3076
$T59 = 3108
$T60 = 3140
$T61 = 3172
$T62 = 3204
$T63 = 3236
$T64 = 3268
$T65 = 3300
$T66 = 3332
$T67 = 3364
$T68 = 3396
$T69 = 3428
$T70 = 3460
tv1278 = 3476
tv1274 = 3476
tv301 = 3476
tv198 = 3476
tv1252 = 3480
tv1152 = 3480
tv1133 = 3480
tv1059 = 3480
tv1015 = 3480
tv989 = 3480
tv982 = 3480
tv975 = 3480
tv967 = 3480
tv957 = 3480
tv919 = 3480
tv899 = 3480
tv878 = 3480
tv776 = 3480
tv752 = 3480
tv712 = 3480
tv706 = 3480
tv687 = 3480
tv663 = 3480
tv642 = 3480
tv590 = 3480
tv576 = 3480
tv535 = 3480
tv501 = 3480
tv460 = 3480
tv384 = 3480
tv327 = 3480
tv251 = 3480
tv955 = 3488
tv718 = 3488
tv574 = 3488
tv533 = 3488
tv499 = 3488
tv458 = 3488
tv382 = 3488
tv249 = 3488
tv953 = 3496
tv722 = 3496
tv572 = 3496
tv531 = 3496
tv497 = 3496
tv456 = 3496
tv380 = 3496
tv247 = 3496
tv729 = 3504
tv243 = 3504
__$ArrayPad$ = 3512
p_open$ = 3552
?ShowMetricsWindow@ImGui@@YAXPEA_N@Z PROC		; ImGui::ShowMetricsWindow, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 10950
$LN125:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 3624				; 00000e28H
	lea	rbp, QWORD PTR [rsp+96]
	lea	rdi, QWORD PTR [rsp+96]
	mov	ecx, 642				; 00000282H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+3656]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 10951
	xor	r8d, r8d
	mov	rdx, QWORD PTR p_open$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BM@CNHCNFCK@Dear?5ImGui?5Metrics?1Debugger@
	call	?Begin@ImGui@@YA_NPEBDPEA_NH@Z		; ImGui::Begin
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN56@ShowMetric
; Line 10953
	call	?End@ImGui@@YAXXZ			; ImGui::End
; Line 10954
	jmp	$LN1@ShowMetric
$LN56@ShowMetric:
; Line 10957
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 10958
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8
	mov	QWORD PTR io$[rbp], rax
; Line 10959
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12556				; 0000310cH
	mov	QWORD PTR cfg$[rbp], rax
; Line 10962
	call	?GetVersion@ImGui@@YAPEBDXZ		; ImGui::GetVersion
	mov	rdx, rax
	lea	rcx, OFFSET FLAT:??_C@_0O@NCHBJMJF@Dear?5ImGui?5?$CFs@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 10963
	mov	rax, QWORD PTR io$[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+920]
	mov	rax, QWORD PTR io$[rbp]
	movss	xmm1, DWORD PTR __real@447a0000
	divss	xmm1, DWORD PTR [rax+920]
	cvtss2sd xmm1, xmm1
	movaps	xmm2, xmm0
	movq	r8, xmm2
	movq	rdx, xmm1
	lea	rcx, OFFSET FLAT:??_C@_0CN@EIPBEGMP@Application?5average?5?$CF?43f?5ms?1fra@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 10964
	mov	rax, QWORD PTR io$[rbp]
	mov	eax, DWORD PTR [rax+928]
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	r9d, eax
	mov	rax, QWORD PTR io$[rbp]
	mov	r8d, DWORD PTR [rax+928]
	mov	rax, QWORD PTR io$[rbp]
	mov	edx, DWORD PTR [rax+924]
	lea	rcx, OFFSET FLAT:??_C@_0CH@HHKODNBE@?$CFd?5vertices?0?5?$CFd?5indices?5?$CI?$CFd?5tri@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 10965
	mov	rax, QWORD PTR io$[rbp]
	mov	r8d, DWORD PTR [rax+932]
	mov	rax, QWORD PTR io$[rbp]
	mov	edx, DWORD PTR [rax+936]
	lea	rcx, OFFSET FLAT:??_C@_0BP@OPGGNCEP@?$CFd?5active?5windows?5?$CI?$CFd?5visible?$CJ@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 10966
	mov	rax, QWORD PTR io$[rbp]
	mov	edx, DWORD PTR [rax+940]
	lea	rcx, OFFSET FLAT:??_C@_0BG@NBPNMJGC@?$CFd?5active?5allocations@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 10969
	call	?Separator@ImGui@@YAXXZ			; ImGui::Separator
; Line 10973
	lea	rax, OFFSET FLAT:??_C@_09DBGHEPMN@OuterRect@
	mov	QWORD PTR wrt_rects_names$[rbp], rax
	lea	rax, OFFSET FLAT:??_C@_0BB@CJNOCIFN@OuterRectClipped@
	mov	QWORD PTR wrt_rects_names$[rbp+8], rax
	lea	rax, OFFSET FLAT:??_C@_09PPJHMOMF@InnerRect@
	mov	QWORD PTR wrt_rects_names$[rbp+16], rax
	lea	rax, OFFSET FLAT:??_C@_0O@BNFMFEHO@InnerClipRect@
	mov	QWORD PTR wrt_rects_names$[rbp+24], rax
	lea	rax, OFFSET FLAT:??_C@_08FACDBJHD@WorkRect@
	mov	QWORD PTR wrt_rects_names$[rbp+32], rax
	lea	rax, OFFSET FLAT:??_C@_07HLHPKMFI@Content@
	mov	QWORD PTR wrt_rects_names$[rbp+40], rax
	lea	rax, OFFSET FLAT:??_C@_0N@FEPIKFED@ContentIdeal@
	mov	QWORD PTR wrt_rects_names$[rbp+48], rax
	lea	rax, OFFSET FLAT:??_C@_0BC@NDBPEMLC@ContentRegionRect@
	mov	QWORD PTR wrt_rects_names$[rbp+56], rax
; Line 10975
	lea	rax, OFFSET FLAT:??_C@_09DBGHEPMN@OuterRect@
	mov	QWORD PTR trt_rects_names$[rbp], rax
	lea	rax, OFFSET FLAT:??_C@_09PPJHMOMF@InnerRect@
	mov	QWORD PTR trt_rects_names$[rbp+8], rax
	lea	rax, OFFSET FLAT:??_C@_08FACDBJHD@WorkRect@
	mov	QWORD PTR trt_rects_names$[rbp+16], rax
	lea	rax, OFFSET FLAT:??_C@_0N@OPBPMFAC@HostClipRect@
	mov	QWORD PTR trt_rects_names$[rbp+24], rax
	lea	rax, OFFSET FLAT:??_C@_0O@BNFMFEHO@InnerClipRect@
	mov	QWORD PTR trt_rects_names$[rbp+32], rax
	lea	rax, OFFSET FLAT:??_C@_0BD@PAHDAJDC@BackgroundClipRect@
	mov	QWORD PTR trt_rects_names$[rbp+40], rax
	lea	rax, OFFSET FLAT:??_C@_0M@CDCMPDKG@ColumnsRect@
	mov	QWORD PTR trt_rects_names$[rbp+48], rax
	lea	rax, OFFSET FLAT:??_C@_0BA@ODEDLNCO@ColumnsWorkRect@
	mov	QWORD PTR trt_rects_names$[rbp+56], rax
	lea	rax, OFFSET FLAT:??_C@_0BA@JACIJDNM@ColumnsClipRect@
	mov	QWORD PTR trt_rects_names$[rbp+64], rax
	lea	rax, OFFSET FLAT:??_C@_0BK@BLBFMAOD@ColumnsContentHeadersUsed@
	mov	QWORD PTR trt_rects_names$[rbp+72], rax
	lea	rax, OFFSET FLAT:??_C@_0BL@FAEPMJDA@ColumnsContentHeadersIdeal@
	mov	QWORD PTR trt_rects_names$[rbp+80], rax
	lea	rax, OFFSET FLAT:??_C@_0BF@HAPEHPAK@ColumnsContentFrozen@
	mov	QWORD PTR trt_rects_names$[rbp+88], rax
	lea	rax, OFFSET FLAT:??_C@_0BH@NNGOPODG@ColumnsContentUnfrozen@
	mov	QWORD PTR trt_rects_names$[rbp+96], rax
; Line 10976
	mov	rax, QWORD PTR cfg$[rbp]
	cmp	DWORD PTR [rax+8], 0
	jge	SHORT $LN57@ShowMetric
; Line 10977
	mov	rax, QWORD PTR cfg$[rbp]
	mov	DWORD PTR [rax+8], 4
$LN57@ShowMetric:
; Line 10978
	mov	rax, QWORD PTR cfg$[rbp]
	cmp	DWORD PTR [rax+12], 0
	jge	SHORT $LN58@ShowMetric
; Line 10979
	mov	rax, QWORD PTR cfg$[rbp]
	mov	DWORD PTR [rax+12], 2
$LN58@ShowMetric:
; Line 11018
	lea	rcx, OFFSET FLAT:??_C@_05OENKALAF@Tools@
	call	?TreeNode@ImGui@@YA_NPEBD@Z		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	je	$LN59@ShowMetric
; Line 11021
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T53[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rdx, rax
	lea	rcx, OFFSET FLAT:??_C@_0O@BDKBPKIH@Item?5Picker?4?4@
	call	?Button@ImGui@@YA_NPEBDAEBUImVec2@@@Z	; ImGui::Button
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN60@ShowMetric
; Line 11022
	call	?DebugStartItemPicker@ImGui@@YAXXZ	; ImGui::DebugStartItemPicker
$LN60@ShowMetric:
; Line 11023
	movss	xmm1, DWORD PTR __real@bf800000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
; Line 11024
	lea	rcx, OFFSET FLAT:??_C@_0IF@BGKDCLHL@Will?5call?5the?5IM_DEBUG_BREAK?$CI?$CJ?5@
	call	?MetricsHelpMarker@@YAXPEBD@Z		; MetricsHelpMarker
; Line 11026
	mov	rax, QWORD PTR cfg$[rbp]
	inc	rax
	mov	rdx, rax
	lea	rcx, OFFSET FLAT:??_C@_0BJ@HJBAEIMP@Show?5windows?5begin?5order@
	call	?Checkbox@ImGui@@YA_NPEBDPEA_N@Z	; ImGui::Checkbox
; Line 11027
	mov	rax, QWORD PTR cfg$[rbp]
	mov	rdx, rax
	lea	rcx, OFFSET FLAT:??_C@_0BI@DIKJGFFM@Show?5windows?5rectangles@
	call	?Checkbox@ImGui@@YA_NPEBDPEA_N@Z	; ImGui::Checkbox
; Line 11028
	movss	xmm1, DWORD PTR __real@bf800000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
; Line 11029
	call	?GetFontSize@ImGui@@YAMXZ		; ImGui::GetFontSize
	mulss	xmm0, DWORD PTR __real@41400000
	call	?SetNextItemWidth@ImGui@@YAXM@Z		; ImGui::SetNextItemWidth
; Line 11030
	mov	rax, QWORD PTR cfg$[rbp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR tv198[rbp], eax
	mov	rcx, QWORD PTR cfg$[rbp]
	add	rcx, 8
	mov	DWORD PTR [rsp+32], 8
	mov	r9d, 8
	lea	r8, QWORD PTR wrt_rects_names$[rbp]
	mov	rdx, rcx
	lea	rcx, OFFSET FLAT:??_C@_0BJ@OFHLDDCB@?$CD?$CDshow_windows_rect_type@
	call	?Combo@ImGui@@YA_NPEBDPEAHQEBQEBDHH@Z	; ImGui::Combo
	movzx	eax, al
	mov	ecx, DWORD PTR tv198[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR cfg$[rbp]
	mov	BYTE PTR [rcx], al
; Line 11031
	mov	rax, QWORD PTR cfg$[rbp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	$LN61@ShowMetric
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	$LN61@ShowMetric
; Line 11033
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	rdx, QWORD PTR [rax]
	lea	rcx, OFFSET FLAT:??_C@_05DMJEEKMI@?8?$CFs?8?3@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
; Line 11034
	xorps	xmm0, xmm0
	call	?Indent@ImGui@@YAXM@Z			; ImGui::Indent
; Line 11035
	mov	DWORD PTR rect_n$14[rbp], 0
	jmp	SHORT $LN4@ShowMetric
$LN2@ShowMetric:
	mov	eax, DWORD PTR rect_n$14[rbp]
	inc	eax
	mov	DWORD PTR rect_n$14[rbp], eax
$LN4@ShowMetric:
	cmp	DWORD PTR rect_n$14[rbp], 8
	jge	$LN3@ShowMetric
; Line 11037
	mov	r8d, DWORD PTR rect_n$14[rbp]
	mov	rax, QWORD PTR g$[rbp]
	mov	rdx, QWORD PTR [rax+7624]
	lea	rcx, QWORD PTR r$15[rbp]
	call	?GetWindowRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiWindow@@H@Z ; `ImGui::ShowMetricsWindow'::`2'::Funcs::GetWindowRect
; Line 11038
	movsxd	rax, DWORD PTR rect_n$14[rbp]
	mov	rax, QWORD PTR wrt_rects_names$[rbp+rax*8]
	mov	QWORD PTR tv251[rbp], rax
	lea	rcx, QWORD PTR r$15[rbp]
	call	?GetHeight@ImRect@@QEBAMXZ		; ImRect::GetHeight
	cvtss2sd xmm0, xmm0
	movsd	QWORD PTR tv249[rbp], xmm0
	lea	rcx, QWORD PTR r$15[rbp]
	call	?GetWidth@ImRect@@QEBAMXZ		; ImRect::GetWidth
	cvtss2sd xmm0, xmm0
	movsd	QWORD PTR tv247[rbp], xmm0
	cvtss2sd xmm0, DWORD PTR r$15[rbp+12]
	cvtss2sd xmm1, DWORD PTR r$15[rbp+8]
	cvtss2sd xmm2, DWORD PTR r$15[rbp+4]
	cvtss2sd xmm3, DWORD PTR r$15[rbp]
	movsd	QWORD PTR tv243[rbp], xmm3
	mov	rax, QWORD PTR tv251[rbp]
	mov	QWORD PTR [rsp+56], rax
	movsd	xmm4, QWORD PTR tv249[rbp]
	movsd	QWORD PTR [rsp+48], xmm4
	movsd	xmm4, QWORD PTR tv247[rbp]
	movsd	QWORD PTR [rsp+40], xmm4
	movsd	QWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movq	r9, xmm3
	movq	r8, xmm2
	movsd	xmm0, QWORD PTR tv243[rbp]
	movaps	xmm1, xmm0
	movq	rdx, xmm1
	lea	rcx, OFFSET FLAT:??_C@_0DC@MPAIEFII@?$CI?$CF6?41f?0?$CF6?41f?$CJ?5?$CI?$CF6?41f?0?$CF6?41f?$CJ?5Siz@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11039
	jmp	$LN2@ShowMetric
$LN3@ShowMetric:
; Line 11040
	xorps	xmm0, xmm0
	call	?Unindent@ImGui@@YAXM@Z			; ImGui::Unindent
$LN61@ShowMetric:
; Line 11042
	mov	rax, QWORD PTR cfg$[rbp]
	add	rax, 3
	mov	rdx, rax
	lea	rcx, OFFSET FLAT:??_C@_0CC@NLEJJGFA@Show?5ImDrawCmd?5mesh?5when?5hoveri@
	call	?Checkbox@ImGui@@YA_NPEBDPEA_N@Z	; ImGui::Checkbox
; Line 11043
	mov	rax, QWORD PTR cfg$[rbp]
	add	rax, 4
	mov	rdx, rax
	lea	rcx, OFFSET FLAT:??_C@_0CM@GCNMPAKG@Show?5ImDrawCmd?5bounding?5boxes?5w@
	call	?Checkbox@ImGui@@YA_NPEBDPEA_N@Z	; ImGui::Checkbox
; Line 11045
	mov	rax, QWORD PTR cfg$[rbp]
	add	rax, 2
	mov	rdx, rax
	lea	rcx, OFFSET FLAT:??_C@_0BH@GINBNIDO@Show?5tables?5rectangles@
	call	?Checkbox@ImGui@@YA_NPEBDPEA_N@Z	; ImGui::Checkbox
; Line 11046
	movss	xmm1, DWORD PTR __real@bf800000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
; Line 11047
	call	?GetFontSize@ImGui@@YAMXZ		; ImGui::GetFontSize
	mulss	xmm0, DWORD PTR __real@41400000
	call	?SetNextItemWidth@ImGui@@YAXM@Z		; ImGui::SetNextItemWidth
; Line 11048
	mov	rax, QWORD PTR cfg$[rbp]
	movzx	eax, BYTE PTR [rax+2]
	mov	DWORD PTR tv301[rbp], eax
	mov	rcx, QWORD PTR cfg$[rbp]
	add	rcx, 12
	mov	DWORD PTR [rsp+32], 13
	mov	r9d, 13
	lea	r8, QWORD PTR trt_rects_names$[rbp]
	mov	rdx, rcx
	lea	rcx, OFFSET FLAT:??_C@_0BI@CCENNJPN@?$CD?$CDshow_table_rects_type@
	call	?Combo@ImGui@@YA_NPEBDPEAHQEBQEBDHH@Z	; ImGui::Combo
	movzx	eax, al
	mov	ecx, DWORD PTR tv301[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR cfg$[rbp]
	mov	BYTE PTR [rcx+2], al
; Line 11049
	mov	rax, QWORD PTR cfg$[rbp]
	movzx	eax, BYTE PTR [rax+2]
	test	eax, eax
	je	$LN62@ShowMetric
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	$LN62@ShowMetric
; Line 11051
	mov	DWORD PTR table_n$16[rbp], 0
	jmp	SHORT $LN7@ShowMetric
$LN5@ShowMetric:
	mov	eax, DWORD PTR table_n$16[rbp]
	inc	eax
	mov	DWORD PTR table_n$16[rbp], eax
$LN7@ShowMetric:
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8192				; 00002000H
	mov	rcx, rax
	call	?GetMapSize@?$ImPool@UImGuiTable@@@@QEBAHXZ ; ImPool<ImGuiTable>::GetMapSize
	cmp	DWORD PTR table_n$16[rbp], eax
	jge	$LN6@ShowMetric
; Line 11053
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8192				; 00002000H
	mov	QWORD PTR tv327[rbp], rax
	mov	edx, DWORD PTR table_n$16[rbp]
	mov	rcx, QWORD PTR tv327[rbp]
	call	?TryGetMapData@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z ; ImPool<ImGuiTable>::TryGetMapData
	mov	QWORD PTR table$17[rbp], rax
; Line 11054
	cmp	QWORD PTR table$17[rbp], 0
	je	SHORT $LN64@ShowMetric
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7056]
	dec	eax
	mov	rcx, QWORD PTR table$17[rbp]
	cmp	DWORD PTR [rcx+112], eax
	jl	SHORT $LN64@ShowMetric
	mov	rax, QWORD PTR table$17[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+7624]
	cmp	QWORD PTR [rax+392], rcx
	je	SHORT $LN63@ShowMetric
	mov	rax, QWORD PTR table$17[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+7624]
	cmp	QWORD PTR [rax+400], rcx
	je	SHORT $LN63@ShowMetric
$LN64@ShowMetric:
; Line 11055
	jmp	$LN5@ShowMetric
$LN63@ShowMetric:
; Line 11057
	mov	rax, QWORD PTR table$17[rbp]
	mov	rax, QWORD PTR [rax+392]
	mov	r9, QWORD PTR [rax]
	mov	rax, QWORD PTR table$17[rbp]
	mov	r8d, DWORD PTR [rax+116]
	mov	rax, QWORD PTR table$17[rbp]
	mov	edx, DWORD PTR [rax]
	lea	rcx, OFFSET FLAT:??_C@_0CD@PGABKCAC@Table?50x?$CF08X?5?$CI?$CFd?5columns?0?5in?5?8?$CF@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
; Line 11058
	xor	ecx, ecx
	call	?IsItemHovered@ImGui@@YA_NH@Z		; ImGui::IsItemHovered
	movzx	eax, al
	test	eax, eax
	je	$LN65@ShowMetric
; Line 11059
	call	?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@XZ ; ImGui::GetForegroundDrawList
	mov	QWORD PTR tv384[rbp], rax
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T54[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rcx, QWORD PTR table$17[rbp]
	add	rcx, 252				; 000000fcH
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T55[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv382[rbp], rax
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T56[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rcx, QWORD PTR table$17[rbp]
	add	rcx, 244				; 000000f4H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T57[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv380[rbp], rax
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, -16711681				; ff00ffffH
	mov	r8, QWORD PTR tv382[rbp]
	mov	rdx, QWORD PTR tv380[rbp]
	mov	rcx, QWORD PTR tv384[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
$LN65@ShowMetric:
; Line 11060
	xorps	xmm0, xmm0
	call	?Indent@ImGui@@YAXM@Z			; ImGui::Indent
; Line 11062
	mov	DWORD PTR rect_n$19[rbp], 0
	jmp	SHORT $LN10@ShowMetric
$LN8@ShowMetric:
	mov	eax, DWORD PTR rect_n$19[rbp]
	inc	eax
	mov	DWORD PTR rect_n$19[rbp], eax
$LN10@ShowMetric:
	cmp	DWORD PTR rect_n$19[rbp], 13
	jge	$LN9@ShowMetric
; Line 11064
	cmp	DWORD PTR rect_n$19[rbp], 6
	jl	$LN66@ShowMetric
; Line 11066
	cmp	DWORD PTR rect_n$19[rbp], 6
	je	SHORT $LN68@ShowMetric
	cmp	DWORD PTR rect_n$19[rbp], 8
	je	SHORT $LN68@ShowMetric
; Line 11067
	jmp	SHORT $LN8@ShowMetric
$LN68@ShowMetric:
; Line 11068
	mov	DWORD PTR column_n$20[rbp], 0
	jmp	SHORT $LN13@ShowMetric
$LN11@ShowMetric:
	mov	eax, DWORD PTR column_n$20[rbp]
	inc	eax
	mov	DWORD PTR column_n$20[rbp], eax
$LN13@ShowMetric:
	mov	rax, QWORD PTR table$17[rbp]
	mov	eax, DWORD PTR [rax+116]
	cmp	DWORD PTR column_n$20[rbp], eax
	jge	$LN12@ShowMetric
; Line 11070
	mov	r9d, DWORD PTR column_n$20[rbp]
	mov	r8d, DWORD PTR rect_n$19[rbp]
	mov	rdx, QWORD PTR table$17[rbp]
	lea	rcx, QWORD PTR r$21[rbp]
	call	?GetTableRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiTable@@HH@Z ; `ImGui::ShowMetricsWindow'::`2'::Funcs::GetTableRect
; Line 11071
	movsxd	rax, DWORD PTR rect_n$19[rbp]
	mov	rax, QWORD PTR trt_rects_names$[rbp+rax*8]
	mov	QWORD PTR tv460[rbp], rax
	lea	rcx, QWORD PTR r$21[rbp]
	call	?GetHeight@ImRect@@QEBAMXZ		; ImRect::GetHeight
	cvtss2sd xmm0, xmm0
	movsd	QWORD PTR tv458[rbp], xmm0
	lea	rcx, QWORD PTR r$21[rbp]
	call	?GetWidth@ImRect@@QEBAMXZ		; ImRect::GetWidth
	cvtss2sd xmm0, xmm0
	movsd	QWORD PTR tv456[rbp], xmm0
	cvtss2sd xmm0, DWORD PTR r$21[rbp+12]
	cvtss2sd xmm1, DWORD PTR r$21[rbp+8]
	cvtss2sd xmm2, DWORD PTR r$21[rbp+4]
	cvtss2sd xmm3, DWORD PTR r$21[rbp]
	mov	rax, QWORD PTR tv460[rbp]
	mov	QWORD PTR [rsp+80], rax
	mov	eax, DWORD PTR column_n$20[rbp]
	mov	DWORD PTR [rsp+72], eax
	movsd	xmm4, QWORD PTR tv458[rbp]
	movsd	QWORD PTR [rsp+64], xmm4
	movsd	xmm4, QWORD PTR tv456[rbp]
	movsd	QWORD PTR [rsp+56], xmm4
	movsd	QWORD PTR [rsp+48], xmm0
	movsd	QWORD PTR [rsp+40], xmm1
	movsd	QWORD PTR [rsp+32], xmm2
	movq	r9, xmm3
	lea	r8, OFFSET FLAT:??_C@_0DJ@IFLDIHOJ@?$CI?$CF6?41f?0?$CF6?41f?$CJ?5?$CI?$CF6?41f?0?$CF6?41f?$CJ?5Siz@
	mov	edx, 128				; 00000080H
	lea	rcx, QWORD PTR buf$18[rbp]
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
; Line 11072
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T58[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r9, rax
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR buf$18[rbp]
	call	?Selectable@ImGui@@YA_NPEBD_NHAEBUImVec2@@@Z ; ImGui::Selectable
; Line 11073
	xor	ecx, ecx
	call	?IsItemHovered@ImGui@@YA_NH@Z		; ImGui::IsItemHovered
	movzx	eax, al
	test	eax, eax
	je	$LN69@ShowMetric
; Line 11074
	call	?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@XZ ; ImGui::GetForegroundDrawList
	mov	QWORD PTR tv501[rbp], rax
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T59[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r8, rax
	lea	rdx, QWORD PTR r$21[rbp+8]
	lea	rcx, QWORD PTR $T60[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv499[rbp], rax
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T61[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r8, rax
	lea	rdx, QWORD PTR r$21[rbp]
	lea	rcx, QWORD PTR $T62[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv497[rbp], rax
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, -16711681				; ff00ffffH
	mov	r8, QWORD PTR tv499[rbp]
	mov	rdx, QWORD PTR tv497[rbp]
	mov	rcx, QWORD PTR tv501[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
$LN69@ShowMetric:
; Line 11075
	jmp	$LN11@ShowMetric
$LN12@ShowMetric:
; Line 11076
	jmp	$LN67@ShowMetric
$LN66@ShowMetric:
; Line 11079
	mov	r9d, -1
	mov	r8d, DWORD PTR rect_n$19[rbp]
	mov	rdx, QWORD PTR table$17[rbp]
	lea	rcx, QWORD PTR r$22[rbp]
	call	?GetTableRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiTable@@HH@Z ; `ImGui::ShowMetricsWindow'::`2'::Funcs::GetTableRect
; Line 11080
	movsxd	rax, DWORD PTR rect_n$19[rbp]
	mov	rax, QWORD PTR trt_rects_names$[rbp+rax*8]
	mov	QWORD PTR tv535[rbp], rax
	lea	rcx, QWORD PTR r$22[rbp]
	call	?GetHeight@ImRect@@QEBAMXZ		; ImRect::GetHeight
	cvtss2sd xmm0, xmm0
	movsd	QWORD PTR tv533[rbp], xmm0
	lea	rcx, QWORD PTR r$22[rbp]
	call	?GetWidth@ImRect@@QEBAMXZ		; ImRect::GetWidth
	cvtss2sd xmm0, xmm0
	movsd	QWORD PTR tv531[rbp], xmm0
	cvtss2sd xmm0, DWORD PTR r$22[rbp+12]
	cvtss2sd xmm1, DWORD PTR r$22[rbp+8]
	cvtss2sd xmm2, DWORD PTR r$22[rbp+4]
	cvtss2sd xmm3, DWORD PTR r$22[rbp]
	mov	rax, QWORD PTR tv535[rbp]
	mov	QWORD PTR [rsp+72], rax
	movsd	xmm4, QWORD PTR tv533[rbp]
	movsd	QWORD PTR [rsp+64], xmm4
	movsd	xmm4, QWORD PTR tv531[rbp]
	movsd	QWORD PTR [rsp+56], xmm4
	movsd	QWORD PTR [rsp+48], xmm0
	movsd	QWORD PTR [rsp+40], xmm1
	movsd	QWORD PTR [rsp+32], xmm2
	movq	r9, xmm3
	lea	r8, OFFSET FLAT:??_C@_0DC@MPAIEFII@?$CI?$CF6?41f?0?$CF6?41f?$CJ?5?$CI?$CF6?41f?0?$CF6?41f?$CJ?5Siz@
	mov	edx, 128				; 00000080H
	lea	rcx, QWORD PTR buf$18[rbp]
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
; Line 11081
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T63[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r9, rax
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR buf$18[rbp]
	call	?Selectable@ImGui@@YA_NPEBD_NHAEBUImVec2@@@Z ; ImGui::Selectable
; Line 11082
	xor	ecx, ecx
	call	?IsItemHovered@ImGui@@YA_NH@Z		; ImGui::IsItemHovered
	movzx	eax, al
	test	eax, eax
	je	$LN70@ShowMetric
; Line 11083
	call	?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@XZ ; ImGui::GetForegroundDrawList
	mov	QWORD PTR tv576[rbp], rax
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T64[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r8, rax
	lea	rdx, QWORD PTR r$22[rbp+8]
	lea	rcx, QWORD PTR $T65[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	QWORD PTR tv574[rbp], rax
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T66[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	r8, rax
	lea	rdx, QWORD PTR r$22[rbp]
	lea	rcx, QWORD PTR $T67[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	QWORD PTR tv572[rbp], rax
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, -16711681				; ff00ffffH
	mov	r8, QWORD PTR tv574[rbp]
	mov	rdx, QWORD PTR tv572[rbp]
	mov	rcx, QWORD PTR tv576[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
$LN70@ShowMetric:
$LN67@ShowMetric:
; Line 11085
	jmp	$LN8@ShowMetric
$LN9@ShowMetric:
; Line 11086
	xorps	xmm0, xmm0
	call	?Unindent@ImGui@@YAXM@Z			; ImGui::Unindent
; Line 11087
	jmp	$LN5@ShowMetric
$LN6@ShowMetric:
$LN62@ShowMetric:
; Line 11090
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN59@ShowMetric:
; Line 11094
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	lea	rdx, OFFSET FLAT:??_C@_07LDLFNPGN@Windows@
	mov	rcx, rax
	call	?DebugNodeWindowsList@ImGui@@YAXPEAU?$ImVector@PEAUImGuiWindow@@@@PEBD@Z ; ImGui::DebugNodeWindowsList
; Line 11098
	mov	DWORD PTR drawlist_count$[rbp], 0
; Line 11099
	mov	DWORD PTR viewport_i$23[rbp], 0
	jmp	SHORT $LN16@ShowMetric
$LN14@ShowMetric:
	mov	eax, DWORD PTR viewport_i$23[rbp]
	inc	eax
	mov	DWORD PTR viewport_i$23[rbp], eax
$LN16@ShowMetric:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7608]
	cmp	DWORD PTR viewport_i$23[rbp], eax
	jge	SHORT $LN15@ShowMetric
; Line 11100
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7608				; 00001db8H
	mov	QWORD PTR tv590[rbp], rax
	mov	edx, DWORD PTR viewport_i$23[rbp]
	mov	rcx, QWORD PTR tv590[rbp]
	call	??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z ; ImVector<ImGuiViewportP *>::operator[]
	mov	rax, QWORD PTR [rax]
	add	rax, 112				; 00000070H
	mov	rcx, rax
	call	?GetDrawListCount@ImDrawDataBuilder@@QEBAHXZ ; ImDrawDataBuilder::GetDrawListCount
	mov	ecx, DWORD PTR drawlist_count$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR drawlist_count$[rbp], eax
	jmp	SHORT $LN14@ShowMetric
$LN15@ShowMetric:
; Line 11101
	mov	r8d, DWORD PTR drawlist_count$[rbp]
	lea	rdx, OFFSET FLAT:??_C@_0P@EHGADCPI@DrawLists?5?$CI?$CFd?$CJ@
	lea	rcx, OFFSET FLAT:??_C@_09KCCHKPGA@DrawLists@
	call	?TreeNode@ImGui@@YA_NPEBD0ZZ		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	je	$LN71@ShowMetric
; Line 11103
	mov	DWORD PTR viewport_i$24[rbp], 0
	jmp	SHORT $LN19@ShowMetric
$LN17@ShowMetric:
	mov	eax, DWORD PTR viewport_i$24[rbp]
	inc	eax
	mov	DWORD PTR viewport_i$24[rbp], eax
$LN19@ShowMetric:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7608]
	cmp	DWORD PTR viewport_i$24[rbp], eax
	jge	$LN18@ShowMetric
; Line 11105
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7608				; 00001db8H
	mov	QWORD PTR tv642[rbp], rax
	mov	edx, DWORD PTR viewport_i$24[rbp]
	mov	rcx, QWORD PTR tv642[rbp]
	call	??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z ; ImVector<ImGuiViewportP *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR viewport$25[rbp], rax
; Line 11106
	mov	DWORD PTR layer_i$26[rbp], 0
	jmp	SHORT $LN22@ShowMetric
$LN20@ShowMetric:
	mov	eax, DWORD PTR layer_i$26[rbp]
	inc	eax
	mov	DWORD PTR layer_i$26[rbp], eax
$LN22@ShowMetric:
	cmp	DWORD PTR layer_i$26[rbp], 2
	jge	$LN21@ShowMetric
; Line 11107
	mov	DWORD PTR draw_list_i$27[rbp], 0
	jmp	SHORT $LN25@ShowMetric
$LN23@ShowMetric:
	mov	eax, DWORD PTR draw_list_i$27[rbp]
	inc	eax
	mov	DWORD PTR draw_list_i$27[rbp], eax
$LN25@ShowMetric:
	movsxd	rax, DWORD PTR layer_i$26[rbp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR viewport$25[rbp]
	mov	eax, DWORD PTR [rcx+rax+112]
	cmp	DWORD PTR draw_list_i$27[rbp], eax
	jge	SHORT $LN24@ShowMetric
; Line 11108
	movsxd	rax, DWORD PTR layer_i$26[rbp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR viewport$25[rbp]
	lea	rax, QWORD PTR [rcx+rax+112]
	mov	QWORD PTR tv663[rbp], rax
	mov	edx, DWORD PTR draw_list_i$27[rbp]
	mov	rcx, QWORD PTR tv663[rbp]
	call	??A?$ImVector@PEAUImDrawList@@@@QEAAAEAPEAUImDrawList@@H@Z ; ImVector<ImDrawList *>::operator[]
	lea	r8, OFFSET FLAT:??_C@_08IJNCDCKF@DrawList@
	mov	rdx, QWORD PTR [rax]
	xor	ecx, ecx
	call	?DebugNodeDrawList@ImGui@@YAXPEAUImGuiWindow@@PEBUImDrawList@@PEBD@Z ; ImGui::DebugNodeDrawList
	jmp	SHORT $LN23@ShowMetric
$LN24@ShowMetric:
	jmp	$LN20@ShowMetric
$LN21@ShowMetric:
; Line 11109
	jmp	$LN17@ShowMetric
$LN18@ShowMetric:
; Line 11110
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN71@ShowMetric:
; Line 11114
	mov	rax, QWORD PTR g$[rbp]
	mov	r8d, DWORD PTR [rax+7608]
	lea	rdx, OFFSET FLAT:??_C@_0P@HKKCMMOO@Viewports?5?$CI?$CFd?$CJ@
	lea	rcx, OFFSET FLAT:??_C@_09GPOHHJPA@Viewports@
	call	?TreeNode@ImGui@@YA_NPEBD0ZZ		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN72@ShowMetric
; Line 11116
	call	?GetTreeNodeToLabelSpacing@ImGui@@YAMXZ	; ImGui::GetTreeNodeToLabelSpacing
	call	?Indent@ImGui@@YAXM@Z			; ImGui::Indent
; Line 11117
	call	?RenderViewportsThumbnails@@YAXXZ	; RenderViewportsThumbnails
; Line 11118
	call	?GetTreeNodeToLabelSpacing@ImGui@@YAMXZ	; ImGui::GetTreeNodeToLabelSpacing
	call	?Unindent@ImGui@@YAXM@Z			; ImGui::Unindent
; Line 11119
	mov	DWORD PTR i$28[rbp], 0
	jmp	SHORT $LN28@ShowMetric
$LN26@ShowMetric:
	mov	eax, DWORD PTR i$28[rbp]
	inc	eax
	mov	DWORD PTR i$28[rbp], eax
$LN28@ShowMetric:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7608]
	cmp	DWORD PTR i$28[rbp], eax
	jge	SHORT $LN27@ShowMetric
; Line 11120
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7608				; 00001db8H
	mov	QWORD PTR tv687[rbp], rax
	mov	edx, DWORD PTR i$28[rbp]
	mov	rcx, QWORD PTR tv687[rbp]
	call	??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z ; ImVector<ImGuiViewportP *>::operator[]
	mov	rcx, QWORD PTR [rax]
	call	?DebugNodeViewport@ImGui@@YAXPEAUImGuiViewportP@@@Z ; ImGui::DebugNodeViewport
	jmp	SHORT $LN26@ShowMetric
$LN27@ShowMetric:
; Line 11121
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN72@ShowMetric:
; Line 11125
	mov	rax, QWORD PTR g$[rbp]
	mov	r8d, DWORD PTR [rax+7576]
	lea	rdx, OFFSET FLAT:??_C@_0M@CMLJJLKO@Popups?5?$CI?$CFd?$CJ@
	lea	rcx, OFFSET FLAT:??_C@_06ENDEIGLN@Popups@
	call	?TreeNode@ImGui@@YA_NPEBD0ZZ		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	je	$LN73@ShowMetric
; Line 11127
	mov	DWORD PTR i$29[rbp], 0
	jmp	SHORT $LN31@ShowMetric
$LN29@ShowMetric:
	mov	eax, DWORD PTR i$29[rbp]
	inc	eax
	mov	DWORD PTR i$29[rbp], eax
$LN31@ShowMetric:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7576]
	cmp	DWORD PTR i$29[rbp], eax
	jge	$LN30@ShowMetric
; Line 11129
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv706[rbp], rax
	mov	edx, DWORD PTR i$29[rbp]
	mov	rcx, QWORD PTR tv706[rbp]
	call	??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ; ImVector<ImGuiPopupData>::operator[]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR window$30[rbp], rax
; Line 11130
	cmp	QWORD PTR window$30[rbp], 0
	je	SHORT $LN101@ShowMetric
	mov	rax, QWORD PTR window$30[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 268435456				; 10000000H
	test	eax, eax
	je	SHORT $LN101@ShowMetric
	lea	rax, OFFSET FLAT:??_C@_0L@CMJPHOMG@?5ChildMenu@
	mov	QWORD PTR tv712[rbp], rax
	jmp	SHORT $LN102@ShowMetric
$LN101@ShowMetric:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv712[rbp], rax
$LN102@ShowMetric:
	cmp	QWORD PTR window$30[rbp], 0
	je	SHORT $LN103@ShowMetric
	mov	rax, QWORD PTR window$30[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN103@ShowMetric
	lea	rax, OFFSET FLAT:??_C@_0N@FFCBFAEB@?5ChildWindow@
	mov	QWORD PTR tv718[rbp], rax
	jmp	SHORT $LN104@ShowMetric
$LN103@ShowMetric:
	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR tv718[rbp], rax
$LN104@ShowMetric:
	cmp	QWORD PTR window$30[rbp], 0
	je	SHORT $LN105@ShowMetric
	mov	rax, QWORD PTR window$30[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv722[rbp], rax
	jmp	SHORT $LN106@ShowMetric
$LN105@ShowMetric:
	lea	rax, OFFSET FLAT:??_C@_04HIBGFPH@NULL@
	mov	QWORD PTR tv722[rbp], rax
$LN106@ShowMetric:
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7576				; 00001d98H
	mov	QWORD PTR tv729[rbp], rax
	mov	edx, DWORD PTR i$29[rbp]
	mov	rcx, QWORD PTR tv729[rbp]
	call	??A?$ImVector@UImGuiPopupData@@@@QEAAAEAUImGuiPopupData@@H@Z ; ImVector<ImGuiPopupData>::operator[]
	mov	rcx, QWORD PTR tv712[rbp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR tv718[rbp]
	mov	r8, QWORD PTR tv722[rbp]
	mov	edx, DWORD PTR [rax]
	lea	rcx, OFFSET FLAT:??_C@_0CA@FCBKAHPI@PopupID?3?5?$CF08x?0?5Window?3?5?8?$CFs?8?$CFs?$CFs@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
; Line 11131
	jmp	$LN29@ShowMetric
$LN30@ShowMetric:
; Line 11132
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN73@ShowMetric:
; Line 11136
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8288				; 00002060H
	mov	rcx, rax
	call	?GetAliveCount@?$ImPool@UImGuiTabBar@@@@QEBAHXZ ; ImPool<ImGuiTabBar>::GetAliveCount
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_0O@JLIGAOM@Tab?5Bars?5?$CI?$CFd?$CJ@
	lea	rcx, OFFSET FLAT:??_C@_07NBICDJOO@TabBars@
	call	?TreeNode@ImGui@@YA_NPEBD0ZZ		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	je	$LN74@ShowMetric
; Line 11138
	mov	DWORD PTR n$31[rbp], 0
	jmp	SHORT $LN34@ShowMetric
$LN32@ShowMetric:
	mov	eax, DWORD PTR n$31[rbp]
	inc	eax
	mov	DWORD PTR n$31[rbp], eax
$LN34@ShowMetric:
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8288				; 00002060H
	mov	rcx, rax
	call	?GetMapSize@?$ImPool@UImGuiTabBar@@@@QEBAHXZ ; ImPool<ImGuiTabBar>::GetMapSize
	cmp	DWORD PTR n$31[rbp], eax
	jge	SHORT $LN33@ShowMetric
; Line 11139
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8288				; 00002060H
	mov	QWORD PTR tv752[rbp], rax
	mov	edx, DWORD PTR n$31[rbp]
	mov	rcx, QWORD PTR tv752[rbp]
	call	?TryGetMapData@?$ImPool@UImGuiTabBar@@@@QEAAPEAUImGuiTabBar@@H@Z ; ImPool<ImGuiTabBar>::TryGetMapData
	mov	QWORD PTR tab_bar$32[rbp], rax
	cmp	QWORD PTR tab_bar$32[rbp], 0
	je	SHORT $LN75@ShowMetric
; Line 11141
	mov	rcx, QWORD PTR tab_bar$32[rbp]
	call	?PushID@ImGui@@YAXPEBX@Z		; ImGui::PushID
; Line 11142
	lea	rdx, OFFSET FLAT:??_C@_06PAFCDPCC@TabBar@
	mov	rcx, QWORD PTR tab_bar$32[rbp]
	call	?DebugNodeTabBar@ImGui@@YAXPEAUImGuiTabBar@@PEBD@Z ; ImGui::DebugNodeTabBar
; Line 11143
	call	?PopID@ImGui@@YAXXZ			; ImGui::PopID
$LN75@ShowMetric:
; Line 11144
	jmp	$LN32@ShowMetric
$LN33@ShowMetric:
; Line 11145
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN74@ShowMetric:
; Line 11149
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8192				; 00002000H
	mov	rcx, rax
	call	?GetAliveCount@?$ImPool@UImGuiTable@@@@QEBAHXZ ; ImPool<ImGuiTable>::GetAliveCount
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_0M@GKKKBBGH@Tables?5?$CI?$CFd?$CJ@
	lea	rcx, OFFSET FLAT:??_C@_06KOKNHOLC@Tables@
	call	?TreeNode@ImGui@@YA_NPEBD0ZZ		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN76@ShowMetric
; Line 11151
	mov	DWORD PTR n$33[rbp], 0
	jmp	SHORT $LN37@ShowMetric
$LN35@ShowMetric:
	mov	eax, DWORD PTR n$33[rbp]
	inc	eax
	mov	DWORD PTR n$33[rbp], eax
$LN37@ShowMetric:
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8192				; 00002000H
	mov	rcx, rax
	call	?GetMapSize@?$ImPool@UImGuiTable@@@@QEBAHXZ ; ImPool<ImGuiTable>::GetMapSize
	cmp	DWORD PTR n$33[rbp], eax
	jge	SHORT $LN36@ShowMetric
; Line 11152
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8192				; 00002000H
	mov	QWORD PTR tv776[rbp], rax
	mov	edx, DWORD PTR n$33[rbp]
	mov	rcx, QWORD PTR tv776[rbp]
	call	?TryGetMapData@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z ; ImPool<ImGuiTable>::TryGetMapData
	mov	QWORD PTR table$34[rbp], rax
	cmp	QWORD PTR table$34[rbp], 0
	je	SHORT $LN77@ShowMetric
; Line 11153
	mov	rcx, QWORD PTR table$34[rbp]
	call	?DebugNodeTable@ImGui@@YAXPEAUImGuiTable@@@Z ; ImGui::DebugNodeTable
$LN77@ShowMetric:
	jmp	SHORT $LN35@ShowMetric
$LN36@ShowMetric:
; Line 11154
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN76@ShowMetric:
; Line 11159
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+168]
	mov	QWORD PTR atlas$[rbp], rax
; Line 11160
	mov	rax, QWORD PTR atlas$[rbp]
	mov	r8d, DWORD PTR [rax+72]
	lea	rdx, OFFSET FLAT:??_C@_0L@IBDLAPEA@Fonts?5?$CI?$CFd?$CJ@
	lea	rcx, OFFSET FLAT:??_C@_05ENDNDI@Fonts@
	call	?TreeNode@ImGui@@YA_NPEBD0ZZ		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN78@ShowMetric
; Line 11162
	mov	rcx, QWORD PTR atlas$[rbp]
	call	?ShowFontAtlas@ImGui@@YAXPEAUImFontAtlas@@@Z ; ImGui::ShowFontAtlas
; Line 11163
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN78@ShowMetric:
; Line 11176
	lea	rcx, OFFSET FLAT:??_C@_08EEOHOBEO@Settings@
	call	?TreeNode@ImGui@@YA_NPEBD@Z		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	je	$LN79@ShowMetric
; Line 11178
	lea	rcx, OFFSET FLAT:??_C@_05MDNHABIA@Clear@
	call	?SmallButton@ImGui@@YA_NPEBD@Z		; ImGui::SmallButton
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN80@ShowMetric
; Line 11179
	call	?ClearIniSettings@ImGui@@YAXXZ		; ImGui::ClearIniSettings
$LN80@ShowMetric:
; Line 11180
	movss	xmm1, DWORD PTR __real@bf800000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
; Line 11181
	lea	rcx, OFFSET FLAT:??_C@_0P@BGFPLLLP@Save?5to?5memory@
	call	?SmallButton@ImGui@@YA_NPEBD@Z		; ImGui::SmallButton
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN81@ShowMetric
; Line 11182
	xor	ecx, ecx
	call	?SaveIniSettingsToMemory@ImGui@@YAPEBDPEA_K@Z ; ImGui::SaveIniSettingsToMemory
$LN81@ShowMetric:
; Line 11183
	movss	xmm1, DWORD PTR __real@bf800000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
; Line 11184
	lea	rcx, OFFSET FLAT:??_C@_0N@PMPOLMLD@Save?5to?5disk@
	call	?SmallButton@ImGui@@YA_NPEBD@Z		; ImGui::SmallButton
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN82@ShowMetric
; Line 11185
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?SaveIniSettingsToDisk@ImGui@@YAXPEBD@Z	; ImGui::SaveIniSettingsToDisk
$LN82@ShowMetric:
; Line 11186
	movss	xmm1, DWORD PTR __real@bf800000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
; Line 11187
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+32], 0
	je	SHORT $LN83@ShowMetric
; Line 11188
	mov	rax, QWORD PTR g$[rbp]
	mov	rdx, QWORD PTR [rax+32]
	lea	rcx, OFFSET FLAT:??_C@_04OEDFLLKD@?$CC?$CFs?$CC@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
	jmp	SHORT $LN84@ShowMetric
$LN83@ShowMetric:
; Line 11190
	xor	edx, edx
	lea	rcx, OFFSET FLAT:??_C@_06CBHGEMFM@?$DMNULL?$DO@
	call	?TextUnformatted@ImGui@@YAXPEBD0@Z	; ImGui::TextUnformatted
$LN84@ShowMetric:
; Line 11191
	mov	rax, QWORD PTR g$[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+12388]
	movaps	xmm1, xmm0
	movq	rdx, xmm1
	lea	rcx, OFFSET FLAT:??_C@_0BI@KCGHKNOH@SettingsDirtyTimer?5?$CF?42f@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11192
	mov	rax, QWORD PTR g$[rbp]
	mov	r8d, DWORD PTR [rax+12408]
	lea	rdx, OFFSET FLAT:??_C@_0BI@PGENAEOL@Settings?5handlers?3?5?$CI?$CFd?$CJ@
	lea	rcx, OFFSET FLAT:??_C@_0BB@NEINIHH@SettingsHandlers@
	call	?TreeNode@ImGui@@YA_NPEBD0ZZ		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN85@ShowMetric
; Line 11194
	mov	DWORD PTR n$35[rbp], 0
	jmp	SHORT $LN40@ShowMetric
$LN38@ShowMetric:
	mov	eax, DWORD PTR n$35[rbp]
	inc	eax
	mov	DWORD PTR n$35[rbp], eax
$LN40@ShowMetric:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+12408]
	cmp	DWORD PTR n$35[rbp], eax
	jge	SHORT $LN39@ShowMetric
; Line 11195
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12408				; 00003078H
	mov	QWORD PTR tv878[rbp], rax
	mov	edx, DWORD PTR n$35[rbp]
	mov	rcx, QWORD PTR tv878[rbp]
	call	??A?$ImVector@UImGuiSettingsHandler@@@@QEAAAEAUImGuiSettingsHandler@@H@Z ; ImVector<ImGuiSettingsHandler>::operator[]
	mov	rdx, QWORD PTR [rax]
	lea	rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	call	?BulletText@ImGui@@YAXPEBDZZ		; ImGui::BulletText
	jmp	SHORT $LN38@ShowMetric
$LN39@ShowMetric:
; Line 11196
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN85@ShowMetric:
; Line 11198
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12424				; 00003088H
	mov	rcx, rax
	call	?size@?$ImChunkStream@UImGuiWindowSettings@@@@QEBAHXZ ; ImChunkStream<ImGuiWindowSettings>::size
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_0CI@CKIDLOMN@Settings?5packed?5data?3?5Windows?3?5@
	lea	rcx, OFFSET FLAT:??_C@_0BA@GOMGONFN@SettingsWindows@
	call	?TreeNode@ImGui@@YA_NPEBD0ZZ		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN86@ShowMetric
; Line 11200
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12424				; 00003088H
	mov	rcx, rax
	call	?begin@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@XZ ; ImChunkStream<ImGuiWindowSettings>::begin
	mov	QWORD PTR settings$36[rbp], rax
	jmp	SHORT $LN43@ShowMetric
$LN41@ShowMetric:
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12424				; 00003088H
	mov	QWORD PTR tv899[rbp], rax
	mov	rdx, QWORD PTR settings$36[rbp]
	mov	rcx, QWORD PTR tv899[rbp]
	call	?next_chunk@?$ImChunkStream@UImGuiWindowSettings@@@@QEAAPEAUImGuiWindowSettings@@PEAU2@@Z ; ImChunkStream<ImGuiWindowSettings>::next_chunk
	mov	QWORD PTR settings$36[rbp], rax
$LN43@ShowMetric:
	cmp	QWORD PTR settings$36[rbp], 0
	je	SHORT $LN42@ShowMetric
; Line 11201
	mov	rcx, QWORD PTR settings$36[rbp]
	call	?DebugNodeWindowSettings@ImGui@@YAXPEAUImGuiWindowSettings@@@Z ; ImGui::DebugNodeWindowSettings
	jmp	SHORT $LN41@ShowMetric
$LN42@ShowMetric:
; Line 11202
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN86@ShowMetric:
; Line 11205
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12440				; 00003098H
	mov	rcx, rax
	call	?size@?$ImChunkStream@UImGuiTableSettings@@@@QEBAHXZ ; ImChunkStream<ImGuiTableSettings>::size
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_0CH@GODOBOJJ@Settings?5packed?5data?3?5Tables?3?5?$CF@
	lea	rcx, OFFSET FLAT:??_C@_0P@NAODIHNN@SettingsTables@
	call	?TreeNode@ImGui@@YA_NPEBD0ZZ		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN87@ShowMetric
; Line 11207
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12440				; 00003098H
	mov	rcx, rax
	call	?begin@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@XZ ; ImChunkStream<ImGuiTableSettings>::begin
	mov	QWORD PTR settings$37[rbp], rax
	jmp	SHORT $LN46@ShowMetric
$LN44@ShowMetric:
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12440				; 00003098H
	mov	QWORD PTR tv919[rbp], rax
	mov	rdx, QWORD PTR settings$37[rbp]
	mov	rcx, QWORD PTR tv919[rbp]
	call	?next_chunk@?$ImChunkStream@UImGuiTableSettings@@@@QEAAPEAUImGuiTableSettings@@PEAU2@@Z ; ImChunkStream<ImGuiTableSettings>::next_chunk
	mov	QWORD PTR settings$37[rbp], rax
$LN46@ShowMetric:
	cmp	QWORD PTR settings$37[rbp], 0
	je	SHORT $LN45@ShowMetric
; Line 11208
	mov	rcx, QWORD PTR settings$37[rbp]
	call	?DebugNodeTableSettings@ImGui@@YAXPEAUImGuiTableSettings@@@Z ; ImGui::DebugNodeTableSettings
	jmp	SHORT $LN44@ShowMetric
$LN45@ShowMetric:
; Line 11209
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN87@ShowMetric:
; Line 11215
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12392				; 00003068H
	mov	rcx, rax
	call	?size@ImGuiTextBuffer@@QEBAHXZ		; ImGuiTextBuffer::size
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_0CI@MPNDIPDD@Settings?5unpacked?5data?5?$CI?4ini?$CJ?3?5@
	lea	rcx, OFFSET FLAT:??_C@_0BA@IEPJFGMP@SettingsIniData@
	call	?TreeNode@ImGui@@YA_NPEBD0ZZ		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	je	$LN88@ShowMetric
; Line 11217
	call	?GetTextLineHeight@ImGui@@YAMXZ		; ImGui::GetTextLineHeight
	mulss	xmm0, DWORD PTR __real@41a00000
	movaps	xmm2, xmm0
	movss	xmm1, DWORD PTR __real@80800000
	lea	rcx, QWORD PTR $T68[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	QWORD PTR tv957[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	movsxd	rax, DWORD PTR [rax+12392]
	mov	QWORD PTR tv955[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12392				; 00003068H
	mov	rcx, rax
	call	?c_str@ImGuiTextBuffer@@QEBAPEBDXZ	; ImGuiTextBuffer::c_str
	mov	QWORD PTR tv953[rbp], rax
	mov	QWORD PTR [rsp+48], 0
	mov	QWORD PTR [rsp+40], 0
	mov	DWORD PTR [rsp+32], 16384		; 00004000H
	mov	r9, QWORD PTR tv957[rbp]
	mov	r8, QWORD PTR tv955[rbp]
	mov	rdx, QWORD PTR tv953[rbp]
	lea	rcx, OFFSET FLAT:??_C@_05FJAOFNGD@?$CD?$CDIni@
	call	?InputTextMultiline@ImGui@@YA_NPEBDPEAD_KAEBUImVec2@@HP6AHPEAUImGuiInputTextCallbackData@@@ZPEAX@Z ; ImGui::InputTextMultiline
; Line 11218
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN88@ShowMetric:
; Line 11220
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN79@ShowMetric:
; Line 11224
	lea	rcx, OFFSET FLAT:??_C@_0P@DKNCHHLP@Internal?5state@
	call	?TreeNode@ImGui@@YA_NPEBD@Z		; ImGui::TreeNode
	movzx	eax, al
	test	eax, eax
	je	$LN89@ShowMetric
; Line 11226
	lea	rax, OFFSET FLAT:??_C@_04OHJIHAFH@None@
	mov	QWORD PTR input_source_names$38[rbp], rax
	lea	rax, OFFSET FLAT:??_C@_05PEEFLODH@Mouse@
	mov	QWORD PTR input_source_names$38[rbp+8], rax
	lea	rax, OFFSET FLAT:??_C@_08CPOKIBJK@Keyboard@
	mov	QWORD PTR input_source_names$38[rbp+16], rax
	lea	rax, OFFSET FLAT:??_C@_07FCEHOHKC@Gamepad@
	mov	QWORD PTR input_source_names$38[rbp+24], rax
	lea	rax, OFFSET FLAT:??_C@_03JFAAHAIK@Nav@
	mov	QWORD PTR input_source_names$38[rbp+32], rax
	lea	rax, OFFSET FLAT:??_C@_09HLEDPOBH@Clipboard@
	mov	QWORD PTR input_source_names$38[rbp+40], rax
; Line 11228
	lea	rcx, OFFSET FLAT:??_C@_09OOMCPLIM@WINDOWING@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11229
	xorps	xmm0, xmm0
	call	?Indent@ImGui@@YAXM@Z			; ImGui::Indent
; Line 11230
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7192], 0
	je	SHORT $LN107@ShowMetric
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7192]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv967[rbp], rax
	jmp	SHORT $LN108@ShowMetric
$LN107@ShowMetric:
	lea	rax, OFFSET FLAT:??_C@_04HIBGFPH@NULL@
	mov	QWORD PTR tv967[rbp], rax
$LN108@ShowMetric:
	mov	rdx, QWORD PTR tv967[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BE@NBGIHPGN@HoveredWindow?3?5?8?$CFs?8@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11231
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7192], 0
	je	SHORT $LN109@ShowMetric
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7192]
	mov	rax, QWORD PTR [rax+904]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv975[rbp], rax
	jmp	SHORT $LN110@ShowMetric
$LN109@ShowMetric:
	lea	rax, OFFSET FLAT:??_C@_04HIBGFPH@NULL@
	mov	QWORD PTR tv975[rbp], rax
$LN110@ShowMetric:
	mov	rdx, QWORD PTR tv975[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BK@GFBMGONH@HoveredWindow?9?$DORoot?3?5?8?$CFs?8@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11232
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7200], 0
	je	SHORT $LN111@ShowMetric
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7200]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv982[rbp], rax
	jmp	SHORT $LN112@ShowMetric
$LN111@ShowMetric:
	lea	rax, OFFSET FLAT:??_C@_04HIBGFPH@NULL@
	mov	QWORD PTR tv982[rbp], rax
$LN112@ShowMetric:
	mov	rdx, QWORD PTR tv982[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0CF@OOIEDAD@HoveredWindowUnderMovingWindow?3@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11233
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7208], 0
	je	SHORT $LN113@ShowMetric
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7208]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv989[rbp], rax
	jmp	SHORT $LN114@ShowMetric
$LN113@ShowMetric:
	lea	rax, OFFSET FLAT:??_C@_04HIBGFPH@NULL@
	mov	QWORD PTR tv989[rbp], rax
$LN114@ShowMetric:
	mov	rdx, QWORD PTR tv989[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BD@HCKEDLME@MovingWindow?3?5?8?$CFs?8@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11234
	xorps	xmm0, xmm0
	call	?Unindent@ImGui@@YAXM@Z			; ImGui::Unindent
; Line 11236
	lea	rcx, OFFSET FLAT:??_C@_05OOOHNEPI@ITEMS@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11237
	xorps	xmm0, xmm0
	call	?Indent@ImGui@@YAXM@Z			; ImGui::Indent
; Line 11238
	mov	rax, QWORD PTR g$[rbp]
	movsxd	rax, DWORD PTR [rax+7312]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	ecx, BYTE PTR [rcx+7273]
	mov	rdx, QWORD PTR g$[rbp]
	cvtss2sd xmm0, DWORD PTR [rdx+7268]
	mov	rax, QWORD PTR input_source_names$38[rbp+rax*8]
	mov	QWORD PTR [rsp+40], rax
	mov	DWORD PTR [rsp+32], ecx
	movaps	xmm3, xmm0
	movq	r9, xmm3
	mov	rax, QWORD PTR g$[rbp]
	mov	r8d, DWORD PTR [rax+7320]
	mov	rax, QWORD PTR g$[rbp]
	mov	edx, DWORD PTR [rax+7260]
	lea	rcx, OFFSET FLAT:??_C@_0EB@PEJDHKLE@ActiveId?3?50x?$CF08X?10x?$CF08X?5?$CI?$CF?42f?5s@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11239
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7304], 0
	je	SHORT $LN115@ShowMetric
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7304]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv1015[rbp], rax
	jmp	SHORT $LN116@ShowMetric
$LN115@ShowMetric:
	lea	rax, OFFSET FLAT:??_C@_04HIBGFPH@NULL@
	mov	QWORD PTR tv1015[rbp], rax
$LN116@ShowMetric:
	mov	rdx, QWORD PTR tv1015[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BF@CPEAOPEJ@ActiveIdWindow?3?5?8?$CFs?8@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11240
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7278]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+7288]
	mov	QWORD PTR [rsp+32], rcx
	mov	rcx, QWORD PTR g$[rbp]
	mov	r9d, DWORD PTR [rcx+7284]
	mov	rcx, QWORD PTR g$[rbp]
	mov	r8d, DWORD PTR [rcx+7280]
	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_0EP@NGKPCOLK@ActiveIdUsing?3?5Wheel?3?5?$CFd?0?5NavDi@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11241
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7248]
	mov	rcx, QWORD PTR g$[rbp]
	cvtss2sd xmm0, DWORD PTR [rcx+7252]
	mov	DWORD PTR [rsp+32], eax
	movaps	xmm3, xmm0
	movq	r9, xmm3
	mov	rax, QWORD PTR g$[rbp]
	mov	r8d, DWORD PTR [rax+7244]
	mov	rax, QWORD PTR g$[rbp]
	mov	edx, DWORD PTR [rax+7240]
	lea	rcx, OFFSET FLAT:??_C@_0DG@FAAGHPBL@HoveredId?3?50x?$CF08X?10x?$CF08X?5?$CI?$CF?42f?5@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11242
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8056				; 00001f78H
	mov	rcx, QWORD PTR g$[rbp]
	movzx	ecx, BYTE PTR [rcx+8012]
	mov	rdx, QWORD PTR g$[rbp]
	mov	edx, DWORD PTR [rdx+8040]
	mov	DWORD PTR [rsp+32], edx
	mov	r9, rax
	mov	rax, QWORD PTR g$[rbp]
	mov	r8d, DWORD PTR [rax+8044]
	mov	edx, ecx
	lea	rcx, OFFSET FLAT:??_C@_0DJ@OPOHHHAC@DragDrop?3?5?$CFd?0?5SourceId?5?$DN?50x?$CF08X@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11243
	xorps	xmm0, xmm0
	call	?Unindent@ImGui@@YAXM@Z			; ImGui::Unindent
; Line 11245
	lea	rcx, OFFSET FLAT:??_C@_09LPFJCNIB@NAV?0FOCUS@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11246
	xorps	xmm0, xmm0
	call	?Indent@ImGui@@YAXM@Z			; ImGui::Indent
; Line 11247
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN117@ShowMetric
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv1059[rbp], rax
	jmp	SHORT $LN118@ShowMetric
$LN117@ShowMetric:
	lea	rax, OFFSET FLAT:??_C@_04HIBGFPH@NULL@
	mov	QWORD PTR tv1059[rbp], rax
$LN118@ShowMetric:
	mov	rdx, QWORD PTR tv1059[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BA@KJPDENCF@NavWindow?3?5?8?$CFs?8@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11248
	mov	rax, QWORD PTR g$[rbp]
	mov	r8d, DWORD PTR [rax+7700]
	mov	rax, QWORD PTR g$[rbp]
	mov	edx, DWORD PTR [rax+7632]
	lea	rcx, OFFSET FLAT:??_C@_0BM@KFFINKHC@NavId?3?50x?$CF08X?0?5NavLayer?3?5?$CFd@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11249
	mov	rax, QWORD PTR g$[rbp]
	movsxd	rax, DWORD PTR [rax+7676]
	mov	rdx, QWORD PTR input_source_names$38[rbp+rax*8]
	lea	rcx, OFFSET FLAT:??_C@_0BD@HIKDFBG@NavInputSource?3?5?$CFs@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11250
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+926]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	ecx, BYTE PTR [rcx+925]
	mov	r8d, eax
	mov	edx, ecx
	lea	rcx, OFFSET FLAT:??_C@_0BO@PADIALFI@NavActive?3?5?$CFd?0?5NavVisible?3?5?$CFd@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11251
	mov	rax, QWORD PTR g$[rbp]
	mov	r8d, DWORD PTR [rax+7652]
	mov	rax, QWORD PTR g$[rbp]
	mov	edx, DWORD PTR [rax+7640]
	lea	rcx, OFFSET FLAT:??_C@_0CK@FMBJOEO@NavActivateId?3?50x?$CF08X?0?5NavInput@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11252
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7711]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	ecx, BYTE PTR [rcx+7710]
	mov	r8d, eax
	mov	edx, ecx
	lea	rcx, OFFSET FLAT:??_C@_0DC@PBLGJJAI@NavDisableHighlight?3?5?$CFd?0?5NavDis@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11253
	mov	rax, QWORD PTR g$[rbp]
	mov	edx, DWORD PTR [rax+7636]
	lea	rcx, OFFSET FLAT:??_C@_0BJ@GGAKOFG@NavFocusScopeId?5?$DN?50x?$CF08X@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11254
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	je	SHORT $LN119@ShowMetric
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7928]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv1133[rbp], rax
	jmp	SHORT $LN120@ShowMetric
$LN119@ShowMetric:
	lea	rax, OFFSET FLAT:??_C@_04HIBGFPH@NULL@
	mov	QWORD PTR tv1133[rbp], rax
$LN120@ShowMetric:
	mov	rdx, QWORD PTR tv1133[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BJ@HGGGEMAP@NavWindowingTarget?3?5?8?$CFs?8@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
; Line 11255
	xorps	xmm0, xmm0
	call	?Unindent@ImGui@@YAXM@Z			; ImGui::Unindent
; Line 11257
	call	?TreePop@ImGui@@YAXXZ			; ImGui::TreePop
$LN89@ShowMetric:
; Line 11261
	mov	rax, QWORD PTR cfg$[rbp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	jne	SHORT $LN91@ShowMetric
	mov	rax, QWORD PTR cfg$[rbp]
	movzx	eax, BYTE PTR [rax+1]
	test	eax, eax
	je	$LN90@ShowMetric
$LN91@ShowMetric:
; Line 11263
	mov	DWORD PTR n$39[rbp], 0
	jmp	SHORT $LN49@ShowMetric
$LN47@ShowMetric:
	mov	eax, DWORD PTR n$39[rbp]
	inc	eax
	mov	DWORD PTR n$39[rbp], eax
$LN49@ShowMetric:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7088]
	cmp	DWORD PTR n$39[rbp], eax
	jge	$LN48@ShowMetric
; Line 11265
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv1152[rbp], rax
	mov	edx, DWORD PTR n$39[rbp]
	mov	rcx, QWORD PTR tv1152[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR window$40[rbp], rax
; Line 11266
	mov	rax, QWORD PTR window$40[rbp]
	movzx	eax, BYTE PTR [rax+143]
	test	eax, eax
	jne	SHORT $LN92@ShowMetric
; Line 11267
	jmp	SHORT $LN47@ShowMetric
$LN92@ShowMetric:
; Line 11268
	mov	rcx, QWORD PTR window$40[rbp]
	call	?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiWindow@@@Z ; ImGui::GetForegroundDrawList
	mov	QWORD PTR draw_list$41[rbp], rax
; Line 11269
	mov	rax, QWORD PTR cfg$[rbp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN93@ShowMetric
; Line 11271
	mov	rax, QWORD PTR cfg$[rbp]
	mov	r8d, DWORD PTR [rax+8]
	mov	rdx, QWORD PTR window$40[rbp]
	lea	rcx, QWORD PTR r$42[rbp]
	call	?GetWindowRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiWindow@@H@Z ; `ImGui::ShowMetricsWindow'::`2'::Funcs::GetWindowRect
; Line 11272
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, -8388353				; ff8000ffH
	lea	r8, QWORD PTR r$42[rbp+8]
	lea	rdx, QWORD PTR r$42[rbp]
	mov	rcx, QWORD PTR draw_list$41[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
$LN93@ShowMetric:
; Line 11274
	mov	rax, QWORD PTR cfg$[rbp]
	movzx	eax, BYTE PTR [rax+1]
	test	eax, eax
	je	$LN94@ShowMetric
	mov	rax, QWORD PTR window$40[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	jne	$LN94@ShowMetric
; Line 11277
	mov	rax, QWORD PTR window$40[rbp]
	movsx	eax, WORD PTR [rax+158]
	mov	r9d, eax
	lea	r8, OFFSET FLAT:??_C@_02DPKJAMEF@?$CFd@
	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR buf$43[rbp]
	call	?ImFormatString@@YAHPEAD_KPEBDZZ	; ImFormatString
; Line 11278
	call	?GetFontSize@ImGui@@YAMXZ		; ImGui::GetFontSize
	movss	DWORD PTR font_size$44[rbp], xmm0
; Line 11279
	movss	xmm2, DWORD PTR font_size$44[rbp]
	movss	xmm1, DWORD PTR font_size$44[rbp]
	lea	rcx, QWORD PTR $T69[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rcx, QWORD PTR window$40[rbp]
	add	rcx, 16
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T70[rbp]
	call	??H@YA?AUImVec2@@AEBU0@0@Z		; operator+
	mov	rcx, QWORD PTR window$40[rbp]
	add	rcx, 16
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, -10197816				; ff6464c8H
	mov	r8, rax
	mov	rdx, rcx
	mov	rcx, QWORD PTR draw_list$41[rbp]
	call	?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z ; ImDrawList::AddRectFilled
; Line 11280
	mov	rax, QWORD PTR window$40[rbp]
	add	rax, 16
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR buf$43[rbp]
	mov	r8d, -1					; ffffffffH
	mov	rdx, rax
	mov	rcx, QWORD PTR draw_list$41[rbp]
	call	?AddText@ImDrawList@@QEAAXAEBUImVec2@@IPEBD1@Z ; ImDrawList::AddText
$LN94@ShowMetric:
; Line 11282
	jmp	$LN47@ShowMetric
$LN48@ShowMetric:
$LN90@ShowMetric:
; Line 11286
	mov	rax, QWORD PTR cfg$[rbp]
	movzx	eax, BYTE PTR [rax+2]
	test	eax, eax
	je	$LN95@ShowMetric
; Line 11288
	mov	DWORD PTR table_n$45[rbp], 0
	jmp	SHORT $LN52@ShowMetric
$LN50@ShowMetric:
	mov	eax, DWORD PTR table_n$45[rbp]
	inc	eax
	mov	DWORD PTR table_n$45[rbp], eax
$LN52@ShowMetric:
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8192				; 00002000H
	mov	rcx, rax
	call	?GetMapSize@?$ImPool@UImGuiTable@@@@QEBAHXZ ; ImPool<ImGuiTable>::GetMapSize
	cmp	DWORD PTR table_n$45[rbp], eax
	jge	$LN51@ShowMetric
; Line 11290
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8192				; 00002000H
	mov	QWORD PTR tv1252[rbp], rax
	mov	edx, DWORD PTR table_n$45[rbp]
	mov	rcx, QWORD PTR tv1252[rbp]
	call	?TryGetMapData@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z ; ImPool<ImGuiTable>::TryGetMapData
	mov	QWORD PTR table$46[rbp], rax
; Line 11291
	cmp	QWORD PTR table$46[rbp], 0
	je	SHORT $LN97@ShowMetric
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7056]
	dec	eax
	mov	rcx, QWORD PTR table$46[rbp]
	cmp	DWORD PTR [rcx+112], eax
	jge	SHORT $LN96@ShowMetric
$LN97@ShowMetric:
; Line 11292
	jmp	SHORT $LN50@ShowMetric
$LN96@ShowMetric:
; Line 11293
	mov	rax, QWORD PTR table$46[rbp]
	mov	rcx, QWORD PTR [rax+392]
	call	?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiWindow@@@Z ; ImGui::GetForegroundDrawList
	mov	QWORD PTR draw_list$47[rbp], rax
; Line 11294
	mov	rax, QWORD PTR cfg$[rbp]
	cmp	DWORD PTR [rax+12], 6
	jl	$LN98@ShowMetric
; Line 11296
	mov	DWORD PTR column_n$48[rbp], 0
	jmp	SHORT $LN55@ShowMetric
$LN53@ShowMetric:
	mov	eax, DWORD PTR column_n$48[rbp]
	inc	eax
	mov	DWORD PTR column_n$48[rbp], eax
$LN55@ShowMetric:
	mov	rax, QWORD PTR table$46[rbp]
	mov	eax, DWORD PTR [rax+116]
	cmp	DWORD PTR column_n$48[rbp], eax
	jge	$LN54@ShowMetric
; Line 11298
	mov	r9d, DWORD PTR column_n$48[rbp]
	mov	rax, QWORD PTR cfg$[rbp]
	mov	r8d, DWORD PTR [rax+12]
	mov	rdx, QWORD PTR table$46[rbp]
	lea	rcx, QWORD PTR r$49[rbp]
	call	?GetTableRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiTable@@HH@Z ; `ImGui::ShowMetricsWindow'::`2'::Funcs::GetTableRect
; Line 11299
	mov	rax, QWORD PTR table$46[rbp]
	movsx	eax, BYTE PTR [rax+484]
	cmp	eax, DWORD PTR column_n$48[rbp]
	jne	SHORT $LN121@ShowMetric
	mov	DWORD PTR tv1274[rbp], -8323073		; ff80ffffH
	jmp	SHORT $LN122@ShowMetric
$LN121@ShowMetric:
	mov	DWORD PTR tv1274[rbp], -8388353		; ff8000ffH
$LN122@ShowMetric:
	mov	eax, DWORD PTR tv1274[rbp]
	mov	DWORD PTR col$50[rbp], eax
; Line 11300
	mov	rax, QWORD PTR table$46[rbp]
	movsx	eax, BYTE PTR [rax+484]
	cmp	eax, DWORD PTR column_n$48[rbp]
	jne	SHORT $LN123@ShowMetric
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR tv1278[rbp], xmm0
	jmp	SHORT $LN124@ShowMetric
$LN123@ShowMetric:
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv1278[rbp], xmm0
$LN124@ShowMetric:
	movss	xmm0, DWORD PTR tv1278[rbp]
	movss	DWORD PTR thickness$51[rbp], xmm0
; Line 11301
	movss	xmm0, DWORD PTR thickness$51[rbp]
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, DWORD PTR col$50[rbp]
	lea	r8, QWORD PTR r$49[rbp+8]
	lea	rdx, QWORD PTR r$49[rbp]
	mov	rcx, QWORD PTR draw_list$47[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
; Line 11302
	jmp	$LN53@ShowMetric
$LN54@ShowMetric:
; Line 11303
	jmp	SHORT $LN99@ShowMetric
$LN98@ShowMetric:
; Line 11306
	mov	r9d, -1
	mov	rax, QWORD PTR cfg$[rbp]
	mov	r8d, DWORD PTR [rax+12]
	mov	rdx, QWORD PTR table$46[rbp]
	lea	rcx, QWORD PTR r$52[rbp]
	call	?GetTableRect@Funcs@?1??ShowMetricsWindow@ImGui@@YAXPEA_N@Z@SA?AUImRect@@PEAUImGuiTable@@HH@Z ; `ImGui::ShowMetricsWindow'::`2'::Funcs::GetTableRect
; Line 11307
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	mov	r9d, -8388353				; ff8000ffH
	lea	r8, QWORD PTR r$52[rbp+8]
	lea	rdx, QWORD PTR r$52[rbp]
	mov	rcx, QWORD PTR draw_list$47[rbp]
	call	?AddRect@ImDrawList@@QEAAXAEBUImVec2@@0IMHM@Z ; ImDrawList::AddRect
$LN99@ShowMetric:
; Line 11309
	jmp	$LN50@ShowMetric
$LN51@ShowMetric:
$LN95@ShowMetric:
; Line 11319
	call	?End@ImGui@@YAXXZ			; ImGui::End
$LN1@ShowMetric:
; Line 11320
	lea	rcx, QWORD PTR [rbp-96]
	lea	rdx, OFFSET FLAT:?ShowMetricsWindow@ImGui@@YAXPEA_N@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+3528]
	pop	rdi
	pop	rbp
	ret	0
?ShowMetricsWindow@ImGui@@YAXPEA_N@Z ENDP		; ImGui::ShowMetricsWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetDrawData@ImGui@@YAPEAUImDrawData@@XZ
_TEXT	SEGMENT
g$ = 8
viewport$ = 40
tv75 = 248
tv69 = 248
?GetDrawData@ImGui@@YAPEAUImDrawData@@XZ PROC		; ImGui::GetDrawData, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3453
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3454
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3455
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7608				; 00001db8H
	mov	QWORD PTR tv69[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv69[rbp]
	call	??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z ; ImVector<ImGuiViewportP *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR viewport$[rbp], rax
; Line 3456
	mov	rax, QWORD PTR viewport$[rbp]
	movzx	eax, BYTE PTR [rax+64]
	test	eax, eax
	je	SHORT $LN3@GetDrawDat
	mov	rax, QWORD PTR viewport$[rbp]
	add	rax, 64					; 00000040H
	mov	QWORD PTR tv75[rbp], rax
	jmp	SHORT $LN4@GetDrawDat
$LN3@GetDrawDat:
	mov	QWORD PTR tv75[rbp], 0
$LN4@GetDrawDat:
	mov	rax, QWORD PTR tv75[rbp]
; Line 3457
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?GetDrawData@ImGui@@YAPEAUImDrawData@@XZ ENDP		; ImGui::GetDrawData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Render@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
n$4 = 36
viewport$5 = 72
windows_to_render_top_most$ = 104
n$6 = 148
window$7 = 184
n$8 = 212
n$9 = 244
viewport$10 = 280
draw_data$11 = 312
$T12 = 536
$T13 = 568
$T14 = 600
tv243 = 612
tv241 = 616
tv212 = 616
tv167 = 616
tv157 = 616
tv151 = 616
tv90 = 616
tv238 = 624
?Render@ImGui@@YAXXZ PROC				; ImGui::Render, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4467
$LN26:
	push	rbp
	push	rdi
	sub	rsp, 712				; 000002c8H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 114				; 00000072H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4468
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4469
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	jne	SHORT $LN21@Render
	mov	eax, DWORD PTR ?__LINE__Var@?0??Render@ImGui@@YAXXZ@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BM@ICEHPMG@?$AAg?$AA?4?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN21@Render:
; Line 4471
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7056]
	cmp	DWORD PTR [rax+7060], ecx
	je	SHORT $LN14@Render
; Line 4472
	call	?EndFrame@ImGui@@YAXXZ			; ImGui::EndFrame
$LN14@Render:
; Line 4473
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7056]
	mov	DWORD PTR [rax+7064], ecx
; Line 4474
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+940], 0
; Line 4476
	mov	edx, 4
	mov	rcx, QWORD PTR g$[rbp]
	call	?CallContextHooks@ImGui@@YAXPEAUImGuiContext@@W4ImGuiContextHookType@@@Z ; ImGui::CallContextHooks
; Line 4479
	mov	DWORD PTR n$4[rbp], 0
	jmp	SHORT $LN4@Render
$LN2@Render:
	mov	eax, DWORD PTR n$4[rbp]
	inc	eax
	mov	DWORD PTR n$4[rbp], eax
$LN4@Render:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7608]
	cmp	DWORD PTR n$4[rbp], eax
	je	SHORT $LN3@Render
; Line 4481
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7608				; 00001db8H
	mov	QWORD PTR tv90[rbp], rax
	mov	edx, DWORD PTR n$4[rbp]
	mov	rcx, QWORD PTR tv90[rbp]
	call	??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z ; ImVector<ImGuiViewportP *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR viewport$5[rbp], rax
; Line 4482
	mov	rax, QWORD PTR viewport$5[rbp]
	add	rax, 112				; 00000070H
	mov	rcx, rax
	call	?Clear@ImDrawDataBuilder@@QEAAXXZ	; ImDrawDataBuilder::Clear
; Line 4483
	mov	eax, 8
	imul	rax, rax, 0
	mov	rcx, QWORD PTR viewport$5[rbp]
	cmp	QWORD PTR [rcx+rax+48], 0
	je	SHORT $LN15@Render
; Line 4484
	mov	rcx, QWORD PTR viewport$5[rbp]
	call	?GetBackgroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z ; ImGui::GetBackgroundDrawList
	mov	ecx, 16
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR viewport$5[rbp]
	lea	rcx, QWORD PTR [rdx+rcx+112]
	mov	rdx, rax
	call	?AddDrawListToDrawData@@YAXPEAU?$ImVector@PEAUImDrawList@@@@PEAUImDrawList@@@Z ; AddDrawListToDrawData
$LN15@Render:
; Line 4485
	jmp	$LN2@Render
$LN3@Render:
; Line 4489
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	je	SHORT $LN22@Render
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7928]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 8192				; 00002000H
	test	eax, eax
	jne	SHORT $LN22@Render
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7928]
	mov	rax, QWORD PTR [rax+904]
	mov	QWORD PTR tv151[rbp], rax
	jmp	SHORT $LN23@Render
$LN22@Render:
	mov	QWORD PTR tv151[rbp], 0
$LN23@Render:
	mov	eax, 8
	imul	rax, rax, 0
	mov	rcx, QWORD PTR tv151[rbp]
	mov	QWORD PTR windows_to_render_top_most$[rbp+rax], rcx
; Line 4490
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	je	SHORT $LN24@Render
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7944]
	mov	QWORD PTR tv157[rbp], rax
	jmp	SHORT $LN25@Render
$LN24@Render:
	mov	QWORD PTR tv157[rbp], 0
$LN25@Render:
	mov	eax, 8
	imul	rax, rax, 1
	mov	rcx, QWORD PTR tv157[rbp]
	mov	QWORD PTR windows_to_render_top_most$[rbp+rax], rcx
; Line 4491
	mov	DWORD PTR n$6[rbp], 0
	jmp	SHORT $LN7@Render
$LN5@Render:
	mov	eax, DWORD PTR n$6[rbp]
	inc	eax
	mov	DWORD PTR n$6[rbp], eax
$LN7@Render:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7088]
	cmp	DWORD PTR n$6[rbp], eax
	je	$LN6@Render
; Line 4493
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv167[rbp], rax
	mov	edx, DWORD PTR n$6[rbp]
	mov	rcx, QWORD PTR tv167[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR window$7[rbp], rax
; Line 4495
	mov	rcx, QWORD PTR window$7[rbp]
	call	?IsWindowActiveAndVisible@@YA_NPEAUImGuiWindow@@@Z ; IsWindowActiveAndVisible
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@Render
	mov	rax, QWORD PTR window$7[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	jne	SHORT $LN16@Render
	mov	eax, 8
	imul	rax, rax, 0
	mov	rax, QWORD PTR windows_to_render_top_most$[rbp+rax]
	cmp	QWORD PTR window$7[rbp], rax
	je	SHORT $LN16@Render
	mov	eax, 8
	imul	rax, rax, 1
	mov	rax, QWORD PTR windows_to_render_top_most$[rbp+rax]
	cmp	QWORD PTR window$7[rbp], rax
	je	SHORT $LN16@Render
; Line 4496
	mov	rcx, QWORD PTR window$7[rbp]
	call	?AddRootWindowToDrawData@@YAXPEAUImGuiWindow@@@Z ; AddRootWindowToDrawData
$LN16@Render:
; Line 4497
	jmp	$LN5@Render
$LN6@Render:
; Line 4498
	mov	DWORD PTR n$8[rbp], 0
	jmp	SHORT $LN10@Render
$LN8@Render:
	mov	eax, DWORD PTR n$8[rbp]
	inc	eax
	mov	DWORD PTR n$8[rbp], eax
$LN10@Render:
	cmp	DWORD PTR n$8[rbp], 2
	jge	SHORT $LN9@Render
; Line 4499
	movsxd	rax, DWORD PTR n$8[rbp]
	cmp	QWORD PTR windows_to_render_top_most$[rbp+rax*8], 0
	je	SHORT $LN17@Render
	movsxd	rax, DWORD PTR n$8[rbp]
	mov	rcx, QWORD PTR windows_to_render_top_most$[rbp+rax*8]
	call	?IsWindowActiveAndVisible@@YA_NPEAUImGuiWindow@@@Z ; IsWindowActiveAndVisible
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN17@Render
; Line 4500
	movsxd	rax, DWORD PTR n$8[rbp]
	mov	rcx, QWORD PTR windows_to_render_top_most$[rbp+rax*8]
	call	?AddRootWindowToDrawData@@YAXPEAUImGuiWindow@@@Z ; AddRootWindowToDrawData
$LN17@Render:
	jmp	SHORT $LN8@Render
$LN9@Render:
; Line 4503
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+936], 0
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+932], 0
; Line 4504
	mov	DWORD PTR n$9[rbp], 0
	jmp	SHORT $LN13@Render
$LN11@Render:
	mov	eax, DWORD PTR n$9[rbp]
	inc	eax
	mov	DWORD PTR n$9[rbp], eax
$LN13@Render:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7608]
	cmp	DWORD PTR n$9[rbp], eax
	jge	$LN12@Render
; Line 4506
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7608				; 00001db8H
	mov	QWORD PTR tv212[rbp], rax
	mov	edx, DWORD PTR n$9[rbp]
	mov	rcx, QWORD PTR tv212[rbp]
	call	??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z ; ImVector<ImGuiViewportP *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR viewport$10[rbp], rax
; Line 4507
	mov	rax, QWORD PTR viewport$10[rbp]
	add	rax, 112				; 00000070H
	mov	rcx, rax
	call	?FlattenIntoSingleLayer@ImDrawDataBuilder@@QEAAXXZ ; ImDrawDataBuilder::FlattenIntoSingleLayer
; Line 4510
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+200]
	test	eax, eax
	je	$LN18@Render
; Line 4511
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+8008]
	mov	DWORD PTR tv243[rbp], eax
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+5652]
	movss	DWORD PTR tv241[rbp], xmm0
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+296]
	mov	QWORD PTR $T12[rbp], rax
	mov	rax, QWORD PTR $T12[rbp]
	mov	QWORD PTR $T13[rbp], rax
	mov	rax, QWORD PTR $T13[rbp]
	mov	QWORD PTR $T14[rbp], rax
	mov	rcx, QWORD PTR viewport$10[rbp]
	call	?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z ; ImGui::GetForegroundDrawList
	mov	QWORD PTR tv238[rbp], rax
	mov	DWORD PTR [rsp+48], 805306368		; 30000000H
	mov	DWORD PTR [rsp+40], -16777216		; ff000000H
	mov	DWORD PTR [rsp+32], -1			; ffffffffH
	mov	r9d, DWORD PTR tv243[rbp]
	movss	xmm2, DWORD PTR tv241[rbp]
	mov	rdx, QWORD PTR $T14[rbp]
	mov	rcx, QWORD PTR tv238[rbp]
	call	?RenderMouseCursor@ImGui@@YAXPEAUImDrawList@@UImVec2@@MHIII@Z ; ImGui::RenderMouseCursor
$LN18@Render:
; Line 4514
	mov	eax, 8
	imul	rax, rax, 1
	mov	rcx, QWORD PTR viewport$10[rbp]
	cmp	QWORD PTR [rcx+rax+48], 0
	je	SHORT $LN19@Render
; Line 4515
	mov	rcx, QWORD PTR viewport$10[rbp]
	call	?GetForegroundDrawList@ImGui@@YAPEAUImDrawList@@PEAUImGuiViewport@@@Z ; ImGui::GetForegroundDrawList
	mov	ecx, 16
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR viewport$10[rbp]
	lea	rcx, QWORD PTR [rdx+rcx+112]
	mov	rdx, rax
	call	?AddDrawListToDrawData@@YAXPEAU?$ImVector@PEAUImDrawList@@@@PEAUImDrawList@@@Z ; AddDrawListToDrawData
$LN19@Render:
; Line 4517
	mov	eax, 16
	imul	rax, rax, 0
	mov	rcx, QWORD PTR viewport$10[rbp]
	lea	rax, QWORD PTR [rcx+rax+112]
	mov	rdx, rax
	mov	rcx, QWORD PTR viewport$10[rbp]
	call	?SetupViewportDrawData@@YAXPEAUImGuiViewportP@@PEAU?$ImVector@PEAUImDrawList@@@@@Z ; SetupViewportDrawData
; Line 4518
	mov	rax, QWORD PTR viewport$10[rbp]
	add	rax, 64					; 00000040H
	mov	QWORD PTR draw_data$11[rbp], rax
; Line 4519
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+932]
	mov	rcx, QWORD PTR draw_data$11[rbp]
	add	eax, DWORD PTR [rcx+12]
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+932], eax
; Line 4520
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+936]
	mov	rcx, QWORD PTR draw_data$11[rbp]
	add	eax, DWORD PTR [rcx+8]
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+936], eax
; Line 4521
	jmp	$LN11@Render
$LN12@Render:
; Line 4523
	mov	edx, 5
	mov	rcx, QWORD PTR g$[rbp]
	call	?CallContextHooks@ImGui@@YAXPEAUImGuiContext@@W4ImGuiContextHookType@@@Z ; ImGui::CallContextHooks
; Line 4524
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:?Render@ImGui@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	lea	rsp, QWORD PTR [rbp+648]
	pop	rdi
	pop	rbp
	ret	0
?Render@ImGui@@YAXXZ ENDP				; ImGui::Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EndFrame@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
is_delivered$1 = 36
is_elapsed$2 = 68
i$3 = 100
window$4 = 136
$T5 = 356
tv175 = 372
tv258 = 376
tv242 = 376
tv217 = 376
tv207 = 376
tv200 = 376
tv144 = 376
?EndFrame@ImGui@@YAXXZ PROC				; ImGui::EndFrame, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 4382
$LN23:
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 4383
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 4384
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	jne	SHORT $LN15@EndFrame
	mov	eax, DWORD PTR ?__LINE__Var@?0??EndFrame@ImGui@@YAXXZ@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BM@ICEHPMG@?$AAg?$AA?4?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN15@EndFrame:
; Line 4387
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7056]
	cmp	DWORD PTR [rax+7060], ecx
	jne	SHORT $LN5@EndFrame
; Line 4388
	jmp	$LN1@EndFrame
$LN5@EndFrame:
; Line 4389
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7068]
	test	eax, eax
	je	SHORT $LN16@EndFrame
	lea	rax, OFFSET FLAT:??_C@_0CC@DPHJAHCA@Forgot?5to?5call?5ImGui?3?3NewFrame?$CI@
	test	rax, rax
	jne	SHORT $LN17@EndFrame
$LN16@EndFrame:
	mov	eax, DWORD PTR ?__LINE__Var@?0??EndFrame@ImGui@@YAXXZ@4JA
	add	eax, 7
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1HE@BFIFNNBB@?$AAg?$AA?4?$AAW?$AAi?$AAt?$AAh?$AAi?$AAn?$AAF?$AAr?$AAa?$AAm?$AAe?$AAS?$AAc@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN17@EndFrame:
; Line 4391
	mov	edx, 2
	mov	rcx, QWORD PTR g$[rbp]
	call	?CallContextHooks@ImGui@@YAXPEAUImGuiContext@@W4ImGuiContextHookType@@@Z ; ImGui::CallContextHooks
; Line 4393
	call	?ErrorCheckEndFrameSanityChecks@ImGui@@YAXXZ ; ImGui::ErrorCheckEndFrameSanityChecks
; Line 4396
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+280], 0
	je	$LN6@EndFrame
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+12376]
	ucomiss	xmm0, DWORD PTR __real@7f7fffff
	jp	SHORT $LN22@EndFrame
	je	SHORT $LN7@EndFrame
$LN22@EndFrame:
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12368				; 00003050H
	mov	rcx, QWORD PTR g$[rbp]
	add	rcx, 12376				; 00003058H
	mov	r8, rax
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T5[rbp]
	call	??G@YA?AUImVec2@@AEBU0@0@Z		; operator-
	mov	rcx, rax
	call	?ImLengthSqr@@YAMAEBUImVec2@@@Z		; ImLengthSqr
	comiss	xmm0, DWORD PTR __real@38d1b717
	jbe	SHORT $LN6@EndFrame
$LN7@EndFrame:
; Line 4398
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+280]
	mov	QWORD PTR tv144[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	cvttss2si eax, DWORD PTR [rax+12372]
	mov	rcx, QWORD PTR g$[rbp]
	cvttss2si ecx, DWORD PTR [rcx+12368]
	mov	edx, eax
	call	QWORD PTR tv144[rbp]
; Line 4399
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+12368]
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+12376], rax
$LN6@EndFrame:
; Line 4403
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7069], 0
; Line 4404
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7184], 0
	je	SHORT $LN8@EndFrame
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	movzx	eax, BYTE PTR [rax+144]
	test	eax, eax
	jne	SHORT $LN8@EndFrame
; Line 4405
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	mov	BYTE PTR [rax+142], 0
$LN8@EndFrame:
; Line 4406
	call	?End@ImGui@@YAXXZ			; ImGui::End
; Line 4409
	call	?NavEndFrame@ImGui@@YAXXZ		; ImGui::NavEndFrame
; Line 4412
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8012]
	test	eax, eax
	je	$LN9@EndFrame
; Line 4414
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8090]
	mov	BYTE PTR is_delivered$1[rbp], al
; Line 4415
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+8052]
	inc	eax
	mov	rcx, QWORD PTR g$[rbp]
	cmp	eax, DWORD PTR [rcx+7056]
	jge	SHORT $LN19@EndFrame
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+8016]
	and	eax, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN18@EndFrame
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rax+8024]
	call	?IsMouseDown@ImGui@@YA_NH@Z		; ImGui::IsMouseDown
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN19@EndFrame
$LN18@EndFrame:
	mov	DWORD PTR tv175[rbp], 1
	jmp	SHORT $LN20@EndFrame
$LN19@EndFrame:
	mov	DWORD PTR tv175[rbp], 0
$LN20@EndFrame:
	movzx	eax, BYTE PTR tv175[rbp]
	mov	BYTE PTR is_elapsed$2[rbp], al
; Line 4416
	movzx	eax, BYTE PTR is_delivered$1[rbp]
	test	eax, eax
	jne	SHORT $LN11@EndFrame
	movzx	eax, BYTE PTR is_elapsed$2[rbp]
	test	eax, eax
	je	SHORT $LN10@EndFrame
$LN11@EndFrame:
; Line 4417
	call	?ClearDragDrop@ImGui@@YAXXZ		; ImGui::ClearDragDrop
$LN10@EndFrame:
$LN9@EndFrame:
; Line 4421
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8012]
	test	eax, eax
	je	SHORT $LN12@EndFrame
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7056]
	cmp	DWORD PTR [rax+8020], ecx
	jge	SHORT $LN12@EndFrame
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+8016]
	and	eax, 1
	test	eax, eax
	jne	SHORT $LN12@EndFrame
; Line 4423
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+8013], 1
; Line 4424
	lea	rcx, OFFSET FLAT:??_C@_03KHICJKCI@?4?4?4@
	call	?SetTooltip@ImGui@@YAXPEBDZZ		; ImGui::SetTooltip
; Line 4425
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+8013], 0
$LN12@EndFrame:
; Line 4429
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7068], 0
; Line 4430
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7056]
	mov	DWORD PTR [rax+7060], ecx
; Line 4433
	call	?UpdateMouseMovingWindowEndFrame@ImGui@@YAXXZ ; ImGui::UpdateMouseMovingWindowEndFrame
; Line 4437
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7120				; 00001bd0H
	mov	QWORD PTR tv200[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv200[rbp]
	call	?resize@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z ; ImVector<ImGuiWindow *>::resize
; Line 4438
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7120				; 00001bd0H
	mov	QWORD PTR tv207[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	mov	edx, DWORD PTR [rax+7088]
	mov	rcx, QWORD PTR tv207[rbp]
	call	?reserve@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z ; ImVector<ImGuiWindow *>::reserve
; Line 4439
	mov	DWORD PTR i$3[rbp], 0
	jmp	SHORT $LN4@EndFrame
$LN2@EndFrame:
	mov	eax, DWORD PTR i$3[rbp]
	inc	eax
	mov	DWORD PTR i$3[rbp], eax
$LN4@EndFrame:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7088]
	cmp	DWORD PTR i$3[rbp], eax
	je	SHORT $LN3@EndFrame
; Line 4441
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv217[rbp], rax
	mov	edx, DWORD PTR i$3[rbp]
	mov	rcx, QWORD PTR tv217[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR window$4[rbp], rax
; Line 4442
	mov	rax, QWORD PTR window$4[rbp]
	movzx	eax, BYTE PTR [rax+142]
	test	eax, eax
	je	SHORT $LN13@EndFrame
	mov	rax, QWORD PTR window$4[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 16777216				; 01000000H
	test	eax, eax
	je	SHORT $LN13@EndFrame
; Line 4443
	jmp	SHORT $LN2@EndFrame
$LN13@EndFrame:
; Line 4444
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7120				; 00001bd0H
	mov	rdx, QWORD PTR window$4[rbp]
	mov	rcx, rax
	call	?AddWindowToSortBuffer@@YAXPEAU?$ImVector@PEAUImGuiWindow@@@@PEAUImGuiWindow@@@Z ; AddWindowToSortBuffer
; Line 4445
	jmp	$LN2@EndFrame
$LN3@EndFrame:
; Line 4448
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7120]
	cmp	DWORD PTR [rax+7088], ecx
	je	SHORT $LN21@EndFrame
	mov	eax, DWORD PTR ?__LINE__Var@?0??EndFrame@ImGui@@YAXXZ@4JA
	add	eax, 66					; 00000042H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1FO@HCCAMJFH@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?4?$AAS?$AAi?$AAz?$AAe?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN21@EndFrame:
; Line 4449
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv242[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7120				; 00001bd0H
	mov	rdx, rax
	mov	rcx, QWORD PTR tv242[rbp]
	call	?swap@?$ImVector@PEAUImGuiWindow@@@@QEAAXAEAU1@@Z ; ImVector<ImGuiWindow *>::swap
; Line 4450
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7168]
	mov	DWORD PTR [rax+944], ecx
; Line 4453
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+168]
	mov	BYTE PTR [rax+24], 0
; Line 4456
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+316], xmm0
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+312], xmm0
; Line 4457
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 5456				; 00001550H
	mov	QWORD PTR tv258[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv258[rbp]
	call	?resize@?$ImVector@G@@QEAAXH@Z		; ImVector<unsigned short>::resize
; Line 4458
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 836				; 00000344H
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 84					; 00000054H
	rep stosb
; Line 4460
	mov	edx, 3
	mov	rcx, QWORD PTR g$[rbp]
	call	?CallContextHooks@ImGui@@YAXPEAUImGuiContext@@W4ImGuiContextHookType@@@Z ; ImGui::CallContextHooks
$LN1@EndFrame:
; Line 4461
	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
?EndFrame@ImGui@@YAXXZ ENDP				; ImGui::EndFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NewFrame@ImGui@@YAXXZ
_TEXT	SEGMENT
g$ = 8
n$4 = 36
virtual_space$ = 72
n$5 = 116
n$6 = 148
viewport$7 = 184
i$8 = 212
memory_compact_start_time$ = 244
i$9 = 276
window$10 = 312
i$11 = 340
i$12 = 372
$T13 = 788
$T14 = 836
$T15 = 884
$T16 = 916
$T17 = 948
tv486 = 964
tv427 = 964
tv183 = 964
tv599 = 968
tv594 = 968
tv589 = 968
tv584 = 968
tv579 = 968
tv561 = 968
tv553 = 968
tv545 = 968
tv534 = 968
tv527 = 968
tv520 = 968
tv496 = 968
tv430 = 968
tv290 = 968
tv237 = 968
tv214 = 968
tv145 = 968
tv95 = 968
tv81 = 968
tv219 = 976
tv92 = 976
__$ArrayPad$ = 984
?NewFrame@ImGui@@YAXXZ PROC				; ImGui::NewFrame, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3907
$LN60:
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 1040				; 00000410H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 152				; 00000098H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3908
	cmp	QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA, 0 ; GImGui
	je	SHORT $LN47@NewFrame
	lea	rax, OFFSET FLAT:??_C@_0FJ@JBAFLEHG@No?5current?5context?4?5Did?5you?5cal@
	test	rax, rax
	jne	SHORT $LN48@NewFrame
$LN47@NewFrame:
	mov	eax, DWORD PTR ?__LINE__Var@?0??NewFrame@ImGui@@YAXXZ@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1NE@MGLAEJCB@?$AAG?$AAI?$AAm?$AAG?$AAu?$AAi?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN48@NewFrame:
; Line 3909
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR g$[rbp], rax
; Line 3913
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+12456]
	dec	eax
	mov	DWORD PTR n$4[rbp], eax
	jmp	SHORT $LN4@NewFrame
$LN2@NewFrame:
	mov	eax, DWORD PTR n$4[rbp]
	dec	eax
	mov	DWORD PTR n$4[rbp], eax
$LN4@NewFrame:
	cmp	DWORD PTR n$4[rbp], 0
	jl	SHORT $LN3@NewFrame
; Line 3914
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12456				; 000030a8H
	mov	QWORD PTR tv81[rbp], rax
	mov	edx, DWORD PTR n$4[rbp]
	mov	rcx, QWORD PTR tv81[rbp]
	call	??A?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@H@Z ; ImVector<ImGuiContextHook>::operator[]
	cmp	DWORD PTR [rax+4], 7
	jne	SHORT $LN23@NewFrame
; Line 3915
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12456				; 000030a8H
	mov	QWORD PTR tv95[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12456				; 000030a8H
	mov	QWORD PTR tv92[rbp], rax
	mov	edx, DWORD PTR n$4[rbp]
	mov	rcx, QWORD PTR tv92[rbp]
	call	??A?$ImVector@UImGuiContextHook@@@@QEAAAEAUImGuiContextHook@@H@Z ; ImVector<ImGuiContextHook>::operator[]
	mov	rdx, rax
	mov	rcx, QWORD PTR tv95[rbp]
	call	?erase@?$ImVector@UImGuiContextHook@@@@QEAAPEAUImGuiContextHook@@PEBU2@@Z ; ImVector<ImGuiContextHook>::erase
$LN23@NewFrame:
	jmp	SHORT $LN2@NewFrame
$LN3@NewFrame:
; Line 3917
	xor	edx, edx
	mov	rcx, QWORD PTR g$[rbp]
	call	?CallContextHooks@ImGui@@YAXPEAUImGuiContext@@W4ImGuiContextHookType@@@Z ; ImGui::CallContextHooks
; Line 3920
	call	?ErrorCheckNewFrameSanityChecks@ImGui@@YAXXZ ; ImGui::ErrorCheckNewFrameSanityChecks
; Line 3923
	call	?UpdateSettings@ImGui@@YAXXZ		; ImGui::UpdateSettings
; Line 3925
	mov	rax, QWORD PTR g$[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+24]
	mov	rax, QWORD PTR g$[rbp]
	movsd	xmm1, QWORD PTR [rax+7048]
	addsd	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR g$[rbp]
	movsd	QWORD PTR [rax+7048], xmm0
; Line 3926
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7068], 1
; Line 3927
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7056]
	inc	eax
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+7056], eax
; Line 3928
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+12328], 0
; Line 3929
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7168], 0
; Line 3930
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 12352				; 00003040H
	mov	QWORD PTR tv145[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv145[rbp]
	call	?resize@?$ImVector@I@@QEAAXH@Z		; ImVector<unsigned int>::resize
; Line 3933
	mov	rax, QWORD PTR g$[rbp]
	movsxd	rax, DWORD PTR [rax+13052]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+24]
	subss	xmm0, DWORD PTR [rdx+rax*4+12572]
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+13060]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR g$[rbp]
	movss	DWORD PTR [rax+13060], xmm0
; Line 3934
	mov	rax, QWORD PTR g$[rbp]
	movsxd	rax, DWORD PTR [rax+13052]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rdx+24]
	movss	DWORD PTR [rcx+rax*4+12572], xmm0
; Line 3935
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+13052]
	inc	eax
	cdq
	mov	ecx, 120				; 00000078H
	idiv	ecx
	mov	eax, edx
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+13052], eax
; Line 3936
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+13056]
	inc	eax
	mov	edx, 120				; 00000078H
	mov	ecx, eax
	call	??$ImMin@H@@YAHHH@Z			; ImMin<int>
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+13056], eax
; Line 3937
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+13060]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN49@NewFrame
	mov	rax, QWORD PTR g$[rbp]
	cvtsi2ss xmm0, DWORD PTR [rax+13056]
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+13060]
	divss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR __real@3f800000
	divss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv183[rbp], xmm0
	jmp	SHORT $LN50@NewFrame
$LN49@NewFrame:
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR tv183[rbp], xmm0
$LN50@NewFrame:
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR tv183[rbp]
	movss	DWORD PTR [rax+928], xmm0
; Line 3939
	call	?UpdateViewportsNewFrame@ImGui@@YAXXZ	; ImGui::UpdateViewportsNewFrame
; Line 3942
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+168]
	mov	BYTE PTR [rax+24], 1
; Line 3943
	call	?GetDefaultFont@ImGui@@YAPEAUImFont@@XZ	; ImGui::GetDefaultFont
	mov	rcx, rax
	call	?SetCurrentFont@ImGui@@YAXPEAUImFont@@@Z ; ImGui::SetCurrentFont
; Line 3944
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+6520]
	call	?IsLoaded@ImFont@@QEBA_NXZ		; ImFont::IsLoaded
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN51@NewFrame
	mov	eax, DWORD PTR ?__LINE__Var@?0??NewFrame@ImGui@@YAXXZ@4JA
	add	eax, 37					; 00000025H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1CG@DCCAIGN@?$AAg?$AA?4?$AAF?$AAo?$AAn?$AAt?$AA?9?$AA?$DO?$AAI?$AAs?$AAL?$AAo?$AAa?$AAd?$AAe@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN51@NewFrame:
; Line 3945
	movss	xmm0, DWORD PTR __real@ff7fffff
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@ff7fffff
	movss	xmm2, DWORD PTR __real@7f7fffff
	movss	xmm1, DWORD PTR __real@7f7fffff
	lea	rcx, QWORD PTR virtual_space$[rbp]
	call	??0ImRect@@QEAA@MMMM@Z			; ImRect::ImRect
; Line 3946
	mov	DWORD PTR n$5[rbp], 0
	jmp	SHORT $LN7@NewFrame
$LN5@NewFrame:
	mov	eax, DWORD PTR n$5[rbp]
	inc	eax
	mov	DWORD PTR n$5[rbp], eax
$LN7@NewFrame:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7608]
	cmp	DWORD PTR n$5[rbp], eax
	jge	SHORT $LN6@NewFrame
; Line 3947
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7608				; 00001db8H
	mov	QWORD PTR tv214[rbp], rax
	mov	edx, DWORD PTR n$5[rbp]
	mov	rcx, QWORD PTR tv214[rbp]
	call	??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z ; ImVector<ImGuiViewportP *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv219[rbp], rax
	lea	rdx, QWORD PTR $T13[rbp]
	mov	rcx, QWORD PTR tv219[rbp]
	call	?GetMainRect@ImGuiViewportP@@QEBA?AUImRect@@XZ ; ImGuiViewportP::GetMainRect
	mov	rdx, rax
	lea	rcx, QWORD PTR virtual_space$[rbp]
	call	?Add@ImRect@@QEAAXAEBU1@@Z		; ImRect::Add
	jmp	SHORT $LN5@NewFrame
$LN6@NewFrame:
; Line 3948
	lea	rdx, QWORD PTR $T14[rbp]
	lea	rcx, QWORD PTR virtual_space$[rbp]
	call	?ToVec4@ImRect@@QEBA?AUImVec4@@XZ	; ImRect::ToVec4
	mov	rcx, QWORD PTR g$[rbp]
	lea	rdi, QWORD PTR [rcx+6564]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
; Line 3949
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+5660]
	movss	DWORD PTR [rax+6556], xmm0
; Line 3950
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 6536				; 00001988H
	mov	QWORD PTR tv237[rbp], rax
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+5664]
	mov	rcx, QWORD PTR tv237[rbp]
	call	?SetCircleTessellationMaxError@ImDrawListSharedData@@QEAAXM@Z ; ImDrawListSharedData::SetCircleTessellationMaxError
; Line 3951
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+6580], 0
; Line 3952
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+5656]
	test	eax, eax
	je	SHORT $LN24@NewFrame
; Line 3953
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+6580]
	or	eax, 1
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+6580], eax
$LN24@NewFrame:
; Line 3954
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+5657]
	test	eax, eax
	je	SHORT $LN25@NewFrame
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+6520]
	mov	rax, QWORD PTR [rax+64]
	mov	eax, DWORD PTR [rax]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN25@NewFrame
; Line 3955
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+6580]
	or	eax, 2
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+6580], eax
$LN25@NewFrame:
; Line 3956
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+5658]
	test	eax, eax
	je	SHORT $LN26@NewFrame
; Line 3957
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+6580]
	or	eax, 4
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+6580], eax
$LN26@NewFrame:
; Line 3958
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+12]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN27@NewFrame
; Line 3959
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+6580]
	or	eax, 8
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+6580], eax
$LN27@NewFrame:
; Line 3962
	mov	DWORD PTR n$6[rbp], 0
	jmp	SHORT $LN10@NewFrame
$LN8@NewFrame:
	mov	eax, DWORD PTR n$6[rbp]
	inc	eax
	mov	DWORD PTR n$6[rbp], eax
$LN10@NewFrame:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7608]
	cmp	DWORD PTR n$6[rbp], eax
	jge	SHORT $LN9@NewFrame
; Line 3964
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7608				; 00001db8H
	mov	QWORD PTR tv290[rbp], rax
	mov	edx, DWORD PTR n$6[rbp]
	mov	rcx, QWORD PTR tv290[rbp]
	call	??A?$ImVector@PEAUImGuiViewportP@@@@QEAAAEAPEAUImGuiViewportP@@H@Z ; ImVector<ImGuiViewportP *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR viewport$7[rbp], rax
; Line 3965
	mov	rax, QWORD PTR viewport$7[rbp]
	add	rax, 64					; 00000040H
	mov	rcx, rax
	call	?Clear@ImDrawData@@QEAAXXZ		; ImDrawData::Clear
; Line 3966
	jmp	SHORT $LN8@NewFrame
$LN9@NewFrame:
; Line 3969
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+8012]
	test	eax, eax
	je	SHORT $LN28@NewFrame
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7260]
	cmp	DWORD PTR [rax+8044], ecx
	jne	SHORT $LN28@NewFrame
; Line 3970
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rax+8044]
	call	?KeepAliveID@ImGui@@YAXI@Z		; ImGui::KeepAliveID
$LN28@NewFrame:
; Line 3973
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7244], 0
	jne	SHORT $LN29@NewFrame
; Line 3974
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+7252], xmm0
$LN29@NewFrame:
; Line 3975
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7244], 0
	je	SHORT $LN31@NewFrame
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7240], 0
	je	SHORT $LN30@NewFrame
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7240]
	cmp	DWORD PTR [rax+7260], ecx
	jne	SHORT $LN30@NewFrame
$LN31@NewFrame:
; Line 3976
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+7256], xmm0
$LN30@NewFrame:
; Line 3977
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7240], 0
	je	SHORT $LN32@NewFrame
; Line 3978
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7252]
	addss	xmm0, DWORD PTR [rcx+24]
	mov	rax, QWORD PTR g$[rbp]
	movss	DWORD PTR [rax+7252], xmm0
$LN32@NewFrame:
; Line 3979
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7240], 0
	je	SHORT $LN33@NewFrame
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7240]
	cmp	DWORD PTR [rax+7260], ecx
	je	SHORT $LN33@NewFrame
; Line 3980
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7256]
	addss	xmm0, DWORD PTR [rcx+24]
	mov	rax, QWORD PTR g$[rbp]
	movss	DWORD PTR [rax+7256], xmm0
$LN33@NewFrame:
; Line 3981
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7240]
	mov	DWORD PTR [rax+7244], ecx
; Line 3982
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	ecx, BYTE PTR [rcx+7249]
	mov	BYTE PTR [rax+7250], cl
; Line 3983
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7240], 0
; Line 3984
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7248], 0
; Line 3985
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7249], 0
; Line 3986
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7251], 0
; Line 3989
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7260]
	cmp	DWORD PTR [rax+7264], ecx
	je	SHORT $LN34@NewFrame
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7260]
	cmp	DWORD PTR [rax+7320], ecx
	jne	SHORT $LN34@NewFrame
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	je	SHORT $LN34@NewFrame
; Line 3990
	call	?ClearActiveID@ImGui@@YAXXZ		; ImGui::ClearActiveID
$LN34@NewFrame:
; Line 3991
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	je	SHORT $LN35@NewFrame
; Line 3992
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7268]
	addss	xmm0, DWORD PTR [rcx+24]
	mov	rax, QWORD PTR g$[rbp]
	movss	DWORD PTR [rax+7268], xmm0
$LN35@NewFrame:
; Line 3993
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7340]
	addss	xmm0, DWORD PTR [rcx+24]
	mov	rax, QWORD PTR g$[rbp]
	movss	DWORD PTR [rax+7340], xmm0
; Line 3994
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7260]
	mov	DWORD PTR [rax+7320], ecx
; Line 3995
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+7304]
	mov	QWORD PTR [rax+7328], rcx
; Line 3996
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	ecx, BYTE PTR [rcx+7276]
	mov	BYTE PTR [rax+7325], cl
; Line 3997
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7264], 0
; Line 3998
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7277], 0
; Line 3999
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7324], 0
; Line 4000
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7272], 0
; Line 4001
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+12216], 0
	je	SHORT $LN36@NewFrame
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+12216]
	cmp	DWORD PTR [rax+7260], ecx
	je	SHORT $LN36@NewFrame
; Line 4002
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+12216], 0
$LN36@NewFrame:
; Line 4003
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+7260], 0
	jne	SHORT $LN37@NewFrame
; Line 4005
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7280], 0
; Line 4006
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+7284], 0
; Line 4007
	mov	rax, QWORD PTR g$[rbp]
	mov	QWORD PTR [rax+7288], 0
$LN37@NewFrame:
; Line 4011
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+8124]
	mov	DWORD PTR [rax+8128], ecx
; Line 4012
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+8124], 0
; Line 4013
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR [rax+8120], xmm0
; Line 4014
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+8013], 0
; Line 4015
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+8014], 0
; Line 4016
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+8136], 0
; Line 4020
	call	?GetMergedKeyModFlags@ImGui@@YAHXZ	; ImGui::GetMergedKeyModFlags
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+960], eax
; Line 4021
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	lea	rdi, QWORD PTR [rax+3232]
	lea	rsi, QWORD PTR [rcx+1184]
	mov	ecx, 2048				; 00000800H
	rep movsb
; Line 4022
	mov	DWORD PTR i$8[rbp], 0
	jmp	SHORT $LN13@NewFrame
$LN11@NewFrame:
	mov	eax, DWORD PTR i$8[rbp]
	inc	eax
	mov	DWORD PTR i$8[rbp], eax
$LN13@NewFrame:
	cmp	DWORD PTR i$8[rbp], 512			; 00000200H
	jge	$LN12@NewFrame
; Line 4023
	movsxd	rax, DWORD PTR i$8[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+324]
	test	eax, eax
	je	SHORT $LN54@NewFrame
	movsxd	rax, DWORD PTR i$8[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rcx+rax*4+1184]
	jbe	SHORT $LN52@NewFrame
	xorps	xmm0, xmm0
	movss	DWORD PTR tv427[rbp], xmm0
	jmp	SHORT $LN53@NewFrame
$LN52@NewFrame:
	movsxd	rax, DWORD PTR i$8[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax*4+1184]
	addss	xmm0, DWORD PTR [rdx+24]
	movss	DWORD PTR tv427[rbp], xmm0
$LN53@NewFrame:
	movss	xmm0, DWORD PTR tv427[rbp]
	movss	DWORD PTR tv430[rbp], xmm0
	jmp	SHORT $LN55@NewFrame
$LN54@NewFrame:
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR tv430[rbp], xmm0
$LN55@NewFrame:
	movsxd	rax, DWORD PTR i$8[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR tv430[rbp]
	movss	DWORD PTR [rcx+rax*4+1184], xmm0
	jmp	$LN11@NewFrame
$LN12@NewFrame:
; Line 4026
	call	?NavUpdate@ImGui@@YAXXZ			; ImGui::NavUpdate
; Line 4029
	call	?UpdateMouseInputs@ImGui@@YAXXZ		; ImGui::UpdateMouseInputs
; Line 4033
	call	?UpdateHoveredWindowAndCaptureFlags@ImGui@@YAXXZ ; ImGui::UpdateHoveredWindowAndCaptureFlags
; Line 4036
	call	?UpdateMouseMovingWindowNewFrame@ImGui@@YAXXZ ; ImGui::UpdateMouseMovingWindowNewFrame
; Line 4039
	call	?GetTopMostPopupModal@ImGui@@YAPEAUImGuiWindow@@XZ ; ImGui::GetTopMostPopupModal
	test	rax, rax
	jne	SHORT $LN40@NewFrame
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7928], 0
	je	SHORT $LN38@NewFrame
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+7956]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN38@NewFrame
$LN40@NewFrame:
; Line 4040
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+24]
	mulss	xmm0, DWORD PTR __real@40c00000
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+8004]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR __real@3f800000
	call	??$ImMin@M@@YAMMM@Z			; ImMin<float>
	mov	rax, QWORD PTR g$[rbp]
	movss	DWORD PTR [rax+8004], xmm0
	jmp	SHORT $LN39@NewFrame
$LN38@NewFrame:
; Line 4042
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm0, DWORD PTR [rax+24]
	mulss	xmm0, DWORD PTR __real@41200000
	mov	rax, QWORD PTR g$[rbp]
	movss	xmm1, DWORD PTR [rax+8004]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	xorps	xmm1, xmm1
	call	??$ImMax@M@@YAMMM@Z			; ImMax<float>
	mov	rax, QWORD PTR g$[rbp]
	movss	DWORD PTR [rax+8004], xmm0
$LN39@NewFrame:
; Line 4044
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+8008], 0
; Line 4045
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+13072], -1
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+13068], -1
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+13064], -1
; Line 4046
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T15[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+12368], rax
; Line 4049
	call	?UpdateMouseWheel@ImGui@@YAXXZ		; ImGui::UpdateMouseWheel
; Line 4052
	call	?UpdateTabFocus@ImGui@@YAXXZ		; ImGui::UpdateTabFocus
; Line 4055
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+7088]
	cmp	DWORD PTR [rax+7104], ecx
	jle	SHORT $LN56@NewFrame
	mov	eax, DWORD PTR ?__LINE__Var@?0??NewFrame@ImGui@@YAXXZ@4JA
	add	eax, 148				; 00000094H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1FG@PEGMPHDA@?$AAg?$AA?4?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AAF?$AAo?$AAc?$AAu?$AAs?$AAO@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN56@NewFrame:
; Line 4056
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7071]
	test	eax, eax
	jne	SHORT $LN57@NewFrame
	mov	rax, QWORD PTR g$[rbp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rax+208]
	ja	SHORT $LN57@NewFrame
	mov	rax, QWORD PTR g$[rbp]
	cvtsd2ss xmm0, QWORD PTR [rax+7048]
	mov	rax, QWORD PTR g$[rbp]
	subss	xmm0, DWORD PTR [rax+208]
	movss	DWORD PTR tv486[rbp], xmm0
	jmp	SHORT $LN58@NewFrame
$LN57@NewFrame:
	movss	xmm0, DWORD PTR __real@7f7fffff
	movss	DWORD PTR tv486[rbp], xmm0
$LN58@NewFrame:
	movss	xmm0, DWORD PTR tv486[rbp]
	movss	DWORD PTR memory_compact_start_time$[rbp], xmm0
; Line 4057
	mov	DWORD PTR i$9[rbp], 0
	jmp	SHORT $LN16@NewFrame
$LN14@NewFrame:
	mov	eax, DWORD PTR i$9[rbp]
	inc	eax
	mov	DWORD PTR i$9[rbp], eax
$LN16@NewFrame:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+7088]
	cmp	DWORD PTR i$9[rbp], eax
	je	$LN15@NewFrame
; Line 4059
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7088				; 00001bb0H
	mov	QWORD PTR tv496[rbp], rax
	mov	edx, DWORD PTR i$9[rbp]
	mov	rcx, QWORD PTR tv496[rbp]
	call	??A?$ImVector@PEAUImGuiWindow@@@@QEAAAEAPEAUImGuiWindow@@H@Z ; ImVector<ImGuiWindow *>::operator[]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR window$10[rbp], rax
; Line 4060
	mov	rax, QWORD PTR window$10[rbp]
	mov	rcx, QWORD PTR window$10[rbp]
	movzx	ecx, BYTE PTR [rcx+142]
	mov	BYTE PTR [rax+143], cl
; Line 4061
	xor	eax, eax
	mov	rcx, QWORD PTR window$10[rbp]
	mov	WORD PTR [rcx+154], ax
; Line 4062
	mov	rax, QWORD PTR window$10[rbp]
	mov	BYTE PTR [rax+142], 0
; Line 4063
	mov	rax, QWORD PTR window$10[rbp]
	mov	BYTE PTR [rax+144], 0
; Line 4066
	mov	rax, QWORD PTR window$10[rbp]
	movzx	eax, BYTE PTR [rax+143]
	test	eax, eax
	jne	SHORT $LN41@NewFrame
	mov	rax, QWORD PTR window$10[rbp]
	movzx	eax, BYTE PTR [rax+984]
	test	eax, eax
	jne	SHORT $LN41@NewFrame
	mov	rax, QWORD PTR window$10[rbp]
	movss	xmm0, DWORD PTR memory_compact_start_time$[rbp]
	comiss	xmm0, DWORD PTR [rax+636]
	jbe	SHORT $LN41@NewFrame
; Line 4067
	mov	rcx, QWORD PTR window$10[rbp]
	call	?GcCompactTransientWindowBuffers@ImGui@@YAXPEAUImGuiWindow@@@Z ; ImGui::GcCompactTransientWindowBuffers
$LN41@NewFrame:
; Line 4068
	jmp	$LN14@NewFrame
$LN15@NewFrame:
; Line 4071
	mov	DWORD PTR i$11[rbp], 0
	jmp	SHORT $LN19@NewFrame
$LN17@NewFrame:
	mov	eax, DWORD PTR i$11[rbp]
	inc	eax
	mov	DWORD PTR i$11[rbp], eax
$LN19@NewFrame:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+8248]
	cmp	DWORD PTR i$11[rbp], eax
	jge	$LN18@NewFrame
; Line 4072
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8248				; 00002038H
	mov	QWORD PTR tv520[rbp], rax
	mov	edx, DWORD PTR i$11[rbp]
	mov	rcx, QWORD PTR tv520[rbp]
	call	??A?$ImVector@M@@QEAAAEAMH@Z		; ImVector<float>::operator[]
	movss	xmm0, DWORD PTR [rax]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN42@NewFrame
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8248				; 00002038H
	mov	QWORD PTR tv527[rbp], rax
	mov	edx, DWORD PTR i$11[rbp]
	mov	rcx, QWORD PTR tv527[rbp]
	call	??A?$ImVector@M@@QEAAAEAMH@Z		; ImVector<float>::operator[]
	movss	xmm0, DWORD PTR memory_compact_start_time$[rbp]
	comiss	xmm0, DWORD PTR [rax]
	jbe	SHORT $LN42@NewFrame
; Line 4073
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8192				; 00002000H
	mov	QWORD PTR tv534[rbp], rax
	mov	edx, DWORD PTR i$11[rbp]
	mov	rcx, QWORD PTR tv534[rbp]
	call	?GetByIndex@?$ImPool@UImGuiTable@@@@QEAAPEAUImGuiTable@@H@Z ; ImPool<ImGuiTable>::GetByIndex
	mov	rcx, rax
	call	?TableGcCompactTransientBuffers@ImGui@@YAXPEAUImGuiTable@@@Z ; ImGui::TableGcCompactTransientBuffers
$LN42@NewFrame:
	jmp	$LN17@NewFrame
$LN18@NewFrame:
; Line 4074
	mov	DWORD PTR i$12[rbp], 0
	jmp	SHORT $LN22@NewFrame
$LN20@NewFrame:
	mov	eax, DWORD PTR i$12[rbp]
	inc	eax
	mov	DWORD PTR i$12[rbp], eax
$LN22@NewFrame:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+8232]
	cmp	DWORD PTR i$12[rbp], eax
	jge	$LN21@NewFrame
; Line 4075
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8232				; 00002028H
	mov	QWORD PTR tv545[rbp], rax
	mov	edx, DWORD PTR i$12[rbp]
	mov	rcx, QWORD PTR tv545[rbp]
	call	??A?$ImVector@UImGuiTableTempData@@@@QEAAAEAUImGuiTableTempData@@H@Z ; ImVector<ImGuiTableTempData>::operator[]
	movss	xmm0, DWORD PTR [rax+4]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN43@NewFrame
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8232				; 00002028H
	mov	QWORD PTR tv553[rbp], rax
	mov	edx, DWORD PTR i$12[rbp]
	mov	rcx, QWORD PTR tv553[rbp]
	call	??A?$ImVector@UImGuiTableTempData@@@@QEAAAEAUImGuiTableTempData@@H@Z ; ImVector<ImGuiTableTempData>::operator[]
	movss	xmm0, DWORD PTR memory_compact_start_time$[rbp]
	comiss	xmm0, DWORD PTR [rax+4]
	jbe	SHORT $LN43@NewFrame
; Line 4076
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 8232				; 00002028H
	mov	QWORD PTR tv561[rbp], rax
	mov	edx, DWORD PTR i$12[rbp]
	mov	rcx, QWORD PTR tv561[rbp]
	call	??A?$ImVector@UImGuiTableTempData@@@@QEAAAEAUImGuiTableTempData@@H@Z ; ImVector<ImGuiTableTempData>::operator[]
	mov	rcx, rax
	call	?TableGcCompactTransientBuffers@ImGui@@YAXPEAUImGuiTableTempData@@@Z ; ImGui::TableGcCompactTransientBuffers
$LN43@NewFrame:
	jmp	$LN20@NewFrame
$LN21@NewFrame:
; Line 4077
	mov	rax, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rax+7071]
	test	eax, eax
	je	SHORT $LN44@NewFrame
; Line 4078
	call	?GcCompactTransientMiscBuffers@ImGui@@YAXXZ ; ImGui::GcCompactTransientMiscBuffers
$LN44@NewFrame:
; Line 4079
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7071], 0
; Line 4082
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+7624], 0
	je	SHORT $LN45@NewFrame
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7624]
	movzx	eax, BYTE PTR [rax+143]
	test	eax, eax
	jne	SHORT $LN45@NewFrame
; Line 4083
	xor	edx, edx
	xor	ecx, ecx
	call	?FocusTopMostWindowUnderOne@ImGui@@YAXPEAUImGuiWindow@@0@Z ; ImGui::FocusTopMostWindowUnderOne
$LN45@NewFrame:
; Line 4087
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7136				; 00001be0H
	mov	QWORD PTR tv579[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv579[rbp]
	call	?resize@?$ImVector@PEAUImGuiWindow@@@@QEAAXH@Z ; ImVector<ImGuiWindow *>::resize
; Line 4088
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7592				; 00001da8H
	mov	QWORD PTR tv584[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv584[rbp]
	call	?resize@?$ImVector@UImGuiPopupData@@@@QEAAXH@Z ; ImVector<ImGuiPopupData>::resize
; Line 4089
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7544				; 00001d78H
	mov	QWORD PTR tv589[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv589[rbp]
	call	?resize@?$ImVector@H@@QEAAXH@Z		; ImVector<int>::resize
; Line 4090
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7544				; 00001d78H
	mov	QWORD PTR tv594[rbp], rax
	mov	DWORD PTR $T16[rbp], 0
	lea	rdx, QWORD PTR $T16[rbp]
	mov	rcx, QWORD PTR tv594[rbp]
	call	?push_back@?$ImVector@H@@QEAAXAEBH@Z	; ImVector<int>::push_back
; Line 4091
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 7560				; 00001d88H
	mov	QWORD PTR tv599[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv599[rbp]
	call	?resize@?$ImVector@UImGuiGroupData@@@@QEAAXH@Z ; ImVector<ImGuiGroupData>::resize
; Line 4092
	xor	edx, edx
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+7624]
	call	?ClosePopupsOverWindow@ImGui@@YAXPEAUImGuiWindow@@_N@Z ; ImGui::ClosePopupsOverWindow
; Line 4095
	call	?UpdateDebugToolItemPicker@ImGui@@YAXXZ	; ImGui::UpdateDebugToolItemPicker
; Line 4100
	mov	rax, QWORD PTR g$[rbp]
	mov	BYTE PTR [rax+7069], 1
; Line 4101
	movss	xmm2, DWORD PTR __real@43c80000
	movss	xmm1, DWORD PTR __real@43c80000
	lea	rcx, QWORD PTR $T17[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	edx, 4
	mov	rcx, rax
	call	?SetNextWindowSize@ImGui@@YAXAEBUImVec2@@H@Z ; ImGui::SetNextWindowSize
; Line 4102
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, OFFSET FLAT:??_C@_0P@IMLDNMEK@Debug?$CD?$CDDefault@
	call	?Begin@ImGui@@YA_NPEBDPEA_NH@Z		; ImGui::Begin
; Line 4103
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+7184]
	movzx	eax, BYTE PTR [rax+150]
	cmp	eax, 1
	je	SHORT $LN59@NewFrame
	mov	eax, DWORD PTR ?__LINE__Var@?0??NewFrame@ImGui@@YAXXZ@4JA
	add	eax, 196				; 000000c4H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1FE@JJEPGBAD@?$AAg?$AA?4?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN59@NewFrame:
; Line 4105
	mov	edx, 1
	mov	rcx, QWORD PTR g$[rbp]
	call	?CallContextHooks@ImGui@@YAXPEAUImGuiContext@@W4ImGuiContextHookType@@@Z ; ImGui::CallContextHooks
; Line 4106
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?NewFrame@ImGui@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+992]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?NewFrame@ImGui@@YAXXZ ENDP				; ImGui::NewFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ
_TEXT	SEGMENT
?GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ PROC		; ImGui::GetStyle, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 2431
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 2432
	cmp	QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA, 0 ; GImGui
	je	SHORT $LN3@GetStyle
	lea	rax, OFFSET FLAT:??_C@_0FJ@JBAFLEHG@No?5current?5context?4?5Did?5you?5cal@
	test	rax, rax
	jne	SHORT $LN4@GetStyle
$LN3@GetStyle:
	mov	eax, DWORD PTR ?__LINE__Var@?0??GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1NE@MGLAEJCB@?$AAG?$AAI?$AAm?$AAG?$AAu?$AAi?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@GetStyle:
; Line 2433
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	add	rax, 5472				; 00001560H
; Line 2434
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetStyle@ImGui@@YAAEAUImGuiStyle@@XZ ENDP		; ImGui::GetStyle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetIO@ImGui@@YAAEAUImGuiIO@@XZ
_TEXT	SEGMENT
?GetIO@ImGui@@YAAEAUImGuiIO@@XZ PROC			; ImGui::GetIO, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3446
$LN5:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3447
	cmp	QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA, 0 ; GImGui
	je	SHORT $LN3@GetIO
	lea	rax, OFFSET FLAT:??_C@_0FJ@JBAFLEHG@No?5current?5context?4?5Did?5you?5cal@
	test	rax, rax
	jne	SHORT $LN4@GetIO
$LN3@GetIO:
	mov	eax, DWORD PTR ?__LINE__Var@?0??GetIO@ImGui@@YAAEAUImGuiIO@@XZ@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1GA@DBDODNOH@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1NE@MGLAEJCB@?$AAG?$AAI?$AAm?$AAG?$AAu?$AAi?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@GetIO:
; Line 3448
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	add	rax, 8
; Line 3449
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetIO@ImGui@@YAAEAUImGuiIO@@XZ ENDP			; ImGui::GetIO
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetCurrentContext@ImGui@@YAXPEAUImGuiContext@@@Z
_TEXT	SEGMENT
ctx$ = 224
?SetCurrentContext@ImGui@@YAXPEAUImGuiContext@@@Z PROC	; ImGui::SetCurrentContext, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3373
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3377
	mov	rax, QWORD PTR ctx$[rbp]
	mov	QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA, rax ; GImGui
; Line 3379
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?SetCurrentContext@ImGui@@YAXPEAUImGuiContext@@@Z ENDP	; ImGui::SetCurrentContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetCurrentContext@ImGui@@YAPEAUImGuiContext@@XZ
_TEXT	SEGMENT
?GetCurrentContext@ImGui@@YAPEAUImGuiContext@@XZ PROC	; ImGui::GetCurrentContext, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3368
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3369
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
; Line 3370
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetCurrentContext@ImGui@@YAPEAUImGuiContext@@XZ ENDP	; ImGui::GetCurrentContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DestroyContext@ImGui@@YAXPEAUImGuiContext@@@Z
_TEXT	SEGMENT
ctx$ = 224
?DestroyContext@ImGui@@YAXPEAUImGuiContext@@@Z PROC	; ImGui::DestroyContext, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3406
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3407
	cmp	QWORD PTR ctx$[rbp], 0
	jne	SHORT $LN2@DestroyCon
; Line 3408
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	QWORD PTR ctx$[rbp], rax
$LN2@DestroyCon:
; Line 3409
	mov	rcx, QWORD PTR ctx$[rbp]
	call	?Shutdown@ImGui@@YAXPEAUImGuiContext@@@Z ; ImGui::Shutdown
; Line 3410
	mov	rax, QWORD PTR ctx$[rbp]
	cmp	QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA, rax ; GImGui
	jne	SHORT $LN3@DestroyCon
; Line 3411
	xor	ecx, ecx
	call	?SetCurrentContext@ImGui@@YAXPEAUImGuiContext@@@Z ; ImGui::SetCurrentContext
$LN3@DestroyCon:
; Line 3412
	mov	rcx, QWORD PTR ctx$[rbp]
	call	??$IM_DELETE@UImGuiContext@@@@YAXPEAUImGuiContext@@@Z ; IM_DELETE<ImGuiContext>
; Line 3413
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?DestroyContext@ImGui@@YAXPEAUImGuiContext@@@Z ENDP	; ImGui::DestroyContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z
_TEXT	SEGMENT
ctx$ = 8
$T1 = 232
$T2 = 264
$T3 = 296
$T4 = 328
$T5 = 356
tv81 = 376
shared_font_atlas$ = 416
?CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z PROC ; ImGui::CreateContext, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.cpp
; Line 3397
$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__1F7F3FD0_imgui@cpp
	call	__CheckForDebuggerJustMyCode
; Line 3398
	mov	ecx, 16152				; 00003f18H
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR $T3[rbp], rax
	lea	rax, QWORD PTR $T5[rbp]
	mov	QWORD PTR $T4[rbp], rax
	mov	r8, QWORD PTR $T3[rbp]
	mov	rax, QWORD PTR $T4[rbp]
	movzx	edx, BYTE PTR [rax]
	mov	ecx, 16152				; 00003f18H
	call	??2@YAPEAX_KUImNewWrapper@@PEAX@Z	; operator new
	mov	QWORD PTR $T2[rbp], rax
	cmp	QWORD PTR $T2[rbp], 0
	je	SHORT $LN4@CreateCont
	mov	rdx, QWORD PTR shared_font_atlas$[rbp]
	mov	rcx, QWORD PTR $T2[rbp]
	call	??0ImGuiContext@@QEAA@PEAUImFontAtlas@@@Z ; ImGuiContext::ImGuiContext
	mov	QWORD PTR tv81[rbp], rax
	jmp	SHORT $LN5@CreateCont
$LN4@CreateCont:
	mov	QWORD PTR tv81[rbp], 0
$LN5@CreateCont:
	mov	rax, QWORD PTR tv81[rbp]
	mov	QWORD PTR $T1[rbp], rax
	mov	rax, QWORD PTR $T1[rbp]
	mov	QWORD PTR ctx$[rbp], rax
; Line 3399
	cmp	QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA, 0 ; GImGui
	jne	SHORT $LN2@CreateCont
; Line 3400
	mov	rcx, QWORD PTR ctx$[rbp]
	call	?SetCurrentContext@ImGui@@YAXPEAUImGuiContext@@@Z ; ImGui::SetCurrentContext
$LN2@CreateCont:
; Line 3401
	mov	rcx, QWORD PTR ctx$[rbp]
	call	?Initialize@ImGui@@YAXPEAUImGuiContext@@@Z ; ImGui::Initialize
; Line 3402
	mov	rax, QWORD PTR ctx$[rbp]
; Line 3403
	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
?CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z ENDP ; ImGui::CreateContext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
ctx$ = 8
$T1 = 232
$T2 = 264
$T3 = 296
$T4 = 328
$T5 = 356
tv81 = 376
shared_font_atlas$ = 416
?dtor$0@?0??CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z@4HA PROC ; `ImGui::CreateContext'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	r8, QWORD PTR $T3[rbp]
	mov	rax, QWORD PTR $T4[rbp]
	movzx	edx, BYTE PTR [rax]
	mov	rcx, QWORD PTR $T2[rbp]
	call	??3@YAXPEAXUImNewWrapper@@0@Z		; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??CreateContext@ImGui@@YAPEAUImGuiContext@@PEAUImFontAtlas@@@Z@4HA ENDP ; `ImGui::CreateContext'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ImVec4@@QEAA@MMMM@Z
_TEXT	SEGMENT
this$ = 80
_x$ = 88
_y$ = 96
_z$ = 104
_w$ = 112
??0ImVec4@@QEAA@MMMM@Z PROC				; ImVec4::ImVec4, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 261
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR _x$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR _y$[rbp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR _z$[rbp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR _w$[rbp]
	movss	DWORD PTR [rax+12], xmm0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??0ImVec4@@QEAA@MMMM@Z ENDP				; ImVec4::ImVec4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ImVec4@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0ImVec4@@QEAA@XZ PROC					; ImVec4::ImVec4, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 260
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12], xmm0
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??0ImVec4@@QEAA@XZ ENDP					; ImVec4::ImVec4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??AImVec2@@QEAAAEAM_K@Z
_TEXT	SEGMENT
this$ = 80
idx$ = 88
??AImVec2@@QEAAAEAM_K@Z PROC				; ImVec2::operator[], COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 250
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	QWORD PTR idx$[rbp], 1
	jbe	SHORT $LN3@operator
	mov	r8d, 250				; 000000faH
	lea	rdx, OFFSET FLAT:??_C@_1FM@JNPAKPFE@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1BC@IIGHOJGM@?$AAi?$AAd?$AAx?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA1@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@operator:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR idx$[rbp]
	lea	rax, QWORD PTR [rax+rcx*4]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??AImVec2@@QEAAAEAM_K@Z ENDP				; ImVec2::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ImVec2@@QEAA@MM@Z
_TEXT	SEGMENT
this$ = 80
_x$ = 88
_y$ = 96
??0ImVec2@@QEAA@MM@Z PROC				; ImVec2::ImVec2, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 248
$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR _x$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR _y$[rbp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??0ImVec2@@QEAA@MM@Z ENDP				; ImVec2::ImVec2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ImVec2@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0ImVec2@@QEAA@XZ PROC					; ImVec2::ImVec2, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 247
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??0ImVec2@@QEAA@XZ ENDP					; ImVec2::ImVec2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_H@YAXPEAX_K1P6APEAX0@Z@Z
_TEXT	SEGMENT
tv72 = 192
tv66 = 192
tv67 = 200
__t$ = 240
__s$ = 248
__n$ = 256
__f$ = 264
??_H@YAXPEAX_K1P6APEAX0@Z@Z PROC			; `vector constructor iterator', COMDAT
$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
$LN2@vector:
	mov	rax, QWORD PTR __n$[rbp]
	mov	QWORD PTR tv66[rbp], rax
	mov	rax, QWORD PTR __n$[rbp]
	dec	rax
	mov	QWORD PTR __n$[rbp], rax
	cmp	QWORD PTR tv66[rbp], 0
	jbe	SHORT $LN5@vector
	mov	DWORD PTR tv67[rbp], 1
	jmp	SHORT $LN6@vector
$LN5@vector:
	mov	DWORD PTR tv67[rbp], 0
$LN6@vector:
	cmp	DWORD PTR tv67[rbp], 0
	je	SHORT $LN3@vector
	mov	rax, QWORD PTR __f$[rbp]
	mov	QWORD PTR tv72[rbp], rax
	mov	rcx, QWORD PTR __t$[rbp]
	call	QWORD PTR tv72[rbp]
	mov	rax, QWORD PTR __s$[rbp]
	mov	rcx, QWORD PTR __t$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR __t$[rbp], rax
	jmp	SHORT $LN2@vector
$LN3@vector:
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??_H@YAXPEAX_K1P6APEAX0@Z@Z ENDP			; `vector constructor iterator'
_TEXT	ENDS
END
