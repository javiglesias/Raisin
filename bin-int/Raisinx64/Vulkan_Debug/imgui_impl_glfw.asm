; Listing generated by Microsoft (R) Optimizing Compiler Version 19.33.31630.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__A52B8F80_imconfig@h DB 01H
__529D0EAA_concurrencysal@h DB 01H
__7EC34687_sal@h DB 01H
__35A2D2DF_vadefs@h DB 01H
__5F022EB5_vcruntime@h DB 01H
__1B0272D9_corecrt@h DB 01H
__B9985323_float@h DB 01H
__79700276_stdarg@h DB 01H
__13F5961F_stddef@h DB 01H
__61CC25A1_errno@h DB 01H
__74AC4223_vcruntime_string@h DB 01H
__E4C945B4_corecrt_memcpy_s@h DB 01H
__8EAFF484_corecrt_memory@h DB 01H
__6490AEC5_corecrt_wstring@h DB 01H
__E8295E1E_string@h DB 01H
__19139D6C_assert@h DB 01H
__21D911DF_imgui@h DB 01H
__D3953CEF_imgui_impl_glfw@h DB 01H
__4DAFBCB9_stdint@h DB 01H
__0ED14FEE_winpackagefamily@h DB 01H
__F92EF742_winapifamily@h DB 01H
__B064E8EE_gl@h DB 01H
__DD4EC5F2_glfw3@h DB 01H
__22E515EB_sdkddkver@h DB 01H
__3F7A3B5F_excpt@h DB 01H
__29F49F40_specstrings_undef@h DB 01H
__D0F42932_specstrings_strict@h DB 01H
__F00405FD_sdv_driverspecs@h DB 01H
__173E09CA_driverspecs@h DB 01H
__9A452361_specstrings@h DB 01H
__74484FB3_corecrt_wctype@h DB 01H
__1EC467ED_ctype@h DB 01H
__98517906_kernelspecs@h DB 01H
__D3497022_basetsd@h DB 01H
__7FCB5136_guiddef@h DB 01H
__FF8A9E11_pshpack4@h DB 01H
__D5438902_poppack@h DB 01H
__FB07E2A3_pshpack2@h DB 01H
__F6906775_pshpack8@h DB 01H
__F9415CFA_pshpack1@h DB 01H
__E58C6F1C_apiset@h DB 01H
__A5C52262_ktmtypes@h DB 01H
__FBBA8F9D_winnt@h DB 01H
__A32D3D2C_minwindef@h DB 01H
__7D798299_windef@h DB 01H
__9AE108E9_apisetcconv@h DB 01H
__9CE53D2C_minwinbase@h DB 01H
__5D0AA210_apiquery2@h DB 01H
__4DD4E726_processenv@h DB 01H
__3575CC96_fileapi@h DB 01H
__8EA220E6_fileapifromapp@h DB 01H
__BF9B31FE_debugapi@h DB 01H
__C3AFE134_utilapiset@h DB 01H
__76F69E51_handleapi@h DB 01H
__7E63D784_errhandlingapi@h DB 01H
__FFA7003C_fibersapi@h DB 01H
__8971CECF_namedpipeapi@h DB 01H
__46C9D8A6_profileapi@h DB 01H
__98D4F0A3_heapapi@h DB 01H
__50EF2A88_ioapiset@h DB 01H
__92EA1464_synchapi@h DB 01H
__A53D8AED_interlockedapi@h DB 01H
__B506CAAF_processthreadsapi@h DB 01H
__FF735694_sysinfoapi@h DB 01H
__29589789_memoryapi@h DB 01H
__E9C7A663_enclaveapi@h DB 01H
__D035F9F7_threadpoollegacyapiset@h DB 01H
__C899130C_threadpoolapiset@h DB 01H
__E0441EE7_jobapi@h DB 01H
__CEF86838_jobapi2@h DB 01H
__35AC6B9A_wow64apiset@h DB 01H
__C8AE41A5_libloaderapi@h DB 01H
__CC9E232D_securitybaseapi@h DB 01H
__C9D0C9B8_namespaceapi@h DB 01H
__30FF9CAD_systemtopologyapi@h DB 01H
__4D358795_processtopologyapi@h DB 01H
__40446D10_securityappcontainer@h DB 01H
__3A952EDF_realtimeapiset@h DB 01H
__F4865F4B_winerror@h DB 01H
__53C1BD93_timezoneapi@h DB 01H
__1FFBEDBF_winbase@h DB 01H
__43D3FA34_wingdi@h DB 01H
__D24A7391_tvout@h DB 01H
__7713A6C8_winuser@h DB 01H
__0B345F71_datetimeapi@h DB 01H
__9AC6960C_winnls@h DB 01H
__973A40A8_stringapiset@h DB 01H
__CC46FEE2_wincontypes@h DB 01H
__97D70BE1_consoleapi@h DB 01H
__27EC5E18_consoleapi2@h DB 01H
__262E342F_consoleapi3@h DB 01H
__641DCD70_wincon@h DB 01H
__5A96C7A7_verrsrc@h DB 01H
__B69C6FF2_winver@h DB 01H
__7AEB8C37_reason@h DB 01H
__59F1A8A9_winreg@h DB 01H
__EE0E2B7F_wnnc@h DB 01H
__DCDB7054_winnetwk@h DB 01H
__EDC72EEB_cderr@h DB 01H
__95F9199D_dde@h DB 01H
__66427627_ddeml@h DB 01H
__957C29A0_dlgs@h DB 01H
__12EA15AF_lzexpand@h DB 01H
__62131F15_mmsyscom@h DB 01H
__47E68D49_mciapi@h DB 01H
__5D7DD356_mmiscapi@h DB 01H
__7223D2EF_mmiscapi2@h DB 01H
__A330DBB3_playsoundapi@h DB 01H
__601B366F_mmeapi@h DB 01H
__1134ADD5_timeapi@h DB 01H
__93F2265A_joystickapi@h DB 01H
__DF6EB4E3_mmsystem@h DB 01H
__BD641FCB_nb30@h DB 01H
__DF8704F0_rpcdcep@h DB 01H
__5C6CA7BB_rpcdce@h DB 01H
__853533C4_rpcnsi@h DB 01H
__2D2406C3_rpcnterr@h DB 01H
__64521D71_rpcasync@h DB 01H
__AADCBA08_rpc@h DB 01H
__19E26CFF_shellapi@h DB 01H
__1E9F31D3_winperf@h DB 01H
__832A4112_inaddr@h DB 01H
__32C6F875_winsock@h DB 01H
__7953A3F8_bcrypt@h DB 01H
__E4169492_ncrypt@h DB 01H
__AF3DDDC3_dpapi@h DB 01H
__D1E23BF2_wincrypt@h DB 01H
__82AB4779_winefs@h DB 01H
__1FE431C9_rpcnsip@h DB 01H
__2B741F2D_rpcsal@h DB 01H
__92623256_rpcndr@h DB 01H
__9C18532E_wtypesbase@h DB 01H
__EA2E1D6D_wtypes@h DB 01H
__7DDD9F45_winioctl@h DB 01H
__E550A843_winsmcrd@h DB 01H
__9809C1BA_winscard@h DB 01H
__EA174FA4_prsht@h DB 01H
__0E1BD114_winspool@h DB 01H
__45DED006_corecrt_malloc@h DB 01H
__FD6DBD68_corecrt_search@h DB 01H
__E2E33A61_corecrt_wstdlib@h DB 01H
__F3D99286_limits@h DB 01H
__6E5ACABA_stdlib@h DB 01H
__30B1AFDA_unknwnbase@h DB 01H
__328C1996_objidlbase@h DB 01H
__C4E06B6A_cguid@h DB 01H
__434718C5_combaseapi@h DB 01H
__DE6FDEF1_unknwn@h DB 01H
__CCE0BACC_objidl@h DB 01H
__8C7011E5_oaidl@h DB 01H
__2E0B7863_propidlbase@h DB 01H
__BF4CF2EC_coml2api@h DB 01H
__6D897344_oleidl@h DB 01H
__1129FC2C_servprov@h DB 01H
__757952E4_msxml@h DB 01H
__B1191D53_urlmon@h DB 01H
__404D1A47_propidl@h DB 01H
__A1C63593_objbase@h DB 01H
__C1B0A9CB_oleauto@h DB 01H
__24EAF61F_ole2@h DB 01H
__2B1843DA_commdlg@h DB 01H
__81DDEDE3_stralign@h DB 01H
__2134D1B4_winsvc@h DB 01H
__11C07376_mcx@h DB 01H
__577CE3E7_ime_cmodes@h DB 01H
__1E72C31E_imm@h DB 01H
__E15BF856_windows@h DB 01H
__77879DCC_glfw3native@h DB 01H
__85E6A71A_imgui_impl_glfw@cpp DB 01H
msvcjmc	ENDS
PUBLIC	??0ImVec2@@QEAA@MM@Z				; ImVec2::ImVec2
PUBLIC	??2@YAPEAX_KUImNewWrapper@@PEAX@Z		; operator new
PUBLIC	??3@YAXPEAXUImNewWrapper@@0@Z			; operator delete
PUBLIC	?ImGui_ImplGlfw_InitForOpenGL@@YA_NPEAUGLFWwindow@@_N@Z ; ImGui_ImplGlfw_InitForOpenGL
PUBLIC	?ImGui_ImplGlfw_InitForVulkan@@YA_NPEAUGLFWwindow@@_N@Z ; ImGui_ImplGlfw_InitForVulkan
PUBLIC	?ImGui_ImplGlfw_InitForOther@@YA_NPEAUGLFWwindow@@_N@Z ; ImGui_ImplGlfw_InitForOther
PUBLIC	?ImGui_ImplGlfw_Shutdown@@YAXXZ			; ImGui_ImplGlfw_Shutdown
PUBLIC	?ImGui_ImplGlfw_NewFrame@@YAXXZ			; ImGui_ImplGlfw_NewFrame
PUBLIC	?ImGui_ImplGlfw_MouseButtonCallback@@YAXPEAUGLFWwindow@@HHH@Z ; ImGui_ImplGlfw_MouseButtonCallback
PUBLIC	?ImGui_ImplGlfw_ScrollCallback@@YAXPEAUGLFWwindow@@NN@Z ; ImGui_ImplGlfw_ScrollCallback
PUBLIC	?ImGui_ImplGlfw_KeyCallback@@YAXPEAUGLFWwindow@@HHHH@Z ; ImGui_ImplGlfw_KeyCallback
PUBLIC	?ImGui_ImplGlfw_CharCallback@@YAXPEAUGLFWwindow@@I@Z ; ImGui_ImplGlfw_CharCallback
PUBLIC	??0ImGui_ImplGlfw_Data@@QEAA@XZ			; ImGui_ImplGlfw_Data::ImGui_ImplGlfw_Data
PUBLIC	??$IM_DELETE@UImGui_ImplGlfw_Data@@@@YAXPEAUImGui_ImplGlfw_Data@@@Z ; IM_DELETE<ImGui_ImplGlfw_Data>
PUBLIC	__JustMyCode_Default
PUBLIC	?__LINE__Var@?0??ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z@4JA ; `ImGui_ImplGlfw_Init'::`1'::__LINE__Var
PUBLIC	??_C@_0CI@MLMDDGPF@Already?5initialized?5a?5platform?5@ ; `string'
PUBLIC	??_C@_1HE@CHFHCOBB@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@ ; `string'
PUBLIC	??_C@_1JK@LOCKJLMP@?$AAi?$AAo?$AA?4?$AAB?$AAa?$AAc?$AAk?$AAe?$AAn?$AAd?$AAP?$AAl?$AAa?$AAt?$AAf@ ; `string'
PUBLIC	??_C@_0BA@LCLOGKDG@imgui_impl_glfw@		; `string'
PUBLIC	?__LINE__Var@?0??ImGui_ImplGlfw_NewFrame@@YAXXZ@4JA ; `ImGui_ImplGlfw_NewFrame'::`1'::__LINE__Var
PUBLIC	??_C@_0CK@JDHFLNGG@Did?5you?5call?5ImGui_ImplGlfw_Ini@ ; `string'
PUBLIC	??_C@_1GO@COIOAAFF@?$AAb?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAD?$AAi?$AAd@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3c888889
PUBLIC	__real@3e99999a
PUBLIC	__real@3f199999
PUBLIC	__real@3f800000
PUBLIC	__real@be99999a
PUBLIC	__real@bf199999
PUBLIC	__real@ff7fffff
EXTRN	__imp__wassert:PROC
EXTRN	?GetCurrentContext@ImGui@@YAPEAUImGuiContext@@XZ:PROC ; ImGui::GetCurrentContext
EXTRN	?GetIO@ImGui@@YAAEAUImGuiIO@@XZ:PROC		; ImGui::GetIO
EXTRN	?GetMouseCursor@ImGui@@YAHXZ:PROC		; ImGui::GetMouseCursor
EXTRN	?MemAlloc@ImGui@@YAPEAX_K@Z:PROC		; ImGui::MemAlloc
EXTRN	?MemFree@ImGui@@YAXPEAX@Z:PROC			; ImGui::MemFree
EXTRN	?AddInputCharacter@ImGuiIO@@QEAAXI@Z:PROC	; ImGuiIO::AddInputCharacter
EXTRN	glfwSetErrorCallback:PROC
EXTRN	glfwGetWindowSize:PROC
EXTRN	glfwGetFramebufferSize:PROC
EXTRN	glfwGetWindowAttrib:PROC
EXTRN	glfwGetInputMode:PROC
EXTRN	glfwSetInputMode:PROC
EXTRN	glfwGetMouseButton:PROC
EXTRN	glfwGetCursorPos:PROC
EXTRN	glfwSetCursorPos:PROC
EXTRN	glfwCreateStandardCursor:PROC
EXTRN	glfwDestroyCursor:PROC
EXTRN	glfwSetCursor:PROC
EXTRN	glfwSetKeyCallback:PROC
EXTRN	glfwSetCharCallback:PROC
EXTRN	glfwSetMouseButtonCallback:PROC
EXTRN	glfwSetScrollCallback:PROC
EXTRN	glfwGetJoystickAxes:PROC
EXTRN	glfwGetJoystickButtons:PROC
EXTRN	glfwSetClipboardString:PROC
EXTRN	glfwGetClipboardString:PROC
EXTRN	glfwGetTime:PROC
EXTRN	glfwGetWin32Window:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImVec2@@QEAA@MM@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??0ImVec2@@QEAA@MM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KUImNewWrapper@@PEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??2@YAPEAX_KUImNewWrapper@@PEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??3@YAXPEAXUImNewWrapper@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??3@YAXPEAXUImNewWrapper@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplGlfw_InitForOpenGL@@YA_NPEAUGLFWwindow@@_N@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?ImGui_ImplGlfw_InitForOpenGL@@YA_NPEAUGLFWwindow@@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplGlfw_InitForVulkan@@YA_NPEAUGLFWwindow@@_N@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?ImGui_ImplGlfw_InitForVulkan@@YA_NPEAUGLFWwindow@@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplGlfw_InitForOther@@YA_NPEAUGLFWwindow@@_N@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?ImGui_ImplGlfw_InitForOther@@YA_NPEAUGLFWwindow@@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplGlfw_Shutdown@@YAXXZ DD imagerel $LN7
	DD	imagerel $LN7+235
	DD	imagerel $unwind$?ImGui_ImplGlfw_Shutdown@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplGlfw_NewFrame@@YAXXZ DD imagerel $LN8
	DD	imagerel $LN8+458
	DD	imagerel $unwind$?ImGui_ImplGlfw_NewFrame@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplGlfw_MouseButtonCallback@@YAXPEAUGLFWwindow@@HHH@Z DD imagerel $LN5
	DD	imagerel $LN5+166
	DD	imagerel $unwind$?ImGui_ImplGlfw_MouseButtonCallback@@YAXPEAUGLFWwindow@@HHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplGlfw_ScrollCallback@@YAXPEAUGLFWwindow@@NN@Z DD imagerel $LN4
	DD	imagerel $LN4+204
	DD	imagerel $unwind$?ImGui_ImplGlfw_ScrollCallback@@YAXPEAUGLFWwindow@@NN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplGlfw_KeyCallback@@YAXPEAUGLFWwindow@@HHHH@Z DD imagerel $LN13
	DD	imagerel $LN13+521
	DD	imagerel $unwind$?ImGui_ImplGlfw_KeyCallback@@YAXPEAUGLFWwindow@@HHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplGlfw_CharCallback@@YAXPEAUGLFWwindow@@I@Z DD imagerel $LN4
	DD	imagerel $LN4+129
	DD	imagerel $unwind$?ImGui_ImplGlfw_CharCallback@@YAXPEAUGLFWwindow@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ImGui_ImplGlfw_Data@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0ImGui_ImplGlfw_Data@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplGlfw_GetBackendData@@YAPEAUImGui_ImplGlfw_Data@@XZ DD imagerel ?ImGui_ImplGlfw_GetBackendData@@YAPEAUImGui_ImplGlfw_Data@@XZ
	DD	imagerel ?ImGui_ImplGlfw_GetBackendData@@YAPEAUImGui_ImplGlfw_Data@@XZ+86
	DD	imagerel $unwind$?ImGui_ImplGlfw_GetBackendData@@YAPEAUImGui_ImplGlfw_Data@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplGlfw_GetClipboardText@@YAPEBDPEAX@Z DD imagerel ?ImGui_ImplGlfw_GetClipboardText@@YAPEBDPEAX@Z
	DD	imagerel ?ImGui_ImplGlfw_GetClipboardText@@YAPEBDPEAX@Z+53
	DD	imagerel $unwind$?ImGui_ImplGlfw_GetClipboardText@@YAPEBDPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplGlfw_SetClipboardText@@YAXPEAXPEBD@Z DD imagerel ?ImGui_ImplGlfw_SetClipboardText@@YAXPEAXPEBD@Z
	DD	imagerel ?ImGui_ImplGlfw_SetClipboardText@@YAXPEAXPEBD@Z+65
	DD	imagerel $unwind$?ImGui_ImplGlfw_SetClipboardText@@YAXPEAXPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z DD imagerel ?ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z
	DD	imagerel ?ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z+1357
	DD	imagerel $unwind$?ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z@4HA DD imagerel ?dtor$0@?0??ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z@4HA
	DD	imagerel ?dtor$0@?0??ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z@4HA+56
	DD	imagerel $unwind$?dtor$0@?0??ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$IM_DELETE@UImGui_ImplGlfw_Data@@@@YAXPEAUImGui_ImplGlfw_Data@@@Z DD imagerel $LN4
	DD	imagerel $LN4+63
	DD	imagerel $unwind$??$IM_DELETE@UImGui_ImplGlfw_Data@@@@YAXPEAUImGui_ImplGlfw_Data@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplGlfw_UpdateMousePosAndButtons@@YAXXZ DD imagerel ?ImGui_ImplGlfw_UpdateMousePosAndButtons@@YAXXZ
	DD	imagerel ?ImGui_ImplGlfw_UpdateMousePosAndButtons@@YAXXZ+469
	DD	imagerel $unwind$?ImGui_ImplGlfw_UpdateMousePosAndButtons@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplGlfw_UpdateMouseCursor@@YAXXZ DD imagerel ?ImGui_ImplGlfw_UpdateMouseCursor@@YAXXZ
	DD	imagerel ?ImGui_ImplGlfw_UpdateMouseCursor@@YAXXZ+256
	DD	imagerel $unwind$?ImGui_ImplGlfw_UpdateMouseCursor@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ImGui_ImplGlfw_UpdateGamepads@@YAXXZ DD imagerel ?ImGui_ImplGlfw_UpdateGamepads@@YAXXZ
	DD	imagerel ?ImGui_ImplGlfw_UpdateGamepads@@YAXXZ+1746
	DD	imagerel $unwind$?ImGui_ImplGlfw_UpdateGamepads@@YAXXZ
pdata	ENDS
;	COMDAT __real@ff7fffff
CONST	SEGMENT
__real@ff7fffff DD 0ff7fffffr			; -3.40282e+38
CONST	ENDS
;	COMDAT __real@bf199999
CONST	SEGMENT
__real@bf199999 DD 0bf199999r			; -0.6
CONST	ENDS
;	COMDAT __real@be99999a
CONST	SEGMENT
__real@be99999a DD 0be99999ar			; -0.3
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f199999
CONST	SEGMENT
__real@3f199999 DD 03f199999r			; 0.6
CONST	ENDS
;	COMDAT __real@3e99999a
CONST	SEGMENT
__real@3e99999a DD 03e99999ar			; 0.3
CONST	ENDS
;	COMDAT __real@3c888889
CONST	SEGMENT
__real@3c888889 DD 03c888889r			; 0.0166667
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1GO@COIOAAFF@?$AAb?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAD?$AAi?$AAd@
CONST	SEGMENT
??_C@_1GO@COIOAAFF@?$AAb?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAD?$AAi?$AAd@ DB 'b'
	DB	00H, 'd', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'D', 00H, 'i'
	DB	00H, 'd', 00H, ' ', 00H, 'y', 00H, 'o', 00H, 'u', 00H, ' ', 00H
	DB	'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'I', 00H, 'm'
	DB	00H, 'G', 00H, 'u', 00H, 'i', 00H, '_', 00H, 'I', 00H, 'm', 00H
	DB	'p', 00H, 'l', 00H, 'G', 00H, 'l', 00H, 'f', 00H, 'w', 00H, '_'
	DB	00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'F', 00H, 'o', 00H
	DB	'r', 00H, 'X', 00H, 'X', 00H, 'X', 00H, '(', 00H, ')', 00H, '?'
	DB	00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@JDHFLNGG@Did?5you?5call?5ImGui_ImplGlfw_Ini@
CONST	SEGMENT
??_C@_0CK@JDHFLNGG@Did?5you?5call?5ImGui_ImplGlfw_Ini@ DB 'Did you call I'
	DB	'mGui_ImplGlfw_InitForXXX()?', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??ImGui_ImplGlfw_NewFrame@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ImGui_ImplGlfw_NewFrame@@YAXXZ@4JA DD 0181H ; `ImGui_ImplGlfw_NewFrame'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BA@LCLOGKDG@imgui_impl_glfw@
CONST	SEGMENT
??_C@_0BA@LCLOGKDG@imgui_impl_glfw@ DB 'imgui_impl_glfw', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JK@LOCKJLMP@?$AAi?$AAo?$AA?4?$AAB?$AAa?$AAc?$AAk?$AAe?$AAn?$AAd?$AAP?$AAl?$AAa?$AAt?$AAf@
CONST	SEGMENT
??_C@_1JK@LOCKJLMP@?$AAi?$AAo?$AA?4?$AAB?$AAa?$AAc?$AAk?$AAe?$AAn?$AAd?$AAP?$AAl?$AAa?$AAt?$AAf@ DB 'i'
	DB	00H, 'o', 00H, '.', 00H, 'B', 00H, 'a', 00H, 'c', 00H, 'k', 00H
	DB	'e', 00H, 'n', 00H, 'd', 00H, 'P', 00H, 'l', 00H, 'a', 00H, 't'
	DB	00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'U', 00H, 's', 00H
	DB	'e', 00H, 'r', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'A', 00H, 'l', 00H, 'r', 00H, 'e'
	DB	00H, 'a', 00H, 'd', 00H, 'y', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, 'd', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'p', 00H
	DB	'l', 00H, 'a', 00H, 't', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm'
	DB	00H, ' ', 00H, 'b', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'e', 00H
	DB	'n', 00H, 'd', 00H, '!', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HE@CHFHCOBB@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
CONST	SEGMENT
??_C@_1HE@CHFHCOBB@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'd', 00H, 'e', 00H, 'v', 00H, '\', 00H
	DB	'R', 00H, 'a', 00H, 'i', 00H, 's', 00H, 'i', 00H, 'n', 00H, '\'
	DB	00H, 'R', 00H, 'a', 00H, 'i', 00H, 's', 00H, 'i', 00H, 'n', 00H
	DB	'\', 00H, 's', 00H, 'r', 00H, 'c', 00H, '\', 00H, 'R', 00H, 'a'
	DB	00H, 'i', 00H, 's', 00H, 'i', 00H, 'n', 00H, '\', 00H, 'i', 00H
	DB	'm', 00H, 'g', 00H, 'u', 00H, 'i', 00H, '\', 00H, 'i', 00H, 'm'
	DB	00H, 'g', 00H, 'u', 00H, 'i', 00H, '_', 00H, 'i', 00H, 'm', 00H
	DB	'p', 00H, 'l', 00H, '_', 00H, 'g', 00H, 'l', 00H, 'f', 00H, 'w'
	DB	00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@MLMDDGPF@Already?5initialized?5a?5platform?5@
CONST	SEGMENT
??_C@_0CI@MLMDDGPF@Already?5initialized?5a?5platform?5@ DB 'Already initi'
	DB	'alized a platform backend!', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z@4JA DD 0a7H ; `ImGui_ImplGlfw_Init'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02aH
	DW	06b9H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplGlfw_UpdateGamepads@@YAXXZ DD 025053119H
	DD	010a230fH
	DD	070030041H
	DD	05002H
	DD	imagerel __GSHandlerCheck
	DD	01f8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ImGui_ImplGlfw_UpdateGamepads@@YAXXZ$rtcName$0 DB 061H	; ImGui_ImplGlfw_UpdateGamepads
	DB	078H
	DB	065H
	DB	073H
	DB	05fH
	DB	063H
	DB	06fH
	DB	075H
	DB	06eH
	DB	074H
	DB	00H
	ORG $+5
?ImGui_ImplGlfw_UpdateGamepads@@YAXXZ$rtcName$1 DB 062H	; ImGui_ImplGlfw_UpdateGamepads
	DB	075H
	DB	074H
	DB	074H
	DB	06fH
	DB	06eH
	DB	073H
	DB	05fH
	DB	063H
	DB	06fH
	DB	075H
	DB	06eH
	DB	074H
	DB	00H
	ORG $+2
?ImGui_ImplGlfw_UpdateGamepads@@YAXXZ$rtcVarDesc DD 064H ; ImGui_ImplGlfw_UpdateGamepads
	DD	04H
	DQ	FLAT:?ImGui_ImplGlfw_UpdateGamepads@@YAXXZ$rtcName$1
	DD	044H
	DD	04H
	DQ	FLAT:?ImGui_ImplGlfw_UpdateGamepads@@YAXXZ$rtcName$0
	ORG $+96
?ImGui_ImplGlfw_UpdateGamepads@@YAXXZ$rtcFrameData DD 02H ; ImGui_ImplGlfw_UpdateGamepads
	DD	00H
	DQ	FLAT:?ImGui_ImplGlfw_UpdateGamepads@@YAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplGlfw_UpdateMouseCursor@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030029H
	DD	05002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02aH
	DW	01bcH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplGlfw_UpdateMousePosAndButtons@@YAXXZ DD 025053119H
	DD	010a230fH
	DD	070030041H
	DD	05002H
	DD	imagerel __GSHandlerCheck
	DD	01f8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ImGui_ImplGlfw_UpdateMousePosAndButtons@@YAXXZ$rtcName$0 DB 06dH ; ImGui_ImplGlfw_UpdateMousePosAndButtons
	DB	06fH
	DB	075H
	DB	073H
	DB	065H
	DB	05fH
	DB	070H
	DB	06fH
	DB	073H
	DB	05fH
	DB	062H
	DB	061H
	DB	063H
	DB	06bH
	DB	075H
	DB	070H
	DB	00H
	ORG $+7
?ImGui_ImplGlfw_UpdateMousePosAndButtons@@YAXXZ$rtcName$1 DB 06dH ; ImGui_ImplGlfw_UpdateMousePosAndButtons
	DB	06fH
	DB	075H
	DB	073H
	DB	065H
	DB	05fH
	DB	078H
	DB	00H
?ImGui_ImplGlfw_UpdateMousePosAndButtons@@YAXXZ$rtcName$2 DB 06dH ; ImGui_ImplGlfw_UpdateMousePosAndButtons
	DB	06fH
	DB	075H
	DB	073H
	DB	065H
	DB	05fH
	DB	079H
	DB	00H
	ORG $+8
?ImGui_ImplGlfw_UpdateMousePosAndButtons@@YAXXZ$rtcVarDesc DD 0e8H ; ImGui_ImplGlfw_UpdateMousePosAndButtons
	DD	08H
	DQ	FLAT:?ImGui_ImplGlfw_UpdateMousePosAndButtons@@YAXXZ$rtcName$2
	DD	0c8H
	DD	08H
	DQ	FLAT:?ImGui_ImplGlfw_UpdateMousePosAndButtons@@YAXXZ$rtcName$1
	DD	088H
	DD	08H
	DQ	FLAT:?ImGui_ImplGlfw_UpdateMousePosAndButtons@@YAXXZ$rtcName$0
	ORG $+144
?ImGui_ImplGlfw_UpdateMousePosAndButtons@@YAXXZ$rtcFrameData DD 03H ; ImGui_ImplGlfw_UpdateMousePosAndButtons
	DD	00H
	DQ	FLAT:?ImGui_ImplGlfw_UpdateMousePosAndButtons@@YAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$IM_DELETE@UImGui_ImplGlfw_Data@@@@YAXPEAUImGui_ImplGlfw_Data@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z DB 06H
	DB	00H
	DB	00H
	DB	0b9H, 02H
	DB	02H
	DB	'p'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z
	DD	imagerel $ip2state$?ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z DD 025051c11H
	DD	0117231cH
	DD	07010003dH
	DD	0500fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplGlfw_SetClipboardText@@YAXPEAXPEBD@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplGlfw_GetClipboardText@@YAPEBDPEAX@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplGlfw_GetBackendData@@YAPEAUImGui_ImplGlfw_Data@@XZ DD 025050f01H
	DD	010a230fH
	DD	07003001fH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImGui_ImplGlfw_Data@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplGlfw_CharCallback@@YAXPEAUGLFWwindow@@I@Z DD 025051701H
	DD	01122317H
	DD	0700b0025H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplGlfw_KeyCallback@@YAXPEAUGLFWwindow@@HHHH@Z DD 035052101H
	DD	011c3321H
	DD	070150027H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplGlfw_ScrollCallback@@YAXPEAUGLFWwindow@@NN@Z DD 025051f01H
	DD	011a231fH
	DD	070130025H
	DD	05012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplGlfw_MouseButtonCallback@@YAXPEAUGLFWwindow@@HHH@Z DD 025052101H
	DD	011c2321H
	DD	070150021H
	DD	05014H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	02aH
	DW	01b1H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplGlfw_NewFrame@@YAXXZ DD 025053119H
	DD	010a230fH
	DD	070030041H
	DD	05002H
	DD	imagerel __GSHandlerCheck
	DD	01f8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ImGui_ImplGlfw_NewFrame@@YAXXZ$rtcName$0 DB 077H	; ImGui_ImplGlfw_NewFrame
	DB	00H
	ORG $+2
?ImGui_ImplGlfw_NewFrame@@YAXXZ$rtcName$1 DB 068H	; ImGui_ImplGlfw_NewFrame
	DB	00H
	ORG $+2
?ImGui_ImplGlfw_NewFrame@@YAXXZ$rtcName$2 DB 064H	; ImGui_ImplGlfw_NewFrame
	DB	069H
	DB	073H
	DB	070H
	DB	06cH
	DB	061H
	DB	079H
	DB	05fH
	DB	077H
	DB	00H
	ORG $+6
?ImGui_ImplGlfw_NewFrame@@YAXXZ$rtcName$3 DB 064H	; ImGui_ImplGlfw_NewFrame
	DB	069H
	DB	073H
	DB	070H
	DB	06cH
	DB	061H
	DB	079H
	DB	05fH
	DB	068H
	DB	00H
	ORG $+14
?ImGui_ImplGlfw_NewFrame@@YAXXZ$rtcVarDesc DD 0c4H	; ImGui_ImplGlfw_NewFrame
	DD	04H
	DQ	FLAT:?ImGui_ImplGlfw_NewFrame@@YAXXZ$rtcName$3
	DD	0a4H
	DD	04H
	DQ	FLAT:?ImGui_ImplGlfw_NewFrame@@YAXXZ$rtcName$2
	DD	084H
	DD	04H
	DQ	FLAT:?ImGui_ImplGlfw_NewFrame@@YAXXZ$rtcName$1
	DD	064H
	DD	04H
	DQ	FLAT:?ImGui_ImplGlfw_NewFrame@@YAXXZ$rtcName$0
	ORG $+192
?ImGui_ImplGlfw_NewFrame@@YAXXZ$rtcFrameData DD 04H	; ImGui_ImplGlfw_NewFrame
	DD	00H
	DQ	FLAT:?ImGui_ImplGlfw_NewFrame@@YAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplGlfw_Shutdown@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030029H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplGlfw_InitForOther@@YA_NPEAUGLFWwindow@@_N@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplGlfw_InitForVulkan@@YA_NPEAUGLFWwindow@@_N@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ImGui_ImplGlfw_InitForOpenGL@@YA_NPEAUGLFWwindow@@_N@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??3@YAXPEAXUImNewWrapper@@0@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KUImNewWrapper@@PEAX@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ImVec2@@QEAA@MM@Z DD 025031b01H
	DD	0b216231bH
	DD	05012H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImGui_ImplGlfw_UpdateGamepads@@YAXXZ
_TEXT	SEGMENT
io$ = 8
axes_count$ = 36
buttons_count$ = 68
axes$ = 104
buttons$ = 136
v$5 = 164
v$6 = 196
v$7 = 228
v$8 = 260
tv252 = 468
tv238 = 468
tv224 = 468
tv210 = 468
__$ArrayPad$ = 472
?ImGui_ImplGlfw_UpdateGamepads@@YAXXZ PROC		; ImGui_ImplGlfw_UpdateGamepads, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_impl_glfw.cpp
; Line 348
	push	rbp
	push	rdi
	sub	rsp, 520				; 00000208H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__85E6A71A_imgui_impl_glfw@cpp
	call	__CheckForDebuggerJustMyCode
; Line 349
	call	?GetIO@ImGui@@YAAEAUImGuiIO@@XZ		; ImGui::GetIO
	mov	QWORD PTR io$[rbp], rax
; Line 350
	mov	rax, QWORD PTR io$[rbp]
	add	rax, 828				; 0000033cH
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 84					; 00000054H
	rep stosb
; Line 351
	mov	rax, QWORD PTR io$[rbp]
	mov	eax, DWORD PTR [rax]
	and	eax, 2
	test	eax, eax
	jne	SHORT $LN2@ImGui_Impl
; Line 352
	jmp	$LN1@ImGui_Impl
$LN2@ImGui_Impl:
; Line 357
	mov	DWORD PTR axes_count$[rbp], 0
	mov	DWORD PTR buttons_count$[rbp], 0
; Line 358
	lea	rdx, QWORD PTR axes_count$[rbp]
	xor	ecx, ecx
	call	glfwGetJoystickAxes
	mov	QWORD PTR axes$[rbp], rax
; Line 359
	lea	rdx, QWORD PTR buttons_count$[rbp]
	xor	ecx, ecx
	call	glfwGetJoystickButtons
	mov	QWORD PTR buttons$[rbp], rax
; Line 360
	cmp	DWORD PTR buttons_count$[rbp], 0
	jle	SHORT $LN3@ImGui_Impl
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR buttons$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 1
	jne	SHORT $LN3@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
$LN3@ImGui_Impl:
; Line 361
	cmp	DWORD PTR buttons_count$[rbp], 1
	jle	SHORT $LN4@ImGui_Impl
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR buttons$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 1
	jne	SHORT $LN4@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
$LN4@ImGui_Impl:
; Line 362
	cmp	DWORD PTR buttons_count$[rbp], 2
	jle	SHORT $LN5@ImGui_Impl
	mov	eax, 1
	imul	rax, rax, 2
	mov	rcx, QWORD PTR buttons$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 1
	jne	SHORT $LN5@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 3
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
$LN5@ImGui_Impl:
; Line 363
	cmp	DWORD PTR buttons_count$[rbp], 3
	jle	SHORT $LN6@ImGui_Impl
	mov	eax, 1
	imul	rax, rax, 3
	mov	rcx, QWORD PTR buttons$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 1
	jne	SHORT $LN6@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 2
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
$LN6@ImGui_Impl:
; Line 364
	cmp	DWORD PTR buttons_count$[rbp], 13
	jle	SHORT $LN7@ImGui_Impl
	mov	eax, 1
	imul	rax, rax, 13
	mov	rcx, QWORD PTR buttons$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 1
	jne	SHORT $LN7@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 4
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
$LN7@ImGui_Impl:
; Line 365
	cmp	DWORD PTR buttons_count$[rbp], 11
	jle	SHORT $LN8@ImGui_Impl
	mov	eax, 1
	imul	rax, rax, 11
	mov	rcx, QWORD PTR buttons$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 1
	jne	SHORT $LN8@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 5
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
$LN8@ImGui_Impl:
; Line 366
	cmp	DWORD PTR buttons_count$[rbp], 10
	jle	SHORT $LN9@ImGui_Impl
	mov	eax, 1
	imul	rax, rax, 10
	mov	rcx, QWORD PTR buttons$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 1
	jne	SHORT $LN9@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 6
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
$LN9@ImGui_Impl:
; Line 367
	cmp	DWORD PTR buttons_count$[rbp], 12
	jle	SHORT $LN10@ImGui_Impl
	mov	eax, 1
	imul	rax, rax, 12
	mov	rcx, QWORD PTR buttons$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 1
	jne	SHORT $LN10@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 7
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
$LN10@ImGui_Impl:
; Line 368
	cmp	DWORD PTR buttons_count$[rbp], 4
	jle	SHORT $LN11@ImGui_Impl
	mov	eax, 1
	imul	rax, rax, 4
	mov	rcx, QWORD PTR buttons$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 1
	jne	SHORT $LN11@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 12
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
$LN11@ImGui_Impl:
; Line 369
	cmp	DWORD PTR buttons_count$[rbp], 5
	jle	SHORT $LN12@ImGui_Impl
	mov	eax, 1
	imul	rax, rax, 5
	mov	rcx, QWORD PTR buttons$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 1
	jne	SHORT $LN12@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 13
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
$LN12@ImGui_Impl:
; Line 370
	cmp	DWORD PTR buttons_count$[rbp], 4
	jle	SHORT $LN13@ImGui_Impl
	mov	eax, 1
	imul	rax, rax, 4
	mov	rcx, QWORD PTR buttons$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 1
	jne	SHORT $LN13@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 14
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
$LN13@ImGui_Impl:
; Line 371
	cmp	DWORD PTR buttons_count$[rbp], 5
	jle	SHORT $LN14@ImGui_Impl
	mov	eax, 1
	imul	rax, rax, 5
	mov	rcx, QWORD PTR buttons$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 1
	jne	SHORT $LN14@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 15
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax+828], xmm0
$LN14@ImGui_Impl:
; Line 372
	cmp	DWORD PTR axes_count$[rbp], 0
	jle	SHORT $LN26@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR axes$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax]
	movss	DWORD PTR tv210[rbp], xmm0
	jmp	SHORT $LN27@ImGui_Impl
$LN26@ImGui_Impl:
	movss	xmm0, DWORD PTR __real@be99999a
	movss	DWORD PTR tv210[rbp], xmm0
$LN27@ImGui_Impl:
	movss	xmm0, DWORD PTR tv210[rbp]
	movss	DWORD PTR v$5[rbp], xmm0
	movss	xmm0, DWORD PTR v$5[rbp]
	subss	xmm0, DWORD PTR __real@be99999a
	divss	xmm0, DWORD PTR __real@bf199999
	movss	DWORD PTR v$5[rbp], xmm0
	movss	xmm0, DWORD PTR v$5[rbp]
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	SHORT $LN15@ImGui_Impl
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR v$5[rbp], xmm0
$LN15@ImGui_Impl:
	mov	eax, 4
	imul	rax, rax, 8
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR v$5[rbp]
	comiss	xmm0, DWORD PTR [rcx+rax+828]
	jbe	SHORT $LN16@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 8
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR v$5[rbp]
	movss	DWORD PTR [rcx+rax+828], xmm0
$LN16@ImGui_Impl:
; Line 373
	cmp	DWORD PTR axes_count$[rbp], 0
	jle	SHORT $LN28@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR axes$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax]
	movss	DWORD PTR tv224[rbp], xmm0
	jmp	SHORT $LN29@ImGui_Impl
$LN28@ImGui_Impl:
	movss	xmm0, DWORD PTR __real@3e99999a
	movss	DWORD PTR tv224[rbp], xmm0
$LN29@ImGui_Impl:
	movss	xmm0, DWORD PTR tv224[rbp]
	movss	DWORD PTR v$6[rbp], xmm0
	movss	xmm0, DWORD PTR v$6[rbp]
	subss	xmm0, DWORD PTR __real@3e99999a
	divss	xmm0, DWORD PTR __real@3f199999
	movss	DWORD PTR v$6[rbp], xmm0
	movss	xmm0, DWORD PTR v$6[rbp]
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	SHORT $LN17@ImGui_Impl
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR v$6[rbp], xmm0
$LN17@ImGui_Impl:
	mov	eax, 4
	imul	rax, rax, 9
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR v$6[rbp]
	comiss	xmm0, DWORD PTR [rcx+rax+828]
	jbe	SHORT $LN18@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 9
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR v$6[rbp]
	movss	DWORD PTR [rcx+rax+828], xmm0
$LN18@ImGui_Impl:
; Line 374
	cmp	DWORD PTR axes_count$[rbp], 1
	jle	SHORT $LN30@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR axes$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax]
	movss	DWORD PTR tv238[rbp], xmm0
	jmp	SHORT $LN31@ImGui_Impl
$LN30@ImGui_Impl:
	movss	xmm0, DWORD PTR __real@3e99999a
	movss	DWORD PTR tv238[rbp], xmm0
$LN31@ImGui_Impl:
	movss	xmm0, DWORD PTR tv238[rbp]
	movss	DWORD PTR v$7[rbp], xmm0
	movss	xmm0, DWORD PTR v$7[rbp]
	subss	xmm0, DWORD PTR __real@3e99999a
	divss	xmm0, DWORD PTR __real@3f199999
	movss	DWORD PTR v$7[rbp], xmm0
	movss	xmm0, DWORD PTR v$7[rbp]
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	SHORT $LN19@ImGui_Impl
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR v$7[rbp], xmm0
$LN19@ImGui_Impl:
	mov	eax, 4
	imul	rax, rax, 10
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR v$7[rbp]
	comiss	xmm0, DWORD PTR [rcx+rax+828]
	jbe	SHORT $LN20@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 10
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR v$7[rbp]
	movss	DWORD PTR [rcx+rax+828], xmm0
$LN20@ImGui_Impl:
; Line 375
	cmp	DWORD PTR axes_count$[rbp], 1
	jle	SHORT $LN32@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR axes$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax]
	movss	DWORD PTR tv252[rbp], xmm0
	jmp	SHORT $LN33@ImGui_Impl
$LN32@ImGui_Impl:
	movss	xmm0, DWORD PTR __real@be99999a
	movss	DWORD PTR tv252[rbp], xmm0
$LN33@ImGui_Impl:
	movss	xmm0, DWORD PTR tv252[rbp]
	movss	DWORD PTR v$8[rbp], xmm0
	movss	xmm0, DWORD PTR v$8[rbp]
	subss	xmm0, DWORD PTR __real@be99999a
	divss	xmm0, DWORD PTR __real@bf199999
	movss	DWORD PTR v$8[rbp], xmm0
	movss	xmm0, DWORD PTR v$8[rbp]
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	SHORT $LN21@ImGui_Impl
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR v$8[rbp], xmm0
$LN21@ImGui_Impl:
	mov	eax, 4
	imul	rax, rax, 11
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR v$8[rbp]
	comiss	xmm0, DWORD PTR [rcx+rax+828]
	jbe	SHORT $LN22@ImGui_Impl
	mov	eax, 4
	imul	rax, rax, 11
	mov	rcx, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR v$8[rbp]
	movss	DWORD PTR [rcx+rax+828], xmm0
$LN22@ImGui_Impl:
; Line 378
	cmp	DWORD PTR axes_count$[rbp], 0
	jle	SHORT $LN23@ImGui_Impl
	cmp	DWORD PTR buttons_count$[rbp], 0
	jle	SHORT $LN23@ImGui_Impl
; Line 379
	mov	rax, QWORD PTR io$[rbp]
	mov	eax, DWORD PTR [rax+4]
	or	eax, 1
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+4], eax
	jmp	SHORT $LN24@ImGui_Impl
$LN23@ImGui_Impl:
; Line 381
	mov	rax, QWORD PTR io$[rbp]
	mov	eax, DWORD PTR [rax+4]
	and	eax, -2
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+4], eax
$LN24@ImGui_Impl:
$LN1@ImGui_Impl:
; Line 382
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?ImGui_ImplGlfw_UpdateGamepads@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+488]
	pop	rdi
	pop	rbp
	ret	0
?ImGui_ImplGlfw_UpdateGamepads@@YAXXZ ENDP		; ImGui_ImplGlfw_UpdateGamepads
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImGui_ImplGlfw_UpdateMouseCursor@@YAXXZ
_TEXT	SEGMENT
io$ = 8
bd$ = 40
imgui_cursor$ = 68
tv95 = 280
?ImGui_ImplGlfw_UpdateMouseCursor@@YAXXZ PROC		; ImGui_ImplGlfw_UpdateMouseCursor, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_impl_glfw.cpp
; Line 326
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__85E6A71A_imgui_impl_glfw@cpp
	call	__CheckForDebuggerJustMyCode
; Line 327
	call	?GetIO@ImGui@@YAAEAUImGuiIO@@XZ		; ImGui::GetIO
	mov	QWORD PTR io$[rbp], rax
; Line 328
	call	?ImGui_ImplGlfw_GetBackendData@@YAPEAUImGui_ImplGlfw_Data@@XZ ; ImGui_ImplGlfw_GetBackendData
	mov	QWORD PTR bd$[rbp], rax
; Line 329
	mov	rax, QWORD PTR io$[rbp]
	mov	eax, DWORD PTR [rax]
	and	eax, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN3@ImGui_Impl
	mov	edx, 208897				; 00033001H
	mov	rax, QWORD PTR bd$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	glfwGetInputMode
	cmp	eax, 212995				; 00034003H
	jne	SHORT $LN2@ImGui_Impl
$LN3@ImGui_Impl:
; Line 330
	jmp	$LN1@ImGui_Impl
$LN2@ImGui_Impl:
; Line 332
	call	?GetMouseCursor@ImGui@@YAHXZ		; ImGui::GetMouseCursor
	mov	DWORD PTR imgui_cursor$[rbp], eax
; Line 333
	cmp	DWORD PTR imgui_cursor$[rbp], -1
	je	SHORT $LN6@ImGui_Impl
	mov	rax, QWORD PTR io$[rbp]
	movzx	eax, BYTE PTR [rax+192]
	test	eax, eax
	je	SHORT $LN4@ImGui_Impl
$LN6@ImGui_Impl:
; Line 336
	mov	r8d, 212994				; 00034002H
	mov	edx, 208897				; 00033001H
	mov	rax, QWORD PTR bd$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	glfwSetInputMode
; Line 337
	jmp	SHORT $LN5@ImGui_Impl
$LN4@ImGui_Impl:
; Line 342
	movsxd	rax, DWORD PTR imgui_cursor$[rbp]
	mov	rcx, QWORD PTR bd$[rbp]
	cmp	QWORD PTR [rcx+rax*8+32], 0
	je	SHORT $LN8@ImGui_Impl
	movsxd	rax, DWORD PTR imgui_cursor$[rbp]
	mov	rcx, QWORD PTR bd$[rbp]
	mov	rax, QWORD PTR [rcx+rax*8+32]
	mov	QWORD PTR tv95[rbp], rax
	jmp	SHORT $LN9@ImGui_Impl
$LN8@ImGui_Impl:
	mov	eax, 8
	imul	rax, rax, 0
	mov	rcx, QWORD PTR bd$[rbp]
	mov	rax, QWORD PTR [rcx+rax+32]
	mov	QWORD PTR tv95[rbp], rax
$LN9@ImGui_Impl:
	mov	rdx, QWORD PTR tv95[rbp]
	mov	rax, QWORD PTR bd$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	glfwSetCursor
; Line 343
	mov	r8d, 212993				; 00034001H
	mov	edx, 208897				; 00033001H
	mov	rax, QWORD PTR bd$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	glfwSetInputMode
$LN5@ImGui_Impl:
$LN1@ImGui_Impl:
; Line 345
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?ImGui_ImplGlfw_UpdateMouseCursor@@YAXXZ ENDP		; ImGui_ImplGlfw_UpdateMouseCursor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImGui_ImplGlfw_UpdateMousePosAndButtons@@YAXXZ
_TEXT	SEGMENT
bd$ = 8
io$ = 40
i$6 = 68
mouse_pos_backup$ = 104
focused$ = 132
mouse_x$7 = 168
mouse_y$8 = 200
$T9 = 420
$T10 = 452
tv134 = 468
tv83 = 468
__$ArrayPad$ = 472
?ImGui_ImplGlfw_UpdateMousePosAndButtons@@YAXXZ PROC	; ImGui_ImplGlfw_UpdateMousePosAndButtons, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_impl_glfw.cpp
; Line 290
	push	rbp
	push	rdi
	sub	rsp, 520				; 00000208H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__85E6A71A_imgui_impl_glfw@cpp
	call	__CheckForDebuggerJustMyCode
; Line 291
	call	?ImGui_ImplGlfw_GetBackendData@@YAPEAUImGui_ImplGlfw_Data@@XZ ; ImGui_ImplGlfw_GetBackendData
	mov	QWORD PTR bd$[rbp], rax
; Line 294
	call	?GetIO@ImGui@@YAAEAUImGuiIO@@XZ		; ImGui::GetIO
	mov	QWORD PTR io$[rbp], rax
; Line 295
	mov	DWORD PTR i$6[rbp], 0
	jmp	SHORT $LN4@ImGui_Impl
$LN2@ImGui_Impl:
	mov	eax, DWORD PTR i$6[rbp]
	inc	eax
	mov	DWORD PTR i$6[rbp], eax
$LN4@ImGui_Impl:
	cmp	DWORD PTR i$6[rbp], 5
	jge	SHORT $LN3@ImGui_Impl
; Line 298
	movsxd	rax, DWORD PTR i$6[rbp]
	mov	rcx, QWORD PTR bd$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+24]
	test	eax, eax
	jne	SHORT $LN9@ImGui_Impl
	mov	edx, DWORD PTR i$6[rbp]
	mov	rax, QWORD PTR bd$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	glfwGetMouseButton
	test	eax, eax
	jne	SHORT $LN9@ImGui_Impl
	mov	DWORD PTR tv83[rbp], 0
	jmp	SHORT $LN10@ImGui_Impl
$LN9@ImGui_Impl:
	mov	DWORD PTR tv83[rbp], 1
$LN10@ImGui_Impl:
	movsxd	rax, DWORD PTR i$6[rbp]
	mov	rcx, QWORD PTR io$[rbp]
	movzx	edx, BYTE PTR tv83[rbp]
	mov	BYTE PTR [rcx+rax+296], dl
; Line 299
	movsxd	rax, DWORD PTR i$6[rbp]
	mov	rcx, QWORD PTR bd$[rbp]
	mov	BYTE PTR [rcx+rax+24], 0
; Line 300
	jmp	SHORT $LN2@ImGui_Impl
$LN3@ImGui_Impl:
; Line 303
	mov	rax, QWORD PTR io$[rbp]
	mov	rax, QWORD PTR [rax+288]
	mov	QWORD PTR mouse_pos_backup$[rbp], rax
; Line 304
	movss	xmm2, DWORD PTR __real@ff7fffff
	movss	xmm1, DWORD PTR __real@ff7fffff
	lea	rcx, QWORD PTR $T9[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR io$[rbp]
	mov	QWORD PTR [rcx+288], rax
; Line 308
	mov	edx, 131073				; 00020001H
	mov	rax, QWORD PTR bd$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	glfwGetWindowAttrib
	test	eax, eax
	je	SHORT $LN11@ImGui_Impl
	mov	BYTE PTR tv134[rbp], 1
	jmp	SHORT $LN12@ImGui_Impl
$LN11@ImGui_Impl:
	mov	BYTE PTR tv134[rbp], 0
$LN12@ImGui_Impl:
	movzx	eax, BYTE PTR tv134[rbp]
	mov	BYTE PTR focused$[rbp], al
; Line 310
	movzx	eax, BYTE PTR focused$[rbp]
	test	eax, eax
	je	SHORT $LN5@ImGui_Impl
; Line 312
	mov	rax, QWORD PTR io$[rbp]
	movzx	eax, BYTE PTR [rax+915]
	test	eax, eax
	je	SHORT $LN6@ImGui_Impl
; Line 314
	cvtss2sd xmm0, DWORD PTR mouse_pos_backup$[rbp+4]
	cvtss2sd xmm1, DWORD PTR mouse_pos_backup$[rbp]
	movaps	xmm2, xmm0
	mov	rax, QWORD PTR bd$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	glfwSetCursorPos
; Line 315
	jmp	SHORT $LN7@ImGui_Impl
$LN6@ImGui_Impl:
; Line 319
	lea	r8, QWORD PTR mouse_y$8[rbp]
	lea	rdx, QWORD PTR mouse_x$7[rbp]
	mov	rax, QWORD PTR bd$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	glfwGetCursorPos
; Line 320
	cvtsd2ss xmm0, QWORD PTR mouse_y$8[rbp]
	cvtsd2ss xmm1, QWORD PTR mouse_x$7[rbp]
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR $T10[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR io$[rbp]
	mov	QWORD PTR [rcx+288], rax
$LN7@ImGui_Impl:
$LN5@ImGui_Impl:
; Line 323
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?ImGui_ImplGlfw_UpdateMousePosAndButtons@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+488]
	pop	rdi
	pop	rbp
	ret	0
?ImGui_ImplGlfw_UpdateMousePosAndButtons@@YAXXZ ENDP	; ImGui_ImplGlfw_UpdateMousePosAndButtons
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$IM_DELETE@UImGui_ImplGlfw_Data@@@@YAXPEAUImGui_ImplGlfw_Data@@@Z
_TEXT	SEGMENT
p$ = 224
??$IM_DELETE@UImGui_ImplGlfw_Data@@@@YAXPEAUImGui_ImplGlfw_Data@@@Z PROC ; IM_DELETE<ImGui_ImplGlfw_Data>, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1653
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	cmp	QWORD PTR p$[rbp], 0
	je	SHORT $LN2@IM_DELETE
	mov	rcx, QWORD PTR p$[rbp]
	call	?MemFree@ImGui@@YAXPEAX@Z		; ImGui::MemFree
$LN2@IM_DELETE:
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$IM_DELETE@UImGui_ImplGlfw_Data@@@@YAXPEAUImGui_ImplGlfw_Data@@@Z ENDP ; IM_DELETE<ImGui_ImplGlfw_Data>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z
_TEXT	SEGMENT
io$ = 8
bd$ = 40
prev_error_callback$ = 72
$T1 = 296
$T2 = 328
$T3 = 360
$T4 = 392
$T5 = 420
tv89 = 440
window$ = 480
install_callbacks$ = 488
client_api$ = 496
?ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z PROC ; ImGui_ImplGlfw_Init, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_impl_glfw.cpp
; Line 167
	mov	DWORD PTR [rsp+24], r8d
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 488				; 000001e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__85E6A71A_imgui_impl_glfw@cpp
	call	__CheckForDebuggerJustMyCode
; Line 168
	call	?GetIO@ImGui@@YAAEAUImGuiIO@@XZ		; ImGui::GetIO
	mov	QWORD PTR io$[rbp], rax
; Line 169
	mov	rax, QWORD PTR io$[rbp]
	cmp	QWORD PTR [rax+224], 0
	jne	SHORT $LN4@ImGui_Impl
	lea	rax, OFFSET FLAT:??_C@_0CI@MLMDDGPF@Already?5initialized?5a?5platform?5@
	test	rax, rax
	jne	SHORT $LN5@ImGui_Impl
$LN4@ImGui_Impl:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z@4JA
	add	eax, 2
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1HE@CHFHCOBB@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1JK@LOCKJLMP@?$AAi?$AAo?$AA?4?$AAB?$AAa?$AAc?$AAk?$AAe?$AAn?$AAd?$AAP?$AAl?$AAa?$AAt?$AAf@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN5@ImGui_Impl:
; Line 172
	mov	ecx, 144				; 00000090H
	call	?MemAlloc@ImGui@@YAPEAX_K@Z		; ImGui::MemAlloc
	mov	QWORD PTR $T3[rbp], rax
	lea	rax, QWORD PTR $T5[rbp]
	mov	QWORD PTR $T4[rbp], rax
	mov	r8, QWORD PTR $T3[rbp]
	mov	rax, QWORD PTR $T4[rbp]
	movzx	edx, BYTE PTR [rax]
	mov	ecx, 144				; 00000090H
	call	??2@YAPEAX_KUImNewWrapper@@PEAX@Z	; operator new
	mov	QWORD PTR $T2[rbp], rax
	cmp	QWORD PTR $T2[rbp], 0
	je	SHORT $LN6@ImGui_Impl
	mov	rcx, QWORD PTR $T2[rbp]
	call	??0ImGui_ImplGlfw_Data@@QEAA@XZ		; ImGui_ImplGlfw_Data::ImGui_ImplGlfw_Data
	mov	QWORD PTR tv89[rbp], rax
	jmp	SHORT $LN7@ImGui_Impl
$LN6@ImGui_Impl:
	mov	QWORD PTR tv89[rbp], 0
$LN7@ImGui_Impl:
	mov	rax, QWORD PTR tv89[rbp]
	mov	QWORD PTR $T1[rbp], rax
	mov	rax, QWORD PTR $T1[rbp]
	mov	QWORD PTR bd$[rbp], rax
; Line 173
	mov	rax, QWORD PTR io$[rbp]
	mov	rcx, QWORD PTR bd$[rbp]
	mov	QWORD PTR [rax+224], rcx
; Line 174
	mov	rax, QWORD PTR io$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BA@LCLOGKDG@imgui_impl_glfw@
	mov	QWORD PTR [rax+208], rcx
; Line 175
	mov	rax, QWORD PTR io$[rbp]
	mov	eax, DWORD PTR [rax+4]
	or	eax, 2
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+4], eax
; Line 176
	mov	rax, QWORD PTR io$[rbp]
	mov	eax, DWORD PTR [rax+4]
	or	eax, 4
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+4], eax
; Line 178
	mov	rax, QWORD PTR bd$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 179
	mov	rax, QWORD PTR bd$[rbp]
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rax+16], xmm0
; Line 182
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 258		; 00000102H
; Line 183
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 263		; 00000107H
; Line 184
	mov	eax, 4
	imul	rax, rax, 2
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 262		; 00000106H
; Line 185
	mov	eax, 4
	imul	rax, rax, 3
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 265		; 00000109H
; Line 186
	mov	eax, 4
	imul	rax, rax, 4
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 264		; 00000108H
; Line 187
	mov	eax, 4
	imul	rax, rax, 5
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 266		; 0000010aH
; Line 188
	mov	eax, 4
	imul	rax, rax, 6
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 267		; 0000010bH
; Line 189
	mov	eax, 4
	imul	rax, rax, 7
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 268		; 0000010cH
; Line 190
	mov	eax, 4
	imul	rax, rax, 8
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 269		; 0000010dH
; Line 191
	mov	eax, 4
	imul	rax, rax, 9
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 260		; 00000104H
; Line 192
	mov	eax, 4
	imul	rax, rax, 10
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 261		; 00000105H
; Line 193
	mov	eax, 4
	imul	rax, rax, 11
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 259		; 00000103H
; Line 194
	mov	eax, 4
	imul	rax, rax, 12
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 32		; 00000020H
; Line 195
	mov	eax, 4
	imul	rax, rax, 13
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 257		; 00000101H
; Line 196
	mov	eax, 4
	imul	rax, rax, 14
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 256		; 00000100H
; Line 197
	mov	eax, 4
	imul	rax, rax, 15
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 335		; 0000014fH
; Line 198
	mov	eax, 4
	imul	rax, rax, 16
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 65		; 00000041H
; Line 199
	mov	eax, 4
	imul	rax, rax, 17
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 67		; 00000043H
; Line 200
	mov	eax, 4
	imul	rax, rax, 18
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 86		; 00000056H
; Line 201
	mov	eax, 4
	imul	rax, rax, 19
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 88		; 00000058H
; Line 202
	mov	eax, 4
	imul	rax, rax, 20
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 89		; 00000059H
; Line 203
	mov	eax, 4
	imul	rax, rax, 21
	mov	rcx, QWORD PTR io$[rbp]
	mov	DWORD PTR [rcx+rax+52], 90		; 0000005aH
; Line 205
	mov	rax, QWORD PTR io$[rbp]
	lea	rcx, OFFSET FLAT:?ImGui_ImplGlfw_SetClipboardText@@YAXPEAXPEBD@Z ; ImGui_ImplGlfw_SetClipboardText
	mov	QWORD PTR [rax+256], rcx
; Line 206
	mov	rax, QWORD PTR io$[rbp]
	lea	rcx, OFFSET FLAT:?ImGui_ImplGlfw_GetClipboardText@@YAPEBDPEAX@Z ; ImGui_ImplGlfw_GetClipboardText
	mov	QWORD PTR [rax+248], rcx
; Line 207
	mov	rax, QWORD PTR io$[rbp]
	mov	rcx, QWORD PTR bd$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax+264], rcx
; Line 209
	mov	rax, QWORD PTR bd$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	glfwGetWin32Window
	mov	rcx, QWORD PTR io$[rbp]
	mov	QWORD PTR [rcx+280], rax
; Line 216
	xor	ecx, ecx
	call	glfwSetErrorCallback
	mov	QWORD PTR prev_error_callback$[rbp], rax
; Line 217
	mov	ecx, 221185				; 00036001H
	call	glfwCreateStandardCursor
	mov	ecx, 8
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR bd$[rbp]
	mov	QWORD PTR [rdx+rcx+32], rax
; Line 218
	mov	ecx, 221186				; 00036002H
	call	glfwCreateStandardCursor
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR bd$[rbp]
	mov	QWORD PTR [rdx+rcx+32], rax
; Line 219
	mov	ecx, 221190				; 00036006H
	call	glfwCreateStandardCursor
	mov	ecx, 8
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR bd$[rbp]
	mov	QWORD PTR [rdx+rcx+32], rax
; Line 220
	mov	ecx, 221189				; 00036005H
	call	glfwCreateStandardCursor
	mov	ecx, 8
	imul	rcx, rcx, 4
	mov	rdx, QWORD PTR bd$[rbp]
	mov	QWORD PTR [rdx+rcx+32], rax
; Line 221
	mov	ecx, 221188				; 00036004H
	call	glfwCreateStandardCursor
	mov	ecx, 8
	imul	rcx, rcx, 7
	mov	rdx, QWORD PTR bd$[rbp]
	mov	QWORD PTR [rdx+rcx+32], rax
; Line 223
	mov	ecx, 221193				; 00036009H
	call	glfwCreateStandardCursor
	mov	ecx, 8
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR bd$[rbp]
	mov	QWORD PTR [rdx+rcx+32], rax
; Line 224
	mov	ecx, 221192				; 00036008H
	call	glfwCreateStandardCursor
	mov	ecx, 8
	imul	rcx, rcx, 5
	mov	rdx, QWORD PTR bd$[rbp]
	mov	QWORD PTR [rdx+rcx+32], rax
; Line 225
	mov	ecx, 221191				; 00036007H
	call	glfwCreateStandardCursor
	mov	ecx, 8
	imul	rcx, rcx, 6
	mov	rdx, QWORD PTR bd$[rbp]
	mov	QWORD PTR [rdx+rcx+32], rax
; Line 226
	mov	ecx, 221194				; 0003600aH
	call	glfwCreateStandardCursor
	mov	ecx, 8
	imul	rcx, rcx, 8
	mov	rdx, QWORD PTR bd$[rbp]
	mov	QWORD PTR [rdx+rcx+32], rax
; Line 233
	mov	rcx, QWORD PTR prev_error_callback$[rbp]
	call	glfwSetErrorCallback
; Line 236
	mov	rax, QWORD PTR bd$[rbp]
	mov	QWORD PTR [rax+112], 0
; Line 237
	mov	rax, QWORD PTR bd$[rbp]
	mov	QWORD PTR [rax+120], 0
; Line 238
	mov	rax, QWORD PTR bd$[rbp]
	mov	QWORD PTR [rax+128], 0
; Line 239
	mov	rax, QWORD PTR bd$[rbp]
	mov	QWORD PTR [rax+136], 0
; Line 240
	movzx	eax, BYTE PTR install_callbacks$[rbp]
	test	eax, eax
	je	SHORT $LN2@ImGui_Impl
; Line 242
	mov	rax, QWORD PTR bd$[rbp]
	mov	BYTE PTR [rax+104], 1
; Line 243
	lea	rdx, OFFSET FLAT:?ImGui_ImplGlfw_MouseButtonCallback@@YAXPEAUGLFWwindow@@HHH@Z ; ImGui_ImplGlfw_MouseButtonCallback
	mov	rcx, QWORD PTR window$[rbp]
	call	glfwSetMouseButtonCallback
	mov	rcx, QWORD PTR bd$[rbp]
	mov	QWORD PTR [rcx+112], rax
; Line 244
	lea	rdx, OFFSET FLAT:?ImGui_ImplGlfw_ScrollCallback@@YAXPEAUGLFWwindow@@NN@Z ; ImGui_ImplGlfw_ScrollCallback
	mov	rcx, QWORD PTR window$[rbp]
	call	glfwSetScrollCallback
	mov	rcx, QWORD PTR bd$[rbp]
	mov	QWORD PTR [rcx+120], rax
; Line 245
	lea	rdx, OFFSET FLAT:?ImGui_ImplGlfw_KeyCallback@@YAXPEAUGLFWwindow@@HHHH@Z ; ImGui_ImplGlfw_KeyCallback
	mov	rcx, QWORD PTR window$[rbp]
	call	glfwSetKeyCallback
	mov	rcx, QWORD PTR bd$[rbp]
	mov	QWORD PTR [rcx+128], rax
; Line 246
	lea	rdx, OFFSET FLAT:?ImGui_ImplGlfw_CharCallback@@YAXPEAUGLFWwindow@@I@Z ; ImGui_ImplGlfw_CharCallback
	mov	rcx, QWORD PTR window$[rbp]
	call	glfwSetCharCallback
	mov	rcx, QWORD PTR bd$[rbp]
	mov	QWORD PTR [rcx+136], rax
$LN2@ImGui_Impl:
; Line 249
	mov	rax, QWORD PTR bd$[rbp]
	mov	ecx, DWORD PTR client_api$[rbp]
	mov	DWORD PTR [rax+8], ecx
; Line 250
	mov	al, 1
; Line 251
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
?ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z ENDP ; ImGui_ImplGlfw_Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
io$ = 8
bd$ = 40
prev_error_callback$ = 72
$T1 = 296
$T2 = 328
$T3 = 360
$T4 = 392
$T5 = 420
tv89 = 440
window$ = 480
install_callbacks$ = 488
client_api$ = 496
?dtor$0@?0??ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z@4HA PROC ; `ImGui_ImplGlfw_Init'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	r8, QWORD PTR $T3[rbp]
	mov	rax, QWORD PTR $T4[rbp]
	movzx	edx, BYTE PTR [rax]
	mov	rcx, QWORD PTR $T2[rbp]
	call	??3@YAXPEAXUImNewWrapper@@0@Z		; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z@4HA ENDP ; `ImGui_ImplGlfw_Init'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImGui_ImplGlfw_SetClipboardText@@YAXPEAXPEBD@Z
_TEXT	SEGMENT
user_data$ = 224
text$ = 232
?ImGui_ImplGlfw_SetClipboardText@@YAXPEAXPEBD@Z PROC	; ImGui_ImplGlfw_SetClipboardText, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_impl_glfw.cpp
; Line 105
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__85E6A71A_imgui_impl_glfw@cpp
	call	__CheckForDebuggerJustMyCode
; Line 106
	mov	rdx, QWORD PTR text$[rbp]
	mov	rcx, QWORD PTR user_data$[rbp]
	call	glfwSetClipboardString
; Line 107
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?ImGui_ImplGlfw_SetClipboardText@@YAXPEAXPEBD@Z ENDP	; ImGui_ImplGlfw_SetClipboardText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImGui_ImplGlfw_GetClipboardText@@YAPEBDPEAX@Z
_TEXT	SEGMENT
user_data$ = 224
?ImGui_ImplGlfw_GetClipboardText@@YAPEBDPEAX@Z PROC	; ImGui_ImplGlfw_GetClipboardText, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_impl_glfw.cpp
; Line 100
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__85E6A71A_imgui_impl_glfw@cpp
	call	__CheckForDebuggerJustMyCode
; Line 101
	mov	rcx, QWORD PTR user_data$[rbp]
	call	glfwGetClipboardString
; Line 102
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?ImGui_ImplGlfw_GetClipboardText@@YAPEBDPEAX@Z ENDP	; ImGui_ImplGlfw_GetClipboardText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImGui_ImplGlfw_GetBackendData@@YAPEAUImGui_ImplGlfw_Data@@XZ
_TEXT	SEGMENT
tv68 = 192
?ImGui_ImplGlfw_GetBackendData@@YAPEAUImGui_ImplGlfw_Data@@XZ PROC ; ImGui_ImplGlfw_GetBackendData, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_impl_glfw.cpp
; Line 94
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__85E6A71A_imgui_impl_glfw@cpp
	call	__CheckForDebuggerJustMyCode
; Line 95
	call	?GetCurrentContext@ImGui@@YAPEAUImGuiContext@@XZ ; ImGui::GetCurrentContext
	test	rax, rax
	je	SHORT $LN3@ImGui_Impl
	call	?GetIO@ImGui@@YAAEAUImGuiIO@@XZ		; ImGui::GetIO
	mov	rax, QWORD PTR [rax+224]
	mov	QWORD PTR tv68[rbp], rax
	jmp	SHORT $LN4@ImGui_Impl
$LN3@ImGui_Impl:
	mov	QWORD PTR tv68[rbp], 0
$LN4@ImGui_Impl:
	mov	rax, QWORD PTR tv68[rbp]
; Line 96
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?ImGui_ImplGlfw_GetBackendData@@YAPEAUImGui_ImplGlfw_Data@@XZ ENDP ; ImGui_ImplGlfw_GetBackendData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0ImGui_ImplGlfw_Data@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0ImGui_ImplGlfw_Data@@QEAA@XZ PROC			; ImGui_ImplGlfw_Data::ImGui_ImplGlfw_Data, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_impl_glfw.cpp
; Line 86
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__85E6A71A_imgui_impl_glfw@cpp
	call	__CheckForDebuggerJustMyCode
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	ecx, 144				; 00000090H
	rep stosb
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0ImGui_ImplGlfw_Data@@QEAA@XZ ENDP			; ImGui_ImplGlfw_Data::ImGui_ImplGlfw_Data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImGui_ImplGlfw_CharCallback@@YAXPEAUGLFWwindow@@I@Z
_TEXT	SEGMENT
bd$ = 8
io$ = 40
tv71 = 248
window$ = 288
c$ = 296
?ImGui_ImplGlfw_CharCallback@@YAXPEAUGLFWwindow@@I@Z PROC ; ImGui_ImplGlfw_CharCallback, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_impl_glfw.cpp
; Line 157
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__85E6A71A_imgui_impl_glfw@cpp
	call	__CheckForDebuggerJustMyCode
; Line 158
	call	?ImGui_ImplGlfw_GetBackendData@@YAPEAUImGui_ImplGlfw_Data@@XZ ; ImGui_ImplGlfw_GetBackendData
	mov	QWORD PTR bd$[rbp], rax
; Line 159
	mov	rax, QWORD PTR bd$[rbp]
	cmp	QWORD PTR [rax+136], 0
	je	SHORT $LN2@ImGui_Impl
; Line 160
	mov	rax, QWORD PTR bd$[rbp]
	mov	rax, QWORD PTR [rax+136]
	mov	QWORD PTR tv71[rbp], rax
	mov	edx, DWORD PTR c$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	QWORD PTR tv71[rbp]
$LN2@ImGui_Impl:
; Line 162
	call	?GetIO@ImGui@@YAAEAUImGuiIO@@XZ		; ImGui::GetIO
	mov	QWORD PTR io$[rbp], rax
; Line 163
	mov	edx, DWORD PTR c$[rbp]
	mov	rcx, QWORD PTR io$[rbp]
	call	?AddInputCharacter@ImGuiIO@@QEAAXI@Z	; ImGuiIO::AddInputCharacter
; Line 164
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?ImGui_ImplGlfw_CharCallback@@YAXPEAUGLFWwindow@@I@Z ENDP ; ImGui_ImplGlfw_CharCallback
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImGui_ImplGlfw_KeyCallback@@YAXPEAUGLFWwindow@@HHHH@Z
_TEXT	SEGMENT
bd$ = 8
io$ = 40
tv157 = 244
tv144 = 244
tv131 = 244
tv74 = 248
window$ = 288
key$ = 296
scancode$ = 304
action$ = 312
mods$ = 320
?ImGui_ImplGlfw_KeyCallback@@YAXPEAUGLFWwindow@@HHHH@Z PROC ; ImGui_ImplGlfw_KeyCallback, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_impl_glfw.cpp
; Line 131
$LN13:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__85E6A71A_imgui_impl_glfw@cpp
	call	__CheckForDebuggerJustMyCode
; Line 132
	call	?ImGui_ImplGlfw_GetBackendData@@YAPEAUImGui_ImplGlfw_Data@@XZ ; ImGui_ImplGlfw_GetBackendData
	mov	QWORD PTR bd$[rbp], rax
; Line 133
	mov	rax, QWORD PTR bd$[rbp]
	cmp	QWORD PTR [rax+128], 0
	je	SHORT $LN2@ImGui_Impl
; Line 134
	mov	rax, QWORD PTR bd$[rbp]
	mov	rax, QWORD PTR [rax+128]
	mov	QWORD PTR tv74[rbp], rax
	mov	eax, DWORD PTR mods$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR action$[rbp]
	mov	r8d, DWORD PTR scancode$[rbp]
	mov	edx, DWORD PTR key$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	QWORD PTR tv74[rbp]
$LN2@ImGui_Impl:
; Line 136
	call	?GetIO@ImGui@@YAAEAUImGuiIO@@XZ		; ImGui::GetIO
	mov	QWORD PTR io$[rbp], rax
; Line 137
	cmp	DWORD PTR key$[rbp], 0
	jl	SHORT $LN3@ImGui_Impl
	cmp	DWORD PTR key$[rbp], 512		; 00000200H
	jge	SHORT $LN3@ImGui_Impl
; Line 139
	cmp	DWORD PTR action$[rbp], 1
	jne	SHORT $LN4@ImGui_Impl
; Line 140
	movsxd	rax, DWORD PTR key$[rbp]
	mov	rcx, QWORD PTR io$[rbp]
	mov	BYTE PTR [rcx+rax+316], 1
$LN4@ImGui_Impl:
; Line 141
	cmp	DWORD PTR action$[rbp], 0
	jne	SHORT $LN5@ImGui_Impl
; Line 142
	movsxd	rax, DWORD PTR key$[rbp]
	mov	rcx, QWORD PTR io$[rbp]
	mov	BYTE PTR [rcx+rax+316], 0
$LN5@ImGui_Impl:
$LN3@ImGui_Impl:
; Line 146
	mov	eax, 1
	imul	rax, rax, 341				; 00000155H
	mov	rcx, QWORD PTR io$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+316]
	test	eax, eax
	jne	SHORT $LN7@ImGui_Impl
	mov	eax, 1
	imul	rax, rax, 345				; 00000159H
	mov	rcx, QWORD PTR io$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+316]
	test	eax, eax
	jne	SHORT $LN7@ImGui_Impl
	mov	DWORD PTR tv131[rbp], 0
	jmp	SHORT $LN8@ImGui_Impl
$LN7@ImGui_Impl:
	mov	DWORD PTR tv131[rbp], 1
$LN8@ImGui_Impl:
	mov	rax, QWORD PTR io$[rbp]
	movzx	ecx, BYTE PTR tv131[rbp]
	mov	BYTE PTR [rax+312], cl
; Line 147
	mov	eax, 1
	imul	rax, rax, 340				; 00000154H
	mov	rcx, QWORD PTR io$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+316]
	test	eax, eax
	jne	SHORT $LN9@ImGui_Impl
	mov	eax, 1
	imul	rax, rax, 344				; 00000158H
	mov	rcx, QWORD PTR io$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+316]
	test	eax, eax
	jne	SHORT $LN9@ImGui_Impl
	mov	DWORD PTR tv144[rbp], 0
	jmp	SHORT $LN10@ImGui_Impl
$LN9@ImGui_Impl:
	mov	DWORD PTR tv144[rbp], 1
$LN10@ImGui_Impl:
	mov	rax, QWORD PTR io$[rbp]
	movzx	ecx, BYTE PTR tv144[rbp]
	mov	BYTE PTR [rax+313], cl
; Line 148
	mov	eax, 1
	imul	rax, rax, 342				; 00000156H
	mov	rcx, QWORD PTR io$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+316]
	test	eax, eax
	jne	SHORT $LN11@ImGui_Impl
	mov	eax, 1
	imul	rax, rax, 346				; 0000015aH
	mov	rcx, QWORD PTR io$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+316]
	test	eax, eax
	jne	SHORT $LN11@ImGui_Impl
	mov	DWORD PTR tv157[rbp], 0
	jmp	SHORT $LN12@ImGui_Impl
$LN11@ImGui_Impl:
	mov	DWORD PTR tv157[rbp], 1
$LN12@ImGui_Impl:
	mov	rax, QWORD PTR io$[rbp]
	movzx	ecx, BYTE PTR tv157[rbp]
	mov	BYTE PTR [rax+314], cl
; Line 150
	mov	rax, QWORD PTR io$[rbp]
	mov	BYTE PTR [rax+315], 0
; Line 154
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?ImGui_ImplGlfw_KeyCallback@@YAXPEAUGLFWwindow@@HHHH@Z ENDP ; ImGui_ImplGlfw_KeyCallback
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImGui_ImplGlfw_ScrollCallback@@YAXPEAUGLFWwindow@@NN@Z
_TEXT	SEGMENT
bd$ = 8
io$ = 40
tv72 = 248
window$ = 288
xoffset$ = 296
yoffset$ = 304
?ImGui_ImplGlfw_ScrollCallback@@YAXPEAUGLFWwindow@@NN@Z PROC ; ImGui_ImplGlfw_ScrollCallback, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_impl_glfw.cpp
; Line 120
$LN4:
	movsd	QWORD PTR [rsp+24], xmm2
	movsd	QWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__85E6A71A_imgui_impl_glfw@cpp
	call	__CheckForDebuggerJustMyCode
; Line 121
	call	?ImGui_ImplGlfw_GetBackendData@@YAPEAUImGui_ImplGlfw_Data@@XZ ; ImGui_ImplGlfw_GetBackendData
	mov	QWORD PTR bd$[rbp], rax
; Line 122
	mov	rax, QWORD PTR bd$[rbp]
	cmp	QWORD PTR [rax+120], 0
	je	SHORT $LN2@ImGui_Impl
; Line 123
	mov	rax, QWORD PTR bd$[rbp]
	mov	rax, QWORD PTR [rax+120]
	mov	QWORD PTR tv72[rbp], rax
	movsd	xmm2, QWORD PTR yoffset$[rbp]
	movsd	xmm1, QWORD PTR xoffset$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	QWORD PTR tv72[rbp]
$LN2@ImGui_Impl:
; Line 125
	call	?GetIO@ImGui@@YAAEAUImGuiIO@@XZ		; ImGui::GetIO
	mov	QWORD PTR io$[rbp], rax
; Line 126
	cvtsd2ss xmm0, QWORD PTR xoffset$[rbp]
	mov	rax, QWORD PTR io$[rbp]
	movss	xmm1, DWORD PTR [rax+308]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR io$[rbp]
	movss	DWORD PTR [rax+308], xmm0
; Line 127
	cvtsd2ss xmm0, QWORD PTR yoffset$[rbp]
	mov	rax, QWORD PTR io$[rbp]
	movss	xmm1, DWORD PTR [rax+304]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR io$[rbp]
	movss	DWORD PTR [rax+304], xmm0
; Line 128
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?ImGui_ImplGlfw_ScrollCallback@@YAXPEAUGLFWwindow@@NN@Z ENDP ; ImGui_ImplGlfw_ScrollCallback
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImGui_ImplGlfw_MouseButtonCallback@@YAXPEAUGLFWwindow@@HHH@Z
_TEXT	SEGMENT
bd$ = 8
tv73 = 216
window$ = 256
button$ = 264
action$ = 272
mods$ = 280
?ImGui_ImplGlfw_MouseButtonCallback@@YAXPEAUGLFWwindow@@HHH@Z PROC ; ImGui_ImplGlfw_MouseButtonCallback, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_impl_glfw.cpp
; Line 110
$LN5:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__85E6A71A_imgui_impl_glfw@cpp
	call	__CheckForDebuggerJustMyCode
; Line 111
	call	?ImGui_ImplGlfw_GetBackendData@@YAPEAUImGui_ImplGlfw_Data@@XZ ; ImGui_ImplGlfw_GetBackendData
	mov	QWORD PTR bd$[rbp], rax
; Line 112
	mov	rax, QWORD PTR bd$[rbp]
	cmp	QWORD PTR [rax+112], 0
	je	SHORT $LN2@ImGui_Impl
; Line 113
	mov	rax, QWORD PTR bd$[rbp]
	mov	rax, QWORD PTR [rax+112]
	mov	QWORD PTR tv73[rbp], rax
	mov	r9d, DWORD PTR mods$[rbp]
	mov	r8d, DWORD PTR action$[rbp]
	mov	edx, DWORD PTR button$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	QWORD PTR tv73[rbp]
$LN2@ImGui_Impl:
; Line 115
	cmp	DWORD PTR action$[rbp], 1
	jne	SHORT $LN3@ImGui_Impl
	cmp	DWORD PTR button$[rbp], 0
	jl	SHORT $LN3@ImGui_Impl
	cmp	DWORD PTR button$[rbp], 5
	jge	SHORT $LN3@ImGui_Impl
; Line 116
	movsxd	rax, DWORD PTR button$[rbp]
	mov	rcx, QWORD PTR bd$[rbp]
	mov	BYTE PTR [rcx+rax+24], 1
$LN3@ImGui_Impl:
; Line 117
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?ImGui_ImplGlfw_MouseButtonCallback@@YAXPEAUGLFWwindow@@HHH@Z ENDP ; ImGui_ImplGlfw_MouseButtonCallback
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImGui_ImplGlfw_NewFrame@@YAXXZ
_TEXT	SEGMENT
io$ = 8
bd$ = 40
w$ = 68
h$ = 100
display_w$ = 132
display_h$ = 164
current_time$ = 200
$T7 = 420
$T8 = 452
tv143 = 468
__$ArrayPad$ = 472
?ImGui_ImplGlfw_NewFrame@@YAXXZ PROC			; ImGui_ImplGlfw_NewFrame, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_impl_glfw.cpp
; Line 385
$LN8:
	push	rbp
	push	rdi
	sub	rsp, 520				; 00000208H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__85E6A71A_imgui_impl_glfw@cpp
	call	__CheckForDebuggerJustMyCode
; Line 386
	call	?GetIO@ImGui@@YAAEAUImGuiIO@@XZ		; ImGui::GetIO
	mov	QWORD PTR io$[rbp], rax
; Line 387
	call	?ImGui_ImplGlfw_GetBackendData@@YAPEAUImGui_ImplGlfw_Data@@XZ ; ImGui_ImplGlfw_GetBackendData
	mov	QWORD PTR bd$[rbp], rax
; Line 388
	cmp	QWORD PTR bd$[rbp], 0
	je	SHORT $LN4@ImGui_Impl
	lea	rax, OFFSET FLAT:??_C@_0CK@JDHFLNGG@Did?5you?5call?5ImGui_ImplGlfw_Ini@
	test	rax, rax
	jne	SHORT $LN5@ImGui_Impl
$LN4@ImGui_Impl:
	mov	eax, DWORD PTR ?__LINE__Var@?0??ImGui_ImplGlfw_NewFrame@@YAXXZ@4JA
	add	eax, 3
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1HE@CHFHCOBB@?$AAC?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AA?2?$AAR?$AAa?$AAi?$AAs?$AAi?$AAn?$AA?2?$AAR@
	lea	rcx, OFFSET FLAT:??_C@_1GO@COIOAAFF@?$AAb?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAD?$AAi?$AAd@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN5@ImGui_Impl:
; Line 393
	lea	r8, QWORD PTR h$[rbp]
	lea	rdx, QWORD PTR w$[rbp]
	mov	rax, QWORD PTR bd$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	glfwGetWindowSize
; Line 394
	lea	r8, QWORD PTR display_h$[rbp]
	lea	rdx, QWORD PTR display_w$[rbp]
	mov	rax, QWORD PTR bd$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	glfwGetFramebufferSize
; Line 395
	cvtsi2ss xmm0, DWORD PTR h$[rbp]
	cvtsi2ss xmm1, DWORD PTR w$[rbp]
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR $T7[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR io$[rbp]
	mov	QWORD PTR [rcx+8], rax
; Line 396
	cmp	DWORD PTR w$[rbp], 0
	jle	SHORT $LN2@ImGui_Impl
	cmp	DWORD PTR h$[rbp], 0
	jle	SHORT $LN2@ImGui_Impl
; Line 397
	cvtsi2ss xmm0, DWORD PTR display_h$[rbp]
	cvtsi2ss xmm1, DWORD PTR h$[rbp]
	divss	xmm0, xmm1
	cvtsi2ss xmm1, DWORD PTR display_w$[rbp]
	cvtsi2ss xmm2, DWORD PTR w$[rbp]
	divss	xmm1, xmm2
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR $T8[rbp]
	call	??0ImVec2@@QEAA@MM@Z			; ImVec2::ImVec2
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR io$[rbp]
	mov	QWORD PTR [rcx+184], rax
$LN2@ImGui_Impl:
; Line 400
	call	glfwGetTime
	movsd	QWORD PTR current_time$[rbp], xmm0
; Line 401
	mov	rax, QWORD PTR bd$[rbp]
	movsd	xmm0, QWORD PTR [rax+16]
	comisd	xmm0, QWORD PTR __real@0000000000000000
	jbe	SHORT $LN6@ImGui_Impl
	mov	rax, QWORD PTR bd$[rbp]
	movsd	xmm0, QWORD PTR current_time$[rbp]
	subsd	xmm0, QWORD PTR [rax+16]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv143[rbp], xmm0
	jmp	SHORT $LN7@ImGui_Impl
$LN6@ImGui_Impl:
	movss	xmm0, DWORD PTR __real@3c888889
	movss	DWORD PTR tv143[rbp], xmm0
$LN7@ImGui_Impl:
	mov	rax, QWORD PTR io$[rbp]
	movss	xmm0, DWORD PTR tv143[rbp]
	movss	DWORD PTR [rax+16], xmm0
; Line 402
	mov	rax, QWORD PTR bd$[rbp]
	movsd	xmm0, QWORD PTR current_time$[rbp]
	movsd	QWORD PTR [rax+16], xmm0
; Line 404
	call	?ImGui_ImplGlfw_UpdateMousePosAndButtons@@YAXXZ ; ImGui_ImplGlfw_UpdateMousePosAndButtons
; Line 405
	call	?ImGui_ImplGlfw_UpdateMouseCursor@@YAXXZ ; ImGui_ImplGlfw_UpdateMouseCursor
; Line 408
	call	?ImGui_ImplGlfw_UpdateGamepads@@YAXXZ	; ImGui_ImplGlfw_UpdateGamepads
; Line 409
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?ImGui_ImplGlfw_NewFrame@@YAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+488]
	pop	rdi
	pop	rbp
	ret	0
?ImGui_ImplGlfw_NewFrame@@YAXXZ ENDP			; ImGui_ImplGlfw_NewFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImGui_ImplGlfw_Shutdown@@YAXXZ
_TEXT	SEGMENT
io$ = 8
bd$ = 40
cursor_n$1 = 68
?ImGui_ImplGlfw_Shutdown@@YAXXZ PROC			; ImGui_ImplGlfw_Shutdown, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_impl_glfw.cpp
; Line 269
$LN7:
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__85E6A71A_imgui_impl_glfw@cpp
	call	__CheckForDebuggerJustMyCode
; Line 270
	call	?GetIO@ImGui@@YAAEAUImGuiIO@@XZ		; ImGui::GetIO
	mov	QWORD PTR io$[rbp], rax
; Line 271
	call	?ImGui_ImplGlfw_GetBackendData@@YAPEAUImGui_ImplGlfw_Data@@XZ ; ImGui_ImplGlfw_GetBackendData
	mov	QWORD PTR bd$[rbp], rax
; Line 273
	mov	rax, QWORD PTR bd$[rbp]
	movzx	eax, BYTE PTR [rax+104]
	test	eax, eax
	je	SHORT $LN5@ImGui_Impl
; Line 275
	mov	rax, QWORD PTR bd$[rbp]
	mov	rdx, QWORD PTR [rax+112]
	mov	rax, QWORD PTR bd$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	glfwSetMouseButtonCallback
; Line 276
	mov	rax, QWORD PTR bd$[rbp]
	mov	rdx, QWORD PTR [rax+120]
	mov	rax, QWORD PTR bd$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	glfwSetScrollCallback
; Line 277
	mov	rax, QWORD PTR bd$[rbp]
	mov	rdx, QWORD PTR [rax+128]
	mov	rax, QWORD PTR bd$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	glfwSetKeyCallback
; Line 278
	mov	rax, QWORD PTR bd$[rbp]
	mov	rdx, QWORD PTR [rax+136]
	mov	rax, QWORD PTR bd$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	glfwSetCharCallback
$LN5@ImGui_Impl:
; Line 281
	mov	DWORD PTR cursor_n$1[rbp], 0
	jmp	SHORT $LN4@ImGui_Impl
$LN2@ImGui_Impl:
	mov	eax, DWORD PTR cursor_n$1[rbp]
	inc	eax
	mov	DWORD PTR cursor_n$1[rbp], eax
$LN4@ImGui_Impl:
	cmp	DWORD PTR cursor_n$1[rbp], 9
	jge	SHORT $LN3@ImGui_Impl
; Line 282
	movsxd	rax, DWORD PTR cursor_n$1[rbp]
	mov	rcx, QWORD PTR bd$[rbp]
	mov	rcx, QWORD PTR [rcx+rax*8+32]
	call	glfwDestroyCursor
	jmp	SHORT $LN2@ImGui_Impl
$LN3@ImGui_Impl:
; Line 284
	mov	rax, QWORD PTR io$[rbp]
	mov	QWORD PTR [rax+208], 0
; Line 285
	mov	rax, QWORD PTR io$[rbp]
	mov	QWORD PTR [rax+224], 0
; Line 286
	mov	rcx, QWORD PTR bd$[rbp]
	call	??$IM_DELETE@UImGui_ImplGlfw_Data@@@@YAXPEAUImGui_ImplGlfw_Data@@@Z ; IM_DELETE<ImGui_ImplGlfw_Data>
; Line 287
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?ImGui_ImplGlfw_Shutdown@@YAXXZ ENDP			; ImGui_ImplGlfw_Shutdown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImGui_ImplGlfw_InitForOther@@YA_NPEAUGLFWwindow@@_N@Z
_TEXT	SEGMENT
window$ = 224
install_callbacks$ = 232
?ImGui_ImplGlfw_InitForOther@@YA_NPEAUGLFWwindow@@_N@Z PROC ; ImGui_ImplGlfw_InitForOther, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_impl_glfw.cpp
; Line 264
$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__85E6A71A_imgui_impl_glfw@cpp
	call	__CheckForDebuggerJustMyCode
; Line 265
	xor	r8d, r8d
	movzx	edx, BYTE PTR install_callbacks$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z ; ImGui_ImplGlfw_Init
; Line 266
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?ImGui_ImplGlfw_InitForOther@@YA_NPEAUGLFWwindow@@_N@Z ENDP ; ImGui_ImplGlfw_InitForOther
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImGui_ImplGlfw_InitForVulkan@@YA_NPEAUGLFWwindow@@_N@Z
_TEXT	SEGMENT
window$ = 224
install_callbacks$ = 232
?ImGui_ImplGlfw_InitForVulkan@@YA_NPEAUGLFWwindow@@_N@Z PROC ; ImGui_ImplGlfw_InitForVulkan, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_impl_glfw.cpp
; Line 259
$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__85E6A71A_imgui_impl_glfw@cpp
	call	__CheckForDebuggerJustMyCode
; Line 260
	mov	r8d, 2
	movzx	edx, BYTE PTR install_callbacks$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z ; ImGui_ImplGlfw_Init
; Line 261
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?ImGui_ImplGlfw_InitForVulkan@@YA_NPEAUGLFWwindow@@_N@Z ENDP ; ImGui_ImplGlfw_InitForVulkan
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ImGui_ImplGlfw_InitForOpenGL@@YA_NPEAUGLFWwindow@@_N@Z
_TEXT	SEGMENT
window$ = 224
install_callbacks$ = 232
?ImGui_ImplGlfw_InitForOpenGL@@YA_NPEAUGLFWwindow@@_N@Z PROC ; ImGui_ImplGlfw_InitForOpenGL, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui_impl_glfw.cpp
; Line 254
$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__85E6A71A_imgui_impl_glfw@cpp
	call	__CheckForDebuggerJustMyCode
; Line 255
	mov	r8d, 1
	movzx	edx, BYTE PTR install_callbacks$[rbp]
	mov	rcx, QWORD PTR window$[rbp]
	call	?ImGui_ImplGlfw_Init@@YA_NPEAUGLFWwindow@@_NW4GlfwClientApi@@@Z ; ImGui_ImplGlfw_Init
; Line 256
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?ImGui_ImplGlfw_InitForOpenGL@@YA_NPEAUGLFWwindow@@_N@Z ENDP ; ImGui_ImplGlfw_InitForOpenGL
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPEAXUImNewWrapper@@0@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
__formal$ = 240
??3@YAXPEAXUImNewWrapper@@0@Z PROC			; operator delete, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1648
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??3@YAXPEAXUImNewWrapper@@0@Z ENDP			; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2@YAPEAX_KUImNewWrapper@@PEAX@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
ptr$ = 240
??2@YAPEAX_KUImNewWrapper@@PEAX@Z PROC			; operator new, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 1647
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR ptr$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??2@YAPEAX_KUImNewWrapper@@PEAX@Z ENDP			; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ImVec2@@QEAA@MM@Z
_TEXT	SEGMENT
this$ = 80
_x$ = 88
_y$ = 96
??0ImVec2@@QEAA@MM@Z PROC				; ImVec2::ImVec2, COMDAT
; File C:\dev\Raisin\Raisin\src\Raisin\imgui\imgui.h
; Line 248
$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	sub	rsp, 96					; 00000060H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__21D911DF_imgui@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR _x$[rbp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR _y$[rbp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+64]
	pop	rbp
	ret	0
??0ImVec2@@QEAA@MM@Z ENDP				; ImVec2::ImVec2
_TEXT	ENDS
END
